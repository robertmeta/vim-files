![Apprentice](http://romainl.github.io/Apprentice/images/logo.png)	pack/colors/start/romainl-apprentice/README.md	/^# ![Apprentice](http:\/\/romainl.github.io\/Apprentice\/images\/logo.png)$/;"	h
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
$GOPATH	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^  let $GOPATH = s:gopath$/;"	v
$TMPDIR	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^    let $TMPDIR = '\/tmp'$/;"	v
$TMPDIR	pack/plugins/start/w0rp-ale/test/.config/nvim/init.vim	/^let $TMPDIR = ''$/;"	v
$TMPDIR	pack/plugins/start/w0rp-ale/test/vimrc	/^let $TMPDIR = ''$/;"	v
%%	vimrc	/^        cnoremap %% <c-r>=fnameescape(expand('%'))<cr>$/;"	m
-	vimrc	/^        nnoremap - :NERDTreeFocus<cr>$/;"	m
.	pack/plugins/start/machakann-vim-sandwich/macros/sandwich/keymap/surround.vim	/^  nmap . <Plug>(operator-sandwich-dot)$/;"	m
.	pack/plugins/start/machakann-vim-sandwich/macros/sandwich/keymap/surround.vim	/^  nmap . <Plug>(operator-sandwich-predot)<Plug>(RepeatDot)$/;"	m
.	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^nmap . <Plug>(operator-sandwich-dot)$/;"	m
.	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^nmap . <Plug>(operator-sandwich-predot)<Plug>(test-dot)$/;"	m
.	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal .$/;"	m
.	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^    nmap . <Plug>(RepeatDot)$/;"	m
.	vimrc	/^        vnoremap . :norm.<CR>$/;"	m
0.0 (Mar 24, 2014)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 0.0 (Mar 24, 2014)$/;"	i
02sda(	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal 02sda($/;"	m
03l2.	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal 03l2.$/;"	m
03lsda(	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal 03lsda($/;"	m
03lsra([	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal 03lsra([$/;"	m
0dib	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^  normal 0dib$/;"	m
0dis(	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^  normal 0dis($/;"	m
0dis[	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^  normal 0dis[$/;"	m
0dis{	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^  normal 0dis{$/;"	m
0fb2.	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal 0fb2.$/;"	m
0ff2sr2a([[	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal 0ff2sr2a([[$/;"	m
0ffdab	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal 0ffdab$/;"	m
0ffdas(	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal 0ffdas($/;"	m
0ffdib	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal 0ffdib$/;"	m
0ffdis(	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal 0ffdis($/;"	m
0ffsra([	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal 0ffsra([$/;"	m
0ffsra[(	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal 0ffsra[($/;"	m
0l3.	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal 0l3.$/;"	m
0lsaiw(	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal 0lsaiw($/;"	m
0saiw(	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^  normal 0saiw($/;"	m
0saiw[	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^  normal 0saiw[$/;"	m
0saiw{	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^  normal 0saiw{$/;"	m
0sd5l	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^  normal 0sd5l$/;"	m
0sda(	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal 0sda($/;"	m
0sr2i"(	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^  normal 0sr2i"($/;"	m
0sr2i"[	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^  normal 0sr2i"[$/;"	m
0sr2i"{	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^  normal 0sr2i"{$/;"	m
0sr5l"	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^  normal 0sr5l"$/;"	m
0sra([	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal 0sra([$/;"	m
1. Guidelines	pack/plugins/start/w0rp-ale/CONTRIBUTING.md	/^## 1. Guidelines$/;"	i
1. Supported Languages and Tools	pack/plugins/start/w0rp-ale/README.md	/^## 1. Supported Languages and Tools$/;"	i
1.0 (Dec 24, 2014)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.0 (Dec 24, 2014)$/;"	i
1.0.1 (Feb 9, 2015)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.0.1 (Feb 9, 2015)$/;"	i
1.0.2 (Feb 17, 2015)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.0.2 (Feb 17, 2015)$/;"	i
1.0.3 (Mar 7, 2015)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.0.3 (Mar 7, 2015)$/;"	i
1.0.4 (Apr 28, 2015)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.0.4 (Apr 28, 2015)$/;"	i
1.0.5 (May 26, 2015)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.0.5 (May 26, 2015)$/;"	i
1.1 (Jul 25, 2015)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.1 (Jul 25, 2015)$/;"	i
1.10 (November 24, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.10 (November 24, 2016)$/;"	i
1.11 - (January 9, 2017)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.11 - (January 9, 2017)$/;"	i
1.12 - (March 29, 2017)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.12 - (March 29, 2017)$/;"	i
1.13 - (June 6, 2017)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.13 - (June 6, 2017)$/;"	i
1.14 - (August 6, 2017)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.14 - (August 6, 2017)$/;"	i
1.15 - (October 3, 2017)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.15 - (October 3, 2017)$/;"	i
1.2 (Oct 2, 2015)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.2 (Oct 2, 2015)$/;"	i
1.3 (Nov 22, 2015)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.3 (Nov 22, 2015)$/;"	i
1.4 (Jan 18, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.4 (Jan 18, 2016)$/;"	i
1.5 (Mar 16, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.5 (Mar 16, 2016)$/;"	i
1.6 (April 25, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.6 (April 25, 2016)$/;"	i
1.7 (June 7, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.7 (June 7, 2016)$/;"	i
1.7.1 (June 7, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.7.1 (June 7, 2016)$/;"	i
1.8 (July 31, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.8 (July 31, 2016)$/;"	i
1.9 (September 13, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.9 (September 13, 2016)$/;"	i
2.	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal 2.$/;"	m
2. Creating Issues	pack/plugins/start/w0rp-ale/CONTRIBUTING.md	/^## 2. Creating Issues$/;"	i
2. Usage	pack/plugins/start/w0rp-ale/README.md	/^## 2. Usage$/;"	i
2.i Linting	pack/plugins/start/w0rp-ale/README.md	/^### 2.i Linting$/;"	k
2.ii Fixing	pack/plugins/start/w0rp-ale/README.md	/^### 2.ii Fixing$/;"	k
2.iii Completion	pack/plugins/start/w0rp-ale/README.md	/^### 2.iii Completion$/;"	k
2.iv Go To Definition	pack/plugins/start/w0rp-ale/README.md	/^### 2.iv Go To Definition$/;"	k
256color-ready terminal emulators	pack/colors/start/romainl-apprentice/README.md	/^### 256color-ready terminal emulators$/;"	k
2saiw((	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal 2saiw(($/;"	m
3.	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal 3.$/;"	m
3. Creating Pull Requests	pack/plugins/start/w0rp-ale/CONTRIBUTING.md	/^## 3. Creating Pull Requests$/;"	i
3. Installation	pack/plugins/start/w0rp-ale/README.md	/^## 3. Installation$/;"	i
3.i. Adding a New Linter	pack/plugins/start/w0rp-ale/CONTRIBUTING.md	/^### 3.i. Adding a New Linter$/;"	k
3.i. Installation with Vim package management	pack/plugins/start/w0rp-ale/README.md	/^### 3.i. Installation with Vim package management$/;"	k
3.ii. Adding New Options	pack/plugins/start/w0rp-ale/CONTRIBUTING.md	/^### 3.ii. Adding New Options$/;"	k
3.ii. Installation with Pathogen	pack/plugins/start/w0rp-ale/README.md	/^### 3.ii. Installation with Pathogen$/;"	k
3.iii. Installation with Vundle	pack/plugins/start/w0rp-ale/README.md	/^### 3.iii. Installation with Vundle$/;"	k
4. Contributing	pack/plugins/start/w0rp-ale/README.md	/^## 4. Contributing$/;"	i
4. Writing Documentation	pack/plugins/start/w0rp-ale/CONTRIBUTING.md	/^## 4. Writing Documentation$/;"	i
4.i Documenting New Linters	pack/plugins/start/w0rp-ale/CONTRIBUTING.md	/^### 4.i Documenting New Linters$/;"	k
4.ii Editing the Online Documentation	pack/plugins/start/w0rp-ale/CONTRIBUTING.md	/^### 4.ii Editing the Online Documentation$/;"	k
4.iii Documenting Linter Options	pack/plugins/start/w0rp-ale/CONTRIBUTING.md	/^### 4.iii Documenting Linter Options$/;"	k
5. FAQ	pack/plugins/start/w0rp-ale/README.md	/^## 5. FAQ$/;"	i
5. In Case of Busses	pack/plugins/start/w0rp-ale/CONTRIBUTING.md	/^## 5. In Case of Busses$/;"	i
5.i. How do I disable particular linters?	pack/plugins/start/w0rp-ale/README.md	/^### 5.i. How do I disable particular linters?$/;"	k
5.ii. How can I keep the sign gutter open?	pack/plugins/start/w0rp-ale/README.md	/^### 5.ii. How can I keep the sign gutter open?$/;"	k
5.iii. How can I change the signs ALE uses?	pack/plugins/start/w0rp-ale/README.md	/^### 5.iii. How can I change the signs ALE uses?$/;"	k
5.iv. How can I change or disable the highlights ALE uses?	pack/plugins/start/w0rp-ale/README.md	/^### 5.iv. How can I change or disable the highlights ALE uses?$/;"	k
5.ix. How can I navigate between errors quickly?	pack/plugins/start/w0rp-ale/README.md	/^### 5.ix. How can I navigate between errors quickly?$/;"	k
5.v. How can I show errors or warnings in my statusline?	pack/plugins/start/w0rp-ale/README.md	/^### 5.v. How can I show errors or warnings in my statusline?$/;"	k
5.vi. How can I show errors or warnings in my lightline?	pack/plugins/start/w0rp-ale/README.md	/^### 5.vi. How can I show errors or warnings in my lightline?$/;"	k
5.vii. How can I change the format for echo messages?	pack/plugins/start/w0rp-ale/README.md	/^### 5.vii. How can I change the format for echo messages?$/;"	k
5.viii. How can I execute some code when ALE stops linting?	pack/plugins/start/w0rp-ale/README.md	/^### 5.viii. How can I execute some code when ALE stops linting?$/;"	k
5.x. How can I run linters only when I save files?	pack/plugins/start/w0rp-ale/README.md	/^### 5.x. How can I run linters only when I save files?$/;"	k
5.xi. How can I use the quickfix list instead of the loclist?	pack/plugins/start/w0rp-ale/README.md	/^### 5.xi. How can I use the quickfix list instead of the loclist?$/;"	k
5.xii. How can I check JSX files with both stylelint and eslint?	pack/plugins/start/w0rp-ale/README.md	/^### 5.xii. How can I check JSX files with both stylelint and eslint?$/;"	k
5.xiii. Will this plugin eat all of my laptop battery power?	pack/plugins/start/w0rp-ale/README.md	/^### 5.xiii. Will this plugin eat all of my laptop battery power?$/;"	k
5.xiv. How can I configure my C or C++ project?	pack/plugins/start/w0rp-ale/README.md	/^### 5.xiv. How can I configure my C or C++ project?$/;"	k
5.xv. How can I configure ALE differently for different buffers?	pack/plugins/start/w0rp-ale/README.md	/^### 5.xv. How can I configure ALE differently for different buffers?$/;"	k
::	vimrc	/^        cnoremap :: <c-r>=fnameescape(expand('%:p:h'))<cr>\/$/;"	m
;f	vimrc	/^        inoremap <silent> ;f <c-x><c-f>$/;"	m
;i	vimrc	/^        inoremap <silent> ;i <c-x><c-i>$/;"	m
;l	vimrc	/^        inoremap <silent> ;l <c-x><c-l>$/;"	m
;n	vimrc	/^        inoremap <silent> ;n <c-x><c-n>$/;"	m
;o	vimrc	/^        inoremap <silent> ;o <c-x><c-o>$/;"	m
;p	vimrc	/^        inoremap <silent> ;p <c-x><c-p>$/;"	m
;t	vimrc	/^        inoremap <silent> ;t <c-x><c-]>$/;"	m
;u	vimrc	/^        inoremap <silent> ;u <c-x><c-u>$/;"	m
<C-A>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^cnoremap        <C-A> <Home>$/;"	m
<C-A>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^inoremap        <C-A> <C-O>^$/;"	m
<C-B>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^cnoremap        <C-B> <Left>$/;"	m
<C-B>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^inoremap <expr> <C-B> getline('.')=~'^\\s*$'&&col('.')>strlen(getline('.'))?"0\\<Lt>C-D>\\<Lt>Esc>kJs":"\\<Lt>Left>"$/;"	m
<C-D>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^cnoremap <expr> <C-D> getcmdpos()>strlen(getcmdline())?"\\<Lt>C-D>":"\\<Lt>Del>"$/;"	m
<C-D>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^inoremap <expr> <C-D> col('.')>strlen(getline('.'))?"\\<Lt>C-D>":"\\<Lt>Del>"$/;"	m
<C-E>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^inoremap <expr> <C-E> col('.')>strlen(getline('.'))<bar><bar>pumvisible()?"\\<Lt>C-E>":"\\<Lt>End>"$/;"	m
<C-F>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^cnoremap <expr> <C-F> getcmdpos()>strlen(getcmdline())?&cedit:"\\<Lt>Right>"$/;"	m
<C-F>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^inoremap <expr> <C-F> col('.')>strlen(getline('.'))?"\\<Lt>C-F>":"\\<Lt>Right>"$/;"	m
<C-G>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  cmap <script> <C-G> <C-C>$/;"	m
<C-LeftMouse>	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-LeftMouse> <LeftMouse>:GoDef<cr>$/;"	m
<C-R>	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^    nmap <C-R> <Plug>(RepeatRedo)$/;"	m
<C-T>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^cmap   <script> <C-T> <SID>transposition<SID>transpose$/;"	m
<C-X><C-A>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^cnoremap   <C-X><C-A> <C-A>$/;"	m
<C-X><C-A>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^inoremap   <C-X><C-A> <C-A>$/;"	m
<C-]>	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-]> :GoDef<cr>$/;"	m
<C-t>	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-t> :<C-U>call go#def#StackPop(v:count1)<cr>$/;"	m
<C-w><C-]>	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-w><C-]> :<C-u>call go#def#Jump("split")<CR>$/;"	m
<C-w>]	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-w>] :<C-u>call go#def#Jump("split")<CR>$/;"	m
<F31>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map <F31> <M-d>$/;"	m
<F31>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map! <F31> <M-d>$/;"	m
<F32>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map <F32> <M-n>$/;"	m
<F32>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map! <F32> <M-n>$/;"	m
<F33>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map <F33> <M-p>$/;"	m
<F33>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map! <F33> <M-p>$/;"	m
<F34>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map <F34> <M-BS>$/;"	m
<F34>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map! <F34> <M-BS>$/;"	m
<F35>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map <F35> <M-BS>$/;"	m
<F35>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map! <F35> <M-BS>$/;"	m
<Leader>hp	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hp <Plug>GitGutterPreviewHunk$/;"	m
<Leader>hr	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hr <Plug>GitGutterUndoHunk:echomsg '<Leader>hr is deprecated. Use <Leader>hu'<CR>$/;"	m
<Leader>hs	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hs <Plug>GitGutterStageHunk$/;"	m
<Leader>hu	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hu <Plug>GitGutterUndoHunk$/;"	m
<M-BS>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap!        <M-BS> <C-W>$/;"	m
<M-b>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap!        <M-b> <S-Left>$/;"	m
<M-d>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^cnoremap        <M-d> <S-Right><C-W>$/;"	m
<M-d>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap!        <M-d> <C-O>dw$/;"	m
<M-f>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap!        <M-f> <S-Right>$/;"	m
<M-n>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap!        <M-n> <Down>$/;"	m
<M-p>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap!        <M-p> <Up>$/;"	m
<Plug>(RepeatDot)	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatDot)      :<C-U>exe repeat#run(v:count)<CR>$/;"	m
<Plug>(RepeatRedo)	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatRedo)     :<C-U>call repeat#wrap("\\<Lt>C-R>",v:count)<CR>$/;"	m
<Plug>(RepeatUndo)	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatUndo)     :<C-U>call repeat#wrap('u',v:count)<CR>$/;"	m
<Plug>(RepeatUndoLine)	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatUndoLine) :<C-U>call repeat#wrap('U',v:count)<CR>$/;"	m
<Plug>(ale_detail)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_detail) :ALEDetail<Return>$/;"	m
<Plug>(ale_disable)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_disable) :ALEDisable<Return>$/;"	m
<Plug>(ale_disable_buffer)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_disable_buffer) :ALEDisableBuffer<Return>$/;"	m
<Plug>(ale_enable)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_enable) :ALEEnable<Return>$/;"	m
<Plug>(ale_enable_buffer)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_enable_buffer) :ALEEnableBuffer<Return>$/;"	m
<Plug>(ale_first)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_first) :ALEFirst<Return>$/;"	m
<Plug>(ale_fix)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_fix) :ALEFix<Return>$/;"	m
<Plug>(ale_go_to_definition)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition) :ALEGoToDefinition<Return>$/;"	m
<Plug>(ale_go_to_definition_in_tab)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition_in_tab) :ALEGoToDefinitionInTab<Return>$/;"	m
<Plug>(ale_last)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_last) :ALELast<Return>$/;"	m
<Plug>(ale_lint)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_lint) :ALELint<Return>$/;"	m
<Plug>(ale_next)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next) :ALENext<Return>$/;"	m
<Plug>(ale_next_wrap)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_wrap) :ALENextWrap<Return>$/;"	m
<Plug>(ale_previous)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous) :ALEPrevious<Return>$/;"	m
<Plug>(ale_previous_wrap)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_wrap) :ALEPreviousWrap<Return>$/;"	m
<Plug>(ale_reset)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_reset) :ALEReset<Return>$/;"	m
<Plug>(ale_reset_buffer)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_reset_buffer) :ALEResetBuffer<Return>$/;"	m
<Plug>(ale_toggle)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_toggle) :ALEToggle<Return>$/;"	m
<Plug>(ale_toggle_buffer)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_toggle_buffer) :ALEToggleBuffer<Return>$/;"	m
<Plug>(go-alternate-edit)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-alternate-edit) :<C-u>call go#alternate#Switch(0, "edit")<CR>$/;"	m
<Plug>(go-alternate-split)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-alternate-split) :<C-u>call go#alternate#Switch(0, "split")<CR>$/;"	m
<Plug>(go-alternate-vertical)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-alternate-vertical) :<C-u>call go#alternate#Switch(0, "vsplit")<CR>$/;"	m
<Plug>(go-build)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-build) :<C-u>call go#cmd#Build(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-callees)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-callees) :<C-u>call go#guru#Callees(-1)<CR>$/;"	m
<Plug>(go-callers)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-callers) :<C-u>call go#guru#Callers(-1)<CR>$/;"	m
<Plug>(go-callstack)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-callstack) :<C-u>call go#guru#Callstack(-1)<CR>$/;"	m
<Plug>(go-channelpeers)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-channelpeers) :<C-u>call go#guru#ChannelPeers(-1)<CR>$/;"	m
<Plug>(go-coverage)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage) :<C-u>call go#coverage#Buffer(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-coverage-browser)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage-browser) :<C-u>call go#coverage#Browser(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-coverage-clear)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage-clear) :<C-u>call go#coverage#Clear()<CR>$/;"	m
<Plug>(go-coverage-toggle)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage-toggle) :<C-u>call go#coverage#BufferToggle(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-def)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def) :<C-u>call go#def#Jump('')<CR>$/;"	m
<Plug>(go-def-pop)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-pop) :<C-u>call go#def#StackPop()<CR>$/;"	m
<Plug>(go-def-split)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-split) :<C-u>call go#def#Jump("split")<CR>$/;"	m
<Plug>(go-def-stack)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-stack) :<C-u>call go#def#Stack()<CR>$/;"	m
<Plug>(go-def-stack-clear)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-stack-clear) :<C-u>call go#def#StackClear()<CR>$/;"	m
<Plug>(go-def-tab)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-tab) :<C-u>call go#def#Jump("tab")<CR>$/;"	m
<Plug>(go-def-vertical)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-vertical) :<C-u>call go#def#Jump("vsplit")<CR>$/;"	m
<Plug>(go-deps)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-deps) :<C-u>call go#tool#Deps()<CR>$/;"	m
<Plug>(go-describe)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-describe) :<C-u>call go#guru#Describe(-1)<CR>$/;"	m
<Plug>(go-doc)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc) :<C-u>call go#doc#Open("new", "split")<CR>$/;"	m
<Plug>(go-doc-browser)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-browser) :<C-u>call go#doc#OpenBrowser()<CR>$/;"	m
<Plug>(go-doc-split)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-split) :<C-u>call go#doc#Open("new", "split")<CR>$/;"	m
<Plug>(go-doc-tab)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-tab) :<C-u>call go#doc#Open("tabnew", "tabe")<CR>$/;"	m
<Plug>(go-doc-vertical)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-vertical) :<C-u>call go#doc#Open("vnew", "vsplit")<CR>$/;"	m
<Plug>(go-files)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-files) :<C-u>call go#tool#Files()<CR>$/;"	m
<Plug>(go-generate)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-generate) :<C-u>call go#cmd#Generate(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-implements)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-implements) :<C-u>call go#guru#Implements(-1)<CR>$/;"	m
<Plug>(go-import)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-import) :<C-u>call go#import#SwitchImport(1, '', expand('<cword>'), '')<CR>$/;"	m
<Plug>(go-imports)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-imports) :<C-u>call go#fmt#Format(1)<CR>$/;"	m
<Plug>(go-info)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-info) :<C-u>call go#tool#Info(0)<CR>$/;"	m
<Plug>(go-install)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-install) :<C-u>call go#cmd#Install(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-lint)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-lint) :<C-u>call go#lint#Golint()<CR>$/;"	m
<Plug>(go-metalinter)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-metalinter) :<C-u>call go#lint#Gometa(0)<CR>$/;"	m
<Plug>(go-referrers)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-referrers) :<C-u>call go#guru#Referrers(-1)<CR>$/;"	m
<Plug>(go-rename)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-rename) :<C-u>call go#rename#Rename(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-run)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-run) :<C-u>call go#cmd#Run(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-run-split)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^  nnoremap <silent> <Plug>(go-run-split) :<C-u>call go#cmd#RunTerm(!g:go_jump_to_error, 'split', [])<CR>$/;"	m
<Plug>(go-run-tab)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^  nnoremap <silent> <Plug>(go-run-tab) :<C-u>call go#cmd#RunTerm(!g:go_jump_to_error, 'tabe', [])<CR>$/;"	m
<Plug>(go-run-vertical)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^  nnoremap <silent> <Plug>(go-run-vertical) :<C-u>call go#cmd#RunTerm(!g:go_jump_to_error, 'vsplit', [])<CR>$/;"	m
<Plug>(go-sameids)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-sameids) :<C-u>call go#guru#SameIds()<CR>$/;"	m
<Plug>(go-sameids-toggle)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-sameids-toggle) :<C-u>call go#guru#ToggleSameIds()<CR>$/;"	m
<Plug>(go-test)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test) :<C-u>call go#test#Test(!g:go_jump_to_error, 0)<CR>$/;"	m
<Plug>(go-test-compile)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test-compile) :<C-u>call go#test#Test(!g:go_jump_to_error, 1)<CR>$/;"	m
<Plug>(go-test-func)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test-func) :<C-u>call go#test#Func(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-vet)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-vet) :<C-u>call go#lint#Vet(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-whicherrs)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-whicherrs) :<C-u>call go#guru#Whicherrs(-1)<CR>$/;"	m
<Plug>(operator-sandwich-add)	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^nmap <silent> <Plug>(operator-sandwich-add)     <Plug>(operator-sandwich-add-pre)<Plug>(operator-sandwich-g@)$/;"	m
<Plug>(operator-sandwich-add)	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^omap <silent> <Plug>(operator-sandwich-add)     <Plug>(operator-sandwich-g@)$/;"	m
<Plug>(operator-sandwich-add-pre)	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^nnoremap <silent> <Plug>(operator-sandwich-add-pre)     :<C-u>call operator#sandwich#prerequisite('add', 'n')<CR>$/;"	m
<Plug>(operator-sandwich-add-query1st)	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^nnoremap <silent> <Plug>(operator-sandwich-add-query1st)     :<C-u>call operator#sandwich#query1st('add', 'n')<CR>$/;"	m
<Plug>(operator-sandwich-add-visualrepeat)	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^noremap <silent> <Plug>(operator-sandwich-add-visualrepeat)     :<C-u>call operator#sandwich#visualrepeat('add')<CR>$/;"	m
<Plug>(operator-sandwich-delete)	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^nmap <silent> <Plug>(operator-sandwich-delete)  <Plug>(operator-sandwich-delete-pre)<Plug>(operator-sandwich-g@)$/;"	m
<Plug>(operator-sandwich-delete)	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^omap <silent> <Plug>(operator-sandwich-delete)  <Plug>(operator-sandwich-g@)$/;"	m
<Plug>(operator-sandwich-delete-pre)	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^nnoremap <silent> <Plug>(operator-sandwich-delete-pre)  :<C-u>call operator#sandwich#prerequisite('delete', 'n')<CR>$/;"	m
<Plug>(operator-sandwich-delete-visualrepeat)	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^noremap <silent> <Plug>(operator-sandwich-delete-visualrepeat)  :<C-u>call operator#sandwich#visualrepeat('delete')<CR>$/;"	m
<Plug>(operator-sandwich-dot)	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^nnoremap <expr><silent> <Plug>(operator-sandwich-dot)    operator#sandwich#dot()$/;"	m
<Plug>(operator-sandwich-g@)	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^inoremap <Plug>(operator-sandwich-g@) <C-o>g@$/;"	m
<Plug>(operator-sandwich-g@)	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^noremap  <Plug>(operator-sandwich-g@) g@$/;"	m
<Plug>(operator-sandwich-gv)	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^inoremap <Plug>(operator-sandwich-gv) <C-o>gv$/;"	m
<Plug>(operator-sandwich-gv)	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^nnoremap <Plug>(operator-sandwich-gv) gv$/;"	m
<Plug>(operator-sandwich-predot)	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^nnoremap <expr><silent> <Plug>(operator-sandwich-predot) operator#sandwich#predot()$/;"	m
<Plug>(operator-sandwich-release-count)	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^onoremap <expr><silent> <Plug>(operator-sandwich-release-count) operator#sandwich#release_count()$/;"	m
<Plug>(operator-sandwich-replace)	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^nmap <silent> <Plug>(operator-sandwich-replace) <Plug>(operator-sandwich-replace-pre)<Plug>(operator-sandwich-g@)$/;"	m
<Plug>(operator-sandwich-replace)	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^omap <silent> <Plug>(operator-sandwich-replace) <Plug>(operator-sandwich-g@)$/;"	m
<Plug>(operator-sandwich-replace-pre)	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^nnoremap <silent> <Plug>(operator-sandwich-replace-pre) :<C-u>call operator#sandwich#prerequisite('replace', 'n')<CR>$/;"	m
<Plug>(operator-sandwich-replace-query1st)	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^nnoremap <silent> <Plug>(operator-sandwich-replace-query1st) :<C-u>call operator#sandwich#query1st('replace', 'n')<CR>$/;"	m
<Plug>(operator-sandwich-replace-visualrepeat)	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^noremap <silent> <Plug>(operator-sandwich-replace-visualrepeat) :<C-u>call operator#sandwich#visualrepeat('replace')<CR>$/;"	m
<Plug>(operator-sandwich-squash-count)	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^onoremap <expr><silent> <Plug>(operator-sandwich-squash-count)  operator#sandwich#squash_count()$/;"	m
<Plug>(operator-sandwich-synchro-count)	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^onoremap <expr><silent> <Plug>(operator-sandwich-synchro-count) operator#sandwich#synchro_count()$/;"	m
<Plug>(quickhl-cword-disable)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-cword-disable) :call quickhl#cword#disable()<CR>$/;"	m
<Plug>(quickhl-cword-enable)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-cword-enable)  :call quickhl#cword#enable()<CR>$/;"	m
<Plug>(quickhl-cword-toggle)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-cword-toggle)  :call quickhl#cword#toggle()<CR>$/;"	m
<Plug>(quickhl-manual-clear)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-manual-clear)  :call quickhl#manual#clear_this('n')<CR>$/;"	m
<Plug>(quickhl-manual-clear)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^vnoremap <silent> <Plug>(quickhl-manual-clear)  :call quickhl#manual#clear_this('v')<CR>$/;"	m
<Plug>(quickhl-manual-reset)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-manual-reset)  :call quickhl#manual#reset()<CR>$/;"	m
<Plug>(quickhl-manual-reset)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^vnoremap <silent> <Plug>(quickhl-manual-reset)  :call quickhl#manual#reset()<CR>$/;"	m
<Plug>(quickhl-manual-this)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-manual-this) :call quickhl#manual#this('n')<CR>$/;"	m
<Plug>(quickhl-manual-this)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^vnoremap <silent> <Plug>(quickhl-manual-this) :call quickhl#manual#this('v')<CR>$/;"	m
<Plug>(quickhl-manual-this-whole-word)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-manual-this-whole-word) :call quickhl#manual#this_whole_word('n')<CR>$/;"	m
<Plug>(quickhl-manual-this-whole-word)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^vnoremap <silent> <Plug>(quickhl-manual-this-whole-word) :call quickhl#manual#this_whole_word('v')<CR>$/;"	m
<Plug>(quickhl-manual-toggle)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-manual-toggle) :call quickhl#manual#lock_toggle()<CR>$/;"	m
<Plug>(quickhl-manual-toggle)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^vnoremap <silent> <Plug>(quickhl-manual-toggle) :call quickhl#manual#lock_toggle()<CR>$/;"	m
<Plug>(quickhl-tag-disable)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-tag-disable)    :call quickhl#tag#disable()<CR>$/;"	m
<Plug>(quickhl-tag-enable)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-tag-enable)     :call quickhl#tag#enable()<CR>$/;"	m
<Plug>(quickhl-tag-toggle)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-tag-toggle)     :call quickhl#tag#toggle()<CR>$/;"	m
<Plug>(sandwich-CTRL-v)	pack/plugins/start/machakann-vim-sandwich/plugin/sandwich.vim	/^nnoremap <Plug>(sandwich-CTRL-v) <C-v>$/;"	m
<Plug>(sandwich-O)	pack/plugins/start/machakann-vim-sandwich/plugin/sandwich.vim	/^nnoremap <Plug>(sandwich-O) O$/;"	m
<Plug>(sandwich-V)	pack/plugins/start/machakann-vim-sandwich/plugin/sandwich.vim	/^nnoremap <Plug>(sandwich-V) V$/;"	m
<Plug>(sandwich-i)	pack/plugins/start/machakann-vim-sandwich/plugin/sandwich.vim	/^nnoremap <Plug>(sandwich-i) i$/;"	m
<Plug>(sandwich-nop)	pack/plugins/start/machakann-vim-sandwich/plugin/textobj/sandwich.vim	/^noremap <Plug>(sandwich-nop) <Nop>$/;"	m
<Plug>(sandwich-o)	pack/plugins/start/machakann-vim-sandwich/plugin/sandwich.vim	/^nnoremap <Plug>(sandwich-o) o$/;"	m
<Plug>(sandwich-v)	pack/plugins/start/machakann-vim-sandwich/plugin/sandwich.vim	/^nnoremap <Plug>(sandwich-v) v$/;"	m
<Plug>(test-dot)	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^nnoremap <Plug>(test-dot) .$/;"	m
<Plug>(textobj-sandwich-auto-a)	pack/plugins/start/machakann-vim-sandwich/plugin/textobj/sandwich.vim	/^nnoremap <silent><expr> <Plug>(textobj-sandwich-auto-a) textobj#sandwich#auto('n', 'a')$/;"	m
<Plug>(textobj-sandwich-auto-a)	pack/plugins/start/machakann-vim-sandwich/plugin/textobj/sandwich.vim	/^onoremap <silent><expr> <Plug>(textobj-sandwich-auto-a) textobj#sandwich#auto('o', 'a')$/;"	m
<Plug>(textobj-sandwich-auto-i)	pack/plugins/start/machakann-vim-sandwich/plugin/textobj/sandwich.vim	/^nnoremap <silent><expr> <Plug>(textobj-sandwich-auto-i) textobj#sandwich#auto('n', 'i')$/;"	m
<Plug>(textobj-sandwich-auto-i)	pack/plugins/start/machakann-vim-sandwich/plugin/textobj/sandwich.vim	/^onoremap <silent><expr> <Plug>(textobj-sandwich-auto-i) textobj#sandwich#auto('o', 'i')$/;"	m
<Plug>(textobj-sandwich-function-a)	pack/plugins/start/machakann-vim-sandwich/plugin/sandwich.vim	/^onoremap <silent> <Plug>(textobj-sandwich-function-a)  :<C-u>call sandwich#magicchar#f#a()<CR>$/;"	m
<Plug>(textobj-sandwich-function-ap)	pack/plugins/start/machakann-vim-sandwich/plugin/sandwich.vim	/^onoremap <silent> <Plug>(textobj-sandwich-function-ap) :<C-u>call sandwich#magicchar#f#ap()<CR>$/;"	m
<Plug>(textobj-sandwich-function-i)	pack/plugins/start/machakann-vim-sandwich/plugin/sandwich.vim	/^onoremap <silent> <Plug>(textobj-sandwich-function-i)  :<C-u>call sandwich#magicchar#f#i()<CR>$/;"	m
<Plug>(textobj-sandwich-function-ip)	pack/plugins/start/machakann-vim-sandwich/plugin/sandwich.vim	/^onoremap <silent> <Plug>(textobj-sandwich-function-ip) :<C-u>call sandwich#magicchar#f#ip()<CR>$/;"	m
<Plug>(textobj-sandwich-literal-query-a)	pack/plugins/start/machakann-vim-sandwich/plugin/textobj/sandwich.vim	/^nnoremap <silent><expr> <Plug>(textobj-sandwich-literal-query-a) textobj#sandwich#query('n', 'a', {}, [])$/;"	m
<Plug>(textobj-sandwich-literal-query-a)	pack/plugins/start/machakann-vim-sandwich/plugin/textobj/sandwich.vim	/^onoremap <silent><expr> <Plug>(textobj-sandwich-literal-query-a) textobj#sandwich#query('o', 'a', {}, [])$/;"	m
<Plug>(textobj-sandwich-literal-query-i)	pack/plugins/start/machakann-vim-sandwich/plugin/textobj/sandwich.vim	/^nnoremap <silent><expr> <Plug>(textobj-sandwich-literal-query-i) textobj#sandwich#query('n', 'i', {}, [])$/;"	m
<Plug>(textobj-sandwich-literal-query-i)	pack/plugins/start/machakann-vim-sandwich/plugin/textobj/sandwich.vim	/^onoremap <silent><expr> <Plug>(textobj-sandwich-literal-query-i) textobj#sandwich#query('o', 'i', {}, [])$/;"	m
<Plug>(textobj-sandwich-query-a)	pack/plugins/start/machakann-vim-sandwich/plugin/textobj/sandwich.vim	/^nnoremap <silent><expr> <Plug>(textobj-sandwich-query-a) textobj#sandwich#query('n', 'a')$/;"	m
<Plug>(textobj-sandwich-query-a)	pack/plugins/start/machakann-vim-sandwich/plugin/textobj/sandwich.vim	/^onoremap <silent><expr> <Plug>(textobj-sandwich-query-a) textobj#sandwich#query('o', 'a')$/;"	m
<Plug>(textobj-sandwich-query-i)	pack/plugins/start/machakann-vim-sandwich/plugin/textobj/sandwich.vim	/^nnoremap <silent><expr> <Plug>(textobj-sandwich-query-i) textobj#sandwich#query('n', 'i')$/;"	m
<Plug>(textobj-sandwich-query-i)	pack/plugins/start/machakann-vim-sandwich/plugin/textobj/sandwich.vim	/^onoremap <silent><expr> <Plug>(textobj-sandwich-query-i) textobj#sandwich#query('o', 'i')$/;"	m
<Plug>(textobj-sandwich-tag-a)	pack/plugins/start/machakann-vim-sandwich/plugin/sandwich.vim	/^onoremap <silent> <Plug>(textobj-sandwich-tag-a) :<C-u>call sandwich#magicchar#t#at()<CR>$/;"	m
<Plug>(textobj-sandwich-tag-i)	pack/plugins/start/machakann-vim-sandwich/plugin/sandwich.vim	/^onoremap <silent> <Plug>(textobj-sandwich-tag-i) :<C-u>call sandwich#magicchar#t#it()<CR>$/;"	m
<Plug>(textobj-sandwich-tagname-a)	pack/plugins/start/machakann-vim-sandwich/plugin/sandwich.vim	/^onoremap <silent> <Plug>(textobj-sandwich-tagname-a) :<C-u>call sandwich#magicchar#t#a()<CR>$/;"	m
<Plug>(textobj-sandwich-tagname-i)	pack/plugins/start/machakann-vim-sandwich/plugin/sandwich.vim	/^onoremap <silent> <Plug>(textobj-sandwich-tagname-i) :<C-u>call sandwich#magicchar#t#i()<CR>$/;"	m
<Plug>ChangeCommentary	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>ChangeCommentary c:<C-U>call <SID>textobject(1)<CR>$/;"	m
<Plug>Coerce	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^nnoremap <silent> <Plug>Coerce :<C-U>call <SID>coerce(nr2char(getchar()))<CR>$/;"	m
<Plug>Commentary	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>Commentary     :<C-U>set opfunc=<SID>go<CR>g@$/;"	m
<Plug>Commentary	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^onoremap <silent> <Plug>Commentary        :<C-U>call <SID>textobject(0)<CR>$/;"	m
<Plug>CommentaryLine	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>CommentaryLine :<C-U>set opfunc=<SID>go<Bar>exe 'norm! 'v:count1.'g@_'<CR>$/;"	m
<Plug>CommentaryUndo	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^nmap <silent> <Plug>CommentaryUndo <Plug>Commentary<Plug>Commentary$/;"	m
<Plug>GitGutterNextHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterNextHunk &diff ? ']c' : ":\\<C-U>execute v:count1 . 'GitGutterNextHunk'\\<CR>"$/;"	m
<Plug>GitGutterPrevHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterPrevHunk &diff ? '[c' : ":\\<C-U>execute v:count1 . 'GitGutterPrevHunk'\\<CR>"$/;"	m
<Plug>GitGutterPreviewHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterPreviewHunk :GitGutterPreviewHunk<CR>$/;"	m
<Plug>GitGutterStageHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterStageHunk   :GitGutterStageHunk<CR>$/;"	m
<Plug>GitGutterTextObjectInnerPending	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>GitGutterTextObjectInnerPending :<C-U>call gitgutter#hunk#text_object(1)<CR>$/;"	m
<Plug>GitGutterTextObjectOuterPending	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>GitGutterTextObjectOuterPending :<C-U>call gitgutter#hunk#text_object(0)<CR>$/;"	m
<Plug>GitGutterUndoHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterUndoHunk    :GitGutterUndoHunk<CR>$/;"	m
<Plug>Minisnip	pack/plugins/start/keyboardfire-vim-minisnip/plugin/vim-minisnip.vim	/^inoremap <script> <expr> <Plug>Minisnip <SID>ShouldTrigger() ?$/;"	m
<Plug>QfCnext	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nmap <silent>        <Plug>QfCnext     <Plug>qf_qf_next$/;"	m
<Plug>QfCprevious	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nmap <silent>        <Plug>QfCprevious <Plug>qf_qf_previous$/;"	m
<Plug>QfCtoggle	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nmap <silent>        <Plug>QfCtoggle   <Plug>qf_qf_toggle$/;"	m
<Plug>QfLnext	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nmap <silent>        <Plug>QfLnext     <Plug>qf_loc_next$/;"	m
<Plug>QfLprevious	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nmap <silent>        <Plug>QfLprevious <Plug>qf_loc_previous$/;"	m
<Plug>QfLtoggle	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nmap <silent>        <Plug>QfLtoggle   <Plug>qf_loc_toggle$/;"	m
<Plug>QfSwitch	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nmap <silent> <expr> <Plug>QfSwitch    &filetype ==# 'qf' ? '<C-w>p' : '<C-w>b'$/;"	m
<Plug>QlistDefinefromhere	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^nnoremap <silent> <Plug>QlistDefinefromhere        :call <sid>Qlist("d", 0, 1, 0)<CR>$/;"	m
<Plug>QlistDefinefromtop	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^nnoremap <silent> <Plug>QlistDefinefromtop         :call <sid>Qlist("d", 0, 0, 0)<CR>$/;"	m
<Plug>QlistIncludefromhere	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^nnoremap <silent> <Plug>QlistIncludefromhere       :call <sid>Qlist("i", 0, 1, 0)<CR>$/;"	m
<Plug>QlistIncludefromtop	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^nnoremap <silent> <Plug>QlistIncludefromtop        :call <sid>Qlist("i", 0, 0, 0)<CR>$/;"	m
<Plug>qf_loc_next	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent>        <Plug>qf_loc_next        :<C-u> call qf#wrap#WrapCommand('down', 'l')<CR>$/;"	m
<Plug>qf_loc_previous	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent>        <Plug>qf_loc_previous    :<C-u> call qf#wrap#WrapCommand('up', 'l')<CR>$/;"	m
<Plug>qf_loc_stay_toggle	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent>        <Plug>qf_loc_stay_toggle :<C-u> call qf#toggle#ToggleLocWindow(1)<CR>$/;"	m
<Plug>qf_loc_toggle	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent>        <Plug>qf_loc_toggle      :<C-u> call qf#toggle#ToggleLocWindow(0)<CR>$/;"	m
<Plug>qf_qf_next	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent>        <Plug>qf_qf_next         :<C-u> call qf#wrap#WrapCommand('down', 'c')<CR>$/;"	m
<Plug>qf_qf_previous	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent>        <Plug>qf_qf_previous     :<C-u> call qf#wrap#WrapCommand('up', 'c')<CR>$/;"	m
<Plug>qf_qf_stay_toggle	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent>        <Plug>qf_qf_stay_toggle  :<C-u> call qf#toggle#ToggleQfWindow(1)<CR>$/;"	m
<Plug>qf_qf_switch	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <expr> <Plug>qf_qf_switch       &filetype ==# 'qf' ? '<C-w>p' : '<C-w>b'$/;"	m
<Plug>qf_qf_toggle	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent>        <Plug>qf_qf_toggle       :<C-u> call qf#toggle#ToggleQfWindow(0)<CR>$/;"	m
<Plug>unimpairedBlankDown	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedBlankDown :<C-U>call <SID>BlankDown(v:count1)<CR>$/;"	m
<Plug>unimpairedBlankUp	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedBlankUp   :<C-U>call <SID>BlankUp(v:count1)<CR>$/;"	m
<Plug>unimpairedContextNext	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedContextNext     :call <SID>Context(0)<CR>$/;"	m
<Plug>unimpairedContextNext	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^onoremap <silent> <Plug>unimpairedContextNext     :call <SID>ContextMotion(0)<CR>$/;"	m
<Plug>unimpairedContextPrevious	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedContextPrevious :call <SID>Context(1)<CR>$/;"	m
<Plug>unimpairedContextPrevious	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^onoremap <silent> <Plug>unimpairedContextPrevious :call <SID>ContextMotion(1)<CR>$/;"	m
<Plug>unimpairedDirectoryNext	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedDirectoryNext     :<C-U>edit <C-R>=<SID>fnameescape(fnamemodify(<SID>FileByOffset(v:count1), ':.'))<CR><CR>$/;"	m
<Plug>unimpairedDirectoryPrevious	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedDirectoryPrevious :<C-U>edit <C-R>=<SID>fnameescape(fnamemodify(<SID>FileByOffset(-v:count1), ':.'))<CR><CR>$/;"	m
<Plug>unimpairedMoveDown	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedMoveDown          :<C-U>call <SID>Move('+',v:count1,'Down')<CR>$/;"	m
<Plug>unimpairedMoveSelectionDown	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^noremap  <silent> <Plug>unimpairedMoveSelectionDown :<C-U>call <SID>MoveSelectionDown(v:count1)<CR>$/;"	m
<Plug>unimpairedMoveSelectionUp	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^noremap  <silent> <Plug>unimpairedMoveSelectionUp   :<C-U>call <SID>MoveSelectionUp(v:count1)<CR>$/;"	m
<Plug>unimpairedMoveUp	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedMoveUp            :<C-U>call <SID>Move('--',v:count1,'Up')<CR>$/;"	m
<Plug>unimpairedONext	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nmap <silent> <Plug>unimpairedONext     <Plug>unimpairedDirectoryNext:echohl WarningMSG<Bar>echo "]o is deprecated. Use ]f"<Bar>echohl NONE<CR>$/;"	m
<Plug>unimpairedOPrevious	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nmap <silent> <Plug>unimpairedOPrevious <Plug>unimpairedDirectoryPrevious:echohl WarningMSG<Bar>echo "[o is deprecated. Use [f"<Bar>echohl NONE<CR>$/;"	m
<Plug>unimpairedPaste	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedPaste :call <SID>setup_paste()<CR>$/;"	m
<Plug>unimpairedPutAbove	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedPutAbove :call <SID>putline('[p', 'Above')<CR>$/;"	m
<Plug>unimpairedPutBelow	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedPutBelow :call <SID>putline(']p', 'Below')<CR>$/;"	m
<S-h>	vimrc	/^        nnoremap <S-h> :call ToggleHiddenAll()$/;"	m
<SID>:	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^nnoremap <SID>: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>gul	pack/plugins/start/machakann-vim-sandwich/macros/sandwich/keymap/surround.vim	/^onoremap <SID>gul g_$/;"	m
<SID>line	pack/plugins/start/machakann-vim-sandwich/macros/sandwich/keymap/surround.vim	/^onoremap <SID>line :normal! ^vg_<CR>$/;"	m
<SID>transpose	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap! <expr> <SID>transpose "\\<BS>\\<Right>".matchstr(getcmdline()[0 : getcmdpos()-2], '.$')$/;"	m
<SID>transposition	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap! <expr> <SID>transposition getcmdpos()>strlen(getcmdline())?"\\<Left>":getcmdpos()>1?'':"\\<Right>"$/;"	m
<backspace>	vimrc	/^        nnoremap <silent> <backspace> :noh<cr>:QuickhlManualReset<cr>$/;"	m
<c-r><c-l>	vimrc	/^        cnoremap <c-r><c-l> <c-r>=getline('.')<cr>$/;"	m
<down>	vimrc	/^        nmap <silent> <down> <esc>:cnext<cr>$/;"	m
<leader>"	vimrc	/^        nnoremap <leader>" :split<cr>$/;"	m
<leader>%	vimrc	/^        nnoremap <leader>% :vsplit<cr>$/;"	m
<leader>A	vimrc	/^        nnoremap <leader>A :argadd **\/*$/;"	m
<leader>B	vimrc	/^        nnoremap <leader>B :ls<cr>:b<space>$/;"	m
<leader>G	vimrc	/^        nnoremap <leader>G :grep <c-r><c-w><cr>$/;"	m
<leader>L	vimrc	/^        nnoremap <leader>L :lgrep <c-r><c-w><cr>$/;"	m
<leader>R	vimrc	/^        nnoremap <leader>R :call system('tmux split -v -p 20\\; last-pane')<cr>$/;"	m
<leader>S	vimrc	/^        nnoremap <leader>S :QuickhlManualAdd<space>$/;"	m
<leader>W	vimrc	/^        nnoremap <leader>W <c-w>W$/;"	m
<leader>a	vimrc	/^        nnoremap <leader>a :argadd <c-r>=fnameescape(expand('%:p:h'))<cr>\/*<C-d>$/;"	m
<leader>b	vimrc	/^        nnoremap <leader>b :b <C-d>$/;"	m
<leader>c	vimrc	/^        nnoremap <leader>c <esc>:close<cr>$/;"	m
<leader>e	vimrc	/^        nnoremap <leader>e :e <c-r>=fnameescape(expand('%:p:h'))<cr>\/*<C-d>$/;"	m
<leader>f	vimrc	/^        nnoremap <leader>f :find *$/;"	m
<leader>g	vimrc	/^        nnoremap <leader>g :grep<space>$/;"	m
<leader>i	vimrc	/^        nnoremap <leader>i :Ilist<space>$/;"	m
<leader>l	vimrc	/^        nnoremap <leader>l :lgrep<space>$/;"	m
<leader>m	vimrc	/^        nnoremap <leader>m :make<cr>$/;"	m
<leader>o	vimrc	/^        nnoremap <leader>o <c-w>o$/;"	m
<leader>p	vimrc	/^        nnoremap <leader>p :find *$/;"	m
<leader>q	vimrc	/^        nnoremap <leader>q :b#<cr>$/;"	m
<leader>r	vimrc	/^        nnoremap <leader>r :let cmds = input('command: ', cmds) \\| call system('tmux send-keys -t +1 "' . cmds . '" Enter')<cr>$/;"	m
<leader>s	vimrc	/^        nmap <leader>s <Plug>(quickhl-manual-this)$/;"	m
<leader>t	vimrc	/^        nnoremap <leader>t :ltag<space>\/ \\| lop<left><left><left><left><left><left>$/;"	m
<leader>vs	vimrc	/^        nnoremap <leader>vs :<C-u>let @z=&so<cr>:set so=0 noscb<cr>:bo vs<cr>Ljzt:setl scb<cr><C-w>p:setl scb<cr>:let &so=@z<cr>$/;"	m
<leader>w	vimrc	/^        nnoremap <leader>w <c-w>w$/;"	m
<leader>x	vimrc	/^        nnoremap <leader>x :TxSigInt!<cr>$/;"	m
<leader>z	vimrc	/^        nnoremap <leader>z :call ToggleFolds()<cr>$/;"	m
<left>	vimrc	/^        nmap <silent> <left> <esc>:lprev<cr>$/;"	m
<right>	vimrc	/^        nmap <silent> <right> <esc>:lnext<cr>$/;"	m
<up>	vimrc	/^        nmap <silent> <up> <esc>:cprev<cr>$/;"	m
ALEBufferFixGroup	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^augroup ALEBufferFixGroup$/;"	a
ALECleanupGroup	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^augroup ALECleanupGroup$/;"	a
ALEDetail	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEDetail :call ale#cursor#ShowCursorDetail()$/;"	c
ALEDisable	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEDisable :call ale#toggle#Disable()$/;"	c
ALEDisableBuffer	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEDisableBuffer :call ale#toggle#DisableBuffer(bufnr(''))$/;"	c
ALEEnable	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEEnable :call ale#toggle#Enable()$/;"	c
ALEEnableBuffer	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEEnableBuffer :call ale#toggle#EnableBuffer(bufnr(''))$/;"	c
ALEFirst	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEFirst :call ale#loclist_jumping#JumpToIndex(0)$/;"	c
ALEFix	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEFix :call ale#fix#Fix()$/;"	c
ALEFixSuggest	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEFixSuggest :call ale#fix#registry#Suggest(&filetype)$/;"	c
ALEGetStatusLine	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^function! ALEGetStatusLine() abort$/;"	f
ALEGoToDefinition	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEGoToDefinition :call ale#definition#GoTo({})$/;"	c
ALEGoToDefinitionInTab	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEGoToDefinitionInTab :call ale#definition#GoTo({'open_in_tab': 1})$/;"	c
ALEHighlightBufferGroup	pack/plugins/start/w0rp-ale/autoload/ale/highlight.vim	/^augroup ALEHighlightBufferGroup$/;"	a
ALEInfo	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEInfo :call ale#debugging#Info()$/;"	c
ALEInfoToClipboard	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEInfoToClipboard :call ale#debugging#InfoToClipboard()$/;"	c
ALELast	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALELast :call ale#loclist_jumping#JumpToIndex(-1)$/;"	c
ALELint	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALELint :call ale#Queue(0, 'lint_file')$/;"	c
ALELint	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^function! ALELint(delay) abort$/;"	f
ALELintImpl	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! s:ALELintImpl(buffer) abort$/;"	f
ALENext	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALENext :call ale#loclist_jumping#Jump('after', 0)$/;"	c
ALENextWrap	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALENextWrap :call ale#loclist_jumping#Jump('after', 1)$/;"	c
ALEPrevious	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEPrevious :call ale#loclist_jumping#Jump('before', 0)$/;"	c
ALEPreviousWrap	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEPreviousWrap :call ale#loclist_jumping#Jump('before', 1)$/;"	c
ALEQueueImpl	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! s:ALEQueueImpl(delay, linting_flag, buffer) abort$/;"	f
ALEReset	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEReset :call ale#toggle#Reset()$/;"	c
ALEResetBuffer	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEResetBuffer :call ale#toggle#ResetBuffer(bufnr(''))$/;"	c
ALEToggle	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEToggle :call ale#toggle#Toggle()$/;"	c
ALEToggleBuffer	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEToggleBuffer :call ale#toggle#ToggleBuffer(bufnr(''))$/;"	c
Abolish	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^  let Abolish = {}$/;"	v
Abolish	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^command! -nargs=+ -bang -bar -range=0 -complete=custom,s:Complete Abolish$/;"	c
Abolished	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! Abolished()$/;"	f
Add	pack/plugins/start/machakann-vim-sandwich/README.md	/^### Add$/;"	k
AddHintsForTypeScriptParsingErrors	pack/plugins/start/w0rp-ale/autoload/ale/handlers/eslint.vim	/^function! s:AddHintsForTypeScriptParsingErrors(output) abort$/;"	f
AddList	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! s:AddList()$/;"	f
AddProblemsFromOtherBuffers	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:AddProblemsFromOtherBuffers(buffer, linters) abort$/;"	f
AddTitle	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! s:AddTitle(title)$/;"	f
Align	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^function Align(left, right)$/;"	f
All terminal emulators	pack/colors/start/romainl-apprentice/README.md	/^### All terminal emulators$/;"	k
Anti-features	pack/plugins/start/romainl-vim-qf/README.md	/^### Anti-features$/;"	k
ApplyPartialTimer	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! s:ApplyPartialTimer(timer_id) abort$/;"	f
AsmFmt	pack/plugins/start/fatih-vim-go/ftplugin/asm.vim	/^command! -nargs=0 AsmFmt call go#asmfmt#Format()$/;"	c
AsyncDo	pack/plugins/start/hauleth-asyncdo-vim/README.md	/^# AsyncDo$/;"	h
AsyncDo	pack/plugins/start/hauleth-asyncdo-vim/plugin/asyncdo.vim	/^command! -bang -nargs=+ AsyncDo   call asyncdo#run(<bang>0, <f-args>)$/;"	c
AsyncStop	pack/plugins/start/hauleth-asyncdo-vim/plugin/asyncdo.vim	/^command!       -nargs=0 AsyncStop call asyncdo#stop()$/;"	c
Asynchronous Lint Engine [![Travis CI Build Status](https://travis-ci.org/w0rp/ale.svg?branch=master)](https://travis-ci.org/w0rp/ale) [![AppVeyor Build Status](https://ci.appveyor.com/api/projects/status/github/w0rp/ale?svg=true)](https://ci.appveyor.com/project/w0rp/ale)	pack/plugins/start/w0rp-ale/README.md	/^# Asynchronous Lint Engine [![Travis CI Build Status](https:\/\/travis-ci.org\/w0rp\/ale.svg?branch=master)](https:\/\/travis-ci.org\/w0rp\/ale) [![AppVeyor Build Status](https:\/\/ci.appveyor.com\/api\/projects\/status\/github\/w0rp\/ale?svg=true)](https:\/\/ci.appveyor.com\/project\/w0rp\/ale)$/;"	h
Author	pack/plugins/start/olical-vim-enmasse/README.md	/^## Author$/;"	i
AutoMkdir	vimrc	/^        augroup AutoMkdir$/;"	a
AutoMkdir	vimrc	/^        function! <SID>AutoMkdir() abort$/;"	f
Blame	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
BlameCommit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BlameCommit(cmd) abort$/;"	f
BlameJump	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
BlameSyntax	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
BlankDown	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:BlankDown(count) abort$/;"	f
BlankUp	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:BlankUp(count) abort$/;"	f
Bookmark.AddBookmark	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.CompareBookmarksByName	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CompareBookmarksByName(firstBookmark, secondBookmark)$/;"	f
Bookmark.GetNodeForName	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot, nerdtree)$/;"	f
Bookmark.GetSelected	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.SortBookmarksList	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.SortBookmarksList()$/;"	f
Bookmark.ToRoot	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name, nerdtree)$/;"	f
Bookmark.Write	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(nerdtree, ...)$/;"	f
Bookmark.delete	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(nerdtree, searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(nerdtree, ...)$/;"	f
Bookmark.openInNewTab	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot(nerdtree)$/;"	f
Bookmark.validate	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
BreakHere	vimrc	/^        command! BreakHere :call BreakHere()$/;"	c
BreakHere	vimrc	/^        function! BreakHere()$/;"	f
Browse	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
BufReadIndex	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndex() abort$/;"	f
BufReadIndexFile	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndexFile() abort$/;"	f
BufReadObject	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadObject() abort$/;"	f
BufWinId	pack/plugins/start/w0rp-ale/autoload/ale/list.vim	/^function! s:BufWinId(buffer) abort$/;"	f
BufWriteIndexFile	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BufWriteIndexFile() abort$/;"	f
BuildClassPathOption	pack/plugins/start/w0rp-ale/ale_linters/java/javac.vim	/^function! s:BuildClassPathOption(buffer, import_paths) abort$/;"	f
BuildClassPathOption	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^function! s:BuildClassPathOption(buffer, import_paths) abort$/;"	f
BuildSignMap	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^function! s:BuildSignMap(buffer, current_sign_list, grouped_items) abort$/;"	f
BuildText	pack/plugins/start/w0rp-ale/ale_linters/ruby/reek.vim	/^function! s:BuildText(buffer, error) abort$/;"	f
But fear no longer!	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^## But fear no longer!$/;"	i
CSCOPE_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -R$/;"	v
CSCOPE_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -i %TAGS_FILE%.files$/;"	v
CSCOPE_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=$/;"	v
CSCOPE_EXE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_EXE=%~2$/;"	v
CSCOPE_EXE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_EXE=cscope$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% --append "%UPDATED_SOURCE%"$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% -L %TAGS_FILE%.files$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% "%PROJECT_ROOT%"$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% %~2$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --exclude=%2$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --options=%2$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_ARGS=$/;"	v
CTAGS_EXE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_EXE=%~2$/;"	v
CTAGS_EXE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_EXE=ctags$/;"	v
CheckBinaries	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:CheckBinaries()$/;"	f
CheckForBadConfig	pack/plugins/start/w0rp-ale/autoload/ale/handlers/eslint.vim	/^function! s:CheckForBadConfig(buffer, lines) abort$/;"	f
CheckWithLSP	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:CheckWithLSP(buffer, linter) abort$/;"	f
Chmod	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=1 Chmod :$/;"	c
CleanupEveryBuffer	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! s:CleanupEveryBuffer() abort$/;"	f
CloseWindowIfNeeded	pack/plugins/start/w0rp-ale/autoload/ale/list.vim	/^function! s:CloseWindowIfNeeded(buffer) abort$/;"	f
CmpPatterns	pack/plugins/start/w0rp-ale/autoload/ale/pattern_options.vim	/^function! s:CmpPatterns(left_item, right_item) abort$/;"	f
Commentary	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^command! -range -bar Commentary call s:go(<line1>,<line2>)$/;"	c
Commit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Commit(args, ...) abort$/;"	f
CommitComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
CompilerSet	pack/plugins/start/fatih-vim-go/compiler/go.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
Complete	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:Complete(A,L,P)$/;"	f
CompletionStillValid	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! s:CompletionStillValid(request_id) abort$/;"	f
Config	pack/plugins/start/t9md-vim-quickhl/README.md	/^# Config$/;"	h
Configuration	pack/plugins/start/machakann-vim-sandwich/README.md	/^### Configuration$/;"	k
Configuration (**MUST** fill this out):	pack/plugins/start/fatih-vim-go/.github/ISSUE_TEMPLATE.md	/^### Configuration (**MUST** fill this out):$/;"	k
Context	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:Context(reverse)$/;"	f
ContextMotion	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:ContextMotion(reverse)$/;"	f
Contributing	pack/plugins/start/ludovicchabant-vim-gutentags/CONTRIBUTING.md	/^# Contributing$/;"	h
Contributing to ALE	pack/plugins/start/w0rp-ale/CONTRIBUTING.md	/^# Contributing to ALE$/;"	h
Count	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^function! Count(...) abort$/;"	f
CreateCountDict	pack/plugins/start/w0rp-ale/autoload/ale/statusline.vim	/^function! s:CreateCountDict() abort$/;"	f
CreateEnMasseBuffer	pack/plugins/start/olical-vim-enmasse/autoload/enmasse.vim	/^function! s:CreateEnMasseBuffer(list, sourceLines)$/;"	f
CreateTSServerMessageData	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! s:CreateTSServerMessageData(message) abort$/;"	f
CreateTemporaryFileForJob	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:CreateTemporaryFileForJob(buffer, temporary_file) abort$/;"	f
CreateTemporaryFileForJob	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! s:CreateTemporaryFileForJob(buffer, temporary_file, input) abort$/;"	f
Creator.BufNamePrefix	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
Creator.CreateMirror	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
Creator.CreateTabTree	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateTabTree(name)$/;"	f
Creator.CreateWindowTree	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateWindowTree(dir)$/;"	f
Creator.New	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
Creator.ToggleTabTree	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.ToggleTabTree(dir)$/;"	f
Creator._bindMappings	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
Creator._broadcastInitEvent	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
Creator._createNERDTree	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createNERDTree(path, type)$/;"	f
Creator._createTreeWin	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
Creator._isBufHidden	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._isBufHidden(nr)$/;"	f
Creator._nextBufferName	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
Creator._nextBufferNumber	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
Creator._pathForString	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
Creator._removeTreeBufForTab	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._removeTreeBufForTab()$/;"	f
Creator._setCommonBufOptions	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
Creator._setupStatusline	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
Creator._tabpagevar	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._tabpagevar(tabnr, var)$/;"	f
Creator._uniq	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._uniq(list)$/;"	f
Creator.createMirror	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
Creator.createTabTree	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createTabTree(name)$/;"	f
Creator.createWindowTree	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createWindowTree(dir)$/;"	f
Creator.toggleTabTree	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.toggleTabTree(dir)$/;"	f
DB_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set DB_FILE=%~2$/;"	v
DB_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^set DB_FILE=cscope.out$/;"	v
DONE	pack/plugins/start/romainl-vim-qf/README.md	/^## DONE$/;"	i
DONE	pack/plugins/start/romainl-vim-qlist/README.md	/^## DONE$/;"	i
Delete	pack/plugins/start/machakann-vim-sandwich/README.md	/^### Delete$/;"	k
Delete	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang Delete$/;"	c
Demo	pack/plugins/start/machakann-vim-sandwich/README.md	/^### Demo$/;"	k
Derivative works	pack/colors/start/romainl-apprentice/README.md	/^## Derivative works$/;"	i
Design	pack/plugins/start/machakann-vim-sandwich/README.md	/^# Design$/;"	h
Diff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Diff(vert,keepfocus,...) abort$/;"	f
DirComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
DisablePostamble	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! s:DisablePostamble() abort$/;"	f
Disciple	pack/colors/start/romainl-disciple/README.md	/^# Disciple$/;"	h
Dispatch	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Dispatch(bang, args)$/;"	f
Dlist	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^command! -nargs=1 -bar -bang Dlist call <sid>Qlist("d", 1, 0, '<bang>' == '!', <f-args>)$/;"	c
Documentation	pack/plugins/start/romainl-vim-qf/README.md	/^## Documentation$/;"	i
Dofile	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=1 Dofile call qf#do#DoList(0, <q-args>)$/;"	c
Doline	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=1 Doline call qf#do#DoList(1, <q-args>)$/;"	c
DoneParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^:DoneParseArgs$/;"	l
DoneParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:DoneParseArgs$/;"	l
ERROR	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.bat	/^:ERROR$/;"	l
Echo	pack/plugins/start/w0rp-ale/autoload/ale/debugging.vim	/^function! s:Echo(message) abort$/;"	f
EchoCommand	pack/plugins/start/w0rp-ale/autoload/ale/debugging.vim	/^function! s:EchoCommand(item) abort$/;"	f
EchoCommandHistory	pack/plugins/start/w0rp-ale/autoload/ale/debugging.vim	/^function! s:EchoCommandHistory() abort$/;"	f
EchoError	pack/plugins/start/olical-vim-enmasse/autoload/enmasse.vim	/^function! s:EchoError(message)$/;"	f
EchoExecutable	pack/plugins/start/w0rp-ale/autoload/ale/debugging.vim	/^function! s:EchoExecutable(item) abort$/;"	f
EchoGlobalVariables	pack/plugins/start/w0rp-ale/autoload/ale/debugging.vim	/^function! s:EchoGlobalVariables() abort$/;"	f
EchoImpl	pack/plugins/start/w0rp-ale/autoload/ale/cursor.vim	/^function! s:EchoImpl() abort$/;"	f
EchoLinterAliases	pack/plugins/start/w0rp-ale/autoload/ale/debugging.vim	/^function! s:EchoLinterAliases(all_linters) abort$/;"	f
EchoLinterVariables	pack/plugins/start/w0rp-ale/autoload/ale/debugging.vim	/^function! s:EchoLinterVariables(variable_list) abort$/;"	f
EchoTruncated	pack/plugins/start/olical-vim-enmasse/autoload/enmasse.vim	/^function! s:EchoTruncated(msg)$/;"	f
EchoWithShortMess	pack/plugins/start/w0rp-ale/autoload/ale/cursor.vim	/^function! s:EchoWithShortMess(setting, message) abort$/;"	f
Edit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Edit(cmd,bang,...) abort$/;"	f
EditComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditRunComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
En Masse [![Build Status][travis-image]][travis]	pack/plugins/start/olical-vim-enmasse/README.md	/^# En Masse [![Build Status][travis-image]][travis]$/;"	h
EnMasse	pack/plugins/start/olical-vim-enmasse/plugin/enmasse.vim	/^command! EnMasse :call enmasse#Open()$/;"	c
EnMasseDefault	pack/plugins/start/olical-vim-enmasse/plugin/enmasse.vim	/^augroup EnMasseDefault$/;"	a
EnMasseVersion	pack/plugins/start/olical-vim-enmasse/plugin/enmasse.vim	/^command! EnMasseVersion :echo enmasse#GetVersion()$/;"	c
EnablePreamble	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! s:EnablePreamble() abort$/;"	f
Enabling Apprentice.	pack/colors/start/romainl-apprentice/README.md	/^## Enabling Apprentice.$/;"	i
Enabling Disciple.	pack/colors/start/romainl-disciple/README.md	/^## Enabling Disciple.$/;"	i
Error	pack/plugins/start/fatih-vim-go/autoload/go/import.vim	/^function! s:Error(s) abort$/;"	f
Event.New	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/event.vim	/^function! s:Event.New(nerdtree, subject, action, params) abort$/;"	f
Example	pack/plugins/start/xtal8-traces-vim/README.md	/^## Example$/;"	i
Exception	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^function Exception()$/;"	f
ExecMove	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:ExecMove(cmd) abort$/;"	f
ExecuteInTree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
ExecuteMacroOverVisualRange	vimrc	/^        function! ExecuteMacroOverVisualRange()$/;"	f
Expression surroundings and regular expression matching	pack/plugins/start/machakann-vim-sandwich/README.md	/^### Expression surroundings and regular expression matching$/;"	k
ExtraErrorMsg	pack/plugins/start/w0rp-ale/ale_linters/javascript/flow.vim	/^function! s:ExtraErrorMsg(current, new) abort$/;"	f
FILE_LIST_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD_IS_ABSOLUTE=1$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD_IS_ABSOLUTE=0$/;"	v
Features	pack/plugins/start/fatih-vim-go/README.md	/^## Features$/;"	i
Features	pack/plugins/start/machakann-vim-sandwich/README.md	/^# Features$/;"	h
Features	pack/plugins/start/romainl-vim-qf/README.md	/^## Features$/;"	i
Fetch that line and column, boy!	pack/plugins/start/kopischke-vim-fetch/README.md	/^## Fetch that line and column, boy!$/;"	i
FileByOffset	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:FileByOffset(num)$/;"	f
FileRead	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:FileRead() abort$/;"	f
Filter	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=1 -bang Filter call qf#filter#FilterList(<q-args>, expand("<bang>") == "!" ? 1 : 0)$/;"	c
FilterInvalid	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^  function! FilterInvalid() abort$/;"	f
FilterInvalid	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^  function! FilterInvalid() abort$/;"	f
FilterInvalid	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^  function! FilterInvalid() abort$/;"	f
FilterInvalid	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^  function! FilterInvalid() abort$/;"	f
FilterInvalid	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^  function! FilterInvalid() abort$/;"	f
Find	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -complete=file -nargs=+ Find   exe s:Grep(<q-bang>, <q-args>, 'find')$/;"	c
FindConfig	pack/plugins/start/w0rp-ale/ale_linters/pug/puglint.vim	/^function! s:FindConfig(buffer) abort$/;"	f
FindConnection	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! s:FindConnection(key, value) abort$/;"	f
FindDUBConfig	pack/plugins/start/w0rp-ale/ale_linters/d/dmd.vim	/^function! s:FindDUBConfig(buffer) abort$/;"	f
FindHistoryItem	pack/plugins/start/w0rp-ale/autoload/ale/history.vim	/^function! s:FindHistoryItem(buffer, job_id) abort$/;"	f
FindItemAtCursor	pack/plugins/start/w0rp-ale/autoload/ale/cursor.vim	/^function! s:FindItemAtCursor() abort$/;"	f
FindProjectWithInitRequestID	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! s:FindProjectWithInitRequestID(conn, init_request_id) abort$/;"	f
FindSpan	pack/plugins/start/w0rp-ale/autoload/ale/handlers/rust.vim	/^function! s:FindSpan(buffer, span) abort$/;"	f
FinishCommit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:FinishCommit() abort$/;"	f
FixList	pack/plugins/start/w0rp-ale/autoload/ale/list.vim	/^function! s:FixList(buffer, list) abort$/;"	f
FlagSet.New	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.New()$/;"	f
FlagSet._flagsForScope	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet._flagsForScope(scope)$/;"	f
FlagSet.addFlag	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.addFlag(scope, flag)$/;"	f
FlagSet.clearFlags	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.clearFlags(scope)$/;"	f
FlagSet.removeFlag	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.removeFlag(scope, flag)$/;"	f
FlagSet.renderToString	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.renderToString()$/;"	f
Foo	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/imports/goimports.go	/^func Foo(log *logging.TestLogger) {$/;"	f
Foo	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/imports/goimports_golden.go	/^func Foo(log *logging.TestLogger) {$/;"	f
Foo	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports.go	/^func Foo(log *logging.TestLogger) {$/;"	f
Foo	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports_golden.go	/^func Foo(log *logging.TestLogger) {$/;"	f
FormatEntry	pack/plugins/start/w0rp-ale/autoload/ale/fix/registry.vim	/^function! s:FormatEntry(key, entry) abort$/;"	f
FriendlyName	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^function FriendlyName(test_name)$/;"	f
GF	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GFInit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:GFInit(...) abort$/;"	f
GVim/MacVim	pack/colors/start/romainl-apprentice/README.md	/^### GVim\/MacVim$/;"	k
GVim/MacVim	pack/colors/start/romainl-disciple/README.md	/^### GVim\/MacVim$/;"	k
GatherOutput	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:GatherOutput(job_id, line) abort$/;"	f
GatherOutput	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! s:GatherOutput(job_id, line) abort$/;"	f
GetAliasedFiletype	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! s:GetAliasedFiletype(original_filetype) abort$/;"	f
GetBuildDirectory	pack/plugins/start/w0rp-ale/ale_linters/c/clangtidy.vim	/^function! s:GetBuildDirectory(buffer) abort$/;"	f
GetBuildDirectory	pack/plugins/start/w0rp-ale/ale_linters/cpp/clangtidy.vim	/^function! s:GetBuildDirectory(buffer) abort$/;"	f
GetCachedExtensionMap	pack/plugins/start/w0rp-ale/autoload/ale/filetypes.vim	/^function! s:GetCachedExtensionMap() abort$/;"	f
GetCallbacks	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! s:GetCallbacks() abort$/;"	f
GetConflictingPluginWarning	pack/plugins/start/w0rp-ale/after/plugin/ale.vim	/^function! s:GetConflictingPluginWarning(plugin_name) abort$/;"	f
GetCounts	pack/plugins/start/w0rp-ale/autoload/ale/statusline.vim	/^function! s:GetCounts(buffer) abort$/;"	f
GetDetails	pack/plugins/start/w0rp-ale/ale_linters/javascript/flow.vim	/^function! s:GetDetails(error) abort$/;"	f
GetDir	pack/plugins/start/w0rp-ale/ale_linters/python/mypy.vim	/^function! s:GetDir(buffer) abort$/;"	f
GetEscapedExecutable	pack/plugins/start/w0rp-ale/ale_linters/erlang/syntaxerl.vim	/^function! s:GetEscapedExecutable(buffer) abort$/;"	f
GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/handlers/sml.vim	/^function! s:GetExecutable(buffer, source) abort$/;"	f
GetFiletypeValue	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! s:GetFiletypeValue(map, filetype) abort$/;"	f
GetGoHTMLTmplIndent	pack/plugins/start/fatih-vim-go/indent/gohtmltmpl.vim	/^function! GetGoHTMLTmplIndent(lnum)$/;"	f
GetJSONLines	pack/plugins/start/w0rp-ale/ale_linters/javascript/flow.vim	/^function! s:GetJSONLines(lines) abort$/;"	f
GetLSPCompletions	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! s:GetLSPCompletions(linter) abort$/;"	f
GetLineFromFile	pack/plugins/start/olical-vim-enmasse/autoload/enmasse.vim	/^function! s:GetLineFromFile(file, line)$/;"	f
GetLinterNames	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! s:GetLinterNames(original_filetype) abort$/;"	f
GetLinterVariables	pack/plugins/start/w0rp-ale/autoload/ale/debugging.vim	/^function! s:GetLinterVariables(filetype, linter_names) abort$/;"	f
GetMatchingLineFromQuickfix	pack/plugins/start/olical-vim-enmasse/autoload/enmasse.vim	/^function! s:GetMatchingLineFromQuickfix(target, list)$/;"	f
GetQuickfixItemForCurrentLine	pack/plugins/start/olical-vim-enmasse/autoload/enmasse.vim	/^function! s:GetQuickfixItemForCurrentLine()$/;"	f
GetQuickfixList	pack/plugins/start/olical-vim-enmasse/autoload/enmasse.vim	/^function! s:GetQuickfixList()$/;"	f
GetSourceLinesFromList	pack/plugins/start/olical-vim-enmasse/autoload/enmasse.vim	/^function! s:GetSourceLinesFromList(list)$/;"	f
Git	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Git(bang, args) abort$/;"	f
GitComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:GitComplete(A, L, P) abort$/;"	f
GitGutter	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutter    call gitgutter#process_buffer(bufnr(''), 0)$/;"	c
GitGutterAll	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterAll call gitgutter#all()$/;"	c
GitGutterDebug	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterDebug call gitgutter#debug#debug()$/;"	c
GitGutterDisable	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterDisable call gitgutter#disable()$/;"	c
GitGutterEnable	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterEnable  call gitgutter#enable()$/;"	c
GitGutterGetHunkSummary	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunkSummary()$/;"	f
GitGutterGetHunks	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunks()$/;"	f
GitGutterLineHighlightsDisable	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterLineHighlightsDisable call gitgutter#line_highlights_disable()$/;"	c
GitGutterLineHighlightsEnable	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterLineHighlightsEnable  call gitgutter#line_highlights_enable()$/;"	c
GitGutterLineHighlightsToggle	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterLineHighlightsToggle  call gitgutter#line_highlights_toggle()$/;"	c
GitGutterNextHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar -count=1 GitGutterNextHunk call gitgutter#hunk#next_hunk(<count>)$/;"	c
GitGutterPrevHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar -count=1 GitGutterPrevHunk call gitgutter#hunk#prev_hunk(<count>)$/;"	c
GitGutterPreviewHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterPreviewHunk call gitgutter#preview_hunk()$/;"	c
GitGutterRevertHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterRevertHunk  echomsg 'GitGutterRevertHunk is deprecated. Use GitGutterUndoHunk'<Bar>call gitgutter#undo_hunk()$/;"	c
GitGutterSignsDisable	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterSignsDisable call gitgutter#signs_disable()$/;"	c
GitGutterSignsEnable	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterSignsEnable  call gitgutter#signs_enable()$/;"	c
GitGutterSignsToggle	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterSignsToggle  call gitgutter#signs_toggle()$/;"	c
GitGutterStageHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterStageHunk   call gitgutter#stage_hunk()$/;"	c
GitGutterToggle	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterToggle  call gitgutter#toggle()$/;"	c
GitGutterUndoHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterUndoHunk    call gitgutter#undo_hunk()$/;"	c
Global features (available from any window)	pack/plugins/start/romainl-vim-qf/README.md	/^### Global features (available from any window)$/;"	k
GoAddTags	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range GoAddTags call go#tags#Add(<line1>, <line2>, <count>, <f-args>)$/;"	c
GoAlternate	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -bang GoAlternate call go#alternate#Switch(<bang>0, '')$/;"	c
GoAsmFmtAutoSaveToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoAsmFmtAutoSaveToggle call go#asmfmt#ToggleAsmFmtAutoSave()$/;"	c
GoAutoTypeInfoToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoAutoTypeInfoToggle call go#complete#ToggleAutoTypeInfo()$/;"	c
GoBuild	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoBuild call go#cmd#Build(<bang>0,<f-args>)$/;"	c
GoBuildTags	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -bang GoBuildTags call go#cmd#BuildTags(<bang>0, <f-args>)$/;"	c
GoCallees	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallees call go#guru#Callees(<count>)$/;"	c
GoCallers	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallers call go#guru#Callers(<count>)$/;"	c
GoCallstack	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallstack call go#guru#Callstack(<count>)$/;"	c
GoChannelPeers	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoChannelPeers call go#guru#ChannelPeers(<count>)$/;"	c
GoCoverage	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverage call go#coverage#Buffer(<bang>0, <f-args>)$/;"	c
GoCoverageBrowser	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverageBrowser call go#coverage#Browser(<bang>0, <f-args>)$/;"	c
GoCoverageClear	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverageClear call go#coverage#Clear()$/;"	c
GoCoverageToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverageToggle call go#coverage#BufferToggle(<bang>0, <f-args>)$/;"	c
GoDecls	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -complete=file GoDecls call go#decls#Decls(0, <q-args>)$/;"	c
GoDeclsDir	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -complete=dir GoDeclsDir call go#decls#Decls(1, <q-args>)$/;"	c
GoDef	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range GoDef :call go#def#Jump('')$/;"	c
GoDefPop	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoDefPop :call go#def#StackPop(<f-args>)$/;"	c
GoDefStack	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoDefStack :call go#def#Stack(<f-args>)$/;"	c
GoDefStackClear	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoDefStackClear :call go#def#StackClear(<f-args>)$/;"	c
GoDeps	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoDeps echo go#tool#Deps()$/;"	c
GoDescribe	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoDescribe call go#guru#Describe(<count>)$/;"	c
GoDoc	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range -complete=customlist,go#package#Complete GoDoc call go#doc#Open('new', 'split', <f-args>)$/;"	c
GoDocBrowser	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range -complete=customlist,go#package#Complete GoDocBrowser call go#doc#OpenBrowser(<f-args>)$/;"	c
GoDrop	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -complete=customlist,go#package#Complete GoDrop call go#import#SwitchImport(0, '', <f-args>, '')$/;"	c
GoErrCheck	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -complete=customlist,go#package#Complete GoErrCheck call go#lint#Errcheck(<f-args>)$/;"	c
GoFiles	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -complete=customlist,go#tool#ValidFiles GoFiles echo go#tool#Files(<f-args>)$/;"	c
GoFillStruct	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFillStruct call go#fillstruct#FillStruct()$/;"	c
GoFmt	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFmt call go#fmt#Format(-1)$/;"	c
GoFmtAutoSaveToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFmtAutoSaveToggle call go#fmt#ToggleFmtAutoSave()$/;"	c
GoFreevars	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoFreevars call go#guru#Freevars(<count>)$/;"	c
GoGenerate	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoGenerate call go#cmd#Generate(<bang>0,<f-args>)$/;"	c
GoGuruScope	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -complete=customlist,go#package#Complete GoGuruScope call go#guru#Scope(<f-args>)$/;"	c
GoImpl	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -complete=customlist,go#impl#Complete GoImpl call go#impl#Impl(<f-args>)$/;"	c
GoImplements	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoImplements call go#guru#Implements(<count>)$/;"	c
GoImport	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=1 -bang -complete=customlist,go#package#Complete GoImport call go#import#SwitchImport(1, '', <f-args>, '<bang>')$/;"	c
GoImportAs	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang -complete=customlist,go#package#Complete GoImportAs call go#import#SwitchImport(1, <f-args>, '<bang>')$/;"	c
GoImports	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoImports call go#fmt#Format(1)$/;"	c
GoIndent	pack/plugins/start/fatih-vim-go/indent/go.vim	/^function! GoIndent(lnum)$/;"	f
GoInfo	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoInfo call go#tool#Info(0)$/;"	c
GoInstall	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoInstall call go#cmd#Install(<bang>0, <f-args>)$/;"	c
GoInstallBinaries	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^command! -nargs=* -complete=customlist,s:complete GoInstallBinaries call s:GoInstallBinaries(-1, <f-args>)$/;"	c
GoInstallBinaries	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:GoInstallBinaries(updateBinaries, ...)$/;"	f
GoKeyify	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoKeyify call go#keyify#Keyify()$/;"	c
GoLint	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoLint call go#lint#Golint(<f-args>)$/;"	c
GoMetaLinter	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoMetaLinter call go#lint#Gometa(0, <f-args>)$/;"	c
GoMetaLinterAutoSaveToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoMetaLinterAutoSaveToggle call go#lint#ToggleMetaLinterAutoSave()$/;"	c
GoNeosnippet	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^function! s:GoNeosnippet()$/;"	f
GoPath	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^command! -nargs=? -complete=dir GoPath call go#path#GoPath(<f-args>)$/;"	c
GoPlay	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 -range=% GoPlay call go#play#Share(<count>, <line1>, <line2>)$/;"	c
GoReferrers	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoReferrers call go#guru#Referrers(<count>)$/;"	c
GoRemoveTags	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range GoRemoveTags call go#tags#Remove(<line1>, <line2>, <count>, <f-args>)$/;"	c
GoRename	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -complete=customlist,go#rename#Complete GoRename call go#rename#Rename(<bang>0, <f-args>)$/;"	c
GoRun	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang -complete=file GoRun call go#cmd#Run(<bang>0,<f-args>)$/;"	c
GoSameIds	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIds call go#guru#SameIds()$/;"	c
GoSameIdsAutoToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIdsAutoToggle call go#guru#AutoToogleSameIds()$/;"	c
GoSameIdsClear	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIdsClear call go#guru#ClearSameIds()$/;"	c
GoSameIdsToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIdsToggle call go#guru#ToggleSameIds()$/;"	c
GoTemplateAutoCreateToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoTemplateAutoCreateToggle call go#template#ToggleAutoCreate()$/;"	c
GoTest	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTest call go#test#Test(<bang>0, 0, <f-args>)$/;"	c
GoTestCompile	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTestCompile call go#test#Test(<bang>0, 1, <f-args>)$/;"	c
GoTestFunc	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTestFunc call go#test#Func(<bang>0, <f-args>)$/;"	c
GoToLSPDefinition	pack/plugins/start/w0rp-ale/autoload/ale/definition.vim	/^function! s:GoToLSPDefinition(linter, options) abort$/;"	f
GoUltiSnips	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^function! s:GoUltiSnips()$/;"	f
GoUpdateBinaries	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^command! -nargs=* -complete=customlist,s:complete GoUpdateBinaries  call s:GoInstallBinaries(1, <f-args>)$/;"	c
GoVet	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoVet call go#lint#Vet(<bang>0, <f-args>)$/;"	c
GoWhicherrs	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoWhicherrs call go#guru#Whicherrs(<count>)$/;"	c
GodocView	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! s:GodocView(newposition, position, content) abort$/;"	f
Grep	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:Grep(bang,args,prg) abort$/;"	f
Grep	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Grep(cmd,bang,arg) abort$/;"	f
GroupLoclistItems	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^function! s:GroupLoclistItems(buffer, loclist) abort$/;"	f
Gutentags	pack/plugins/start/ludovicchabant-vim-gutentags/README.md	/^# Gutentags$/;"	h
GutentagsToggleEnabled	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleEnabled :let g:gutentags_enabled=!g:gutentags_enabled$/;"	c
GutentagsToggleFake	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleFake    :call gutentags#fake()$/;"	c
GutentagsToggleTrace	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleTrace   :call gutentags#toggletrace()$/;"	c
GutentagsUnlock	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^command! GutentagsUnlock :call gutentags#delete_lock_files()$/;"	c
HandleChannelMessage	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! s:HandleChannelMessage(channel, message) abort$/;"	f
HandleCommandMessage	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! s:HandleCommandMessage(job_id, message) abort$/;"	f
HandleExit	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:HandleExit(job_id, exit_code) abort$/;"	f
HandleExit	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! s:HandleExit(job_id, exit_code) abort$/;"	f
HandleInitializeResponse	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! s:HandleInitializeResponse(conn, response) abort$/;"	f
HandleLSPDiagnostics	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:HandleLSPDiagnostics(conn_id, response) abort$/;"	f
HandleLSPErrorMessage	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:HandleLSPErrorMessage(error_message) abort$/;"	f
HandleLoclist	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:HandleLoclist(linter_name, buffer, loclist) abort$/;"	f
HandleSyntaxError	pack/plugins/start/w0rp-ale/autoload/ale/handlers/ruby.vim	/^function! s:HandleSyntaxError(buffer, lines) abort$/;"	f
HandleTSServerDiagnostics	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:HandleTSServerDiagnostics(response, error_type) abort$/;"	f
HandleUnixFormat	pack/plugins/start/w0rp-ale/autoload/ale/handlers/unix.vim	/^function! s:HandleUnixFormat(buffer, lines, type) abort$/;"	f
Highlight on the fly.	pack/plugins/start/t9md-vim-quickhl/README.md	/^# Highlight on the fly.$/;"	h
How to install?	pack/plugins/start/xtal8-traces-vim/README.md	/^## How to install?$/;"	i
How?	pack/plugins/start/ludovicchabant-vim-gutentags/README.md	/^## How?$/;"	i
INDEX_WHOLE_PROJECT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        set INDEX_WHOLE_PROJECT=0$/;"	v
INDEX_WHOLE_PROJECT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set INDEX_WHOLE_PROJECT=1$/;"	v
Ilist	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^command! -nargs=1 -bar -bang Ilist call <sid>Qlist("i", 1, 0, '<bang>' == '!', <f-args>)$/;"	c
Indent	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:Indent(pos, opt) abort "{{{$/;"	f
Indent.diff	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:Indent.diff(addition) abort "{{{$/;"	f
Inspiration	pack/plugins/start/xtal8-traces-vim/README.md	/^## Inspiration$/;"	i
Install	pack/plugins/start/fatih-vim-go/README.md	/^## Install$/;"	i
Installation	pack/plugins/start/hauleth-asyncdo-vim/README.md	/^## Installation$/;"	i
Installation	pack/plugins/start/kopischke-vim-fetch/README.md	/^### Installation$/;"	k
Installation	pack/plugins/start/olical-vim-enmasse/README.md	/^## Installation$/;"	i
Installation	pack/plugins/start/romainl-vim-qf/README.md	/^## Installation$/;"	i
Installation	pack/plugins/start/romainl-vim-qlist/README.md	/^## Installation$/;"	i
Installation	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^## Installation$/;"	i
Installing Apprentice.	pack/colors/start/romainl-apprentice/README.md	/^## Installing Apprentice.$/;"	i
Installing Disciple.	pack/colors/start/romainl-disciple/README.md	/^## Installing Disciple.$/;"	i
InvokeChain	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:InvokeChain(buffer, linter, chain_index, input) abort$/;"	f
IsBoolean	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! s:IsBoolean(value) abort$/;"	f
IsCallback	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! s:IsCallback(value) abort$/;"	f
IsHeaderFile	pack/plugins/start/w0rp-ale/autoload/ale/handlers/gcc.vim	/^function! s:IsHeaderFile(filename) abort$/;"	f
JumpFileChunk	pack/plugins/start/romainl-vim-qf/autoload/qf/filegroup.vim	/^function! s:JumpFileChunk(down) abort$/;"	f
JumpInit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:JumpInit(...) abort$/;"	f
JumpToFirstItemOfFileChunk	pack/plugins/start/romainl-vim-qf/autoload/qf/filegroup.vim	/^function! s:JumpToFirstItemOfFileChunk() abort$/;"	f
K	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> K :GoDoc<cr>$/;"	m
Keep	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=? Keep call qf#filter#FilterList(<q-args>, 0)$/;"	c
KeyMap.Add	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Create	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
KillHandler	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! s:KillHandler(timer) abort$/;"	f
LAsyncDo	pack/plugins/start/hauleth-asyncdo-vim/plugin/asyncdo.vim	/^command! -bang -nargs=+ LAsyncDo   call asyncdo#lrun(<bang>0, <f-args>)$/;"	c
LAsyncStop	pack/plugins/start/hauleth-asyncdo-vim/plugin/asyncdo.vim	/^command!       -nargs=0 LAsyncStop call asyncdo#lstop()$/;"	c
LOG_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^set LOG_FILE=$/;"	v
LOG_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set LOG_FILE=$/;"	v
License	pack/plugins/start/fatih-vim-go/README.md	/^## License$/;"	i
License	pack/plugins/start/kopischke-vim-fetch/README.md	/^### License$/;"	k
Lightline and Airline themes	pack/colors/start/romainl-apprentice/README.md	/^## Lightline and Airline themes$/;"	i
Linewise and blockwise operations	pack/plugins/start/machakann-vim-sandwich/README.md	/^### Linewise and blockwise operations$/;"	k
LintOnEnter	pack/plugins/start/w0rp-ale/autoload/ale/events.vim	/^function! s:LintOnEnter(buffer) abort$/;"	f
ListCount	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^function! ListCount(...) abort$/;"	f
ListLists	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer ListLists call qf#namedlist#ListLists()$/;"	c
LoadArgCount	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! s:LoadArgCount(function) abort$/;"	f
LoadList	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=+ -complete=customlist,qf#namedlist#CompleteList LoadList    call qf#namedlist#LoadList(0, <q-args>)$/;"	c
LoadListAdd	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=+ -complete=customlist,qf#namedlist#CompleteList LoadListAdd call qf#namedlist#LoadList(1, <q-args>)$/;"	c
Local features (available only in location/quickfix windows)	pack/plugins/start/romainl-vim-qf/README.md	/^### Local features (available only in location\/quickfix windows)$/;"	k
Locate	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -complete=file -nargs=+ Locate exe s:Grep(<q-bang>, <q-args>, 'locate')$/;"	c
Log	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^function Log(msg)$/;"	f
Log	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Log(cmd, line1, line2, ...) abort$/;"	f
LoopParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^:LoopParseArgs$/;"	l
LoopParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:LoopParseArgs$/;"	l
MapNextFamily	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:MapNextFamily(map,cmd) abort$/;"	f
MarkProjectAsInitialized	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! s:MarkProjectAsInitialized(conn, project) abort$/;"	f
MenuController.New	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.showMenu	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
Merge	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Merge(cmd, bang, args) abort$/;"	f
MergeChangesUnderPaths	pack/plugins/start/olical-vim-enmasse/autoload/enmasse.vim	/^function! s:MergeChangesUnderPaths(list, sourceLines)$/;"	f
Minisnip	pack/plugins/start/keyboardfire-vim-minisnip/plugin/vim-minisnip.vim	/^function! <SID>Minisnip()$/;"	f
Mkdir	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -nargs=? -complete=dir Mkdir$/;"	c
Motivation	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^## Motivation$/;"	i
Move	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=1 -bang -complete=file Move :$/;"	c
Move	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Move(force,destination) abort$/;"	f
Move	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:Move(cmd, count, map) abort$/;"	f
MoveComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:MoveComplete(A,L,P) abort$/;"	f
MoveSelectionDown	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:MoveSelectionDown(count) abort$/;"	f
MoveSelectionUp	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:MoveSelectionUp(count) abort$/;"	f
NERDTree	pack/plugins/start/scrooloose-nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree.AddPathFilter	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.AddPathFilter(callback)$/;"	f
NERDTree.Close	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.Close()$/;"	f
NERDTree.CloseIfQuitOnOpen	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CloseIfQuitOnOpen()$/;"	f
NERDTree.CursorToBookmarkTable	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToBookmarkTable()$/;"	f
NERDTree.CursorToTreeWin	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToTreeWin()$/;"	f
NERDTree.ExistsForBuf	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForBuf()$/;"	f
NERDTree.ExistsForTab	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForTab()$/;"	f
NERDTree.ForCurrentBuf	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentBuf()$/;"	f
NERDTree.ForCurrentTab	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentTab()$/;"	f
NERDTree.GetWinNum	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.GetWinNum()$/;"	f
NERDTree.IsOpen	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.IsOpen()$/;"	f
NERDTree.MustBeOpen	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.MustBeOpen()$/;"	f
NERDTree.New	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.New(path, type)$/;"	f
NERDTree.PathFilters	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.PathFilters()$/;"	f
NERDTree.changeRoot	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.changeRoot(node)$/;"	f
NERDTree.getRoot	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.getRoot()$/;"	f
NERDTree.isTabTree	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isTabTree()$/;"	f
NERDTree.isWinTree	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isWinTree()$/;"	f
NERDTree.previousBuf	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.previousBuf()$/;"	f
NERDTree.render	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.render()$/;"	f
NERDTree.setPreviousBuf	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.setPreviousBuf(bnum)$/;"	f
NERDTreeAddKeyMap	pack/plugins/start/scrooloose-nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	pack/plugins/start/scrooloose-nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	pack/plugins/start/scrooloose-nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	pack/plugins/start/scrooloose-nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddPathFilter	pack/plugins/start/scrooloose-nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddPathFilter(callback)$/;"	f
NERDTreeAddSubmenu	pack/plugins/start/scrooloose-nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	pack/plugins/start/scrooloose-nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeCopyNode	pack/plugins/start/scrooloose-nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	pack/plugins/start/scrooloose-nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	pack/plugins/start/scrooloose-nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	pack/plugins/start/scrooloose-nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	pack/plugins/start/scrooloose-nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeFocus	pack/plugins/start/scrooloose-nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeHijackNetrw	pack/plugins/start/scrooloose-nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeListNode	pack/plugins/start/scrooloose-nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNode()$/;"	f
NERDTreeListNodeWin32	pack/plugins/start/scrooloose-nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNodeWin32()$/;"	f
NERDTreeMoveNode	pack/plugins/start/scrooloose-nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	pack/plugins/start/scrooloose-nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	pack/plugins/start/scrooloose-nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealInFinder	pack/plugins/start/scrooloose-nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NeoVimCallback	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! s:NeoVimCallback(job, data, event) abort$/;"	f
Neovim terminal theme	pack/colors/start/romainl-apprentice/README.md	/^## Neovim terminal theme$/;"	i
NewConnection	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! s:NewConnection() abort$/;"	f
NofrilsAcme	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsAcme :colo nofrils-acme$/;"	c
NofrilsAcme	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsAcme :colo nofrils-acme$/;"	c
NofrilsAcme	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsAcme :colo nofrils-acme$/;"	c
NofrilsAcme	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsAcme :colo nofrils-acme$/;"	c
NofrilsDark	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsDark :colo nofrils-dark$/;"	c
NofrilsDark	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsDark :colo nofrils-dark$/;"	c
NofrilsDark	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsDark :colo nofrils-dark$/;"	c
NofrilsDark	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsDark :colo nofrils-dark$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsFocusCode :call NofrilsFocusCode()$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^function! NofrilsFocusCode()$/;"	f
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsFocusCode :call NofrilsFocusCode()$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^function! NofrilsFocusCode()$/;"	f
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsFocusCode :call NofrilsFocusCode()$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^function! NofrilsFocusCode()$/;"	f
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsFocusCode :call NofrilsFocusCode()$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^function! NofrilsFocusCode()$/;"	f
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsFocusComments :call NofrilsFocusComments()$/;"	c
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^function! NofrilsFocusComments()$/;"	f
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsFocusComments :call NofrilsFocusComments()$/;"	c
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^function! NofrilsFocusComments()$/;"	f
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsFocusComments :call NofrilsFocusComments()$/;"	c
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^function! NofrilsFocusComments()$/;"	f
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsFocusComments :call NofrilsFocusComments()$/;"	c
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^function! NofrilsFocusComments()$/;"	f
NofrilsFocusNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsFocusNormal :call NofrilsNormal()$/;"	c
NofrilsFocusNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsFocusNormal :call NofrilsNormal()$/;"	c
NofrilsFocusNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsFocusNormal :call NofrilsNormal()$/;"	c
NofrilsFocusNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsFocusNormal :call NofrilsNormal()$/;"	c
NofrilsLight	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsLight :colo nofrils-light$/;"	c
NofrilsLight	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsLight :colo nofrils-light$/;"	c
NofrilsLight	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsLight :colo nofrils-light$/;"	c
NofrilsLight	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsLight :colo nofrils-light$/;"	c
NofrilsNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^function! NofrilsNormal()$/;"	f
NofrilsNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^function! NofrilsNormal()$/;"	f
NofrilsNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^function! NofrilsNormal()$/;"	f
NofrilsNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^function! NofrilsNormal()$/;"	f
NofrilsSepia	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsSepia :colo nofrils-sepia$/;"	c
NofrilsSepia	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsSepia :colo nofrils-sepia$/;"	c
NofrilsSepia	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsSepia :colo nofrils-sepia$/;"	c
NofrilsSepia	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsSepia :colo nofrils-sepia$/;"	c
Notifier.AddListener	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.AddListener(event, funcname)$/;"	f
Notifier.GetListenersForEvent	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersForEvent(name)$/;"	f
Notifier.GetListenersMap	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersMap()$/;"	f
Notifier.NotifyListeners	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.NotifyListeners(event, path, nerdtree, params)$/;"	f
O	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^        nnoremap <silent> <buffer> O <CR>:cclose<CR>$/;"	m
O	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^        nnoremap <silent> <buffer> O <CR>:lclose<CR>$/;"	m
OpenLineInPreviewWindow	pack/plugins/start/olical-vim-enmasse/autoload/enmasse.vim	/^function! s:OpenLineInPreviewWindow()$/;"	f
Opener.New	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._bufInWindows	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._bufInWindows(bnum)$/;"	f
Opener._checkToCloseTree	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._firstUsableWindow	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._firstUsableWindow()$/;"	f
Opener._gotoTargetWin	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._isWindowUsable	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._isWindowUsable(winnumber)$/;"	f
Opener._newSplit	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
Overview	pack/plugins/start/xtal8-traces-vim/README.md	/^## Overview$/;"	i
PAUSE_BEFORE_EXIT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set PAUSE_BEFORE_EXIT=1$/;"	v
PAUSE_BEFORE_EXIT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set PAUSE_BEFORE_EXIT=0$/;"	v
POST_PROCESS_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set POST_PROCESS_CMD=%~2$/;"	v
POST_PROCESS_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set POST_PROCESS_CMD=$/;"	v
PROJECT_ROOT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set PROJECT_ROOT=%~2$/;"	v
PROJECT_ROOT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set PROJECT_ROOT=$/;"	v
PROJ_ROOT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set PROJ_ROOT=%~2$/;"	v
ParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^:ParseArgs$/;"	l
ParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:ParseArgs$/;"	l
PasteForStatusline	vimrc	/^        function! PasteForStatusline()$/;"	f
Path.AbsolutePathFor	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	f
Path.CopyingSupported	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(path)$/;"	f
Path.Resolve	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.Slash	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Slash()$/;"	f
Path.WinToUnixPath	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._escChars	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path._escChars()$/;"	f
Path._ignorePatternMatches	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._splitChunks	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path._splitChunks(path)$/;"	f
Path._str	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
Path.bookmarkNames	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString() abort$/;"	f
Path.changeToDir	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
Path.compareTo	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.copy	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.createParentDirectories	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.createParentDirectories(path)$/;"	f
Path.delete	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
Path.equals	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortKey	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortKey()$/;"	f
Path.getSortOrderIndex	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore(nerdtree)$/;"	f
Path.isAncestor	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isAncestor(path)$/;"	f
Path.isUnder	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(path)$/;"	f
Path.isUnixHiddenFile	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
Path.isUnixHiddenPath	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
Path.readInfoFromDisk	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh(nerdtree)$/;"	f
Path.refreshFlags	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refreshFlags(nerdtree)$/;"	f
Path.rename	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
Pioneers	pack/plugins/start/machakann-vim-sandwich/README.md	/^# Pioneers$/;"	h
Preparing your environment.	pack/colors/start/romainl-apprentice/README.md	/^## Preparing your environment.$/;"	i
Preparing your environment.	pack/colors/start/romainl-disciple/README.md	/^## Preparing your environment.$/;"	i
Pushing	pack/plugins/start/ludovicchabant-vim-gutentags/CONTRIBUTING.md	/^## Pushing$/;"	i
Qlist	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^function! s:Qlist(command, selection, start_at_cursor, force, ...)$/;"	f
Quick start	pack/plugins/start/machakann-vim-sandwich/README.md	/^# Quick start$/;"	h
QuickhlCwordDisable	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlCwordDisable :call quickhl#cword#disable()$/;"	c
QuickhlCwordEnable	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlCwordEnable  :call quickhl#cword#enable()$/;"	c
QuickhlCwordToggle	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlCwordToggle  :call quickhl#cword#toggle()$/;"	c
QuickhlManualAdd	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! -bang -nargs=1 QuickhlManualAdd     :call quickhl#manual#add(<q-args>,<bang>0)$/;"	c
QuickhlManualColors	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command!                QuickhlManualColors  :call quickhl#manual#colors()$/;"	c
QuickhlManualDelete	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! -bang -nargs=* QuickhlManualDelete  :call quickhl#manual#del(<q-args>,<bang>0)$/;"	c
QuickhlManualDisable	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command!                QuickhlManualDisable       :call quickhl#manual#disable()$/;"	c
QuickhlManualEnable	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command!                QuickhlManualEnable       :call quickhl#manual#enable()$/;"	c
QuickhlManualList	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command!                QuickhlManualList    :call quickhl#manual#list()$/;"	c
QuickhlManualLock	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command!                QuickhlManualLock    :call quickhl#manual#lock()$/;"	c
QuickhlManualLockToggle	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlManualLockToggle        :call quickhl#manual#lock_toggle()$/;"	c
QuickhlManualLockWindow	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlManualLockWindow        :call quickhl#manual#lock_window()$/;"	c
QuickhlManualLockWindowToggle	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlManualLockWindowToggle  :call quickhl#manual#lock_window_toggle()$/;"	c
QuickhlManualReset	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command!                QuickhlManualReset   :call quickhl#manual#reset()$/;"	c
QuickhlManualUnlock	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlManualUnlock            :call quickhl#manual#unlock()$/;"	c
QuickhlManualUnlockWindow	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlManualUnlockWindow      :call quickhl#manual#unlock_window()$/;"	c
QuickhlTagDisable	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlTagDisable  :call quickhl#tag#disable()$/;"	c
QuickhlTagEnable	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlTagEnable   :call quickhl#tag#enable()$/;"	c
QuickhlTagToggle	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlTagToggle   :call quickhl#tag#toggle()$/;"	c
Random	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^function Random(min, max)$/;"	f
Rationale	pack/plugins/start/kopischke-vim-fetch/README.md	/^### Rationale$/;"	k
Redir	vimrc	/^        command! -nargs=1 Redir silent call Redir(<f-args>)$/;"	c
Redir	vimrc	/^        function! Redir(cmd)$/;"	f
RehighlightBlame	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:RehighlightBlame() abort$/;"	f
Reject	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=? Reject call qf#filter#FilterList(<q-args>, 1)$/;"	c
RemapItemTypes	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:RemapItemTypes(type_map, loclist) abort$/;"	f
RemoteComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:RemoteComplete(A, L, P) abort$/;"	f
Remove	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang Remove$/;"	c
Remove	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Remove(after, force) abort$/;"	f
RemoveList	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=* -bang -complete=customlist,qf#namedlist#CompleteList RemoveList call qf#namedlist#RemoveList(expand("<bang>") == "!" ? 1 : 0, <q-args>)$/;"	c
RemoveProblemsForDisabledLinters	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:RemoveProblemsForDisabledLinters(buffer, linters) abort$/;"	f
RemoveUnicodeQuotes	pack/plugins/start/w0rp-ale/autoload/ale/handlers/gcc.vim	/^function! s:RemoveUnicodeQuotes(text) abort$/;"	f
Rename	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=1 -bang -complete=custom,s:Rename_complete Rename$/;"	c
Rename_complete	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:Rename_complete(A, L, P) abort$/;"	f
Replace	pack/plugins/start/machakann-vim-sandwich/README.md	/^### Replace$/;"	k
ReplaceCmd	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
ReplaceCompleteopt	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! s:ReplaceCompleteopt() abort$/;"	f
Requirements	pack/plugins/start/xtal8-traces-vim/README.md	/^## Requirements$/;"	i
ResetLists	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! s:ResetLists()$/;"	f
Restore	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -bar Restore call qf#filter#RestoreList()$/;"	c
RevisionComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:RevisionComplete(A, L, P) abort$/;"	f
Run these commands in the "Git for Windows" Bash terminal	pack/plugins/start/w0rp-ale/README.md	/^# Run these commands in the "Git for Windows" Bash terminal$/;"	h
RunFixer	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! s:RunFixer(options) abort$/;"	f
RunJob	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:RunJob(options) abort$/;"	f
RunJob	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! s:RunJob(options) abort$/;"	f
RunLinter	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:RunLinter(buffer, linter) abort$/;"	f
RunTest	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^function RunTest(test)$/;"	f
S	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^  command -nargs=1 -bang -bar -range=0 -complete=custom,s:SubComplete S$/;"	c
SID	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:SID() abort$/;"	f
SID	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function s:SID()$/;"	f
SaveList	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=? -complete=customlist,qf#namedlist#CompleteList SaveList    call qf#namedlist#SaveList(0, <q-args>)$/;"	c
SaveListAdd	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=? -complete=customlist,qf#namedlist#CompleteList SaveListAdd call qf#namedlist#SaveList(1, <q-args>)$/;"	c
SelectPlaceholder	pack/plugins/start/keyboardfire-vim-minisnip/plugin/vim-minisnip.vim	/^function! s:SelectPlaceholder()$/;"	f
SendMessageData	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! s:SendMessageData(conn, data) abort$/;"	f
SetList	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! s:SetList(pat, reject, strategy)$/;"	f
SetListsImpl	pack/plugins/start/w0rp-ale/autoload/ale/list.vim	/^function! s:SetListsImpl(timer_id, buffer, loclist) abort$/;"	f
SetSignColumnWithoutErrorsHighlight	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^    function! s:SetSignColumnWithoutErrorsHighlight() abort$/;"	f
SetTagbar	pack/plugins/start/fatih-vim-go/ftplugin/go/tagbar.vim	/^function! s:SetTagbar()$/;"	f
SetTitle	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! s:SetTitle(pat, reject)$/;"	f
SetUp	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function SetUp()$/;"	f
Settings	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^## Settings$/;"	i
Setup	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! s:Setup(enabled) abort$/;"	f
ShouldOpen	pack/plugins/start/w0rp-ale/autoload/ale/list.vim	/^function! s:ShouldOpen(buffer) abort$/;"	f
ShouldSuggestForType	pack/plugins/start/w0rp-ale/autoload/ale/fix/registry.vim	/^function! s:ShouldSuggestForType(suggested_filetypes, type_list) abort$/;"	f
ShouldTrigger	pack/plugins/start/keyboardfire-vim-minisnip/plugin/vim-minisnip.vim	/^function! <SID>ShouldTrigger()$/;"	f
ShowUsage	pack/plugins/start/ludovicchabant-vim-gutentags/plat/unix/update_scopedb.sh	/^ShowUsage() {$/;"	f
ShowUsage	pack/plugins/start/ludovicchabant-vim-gutentags/plat/unix/update_tags.sh	/^ShowUsage() {$/;"	f
Shuffle	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^function Shuffle(list)$/;"	f
SilentSudoCmd	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SilentSudoCmd(editor) abort$/;"	f
SortByBufferAndLine	pack/plugins/start/olical-vim-enmasse/autoload/enmasse.vim	/^function! s:SortByBufferAndLine(i1, i2)$/;"	f
Source	pack/plugins/start/wellle-tmux-complete-vim/rplugin/python3/deoplete/sources/tmuxcomplete.py	/^class Source(Base):$/;"	c
StageDiff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StageNext	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageNext(count) abort$/;"	f
StagePatch	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StagePrevious	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StagePrevious(count) abort$/;"	f
StageReloadSeek	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageReloadSeek(target,lnum1,lnum2) abort$/;"	f
StageToggle	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
StageUndo	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageUndo() abort$/;"	f
Status	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Status() abort$/;"	f
StatusForListFormat	pack/plugins/start/w0rp-ale/autoload/ale/statusline.vim	/^function! s:StatusForListFormat() abort$/;"	f
Stop	pack/plugins/start/hauleth-asyncdo-vim/autoload/asyncdo.vim	/^    func! Stop() abort closure$/;"	f
StopCurrentJobs	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:StopCurrentJobs(buffer, include_lint_file_jobs) abort$/;"	f
StopCursorTimer	pack/plugins/start/w0rp-ale/autoload/ale/cursor.vim	/^function! s:StopCursorTimer() abort$/;"	f
StripTrailingWhitespace	vimrc	/^        command! StripTrailingWhitespace :call StripTrailingWhitespace()$/;"	c
StripTrailingWhitespace	vimrc	/^        function! StripTrailingWhitespace()$/;"	f
SubComplete	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:SubComplete(A,L,P)$/;"	f
Subvert	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^command! -nargs=1 -bang -bar -range=0 -complete=custom,s:SubComplete Subvert$/;"	c
SudoEdit	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -complete=file -nargs=? SudoEdit$/;"	c
SudoEditInit	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SudoEditInit() abort$/;"	f
SudoError	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SudoError() abort$/;"	f
SudoReadCmd	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SudoReadCmd() abort$/;"	f
SudoSetup	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SudoSetup(file) abort$/;"	f
SudoWrite	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar SudoWrite$/;"	c
SudoWriteCmd	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SudoWriteCmd() abort$/;"	f
TAGS_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set TAGS_FILE=%~2$/;"	v
TAGS_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set TAGS_FILE=tags$/;"	v
TB	vimrc	/^                command! -range=% TB <line1>,<line2>w !nc termbin.com 9999 | tr -d '\\n' | cat$/;"	c
TODO	pack/plugins/start/romainl-vim-qf/README.md	/^## TODO$/;"	i
TODO	pack/plugins/start/romainl-vim-qlist/README.md	/^## TODO$/;"	i
Table of Contents	pack/plugins/start/w0rp-ale/README.md	/^## Table of Contents$/;"	i
TearDown	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function TearDown()$/;"	f
TemporaryFilename	pack/plugins/start/w0rp-ale/autoload/ale/command.vim	/^function! s:TemporaryFilename(buffer) abort$/;"	f
Terminal emulators	pack/colors/start/romainl-disciple/README.md	/^### Terminal emulators$/;"	k
Terminal multiplexers	pack/colors/start/romainl-disciple/README.md	/^### Terminal multiplexers$/;"	k
TestHelloWorld	pack/plugins/start/fatih-vim-go/templates/hello_world_test.go	/^func TestHelloWorld(t *testing.T) {$/;"	f
Test_Alternate	pack/plugins/start/fatih-vim-go/autoload/go/alternate_test.vim	/^fun! Test_Alternate() abort$/;"	f
Test_Detect_Gopath	pack/plugins/start/fatih-vim-go/test/gopath_test.vim	/^fun! Test_Detect_Gopath() abort$/;"	f
Test_Detect_Gopath_disabled	pack/plugins/start/fatih-vim-go/test/gopath_test.vim	/^fun! Test_Detect_Gopath_disabled() abort$/;"	f
Test_ExecuteInDir	pack/plugins/start/fatih-vim-go/autoload/go/tool_test.vim	/^func! Test_ExecuteInDir() abort$/;"	f
Test_ExecuteInDir_nodir	pack/plugins/start/fatih-vim-go/autoload/go/tool_test.vim	/^func! Test_ExecuteInDir_nodir() abort$/;"	f
Test_add_lines	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines()$/;"	f
Test_add_lines_fish	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines_fish()$/;"	f
Test_add_tags	pack/plugins/start/fatih-vim-go/autoload/go/tags_test.vim	/^func! Test_add_tags() abort$/;"	f
Test_edit_file_with_same_name_as_a_branch	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_edit_file_with_same_name_as_a_branch()$/;"	f
Test_file_added_to_git	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_file_added_to_git()$/;"	f
Test_filename_with_equals	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_equals()$/;"	f
Test_filename_with_square_brackets	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_square_brackets()$/;"	f
Test_fillstruct	pack/plugins/start/fatih-vim-go/autoload/go/fillstruct_test.vim	/^func! Test_fillstruct() abort$/;"	f
Test_follow_symlink	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_follow_symlink()$/;"	f
Test_goimports	pack/plugins/start/fatih-vim-go/autoload/go/fmt_test.vim	/^func! Test_goimports() abort$/;"	f
Test_hunk_outside_noop	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_outside_noop()$/;"	f
Test_hunk_stage	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage()$/;"	f
Test_hunk_stage_nearby_hunk	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_nearby_hunk()$/;"	f
Test_hunk_undo	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_undo()$/;"	f
Test_impl	pack/plugins/start/fatih-vim-go/autoload/go/impl_test.vim	/^func! Test_impl() abort$/;"	f
Test_impl_get	pack/plugins/start/fatih-vim-go/autoload/go/impl_test.vim	/^func! Test_impl_get() abort$/;"	f
Test_jump_to_declaration_godef	pack/plugins/start/fatih-vim-go/autoload/go/def_test.vim	/^func! Test_jump_to_declaration_godef() abort$/;"	f
Test_jump_to_declaration_guru	pack/plugins/start/fatih-vim-go/autoload/go/def_test.vim	/^func! Test_jump_to_declaration_guru() abort$/;"	f
Test_keep_alt	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_alt()$/;"	f
Test_keep_modified	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_modified()$/;"	f
Test_keep_op_marks	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_op_marks()$/;"	f
Test_modify_lines	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_modify_lines()$/;"	f
Test_no_modifications	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_no_modifications()$/;"	f
Test_orphaned_signs	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_orphaned_signs()$/;"	f
Test_remove_first_lines	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_first_lines()$/;"	f
Test_remove_lines	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_lines()$/;"	f
Test_remove_tags	pack/plugins/start/fatih-vim-go/autoload/go/tags_test.vim	/^func! Test_remove_tags() abort$/;"	f
Test_run_fmt	pack/plugins/start/fatih-vim-go/autoload/go/fmt_test.vim	/^func! Test_run_fmt() abort$/;"	f
Test_sign_column_always	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_sign_column_always()$/;"	f
Test_undo_nearby_hunk	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_undo_nearby_hunk()$/;"	f
Test_untracked_file_outside_repo	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_outside_repo()$/;"	f
Test_untracked_file_square_brackets_within_repo	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_square_brackets_within_repo()$/;"	f
Test_untracked_file_within_repo	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_within_repo()$/;"	f
Test_update_file	pack/plugins/start/fatih-vim-go/autoload/go/fmt_test.vim	/^func! Test_update_file() abort$/;"	f
Testing	pack/plugins/start/ludovicchabant-vim-gutentags/CONTRIBUTING.md	/^## Testing$/;"	i
Tests	pack/plugins/start/olical-vim-enmasse/README.md	/^## Tests$/;"	i
Third party integration	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^## Third party integration$/;"	i
TimerHandler	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! s:TimerHandler(...) abort$/;"	f
ToggleFolds	vimrc	/^        function! ToggleFolds()$/;"	f
ToggleHiddenAll	vimrc	/^        function! ToggleHiddenAll()$/;"	f
Transform	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:Transform(algorithm,type)$/;"	f
TransformOpfunc	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:TransformOpfunc(type)$/;"	f
TransformSetup	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:TransformSetup(algorithm)$/;"	f
TreeDirNode.AbsoluteTreeRoot	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path, nerdtree)$/;"	f
TreeDirNode._glob	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._glob(pattern, all)$/;"	f
TreeDirNode._initChildren	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode.activate	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.displayString	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.displayString()$/;"	f
TreeDirNode.findNode	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getCascade	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascade()$/;"	f
TreeDirNode.getChild	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getVisibleChildCount	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.isCascadable	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.isCascadable()$/;"	f
TreeDirNode.open	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openAlong	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
TreeDirNode.openExplorer	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.refreshDirFlags	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshDirFlags()$/;"	f
TreeDirNode.refreshFlags	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshFlags()$/;"	f
TreeDirNode.removeChild	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path, ...)$/;"	f
TreeDirNode.sortChildren	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetSelected	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path, nerdtree)$/;"	f
TreeFileNode._renderToString	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText)$/;"	f
TreeFileNode.activate	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBookmarks	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
TreeFileNode.copy	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findOpenDirSiblingWithVisibleChildren	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
TreeFileNode.findSibling	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getNerdtree	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getNerdtree()$/;"	f
TreeFileNode.isRoot	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.open	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openInNewTab	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.refreshFlags	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refreshFlags()$/;"	f
TreeFileNode.rename	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
U	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^    nmap U <Plug>(RepeatUndoLine)$/;"	m
UI.IndentWid	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.IndentWid()$/;"	f
UI.MarkupReg	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.MarkupReg()$/;"	f
UI.New	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.New(nerdtree)$/;"	f
UI.UpDirLine	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.UpDirLine()$/;"	f
UI._dumpHelp	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._dumpHelp()$/;"	f
UI._indentLevelFor	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._indentLevelFor(line)$/;"	f
UI._renderBookmarks	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._renderBookmarks()$/;"	f
UI._stripMarkup	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._stripMarkup(line, removeLeadingSpaces)$/;"	f
UI.centerView	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.centerView()$/;"	f
UI.getLineNum	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getLineNum(file_node)$/;"	f
UI.getPath	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getPath(ln)$/;"	f
UI.getRootLineNum	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getRootLineNum()$/;"	f
UI.getShowBookmarks	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowBookmarks()$/;"	f
UI.getShowFiles	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowFiles()$/;"	f
UI.getShowHelp	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHelp()$/;"	f
UI.getShowHidden	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHidden()$/;"	f
UI.isIgnoreFilterEnabled	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isIgnoreFilterEnabled()$/;"	f
UI.isMinimal	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isMinimal()$/;"	f
UI.render	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.render()$/;"	f
UI.renderViewSavingPosition	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.renderViewSavingPosition()$/;"	f
UI.restoreScreenState	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.restoreScreenState()$/;"	f
UI.saveScreenState	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.saveScreenState()$/;"	f
UI.setShowHidden	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.setShowHidden(val)$/;"	f
UI.toggleHelp	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleHelp()$/;"	f
UI.toggleIgnoreFilter	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleIgnoreFilter()$/;"	f
UI.toggleShowBookmarks	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowBookmarks()$/;"	f
UI.toggleShowFiles	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowFiles()$/;"	f
UI.toggleShowHidden	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowHidden()$/;"	f
UI.toggleZoom	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleZoom()$/;"	f
UPDATED_SOURCE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set UPDATED_SOURCE=%~2$/;"	v
UPDATED_SOURCE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set UPDATED_SOURCE=$/;"	v
UnimpairedMapTransform	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! UnimpairedMapTransform(algorithm, key) abort$/;"	f
Unique count handling	pack/plugins/start/machakann-vim-sandwich/README.md	/^### Unique count handling$/;"	k
Unlicenced	pack/plugins/start/olical-vim-enmasse/README.md	/^## Unlicenced$/;"	i
Unlink	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang Unlink$/;"	c
Unlock	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:Unlock$/;"	l
UpdateLineNumbers	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^function! s:UpdateLineNumbers(buffer, current_sign_list, loclist) abort$/;"	f
Usage	pack/plugins/start/fatih-vim-go/README.md	/^## Usage$/;"	i
Usage	pack/plugins/start/kopischke-vim-fetch/README.md	/^### Usage$/;"	k
Usage	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^:Usage$/;"	l
Usage	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:Usage$/;"	l
Using the plugin	pack/plugins/start/olical-vim-enmasse/README.md	/^## Using the plugin$/;"	i
UsingModule	pack/plugins/start/w0rp-ale/ale_linters/python/flake8.vim	/^function! s:UsingModule(buffer) abort$/;"	f
VADER_OUTPUT_FILE	pack/plugins/start/w0rp-ale/run-tests.bat	/^set VADER_OUTPUT_FILE=%~dp0\\vader_output$/;"	v
VIM	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.bat	/^if defined THEMIS_VIM set VIM=%THEMIS_VIM%$/;"	v
VIM	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.bat	/^set VIM=vim$/;"	v
VimCloseCallback	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! s:VimCloseCallback(channel) abort$/;"	f
VimErrorCallback	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! s:VimErrorCallback(channel, data) abort$/;"	f
VimExitCallback	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! s:VimExitCallback(job, exit_code) abort$/;"	f
VimOutputCallback	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! s:VimOutputCallback(channel, data) abort$/;"	f
W	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^  command! -bar W Wall$/;"	c
Wall	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=? Wall$/;"	c
Wall	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:Wall() abort$/;"	f
What did you do? (required. The issue will be **closed** when not provided.)	pack/plugins/start/fatih-vim-go/.github/ISSUE_TEMPLATE.md	/^### What did you do? (required. The issue will be **closed** when not provided.)$/;"	k
What did you expect to happen?	pack/plugins/start/fatih-vim-go/.github/ISSUE_TEMPLATE.md	/^### What did you expect to happen?$/;"	k
What happened instead?	pack/plugins/start/fatih-vim-go/.github/ISSUE_TEMPLATE.md	/^### What happened instead?$/;"	k
What they say about Apprentice.	pack/colors/start/romainl-apprentice/README.md	/^## What they say about Apprentice.$/;"	i
What?	pack/plugins/start/ludovicchabant-vim-gutentags/README.md	/^## What?$/;"	i
Why?	pack/plugins/start/hauleth-asyncdo-vim/README.md	/^## Why?$/;"	i
Why?	pack/plugins/start/ludovicchabant-vim-gutentags/README.md	/^## Why?$/;"	i
Working with 8/16 colors	pack/colors/start/romainl-apprentice/README.md	/^### Working with 8\/16 colors$/;"	k
Wq	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
Write	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
WriteSourceLinesAgainstList	pack/plugins/start/olical-vim-enmasse/autoload/enmasse.vim	/^function! s:WriteSourceLinesAgainstList(list, sourceLines)$/;"	f
Writing	pack/plugins/start/ludovicchabant-vim-gutentags/CONTRIBUTING.md	/^## Writing$/;"	i
Y	vimrc	/^        nnoremap Y y\$$/;"	m
ZeroPaste	vimrc	/^	function! ZeroPaste(p)$/;"	f
[D	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^    nmap <silent> [D <Plug>QlistDefinefromtop$/;"	m
[I	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^    nmap <silent> [I <Plug>QlistIncludefromtop$/;"	m
[Vundle.vim](https://github.com/gmarik/Vundle.vim#readme)	pack/plugins/start/olical-vim-enmasse/README.md	/^### [Vundle.vim](https:\/\/github.com\/gmarik\/Vundle.vim#readme)$/;"	k
[[	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> [[ :<c-u>call go#textobj#FunctionJump('n', 'prev')<cr>$/;"	m
[[	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> [[ :<c-u>call go#textobj#FunctionJump('o', 'prev')<cr>$/;"	m
[c	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    nmap [c <Plug>GitGutterPrevHunk$/;"	m
[vim-pathogen](https://github.com/tpope/vim-pathogen#readme)	pack/plugins/start/olical-vim-enmasse/README.md	/^### [vim-pathogen](https:\/\/github.com\/tpope\/vim-pathogen#readme)$/;"	k
[vim-plug](https://github.com/junegunn/vim-plug#readme)	pack/plugins/start/olical-vim-enmasse/README.md	/^### [vim-plug](https:\/\/github.com\/junegunn\/vim-plug#readme)$/;"	k
]D	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^    nmap <silent> ]D <Plug>QlistDefinefromhere$/;"	m
]I	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^    nmap <silent> ]I <Plug>QlistIncludefromhere$/;"	m
]]	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> ]] :<c-u>call go#textobj#FunctionJump('n', 'next')<cr>$/;"	m
]]	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> ]] :<c-u>call go#textobj#FunctionJump('o', 'next')<cr>$/;"	m
]c	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    nmap ]c <Plug>GitGutterNextHunk$/;"	m
__init__	pack/plugins/start/wellle-tmux-complete-vim/rplugin/python3/deoplete/sources/tmuxcomplete.py	/^    def __init__(self, vim):$/;"	m	class:Source
_handleOldOptions	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:_handleOldOptions() abort$/;"	f
a:args	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let a:args.error_info_cb = funcref('s:error_info_cb')$/;"	v
a:args	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let a:args.error_info_cb = funcref('s:error_info_cb')$/;"	v
a:args	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^  let a:args.error_info_cb = funcref('s:error_info_cb')$/;"	v
abbreviate_from_dict	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:abbreviate_from_dict(cmd,dict)$/;"	f
ac	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    omap ac <Plug>GitGutterTextObjectOuterPending$/;"	m
act.add_pair	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:act.add_pair(buns, stuff, undojoin) dict abort "{{{$/;"	f
act.delete_pair	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:act.delete_pair(stuff, modified) dict abort  "{{{$/;"	f
act.initialize	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:act.initialize(cursor, modmark, added) dict abort  "{{{$/;"	f
act.replace_pair	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:act.replace_pair(buns, stuff, undojoin, modified) dict abort "{{{$/;"	f
activateAll	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateAll()$/;"	f
activateBookmark	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateBookmark(bm)$/;"	f
activateDirNode	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateDirNode(directoryNode)$/;"	f
activateFileNode	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateFileNode(node)$/;"	f
add_db	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! s:add_db(db_file) abort$/;"	f
add_former	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:add_former(buns, pos, opt, ...) abort  "{{{$/;"	f
add_latter	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:add_latter(buns, pos, opt) abort  "{{{$/;"	f
add_methods	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_portion	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:add_portion(bun, pos, undojoin_cmd, startinsert) abort "{{{$/;"	f
addcommand1	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! s:addcommand1(command, as, value)$/;"	f
addcommand2	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! s:addcommand2(command, as, key, value)$/;"	f
added_tail	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:added_tail(head, tail, linewise) abort  "{{{$/;"	f
af	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> af :<c-u>call go#textobj#Function('a')<cr>$/;"	m
ale#CallWithCooldown	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#CallWithCooldown(timestamp_key, func, arglist) abort$/;"	f
ale#Escape	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#Escape(str) abort$/;"	f
ale#FileTooLarge	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#FileTooLarge() abort$/;"	f
ale#GetLocItemMessage	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#GetLocItemMessage(item, format_string) abort$/;"	f
ale#Has	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#Has(feature) abort$/;"	f
ale#Lint	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#Lint(...) abort$/;"	f
ale#Queue	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#Queue(delay, ...) abort$/;"	f
ale#ResetErrorDelays	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#ResetErrorDelays() abort$/;"	f
ale#ResetLintFileMarkers	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#ResetLintFileMarkers() abort$/;"	f
ale#Set	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#Set(variable_name, default) abort$/;"	f
ale#ShouldDoNothing	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#ShouldDoNothing(buffer) abort$/;"	f
ale#Var	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#Var(buffer, variable_name) abort$/;"	f
ale#balloon#Disable	pack/plugins/start/w0rp-ale/autoload/ale/balloon.vim	/^function! ale#balloon#Disable() abort$/;"	f
ale#balloon#Enable	pack/plugins/start/w0rp-ale/autoload/ale/balloon.vim	/^function! ale#balloon#Enable() abort$/;"	f
ale#balloon#Expr	pack/plugins/start/w0rp-ale/autoload/ale/balloon.vim	/^function! ale#balloon#Expr() abort$/;"	f
ale#balloon#MessageForPos	pack/plugins/start/w0rp-ale/autoload/ale/balloon.vim	/^function! ale#balloon#MessageForPos(bufnr, lnum, col) abort$/;"	f
ale#c#FindCompileCommands	pack/plugins/start/w0rp-ale/autoload/ale/c.vim	/^function! ale#c#FindCompileCommands(buffer) abort$/;"	f
ale#c#FindLocalHeaderPaths	pack/plugins/start/w0rp-ale/autoload/ale/c.vim	/^function! ale#c#FindLocalHeaderPaths(buffer) abort$/;"	f
ale#c#FindProjectRoot	pack/plugins/start/w0rp-ale/autoload/ale/c.vim	/^function! ale#c#FindProjectRoot(buffer) abort$/;"	f
ale#c#IncludeOptions	pack/plugins/start/w0rp-ale/autoload/ale/c.vim	/^function! ale#c#IncludeOptions(include_paths) abort$/;"	f
ale#command#FormatCommand	pack/plugins/start/w0rp-ale/autoload/ale/command.vim	/^function! ale#command#FormatCommand(buffer, command, pipe_file_if_needed) abort$/;"	f
ale#completion#Disable	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#Disable() abort$/;"	f
ale#completion#Done	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#Done() abort$/;"	f
ale#completion#Enable	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#Enable() abort$/;"	f
ale#completion#Filter	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#Filter(suggestions, prefix) abort$/;"	f
ale#completion#GetCompletions	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#GetCompletions() abort$/;"	f
ale#completion#GetPrefix	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#GetPrefix(filetype, line, column) abort$/;"	f
ale#completion#GetTriggerCharacter	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#GetTriggerCharacter(filetype, prefix) abort$/;"	f
ale#completion#HandleLSPResponse	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#completion#HandleTSServerResponse	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#completion#OmniFunc	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#OmniFunc(findstart, base) abort$/;"	f
ale#completion#ParseLSPCompletions	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#ParseLSPCompletions(response) abort$/;"	f
ale#completion#ParseTSServerCompletionEntryDetails	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#ParseTSServerCompletionEntryDetails(response) abort$/;"	f
ale#completion#ParseTSServerCompletions	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#ParseTSServerCompletions(response) abort$/;"	f
ale#completion#Queue	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#Queue() abort$/;"	f
ale#completion#Show	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#Show(response, completion_parser) abort$/;"	f
ale#completion#StopTimer	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#StopTimer() abort$/;"	f
ale#cursor#EchoCursorWarning	pack/plugins/start/w0rp-ale/autoload/ale/cursor.vim	/^function! ale#cursor#EchoCursorWarning(...) abort$/;"	f
ale#cursor#EchoCursorWarningWithDelay	pack/plugins/start/w0rp-ale/autoload/ale/cursor.vim	/^function! ale#cursor#EchoCursorWarningWithDelay() abort$/;"	f
ale#cursor#ShowCursorDetail	pack/plugins/start/w0rp-ale/autoload/ale/cursor.vim	/^function! ale#cursor#ShowCursorDetail() abort$/;"	f
ale#cursor#TruncatedEcho	pack/plugins/start/w0rp-ale/autoload/ale/cursor.vim	/^function! ale#cursor#TruncatedEcho(message) abort$/;"	f
ale#debugging#Info	pack/plugins/start/w0rp-ale/autoload/ale/debugging.vim	/^function! ale#debugging#Info() abort$/;"	f
ale#debugging#InfoToClipboard	pack/plugins/start/w0rp-ale/autoload/ale/debugging.vim	/^function! ale#debugging#InfoToClipboard() abort$/;"	f
ale#definition#Execute	pack/plugins/start/w0rp-ale/autoload/ale/definition.vim	/^function! ale#definition#Execute(expr) abort$/;"	f
ale#definition#GetMap	pack/plugins/start/w0rp-ale/autoload/ale/definition.vim	/^function! ale#definition#GetMap() abort$/;"	f
ale#definition#GoTo	pack/plugins/start/w0rp-ale/autoload/ale/definition.vim	/^function! ale#definition#GoTo(options) abort$/;"	f
ale#definition#HandleLSPResponse	pack/plugins/start/w0rp-ale/autoload/ale/definition.vim	/^function! ale#definition#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#definition#HandleTSServerResponse	pack/plugins/start/w0rp-ale/autoload/ale/definition.vim	/^function! ale#definition#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#definition#Open	pack/plugins/start/w0rp-ale/autoload/ale/definition.vim	/^function! ale#definition#Open(options, filename, line, column) abort$/;"	f
ale#definition#SetMap	pack/plugins/start/w0rp-ale/autoload/ale/definition.vim	/^function! ale#definition#SetMap(map) abort$/;"	f
ale#engine#Cleanup	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#Cleanup(buffer) abort$/;"	f
ale#engine#CreateDirectory	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#CreateDirectory(buffer) abort$/;"	f
ale#engine#EscapeCommandPart	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#EscapeCommandPart(command_part) abort$/;"	f
ale#engine#FixLocList	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#FixLocList(buffer, linter_name, loclist) abort$/;"	f
ale#engine#GetLoclist	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#GetLoclist(buffer) abort$/;"	f
ale#engine#HandleLSPResponse	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#engine#InitBufferInfo	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#InitBufferInfo(buffer) abort$/;"	f
ale#engine#IsCheckingBuffer	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#IsCheckingBuffer(buffer) abort$/;"	f
ale#engine#IsExecutable	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#IsExecutable(buffer, executable) abort$/;"	f
ale#engine#ManageDirectory	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#ManageDirectory(buffer, directory) abort$/;"	f
ale#engine#ManageFile	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#ManageFile(buffer, filename) abort$/;"	f
ale#engine#ProcessChain	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#ProcessChain(buffer, linter, chain_index, input) abort$/;"	f
ale#engine#RemoveManagedFiles	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#RemoveManagedFiles(buffer) abort$/;"	f
ale#engine#ResetExecutableCache	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#ResetExecutableCache() abort$/;"	f
ale#engine#RunLinters	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#RunLinters(buffer, linters, should_lint_file) abort$/;"	f
ale#engine#SetResults	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#SetResults(buffer, loclist) abort$/;"	f
ale#engine#WaitForJobs	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#WaitForJobs(deadline) abort$/;"	f
ale#events#EnterEvent	pack/plugins/start/w0rp-ale/autoload/ale/events.vim	/^function! ale#events#EnterEvent(buffer) abort$/;"	f
ale#events#FileChangedEvent	pack/plugins/start/w0rp-ale/autoload/ale/events.vim	/^function! ale#events#FileChangedEvent(buffer) abort$/;"	f
ale#events#FileTypeEvent	pack/plugins/start/w0rp-ale/autoload/ale/events.vim	/^function! ale#events#FileTypeEvent(buffer, new_filetype) abort$/;"	f
ale#events#QuitEvent	pack/plugins/start/w0rp-ale/autoload/ale/events.vim	/^function! ale#events#QuitEvent(buffer) abort$/;"	f
ale#events#QuitRecently	pack/plugins/start/w0rp-ale/autoload/ale/events.vim	/^function! ale#events#QuitRecently(buffer) abort$/;"	f
ale#events#SaveEvent	pack/plugins/start/w0rp-ale/autoload/ale/events.vim	/^function! ale#events#SaveEvent(buffer) abort$/;"	f
ale#filetypes#GuessExtension	pack/plugins/start/w0rp-ale/autoload/ale/filetypes.vim	/^function! ale#filetypes#GuessExtension(filetype) abort$/;"	f
ale#filetypes#LoadExtensionMap	pack/plugins/start/w0rp-ale/autoload/ale/filetypes.vim	/^function! ale#filetypes#LoadExtensionMap() abort$/;"	f
ale#fix#ApplyFixes	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! ale#fix#ApplyFixes(buffer, output) abort$/;"	f
ale#fix#ApplyQueuedFixes	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! ale#fix#ApplyQueuedFixes() abort$/;"	f
ale#fix#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! ale#fix#Fix(...) abort$/;"	f
ale#fix#InitBufferData	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! ale#fix#InitBufferData(buffer, fixing_flag) abort$/;"	f
ale#fix#ManageDirectory	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! ale#fix#ManageDirectory(buffer, directory) abort$/;"	f
ale#fix#RemoveManagedFiles	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! ale#fix#RemoveManagedFiles(buffer) abort$/;"	f
ale#fix#registry#Add	pack/plugins/start/w0rp-ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#Add(name, func, filetypes, desc, ...) abort$/;"	f
ale#fix#registry#Clear	pack/plugins/start/w0rp-ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#Clear() abort$/;"	f
ale#fix#registry#GetFunc	pack/plugins/start/w0rp-ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#GetFunc(name) abort$/;"	f
ale#fix#registry#ResetToDefaults	pack/plugins/start/w0rp-ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#ResetToDefaults() abort$/;"	f
ale#fix#registry#Suggest	pack/plugins/start/w0rp-ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#Suggest(filetype) abort$/;"	f
ale#fixers#autopep8#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/autopep8.vim	/^function! ale#fixers#autopep8#Fix(buffer) abort$/;"	f
ale#fixers#clangformat#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/clangformat.vim	/^function! ale#fixers#clangformat#Fix(buffer) abort$/;"	f
ale#fixers#clangformat#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/fixers/clangformat.vim	/^function! ale#fixers#clangformat#GetExecutable(buffer) abort$/;"	f
ale#fixers#eslint#ApplyFixForVersion	pack/plugins/start/w0rp-ale/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#ApplyFixForVersion(buffer, version_output) abort$/;"	f
ale#fixers#eslint#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#Fix(buffer) abort$/;"	f
ale#fixers#eslint#ProcessEslintDOutput	pack/plugins/start/w0rp-ale/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#ProcessEslintDOutput(buffer, output) abort$/;"	f
ale#fixers#eslint#ProcessFixDryRunOutput	pack/plugins/start/w0rp-ale/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#ProcessFixDryRunOutput(buffer, output) abort$/;"	f
ale#fixers#format#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/format.vim	/^function! ale#fixers#format#Fix(buffer) abort$/;"	f
ale#fixers#format#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/fixers/format.vim	/^function! ale#fixers#format#GetExecutable(buffer) abort$/;"	f
ale#fixers#generic#RemoveTrailingBlankLines	pack/plugins/start/w0rp-ale/autoload/ale/fixers/generic.vim	/^function! ale#fixers#generic#RemoveTrailingBlankLines(buffer, lines) abort$/;"	f
ale#fixers#generic#TrimWhitespace	pack/plugins/start/w0rp-ale/autoload/ale/fixers/generic.vim	/^function! ale#fixers#generic#TrimWhitespace(buffer, lines) abort$/;"	f
ale#fixers#generic_python#AddLinesBeforeControlStatements	pack/plugins/start/w0rp-ale/autoload/ale/fixers/generic_python.vim	/^function! ale#fixers#generic_python#AddLinesBeforeControlStatements(buffer, lines) abort$/;"	f
ale#fixers#generic_python#BreakUpLongLines	pack/plugins/start/w0rp-ale/autoload/ale/fixers/generic_python.vim	/^function! ale#fixers#generic_python#BreakUpLongLines(buffer, lines) abort$/;"	f
ale#fixers#gofmt#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/gofmt.vim	/^function! ale#fixers#gofmt#Fix(buffer) abort$/;"	f
ale#fixers#goimports#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/goimports.vim	/^function! ale#fixers#goimports#Fix(buffer) abort$/;"	f
ale#fixers#hackfmt#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/hackfmt.vim	/^function! ale#fixers#hackfmt#Fix(buffer) abort$/;"	f
ale#fixers#help#AlignTags	pack/plugins/start/w0rp-ale/autoload/ale/fixers/help.vim	/^function! ale#fixers#help#AlignTags(buffer, lines) abort$/;"	f
ale#fixers#hfmt#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/hfmt.vim	/^function! ale#fixers#hfmt#Fix(buffer) abort$/;"	f
ale#fixers#importjs#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/importjs.vim	/^function! ale#fixers#importjs#Fix(buffer) abort$/;"	f
ale#fixers#importjs#ProcessOutput	pack/plugins/start/w0rp-ale/autoload/ale/fixers/importjs.vim	/^function! ale#fixers#importjs#ProcessOutput(buffer, output) abort$/;"	f
ale#fixers#isort#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/isort.vim	/^function! ale#fixers#isort#Fix(buffer) abort$/;"	f
ale#fixers#mix_format#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/mix_format.vim	/^function! ale#fixers#mix_format#Fix(buffer) abort$/;"	f
ale#fixers#mix_format#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/fixers/mix_format.vim	/^function! ale#fixers#mix_format#GetExecutable(buffer) abort$/;"	f
ale#fixers#phpcbf#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/phpcbf.vim	/^function! ale#fixers#phpcbf#Fix(buffer) abort$/;"	f
ale#fixers#phpcbf#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/fixers/phpcbf.vim	/^function! ale#fixers#phpcbf#GetExecutable(buffer) abort$/;"	f
ale#fixers#prettier#ApplyFixForVersion	pack/plugins/start/w0rp-ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#ApplyFixForVersion(buffer, version_output) abort$/;"	f
ale#fixers#prettier#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#Fix(buffer) abort$/;"	f
ale#fixers#prettier#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#GetExecutable(buffer) abort$/;"	f
ale#fixers#prettier_eslint#ApplyFixForVersion	pack/plugins/start/w0rp-ale/autoload/ale/fixers/prettier_eslint.vim	/^function! ale#fixers#prettier_eslint#ApplyFixForVersion(buffer, version_output) abort$/;"	f
ale#fixers#prettier_eslint#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/prettier_eslint.vim	/^function! ale#fixers#prettier_eslint#Fix(buffer) abort$/;"	f
ale#fixers#prettier_eslint#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/fixers/prettier_eslint.vim	/^function! ale#fixers#prettier_eslint#GetExecutable(buffer) abort$/;"	f
ale#fixers#prettier_eslint#SetOptionDefaults	pack/plugins/start/w0rp-ale/autoload/ale/fixers/prettier_eslint.vim	/^function! ale#fixers#prettier_eslint#SetOptionDefaults() abort$/;"	f
ale#fixers#prettier_standard#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/prettier_standard.vim	/^function! ale#fixers#prettier_standard#Fix(buffer) abort$/;"	f
ale#fixers#prettier_standard#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/fixers/prettier_standard.vim	/^function! ale#fixers#prettier_standard#GetExecutable(buffer) abort$/;"	f
ale#fixers#puppetlint#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/puppetlint.vim	/^function! ale#fixers#puppetlint#Fix(buffer) abort$/;"	f
ale#fixers#refmt#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/refmt.vim	/^function! ale#fixers#refmt#Fix(buffer) abort$/;"	f
ale#fixers#rubocop#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/rubocop.vim	/^function! ale#fixers#rubocop#Fix(buffer) abort$/;"	f
ale#fixers#rubocop#GetCommand	pack/plugins/start/w0rp-ale/autoload/ale/fixers/rubocop.vim	/^function! ale#fixers#rubocop#GetCommand(buffer) abort$/;"	f
ale#fixers#rustfmt#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/rustfmt.vim	/^function! ale#fixers#rustfmt#Fix(buffer) abort$/;"	f
ale#fixers#shfmt#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/shfmt.vim	/^function! ale#fixers#shfmt#Fix(buffer) abort$/;"	f
ale#fixers#standard#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/standard.vim	/^function! ale#fixers#standard#Fix(buffer) abort$/;"	f
ale#fixers#standard#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/fixers/standard.vim	/^function! ale#fixers#standard#GetExecutable(buffer) abort$/;"	f
ale#fixers#stylelint#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/stylelint.vim	/^function! ale#fixers#stylelint#Fix(buffer) abort$/;"	f
ale#fixers#stylelint#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/fixers/stylelint.vim	/^function! ale#fixers#stylelint#GetExecutable(buffer) abort$/;"	f
ale#fixers#swiftformat#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/swiftformat.vim	/^function! ale#fixers#swiftformat#Fix(buffer) abort$/;"	f
ale#fixers#swiftformat#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/fixers/swiftformat.vim	/^function! ale#fixers#swiftformat#GetExecutable(buffer) abort$/;"	f
ale#fixers#tslint#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/tslint.vim	/^function! ale#fixers#tslint#Fix(buffer) abort$/;"	f
ale#fixers#yapf#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/yapf.vim	/^function! ale#fixers#yapf#Fix(buffer) abort$/;"	f
ale#gradle#BuildClasspathCommand	pack/plugins/start/w0rp-ale/autoload/ale/gradle.vim	/^function! ale#gradle#BuildClasspathCommand(buffer) abort$/;"	f
ale#gradle#FindExecutable	pack/plugins/start/w0rp-ale/autoload/ale/gradle.vim	/^function! ale#gradle#FindExecutable(buffer) abort$/;"	f
ale#gradle#FindProjectRoot	pack/plugins/start/w0rp-ale/autoload/ale/gradle.vim	/^function! ale#gradle#FindProjectRoot(buffer) abort$/;"	f
ale#gradle#GetInitPath	pack/plugins/start/w0rp-ale/autoload/ale/gradle.vim	/^function! ale#gradle#GetInitPath() abort$/;"	f
ale#handlers#cppcheck#HandleCppCheckFormat	pack/plugins/start/w0rp-ale/autoload/ale/handlers/cppcheck.vim	/^function! ale#handlers#cppcheck#HandleCppCheckFormat(buffer, lines) abort$/;"	f
ale#handlers#cpplint#HandleCppLintFormat	pack/plugins/start/w0rp-ale/autoload/ale/handlers/cpplint.vim	/^function! ale#handlers#cpplint#HandleCppLintFormat(buffer, lines) abort$/;"	f
ale#handlers#css#HandleCSSLintFormat	pack/plugins/start/w0rp-ale/autoload/ale/handlers/css.vim	/^function! ale#handlers#css#HandleCSSLintFormat(buffer, lines) abort$/;"	f
ale#handlers#css#HandleStyleLintFormat	pack/plugins/start/w0rp-ale/autoload/ale/handlers/css.vim	/^function! ale#handlers#css#HandleStyleLintFormat(buffer, lines) abort$/;"	f
ale#handlers#eslint#FindConfig	pack/plugins/start/w0rp-ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#FindConfig(buffer) abort$/;"	f
ale#handlers#eslint#GetCommand	pack/plugins/start/w0rp-ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#GetCommand(buffer) abort$/;"	f
ale#handlers#eslint#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#GetExecutable(buffer) abort$/;"	f
ale#handlers#eslint#Handle	pack/plugins/start/w0rp-ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#Handle(buffer, lines) abort$/;"	f
ale#handlers#gcc#HandleGCCFormat	pack/plugins/start/w0rp-ale/autoload/ale/handlers/gcc.vim	/^function! ale#handlers#gcc#HandleGCCFormat(buffer, lines) abort$/;"	f
ale#handlers#haskell#HandleGHCFormat	pack/plugins/start/w0rp-ale/autoload/ale/handlers/haskell.vim	/^function! ale#handlers#haskell#HandleGHCFormat(buffer, lines) abort$/;"	f
ale#handlers#ols#GetCommand	pack/plugins/start/w0rp-ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetCommand(buffer) abort$/;"	f
ale#handlers#ols#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetExecutable(buffer) abort$/;"	f
ale#handlers#ols#GetLanguage	pack/plugins/start/w0rp-ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetLanguage(buffer) abort$/;"	f
ale#handlers#ols#GetProjectRoot	pack/plugins/start/w0rp-ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#rails_best_practices#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/handlers/rails_best_practices.vim	/^function! ale#handlers#rails_best_practices#GetExecutable(buffer) abort$/;"	f
ale#handlers#redpen#HandleRedpenOutput	pack/plugins/start/w0rp-ale/autoload/ale/handlers/redpen.vim	/^function! ale#handlers#redpen#HandleRedpenOutput(buffer, lines) abort$/;"	f
ale#handlers#rubocop#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/handlers/rubocop.vim	/^function! ale#handlers#rubocop#GetExecutable(buffer) abort$/;"	f
ale#handlers#ruby#HandleSyntaxErrors	pack/plugins/start/w0rp-ale/autoload/ale/handlers/ruby.vim	/^function! ale#handlers#ruby#HandleSyntaxErrors(buffer, lines) abort$/;"	f
ale#handlers#rust#HandleRustErrors	pack/plugins/start/w0rp-ale/autoload/ale/handlers/rust.vim	/^function! ale#handlers#rust#HandleRustErrors(buffer, lines) abort$/;"	f
ale#handlers#sh#GetShellType	pack/plugins/start/w0rp-ale/autoload/ale/handlers/sh.vim	/^function! ale#handlers#sh#GetShellType(buffer) abort$/;"	f
ale#handlers#sml#GetCmFile	pack/plugins/start/w0rp-ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#GetCmFile(buffer) abort$/;"	f
ale#handlers#sml#GetExecutableSmlnjCm	pack/plugins/start/w0rp-ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#GetExecutableSmlnjCm(buffer) abort$/;"	f
ale#handlers#sml#GetExecutableSmlnjFile	pack/plugins/start/w0rp-ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#GetExecutableSmlnjFile(buffer) abort$/;"	f
ale#handlers#sml#Handle	pack/plugins/start/w0rp-ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#Handle(buffer, lines) abort$/;"	f
ale#handlers#unix#HandleAsError	pack/plugins/start/w0rp-ale/autoload/ale/handlers/unix.vim	/^function! ale#handlers#unix#HandleAsError(buffer, lines) abort$/;"	f
ale#handlers#unix#HandleAsWarning	pack/plugins/start/w0rp-ale/autoload/ale/handlers/unix.vim	/^function! ale#handlers#unix#HandleAsWarning(buffer, lines) abort$/;"	f
ale#handlers#writegood#GetCommand	pack/plugins/start/w0rp-ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#GetCommand(buffer) abort$/;"	f
ale#handlers#writegood#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#GetExecutable(buffer) abort$/;"	f
ale#handlers#writegood#Handle	pack/plugins/start/w0rp-ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#Handle(buffer, lines) abort$/;"	f
ale#handlers#writegood#ResetOptions	pack/plugins/start/w0rp-ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#ResetOptions() abort$/;"	f
ale#highlight#BufferHidden	pack/plugins/start/w0rp-ale/autoload/ale/highlight.vim	/^function! ale#highlight#BufferHidden(buffer) abort$/;"	f
ale#highlight#CreatePositions	pack/plugins/start/w0rp-ale/autoload/ale/highlight.vim	/^function! ale#highlight#CreatePositions(line, col, end_line, end_col) abort$/;"	f
ale#highlight#RemoveHighlights	pack/plugins/start/w0rp-ale/autoload/ale/highlight.vim	/^function! ale#highlight#RemoveHighlights() abort$/;"	f
ale#highlight#SetHighlights	pack/plugins/start/w0rp-ale/autoload/ale/highlight.vim	/^function! ale#highlight#SetHighlights(buffer, loclist) abort$/;"	f
ale#highlight#UpdateHighlights	pack/plugins/start/w0rp-ale/autoload/ale/highlight.vim	/^function! ale#highlight#UpdateHighlights() abort$/;"	f
ale#history#Add	pack/plugins/start/w0rp-ale/autoload/ale/history.vim	/^function! ale#history#Add(buffer, status, job_id, command) abort$/;"	f
ale#history#Get	pack/plugins/start/w0rp-ale/autoload/ale/history.vim	/^function! ale#history#Get(buffer) abort$/;"	f
ale#history#RememberOutput	pack/plugins/start/w0rp-ale/autoload/ale/history.vim	/^function! ale#history#RememberOutput(buffer, job_id, output) abort$/;"	f
ale#history#SetExitCode	pack/plugins/start/w0rp-ale/autoload/ale/history.vim	/^function! ale#history#SetExitCode(buffer, job_id, exit_code) abort$/;"	f
ale#job#IsRunning	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! ale#job#IsRunning(job_id) abort$/;"	f
ale#job#JoinNeovimOutput	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! ale#job#JoinNeovimOutput(job, last_line, data, mode, callback) abort$/;"	f
ale#job#ParseVim8ProcessID	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! ale#job#ParseVim8ProcessID(job_string) abort$/;"	f
ale#job#PrepareCommand	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! ale#job#PrepareCommand(command) abort$/;"	f
ale#job#SendRaw	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! ale#job#SendRaw(job_id, string) abort$/;"	f
ale#job#Start	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! ale#job#Start(command, options) abort$/;"	f
ale#job#Stop	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! ale#job#Stop(job_id) abort$/;"	f
ale#job#ValidateArguments	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! ale#job#ValidateArguments(command, options) abort$/;"	f
ale#linter#Define	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! ale#linter#Define(filetype, linter) abort$/;"	f
ale#linter#Get	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! ale#linter#Get(original_filetypes) abort$/;"	f
ale#linter#GetAddress	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! ale#linter#GetAddress(buffer, linter) abort$/;"	f
ale#linter#GetAll	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! ale#linter#GetAll(filetypes) abort$/;"	f
ale#linter#GetCommand	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! ale#linter#GetCommand(buffer, linter) abort$/;"	f
ale#linter#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! ale#linter#GetExecutable(buffer, linter) abort$/;"	f
ale#linter#PreProcess	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! ale#linter#PreProcess(linter) abort$/;"	f
ale#linter#Reset	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! ale#linter#Reset() abort$/;"	f
ale#linter#ResolveFiletype	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! ale#linter#ResolveFiletype(original_filetype) abort$/;"	f
ale#linter#StartLSP	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! ale#linter#StartLSP(buffer, linter, callback) abort$/;"	f
ale#list#GetCombinedList	pack/plugins/start/w0rp-ale/autoload/ale/list.vim	/^function! ale#list#GetCombinedList() abort$/;"	f
ale#list#IsQuickfixOpen	pack/plugins/start/w0rp-ale/autoload/ale/list.vim	/^function! ale#list#IsQuickfixOpen() abort$/;"	f
ale#list#SetLists	pack/plugins/start/w0rp-ale/autoload/ale/list.vim	/^function! ale#list#SetLists(buffer, loclist) abort$/;"	f
ale#loclist_jumping#FindNearest	pack/plugins/start/w0rp-ale/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#FindNearest(direction, wrap) abort$/;"	f
ale#loclist_jumping#Jump	pack/plugins/start/w0rp-ale/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#Jump(direction, wrap) abort$/;"	f
ale#loclist_jumping#JumpToIndex	pack/plugins/start/w0rp-ale/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#JumpToIndex(index) abort$/;"	f
ale#lsp#ConnectToAddress	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! ale#lsp#ConnectToAddress(address, project_root, callback) abort$/;"	f
ale#lsp#CreateMessageData	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! ale#lsp#CreateMessageData(message) abort$/;"	f
ale#lsp#GetNextMessageID	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! ale#lsp#GetNextMessageID() abort$/;"	f
ale#lsp#GetProject	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! ale#lsp#GetProject(conn, project_root) abort$/;"	f
ale#lsp#HandleMessage	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! ale#lsp#HandleMessage(conn, message) abort$/;"	f
ale#lsp#HandleOtherInitializeResponses	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! ale#lsp#HandleOtherInitializeResponses(conn, response) abort$/;"	f
ale#lsp#OpenDocumentIfNeeded	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! ale#lsp#OpenDocumentIfNeeded(conn_id, buffer, project_root, language_id) abort$/;"	f
ale#lsp#ReadMessageData	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! ale#lsp#ReadMessageData(data) abort$/;"	f
ale#lsp#RegisterProject	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! ale#lsp#RegisterProject(conn, project_root) abort$/;"	f
ale#lsp#Send	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! ale#lsp#Send(conn_id, message, ...) abort$/;"	f
ale#lsp#StartProgram	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! ale#lsp#StartProgram(executable, command, project_root, callback) abort$/;"	f
ale#lsp#message#Completion	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Completion(buffer, line, column, trigger_character) abort$/;"	f
ale#lsp#message#Definition	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Definition(buffer, line, column) abort$/;"	f
ale#lsp#message#DidChange	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidChange(buffer) abort$/;"	f
ale#lsp#message#DidClose	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidClose(buffer) abort$/;"	f
ale#lsp#message#DidOpen	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidOpen(buffer, language_id) abort$/;"	f
ale#lsp#message#DidSave	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidSave(buffer) abort$/;"	f
ale#lsp#message#Exit	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Exit() abort$/;"	f
ale#lsp#message#GetNextVersionID	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#GetNextVersionID() abort$/;"	f
ale#lsp#message#Initialize	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Initialize(root_path) abort$/;"	f
ale#lsp#message#Initialized	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Initialized() abort$/;"	f
ale#lsp#message#Shutdown	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Shutdown() abort$/;"	f
ale#lsp#response#ReadDiagnostics	pack/plugins/start/w0rp-ale/autoload/ale/lsp/response.vim	/^function! ale#lsp#response#ReadDiagnostics(response) abort$/;"	f
ale#lsp#response#ReadTSServerDiagnostics	pack/plugins/start/w0rp-ale/autoload/ale/lsp/response.vim	/^function! ale#lsp#response#ReadTSServerDiagnostics(response) abort$/;"	f
ale#lsp#tsserver_message#Change	pack/plugins/start/w0rp-ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Change(buffer) abort$/;"	f
ale#lsp#tsserver_message#Close	pack/plugins/start/w0rp-ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Close(buffer) abort$/;"	f
ale#lsp#tsserver_message#CompletionEntryDetails	pack/plugins/start/w0rp-ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#CompletionEntryDetails(buffer, line, column, entry_names) abort$/;"	f
ale#lsp#tsserver_message#Completions	pack/plugins/start/w0rp-ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Completions(buffer, line, column, prefix) abort$/;"	f
ale#lsp#tsserver_message#Definition	pack/plugins/start/w0rp-ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Definition(buffer, line, column) abort$/;"	f
ale#lsp#tsserver_message#Geterr	pack/plugins/start/w0rp-ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Geterr(buffer) abort$/;"	f
ale#lsp#tsserver_message#Open	pack/plugins/start/w0rp-ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Open(buffer) abort$/;"	f
ale#node#Executable	pack/plugins/start/w0rp-ale/autoload/ale/node.vim	/^function! ale#node#Executable(buffer, executable) abort$/;"	f
ale#node#FindExecutable	pack/plugins/start/w0rp-ale/autoload/ale/node.vim	/^function! ale#node#FindExecutable(buffer, base_var_name, path_list) abort$/;"	f
ale#path#BufferCdString	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#BufferCdString(buffer) abort$/;"	f
ale#path#CdString	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#CdString(directory) abort$/;"	f
ale#path#FindNearestDirectory	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#FindNearestDirectory(buffer, directory_name) abort$/;"	f
ale#path#FindNearestFile	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#FindNearestFile(buffer, filename) abort$/;"	f
ale#path#FromURI	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#FromURI(uri) abort$/;"	f
ale#path#GetAbsPath	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#GetAbsPath(base_directory, filename) abort$/;"	f
ale#path#IsAbsolute	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#IsAbsolute(filename) abort$/;"	f
ale#path#IsBufferPath	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#IsBufferPath(buffer, complex_filename) abort$/;"	f
ale#path#IsTempName	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#IsTempName(filename) abort$/;"	f
ale#path#ResolveLocalPath	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#ResolveLocalPath(buffer, search_string, global_fallback) abort$/;"	f
ale#path#Simplify	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#Simplify(path) abort$/;"	f
ale#path#ToURI	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#ToURI(path) abort$/;"	f
ale#path#Upwards	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#Upwards(path) abort$/;"	f
ale#path#Winify	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#Winify(path, ...) abort$/;"	f
ale#pattern_options#SetOptions	pack/plugins/start/w0rp-ale/autoload/ale/pattern_options.vim	/^function! ale#pattern_options#SetOptions(buffer) abort$/;"	f
ale#preview#Show	pack/plugins/start/w0rp-ale/autoload/ale/preview.vim	/^function! ale#preview#Show(lines) abort$/;"	f
ale#python#FindExecutable	pack/plugins/start/w0rp-ale/autoload/ale/python.vim	/^function! ale#python#FindExecutable(buffer, base_var_name, path_list) abort$/;"	f
ale#python#FindProjectRoot	pack/plugins/start/w0rp-ale/autoload/ale/python.vim	/^function! ale#python#FindProjectRoot(buffer) abort$/;"	f
ale#python#FindProjectRootIni	pack/plugins/start/w0rp-ale/autoload/ale/python.vim	/^function! ale#python#FindProjectRootIni(buffer) abort$/;"	f
ale#python#FindVirtualenv	pack/plugins/start/w0rp-ale/autoload/ale/python.vim	/^function! ale#python#FindVirtualenv(buffer) abort$/;"	f
ale#ruby#FindRailsRoot	pack/plugins/start/w0rp-ale/autoload/ale/ruby.vim	/^function! ale#ruby#FindRailsRoot(buffer) abort$/;"	f
ale#semver#GTE	pack/plugins/start/w0rp-ale/autoload/ale/semver.vim	/^function! ale#semver#GTE(lhs, rhs) abort$/;"	f
ale#semver#GetVersion	pack/plugins/start/w0rp-ale/autoload/ale/semver.vim	/^function! ale#semver#GetVersion(executable, version_lines) abort$/;"	f
ale#semver#HasVersion	pack/plugins/start/w0rp-ale/autoload/ale/semver.vim	/^function! ale#semver#HasVersion(executable) abort$/;"	f
ale#semver#ResetVersionCache	pack/plugins/start/w0rp-ale/autoload/ale/semver.vim	/^function! ale#semver#ResetVersionCache() abort$/;"	f
ale#sign#FindCurrentSigns	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^function! ale#sign#FindCurrentSigns(buffer) abort$/;"	f
ale#sign#GetSignCommands	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^function! ale#sign#GetSignCommands(buffer, was_sign_set, sign_map) abort$/;"	f
ale#sign#GetSignName	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^function! ale#sign#GetSignName(sublist) abort$/;"	f
ale#sign#ParseSigns	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^function! ale#sign#ParseSigns(line_list) abort$/;"	f
ale#sign#ReadSigns	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^function! ale#sign#ReadSigns(buffer) abort$/;"	f
ale#sign#SetSigns	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^function! ale#sign#SetSigns(buffer, loclist) abort$/;"	f
ale#statusline#Count	pack/plugins/start/w0rp-ale/autoload/ale/statusline.vim	/^function! ale#statusline#Count(buffer) abort$/;"	f
ale#statusline#Status	pack/plugins/start/w0rp-ale/autoload/ale/statusline.vim	/^function! ale#statusline#Status() abort$/;"	f
ale#statusline#Update	pack/plugins/start/w0rp-ale/autoload/ale/statusline.vim	/^function! ale#statusline#Update(buffer, loclist) abort$/;"	f
ale#test#RestoreDirectory	pack/plugins/start/w0rp-ale/autoload/ale/test.vim	/^function! ale#test#RestoreDirectory() abort$/;"	f
ale#test#SetDirectory	pack/plugins/start/w0rp-ale/autoload/ale/test.vim	/^function! ale#test#SetDirectory(docker_path) abort$/;"	f
ale#test#SetFilename	pack/plugins/start/w0rp-ale/autoload/ale/test.vim	/^function! ale#test#SetFilename(path) abort$/;"	f
ale#toggle#Disable	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! ale#toggle#Disable() abort$/;"	f
ale#toggle#DisableBuffer	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! ale#toggle#DisableBuffer(buffer) abort$/;"	f
ale#toggle#Enable	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! ale#toggle#Enable() abort$/;"	f
ale#toggle#EnableBuffer	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! ale#toggle#EnableBuffer(buffer) abort$/;"	f
ale#toggle#InitAuGroups	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! ale#toggle#InitAuGroups() abort$/;"	f
ale#toggle#Reset	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! ale#toggle#Reset() abort$/;"	f
ale#toggle#ResetBuffer	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! ale#toggle#ResetBuffer(buffer) abort$/;"	f
ale#toggle#Toggle	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! ale#toggle#Toggle() abort$/;"	f
ale#toggle#ToggleBuffer	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! ale#toggle#ToggleBuffer(buffer) abort$/;"	f
ale#uri#Decode	pack/plugins/start/w0rp-ale/autoload/ale/uri.vim	/^function! ale#uri#Decode(value) abort$/;"	f
ale#uri#Encode	pack/plugins/start/w0rp-ale/autoload/ale/uri.vim	/^function! ale#uri#Encode(value) abort$/;"	f
ale#util#BinarySearch	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#BinarySearch(loclist, buffer, line, column) abort$/;"	f
ale#util#ClockMilliseconds	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#ClockMilliseconds() abort$/;"	f
ale#util#EscapePCRE	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#EscapePCRE(unsafe_string) abort$/;"	f
ale#util#FeedKeys	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#FeedKeys(...) abort$/;"	f
ale#util#FunctionArgCount	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#FunctionArgCount(function) abort$/;"	f
ale#util#FuzzyJSONDecode	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#FuzzyJSONDecode(data, default) abort$/;"	f
ale#util#GetFunction	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#GetFunction(string_or_ref) abort$/;"	f
ale#util#GetLineCount	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#GetLineCount(buffer) abort$/;"	f
ale#util#GetMatches	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#GetMatches(lines, patterns) abort$/;"	f
ale#util#InSandbox	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#InSandbox() abort$/;"	f
ale#util#LocItemCompare	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#LocItemCompare(left, right) abort$/;"	f
ale#util#LocItemCompareWithText	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#LocItemCompareWithText(left, right) abort$/;"	f
ale#util#Mode	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#Mode(...) abort$/;"	f
ale#util#StartPartialTimer	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#StartPartialTimer(delay, callback, args) abort$/;"	f
ale#util#StopPartialTimer	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#StopPartialTimer(timer_id) abort$/;"	f
ale#util#Writefile	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#Writefile(buffer, lines, filename) abort$/;"	f
ale_linters#ansible#ansible_lint#Handle	pack/plugins/start/w0rp-ale/ale_linters/ansible/ansible_lint.vim	/^function! ale_linters#ansible#ansible_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#apiblueprint#drafter#HandleErrors	pack/plugins/start/w0rp-ale/ale_linters/apiblueprint/drafter.vim	/^function! ale_linters#apiblueprint#drafter#HandleErrors(buffer, lines) abort$/;"	f
ale_linters#asm#gcc#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/asm/gcc.vim	/^function! ale_linters#asm#gcc#GetCommand(buffer) abort$/;"	f
ale_linters#asm#gcc#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/asm/gcc.vim	/^function! ale_linters#asm#gcc#GetExecutable(buffer) abort$/;"	f
ale_linters#asm#gcc#Handle	pack/plugins/start/w0rp-ale/ale_linters/asm/gcc.vim	/^function! ale_linters#asm#gcc#Handle(buffer, lines) abort$/;"	f
ale_linters#awk#gawk#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/awk/gawk.vim	/^function! ale_linters#awk#gawk#GetCommand(buffer) abort$/;"	f
ale_linters#awk#gawk#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/awk/gawk.vim	/^function! ale_linters#awk#gawk#GetExecutable(buffer) abort$/;"	f
ale_linters#c#clang#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/c/clang.vim	/^function! ale_linters#c#clang#GetCommand(buffer) abort$/;"	f
ale_linters#c#clang#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/c/clang.vim	/^function! ale_linters#c#clang#GetExecutable(buffer) abort$/;"	f
ale_linters#c#clangtidy#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/c/clangtidy.vim	/^function! ale_linters#c#clangtidy#GetCommand(buffer) abort$/;"	f
ale_linters#c#clangtidy#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/c/clangtidy.vim	/^function! ale_linters#c#clangtidy#GetExecutable(buffer) abort$/;"	f
ale_linters#c#cppcheck#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/c/cppcheck.vim	/^function! ale_linters#c#cppcheck#GetCommand(buffer) abort$/;"	f
ale_linters#c#cppcheck#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/c/cppcheck.vim	/^function! ale_linters#c#cppcheck#GetExecutable(buffer) abort$/;"	f
ale_linters#c#gcc#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/c/gcc.vim	/^function! ale_linters#c#gcc#GetCommand(buffer) abort$/;"	f
ale_linters#c#gcc#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/c/gcc.vim	/^function! ale_linters#c#gcc#GetExecutable(buffer) abort$/;"	f
ale_linters#chef#foodcritic#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/chef/foodcritic.vim	/^function! ale_linters#chef#foodcritic#GetCommand(buffer) abort$/;"	f
ale_linters#chef#foodcritic#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/chef/foodcritic.vim	/^function! ale_linters#chef#foodcritic#GetExecutable(buffer) abort$/;"	f
ale_linters#chef#foodcritic#Handle	pack/plugins/start/w0rp-ale/ale_linters/chef/foodcritic.vim	/^function! ale_linters#chef#foodcritic#Handle(buffer, lines) abort$/;"	f
ale_linters#clojure#joker#HandleJokerFormat	pack/plugins/start/w0rp-ale/ale_linters/clojure/joker.vim	/^function! ale_linters#clojure#joker#HandleJokerFormat(buffer, lines) abort$/;"	f
ale_linters#cmake#cmakelint#Command	pack/plugins/start/w0rp-ale/ale_linters/cmake/cmakelint.vim	/^function! ale_linters#cmake#cmakelint#Command(buffer) abort$/;"	f
ale_linters#cmake#cmakelint#Executable	pack/plugins/start/w0rp-ale/ale_linters/cmake/cmakelint.vim	/^function! ale_linters#cmake#cmakelint#Executable(buffer) abort$/;"	f
ale_linters#coffee#coffee#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/coffee/coffee.vim	/^function! ale_linters#coffee#coffee#GetCommand(buffer) abort$/;"	f
ale_linters#coffee#coffee#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/coffee/coffee.vim	/^function! ale_linters#coffee#coffee#GetExecutable(buffer) abort$/;"	f
ale_linters#coffee#coffeelint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/coffee/coffeelint.vim	/^function! ale_linters#coffee#coffeelint#GetCommand(buffer) abort$/;"	f
ale_linters#coffee#coffeelint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/coffee/coffeelint.vim	/^function! ale_linters#coffee#coffeelint#GetExecutable(buffer) abort$/;"	f
ale_linters#coffee#coffeelint#Handle	pack/plugins/start/w0rp-ale/ale_linters/coffee/coffeelint.vim	/^function! ale_linters#coffee#coffeelint#Handle(buffer, lines) abort$/;"	f
ale_linters#cpp#clang#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/cpp/clang.vim	/^function! ale_linters#cpp#clang#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#clang#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/cpp/clang.vim	/^function! ale_linters#cpp#clang#GetExecutable(buffer) abort$/;"	f
ale_linters#cpp#clangcheck#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/cpp/clangcheck.vim	/^function! ale_linters#cpp#clangcheck#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#clangcheck#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/cpp/clangcheck.vim	/^function! ale_linters#cpp#clangcheck#GetExecutable(buffer) abort$/;"	f
ale_linters#cpp#clangtidy#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/cpp/clangtidy.vim	/^function! ale_linters#cpp#clangtidy#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#clangtidy#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/cpp/clangtidy.vim	/^function! ale_linters#cpp#clangtidy#GetExecutable(buffer) abort$/;"	f
ale_linters#cpp#cppcheck#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/cpp/cppcheck.vim	/^function! ale_linters#cpp#cppcheck#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#cppcheck#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/cpp/cppcheck.vim	/^function! ale_linters#cpp#cppcheck#GetExecutable(buffer) abort$/;"	f
ale_linters#cpp#cpplint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/cpp/cpplint.vim	/^function! ale_linters#cpp#cpplint#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#cpplint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/cpp/cpplint.vim	/^function! ale_linters#cpp#cpplint#GetExecutable(buffer) abort$/;"	f
ale_linters#cpp#gcc#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/cpp/gcc.vim	/^function! ale_linters#cpp#gcc#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#gcc#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/cpp/gcc.vim	/^function! ale_linters#cpp#gcc#GetExecutable(buffer) abort$/;"	f
ale_linters#crystal#crystal#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/crystal/crystal.vim	/^function! ale_linters#crystal#crystal#GetCommand(buffer) abort$/;"	f
ale_linters#crystal#crystal#Handle	pack/plugins/start/w0rp-ale/ale_linters/crystal/crystal.vim	/^function! ale_linters#crystal#crystal#Handle(buffer, lines) abort$/;"	f
ale_linters#cs#mcs#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/cs/mcs.vim	/^function! ale_linters#cs#mcs#GetCommand(buffer) abort$/;"	f
ale_linters#cs#mcs#Handle	pack/plugins/start/w0rp-ale/ale_linters/cs/mcs.vim	/^function! ale_linters#cs#mcs#Handle(buffer, lines) abort$/;"	f
ale_linters#cs#mcsc#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/cs/mcsc.vim	/^function! ale_linters#cs#mcsc#GetCommand(buffer) abort$/;"	f
ale_linters#cs#mcsc#Handle	pack/plugins/start/w0rp-ale/ale_linters/cs/mcsc.vim	/^function! ale_linters#cs#mcsc#Handle(buffer, lines) abort$/;"	f
ale_linters#css#csslint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/css/csslint.vim	/^function! ale_linters#css#csslint#GetCommand(buffer) abort$/;"	f
ale_linters#css#stylelint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/css/stylelint.vim	/^function! ale_linters#css#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#css#stylelint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/css/stylelint.vim	/^function! ale_linters#css#stylelint#GetExecutable(buffer) abort$/;"	f
ale_linters#cuda#nvcc#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/cuda/nvcc.vim	/^function! ale_linters#cuda#nvcc#GetCommand(buffer) abort$/;"	f
ale_linters#cuda#nvcc#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/cuda/nvcc.vim	/^function! ale_linters#cuda#nvcc#GetExecutable(buffer) abort$/;"	f
ale_linters#cuda#nvcc#HandleNVCCFormat	pack/plugins/start/w0rp-ale/ale_linters/cuda/nvcc.vim	/^function! ale_linters#cuda#nvcc#HandleNVCCFormat(buffer, lines) abort$/;"	f
ale_linters#d#dmd#DMDCommand	pack/plugins/start/w0rp-ale/ale_linters/d/dmd.vim	/^function! ale_linters#d#dmd#DMDCommand(buffer, dub_output) abort$/;"	f
ale_linters#d#dmd#DUBCommand	pack/plugins/start/w0rp-ale/ale_linters/d/dmd.vim	/^function! ale_linters#d#dmd#DUBCommand(buffer) abort$/;"	f
ale_linters#d#dmd#Handle	pack/plugins/start/w0rp-ale/ale_linters/d/dmd.vim	/^function! ale_linters#d#dmd#Handle(buffer, lines) abort$/;"	f
ale_linters#dafny#dafny#Handle	pack/plugins/start/w0rp-ale/ale_linters/dafny/dafny.vim	/^function! ale_linters#dafny#dafny#Handle(buffer, lines) abort$/;"	f
ale_linters#dart#dartanalyzer#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/dart/dartanalyzer.vim	/^function! ale_linters#dart#dartanalyzer#GetCommand(buffer) abort$/;"	f
ale_linters#dart#dartanalyzer#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/dart/dartanalyzer.vim	/^function! ale_linters#dart#dartanalyzer#GetExecutable(buffer) abort$/;"	f
ale_linters#dart#dartanalyzer#Handle	pack/plugins/start/w0rp-ale/ale_linters/dart/dartanalyzer.vim	/^function! ale_linters#dart#dartanalyzer#Handle(buffer, lines) abort$/;"	f
ale_linters#dart#language_server#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/dart/language_server.vim	/^function! ale_linters#dart#language_server#GetExecutable(buffer) abort$/;"	f
ale_linters#dart#language_server#GetLanguage	pack/plugins/start/w0rp-ale/ale_linters/dart/language_server.vim	/^function! ale_linters#dart#language_server#GetLanguage(buffer) abort$/;"	f
ale_linters#dart#language_server#GetProjectRoot	pack/plugins/start/w0rp-ale/ale_linters/dart/language_server.vim	/^function! ale_linters#dart#language_server#GetProjectRoot(buffer) abort$/;"	f
ale_linters#dockerfile#hadolint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/dockerfile/hadolint.vim	/^function! ale_linters#dockerfile#hadolint#GetCommand(buffer) abort$/;"	f
ale_linters#dockerfile#hadolint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/dockerfile/hadolint.vim	/^function! ale_linters#dockerfile#hadolint#GetExecutable(buffer) abort$/;"	f
ale_linters#dockerfile#hadolint#Handle	pack/plugins/start/w0rp-ale/ale_linters/dockerfile/hadolint.vim	/^function! ale_linters#dockerfile#hadolint#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#credo#Handle	pack/plugins/start/w0rp-ale/ale_linters/elixir/credo.vim	/^function! ale_linters#elixir#credo#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#dogma#Handle	pack/plugins/start/w0rp-ale/ale_linters/elixir/dogma.vim	/^function! ale_linters#elixir#dogma#Handle(buffer, lines) abort$/;"	f
ale_linters#elm#make#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetCommand(buffer) abort$/;"	f
ale_linters#elm#make#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetExecutable(buffer) abort$/;"	f
ale_linters#elm#make#Handle	pack/plugins/start/w0rp-ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#Handle(buffer, lines) abort$/;"	f
ale_linters#erlang#erlc#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/erlang/erlc.vim	/^function! ale_linters#erlang#erlc#GetCommand(buffer) abort$/;"	f
ale_linters#erlang#erlc#Handle	pack/plugins/start/w0rp-ale/ale_linters/erlang/erlc.vim	/^function! ale_linters#erlang#erlc#Handle(buffer, lines) abort$/;"	f
ale_linters#erlang#syntaxerl#FeatureCheck	pack/plugins/start/w0rp-ale/ale_linters/erlang/syntaxerl.vim	/^function! ale_linters#erlang#syntaxerl#FeatureCheck(buffer) abort$/;"	f
ale_linters#erlang#syntaxerl#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/erlang/syntaxerl.vim	/^function! ale_linters#erlang#syntaxerl#GetCommand(buffer, output) abort$/;"	f
ale_linters#erlang#syntaxerl#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/erlang/syntaxerl.vim	/^function! ale_linters#erlang#syntaxerl#GetExecutable(buffer) abort$/;"	f
ale_linters#erlang#syntaxerl#Handle	pack/plugins/start/w0rp-ale/ale_linters/erlang/syntaxerl.vim	/^function! ale_linters#erlang#syntaxerl#Handle(buffer, lines) abort$/;"	f
ale_linters#eruby#erb#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/eruby/erb.vim	/^function! ale_linters#eruby#erb#GetCommand(buffer) abort$/;"	f
ale_linters#eruby#erubis#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/eruby/erubis.vim	/^function! ale_linters#eruby#erubis#GetCommand(buffer) abort$/;"	f
ale_linters#fortran#gcc#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/fortran/gcc.vim	/^function! ale_linters#fortran#gcc#GetCommand(buffer) abort$/;"	f
ale_linters#fortran#gcc#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/fortran/gcc.vim	/^function! ale_linters#fortran#gcc#GetExecutable(buffer) abort$/;"	f
ale_linters#fortran#gcc#Handle	pack/plugins/start/w0rp-ale/ale_linters/fortran/gcc.vim	/^function! ale_linters#fortran#gcc#Handle(buffer, lines) abort$/;"	f
ale_linters#fuse#fusionlint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/fuse/fusionlint.vim	/^function! ale_linters#fuse#fusionlint#GetCommand(buffer) abort$/;"	f
ale_linters#fuse#fusionlint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/fuse/fusionlint.vim	/^function! ale_linters#fuse#fusionlint#GetExecutable(buffer) abort$/;"	f
ale_linters#fuse#fusionlint#Handle	pack/plugins/start/w0rp-ale/ale_linters/fuse/fusionlint.vim	/^function! ale_linters#fuse#fusionlint#Handle(buffer, lines) abort$/;"	f
ale_linters#glsl#glslang#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/glsl/glslang.vim	/^function! ale_linters#glsl#glslang#GetCommand(buffer) abort$/;"	f
ale_linters#glsl#glslang#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/glsl/glslang.vim	/^function! ale_linters#glsl#glslang#GetExecutable(buffer) abort$/;"	f
ale_linters#glsl#glslang#Handle	pack/plugins/start/w0rp-ale/ale_linters/glsl/glslang.vim	/^function! ale_linters#glsl#glslang#Handle(buffer, lines) abort$/;"	f
ale_linters#glsl#glslls#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/glsl/glslls.vim	/^function! ale_linters#glsl#glslls#GetCommand(buffer) abort$/;"	f
ale_linters#glsl#glslls#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/glsl/glslls.vim	/^function! ale_linters#glsl#glslls#GetExecutable(buffer) abort$/;"	f
ale_linters#glsl#glslls#GetLanguage	pack/plugins/start/w0rp-ale/ale_linters/glsl/glslls.vim	/^function! ale_linters#glsl#glslls#GetLanguage(buffer) abort$/;"	f
ale_linters#glsl#glslls#GetProjectRoot	pack/plugins/start/w0rp-ale/ale_linters/glsl/glslls.vim	/^function! ale_linters#glsl#glslls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#go#gobuild#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/go/gobuild.vim	/^function! ale_linters#go#gobuild#GetCommand(buffer, goenv_output) abort$/;"	f
ale_linters#go#gobuild#GetMatches	pack/plugins/start/w0rp-ale/ale_linters/go/gobuild.vim	/^function! ale_linters#go#gobuild#GetMatches(lines) abort$/;"	f
ale_linters#go#gobuild#GoEnv	pack/plugins/start/w0rp-ale/ale_linters/go/gobuild.vim	/^function! ale_linters#go#gobuild#GoEnv(buffer) abort$/;"	f
ale_linters#go#gobuild#Handler	pack/plugins/start/w0rp-ale/ale_linters/go/gobuild.vim	/^function! ale_linters#go#gobuild#Handler(buffer, lines) abort$/;"	f
ale_linters#go#gometalinter#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/go/gometalinter.vim	/^function! ale_linters#go#gometalinter#GetCommand(buffer) abort$/;"	f
ale_linters#go#gometalinter#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/go/gometalinter.vim	/^function! ale_linters#go#gometalinter#GetExecutable(buffer) abort$/;"	f
ale_linters#go#gometalinter#GetMatches	pack/plugins/start/w0rp-ale/ale_linters/go/gometalinter.vim	/^function! ale_linters#go#gometalinter#GetMatches(lines) abort$/;"	f
ale_linters#go#gometalinter#Handler	pack/plugins/start/w0rp-ale/ale_linters/go/gometalinter.vim	/^function! ale_linters#go#gometalinter#Handler(buffer, lines) abort$/;"	f
ale_linters#haml#hamllint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/haml/hamllint.vim	/^function! ale_linters#haml#hamllint#GetCommand(buffer) abort$/;"	f
ale_linters#haml#hamllint#Handle	pack/plugins/start/w0rp-ale/ale_linters/haml/hamllint.vim	/^function! ale_linters#haml#hamllint#Handle(buffer, lines) abort$/;"	f
ale_linters#handlebars#embertemplatelint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/handlebars/embertemplatelint.vim	/^function! ale_linters#handlebars#embertemplatelint#GetCommand(buffer) abort$/;"	f
ale_linters#handlebars#embertemplatelint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/handlebars/embertemplatelint.vim	/^function! ale_linters#handlebars#embertemplatelint#GetExecutable(buffer) abort$/;"	f
ale_linters#handlebars#embertemplatelint#Handle	pack/plugins/start/w0rp-ale/ale_linters/handlebars/embertemplatelint.vim	/^function! ale_linters#handlebars#embertemplatelint#Handle(buffer, lines) abort$/;"	f
ale_linters#haskell#hdevtools#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/haskell/hdevtools.vim	/^function! ale_linters#haskell#hdevtools#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#hdevtools#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/haskell/hdevtools.vim	/^function! ale_linters#haskell#hdevtools#GetExecutable(buffer) abort$/;"	f
ale_linters#haskell#hlint#Handle	pack/plugins/start/w0rp-ale/ale_linters/haskell/hlint.vim	/^function! ale_linters#haskell#hlint#Handle(buffer, lines) abort$/;"	f
ale_linters#haskell#stack_build#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/haskell/stack_build.vim	/^function! ale_linters#haskell#stack_build#GetCommand(buffer) abort$/;"	f
ale_linters#html#htmlhint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/html/htmlhint.vim	/^function! ale_linters#html#htmlhint#GetCommand(buffer) abort$/;"	f
ale_linters#html#htmlhint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/html/htmlhint.vim	/^function! ale_linters#html#htmlhint#GetExecutable(buffer) abort$/;"	f
ale_linters#html#tidy#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/html/tidy.vim	/^function! ale_linters#html#tidy#GetCommand(buffer) abort$/;"	f
ale_linters#html#tidy#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/html/tidy.vim	/^function! ale_linters#html#tidy#GetExecutable(buffer) abort$/;"	f
ale_linters#html#tidy#Handle	pack/plugins/start/w0rp-ale/ale_linters/html/tidy.vim	/^function! ale_linters#html#tidy#Handle(buffer, lines) abort$/;"	f
ale_linters#idris#idris#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/idris/idris.vim	/^function! ale_linters#idris#idris#GetCommand(buffer) abort$/;"	f
ale_linters#idris#idris#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/idris/idris.vim	/^function! ale_linters#idris#idris#GetExecutable(buffer) abort$/;"	f
ale_linters#idris#idris#Handle	pack/plugins/start/w0rp-ale/ale_linters/idris/idris.vim	/^function! ale_linters#idris#idris#Handle(buffer, lines) abort$/;"	f
ale_linters#java#checkstyle#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/java/checkstyle.vim	/^function! ale_linters#java#checkstyle#GetCommand(buffer) abort$/;"	f
ale_linters#java#checkstyle#Handle	pack/plugins/start/w0rp-ale/ale_linters/java/checkstyle.vim	/^function! ale_linters#java#checkstyle#Handle(buffer, lines) abort$/;"	f
ale_linters#java#javac#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/java/javac.vim	/^function! ale_linters#java#javac#GetCommand(buffer, import_paths) abort$/;"	f
ale_linters#java#javac#GetImportPaths	pack/plugins/start/w0rp-ale/ale_linters/java/javac.vim	/^function! ale_linters#java#javac#GetImportPaths(buffer) abort$/;"	f
ale_linters#java#javac#Handle	pack/plugins/start/w0rp-ale/ale_linters/java/javac.vim	/^function! ale_linters#java#javac#Handle(buffer, lines) abort$/;"	f
ale_linters#javascript#flow#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/javascript/flow.vim	/^function! ale_linters#javascript#flow#GetCommand(buffer, version_lines) abort$/;"	f
ale_linters#javascript#flow#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/javascript/flow.vim	/^function! ale_linters#javascript#flow#GetExecutable(buffer) abort$/;"	f
ale_linters#javascript#flow#Handle	pack/plugins/start/w0rp-ale/ale_linters/javascript/flow.vim	/^function! ale_linters#javascript#flow#Handle(buffer, lines) abort$/;"	f
ale_linters#javascript#flow#VersionCheck	pack/plugins/start/w0rp-ale/ale_linters/javascript/flow.vim	/^function! ale_linters#javascript#flow#VersionCheck(buffer) abort$/;"	f
ale_linters#javascript#jscs#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/javascript/jscs.vim	/^function! ale_linters#javascript#jscs#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#jscs#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/javascript/jscs.vim	/^function! ale_linters#javascript#jscs#GetExecutable(buffer) abort$/;"	f
ale_linters#javascript#jscs#Handle	pack/plugins/start/w0rp-ale/ale_linters/javascript/jscs.vim	/^function! ale_linters#javascript#jscs#Handle(buffer, lines) abort$/;"	f
ale_linters#javascript#jshint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/javascript/jshint.vim	/^function! ale_linters#javascript#jshint#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#jshint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/javascript/jshint.vim	/^function! ale_linters#javascript#jshint#GetExecutable(buffer) abort$/;"	f
ale_linters#javascript#standard#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/javascript/standard.vim	/^function! ale_linters#javascript#standard#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#standard#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/javascript/standard.vim	/^function! ale_linters#javascript#standard#GetExecutable(buffer) abort$/;"	f
ale_linters#javascript#xo#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/javascript/xo.vim	/^function! ale_linters#javascript#xo#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#xo#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/javascript/xo.vim	/^function! ale_linters#javascript#xo#GetExecutable(buffer) abort$/;"	f
ale_linters#json#jsonlint#Handle	pack/plugins/start/w0rp-ale/ale_linters/json/jsonlint.vim	/^function! ale_linters#json#jsonlint#Handle(buffer, lines) abort$/;"	f
ale_linters#kotlin#kotlinc#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^function! ale_linters#kotlin#kotlinc#GetCommand(buffer, import_paths) abort$/;"	f
ale_linters#kotlin#kotlinc#GetImportPaths	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^function! ale_linters#kotlin#kotlinc#GetImportPaths(buffer) abort$/;"	f
ale_linters#kotlin#kotlinc#Handle	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^function! ale_linters#kotlin#kotlinc#Handle(buffer, lines) abort$/;"	f
ale_linters#kotlin#ktlint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/kotlin/ktlint.vim	/^function! ale_linters#kotlin#ktlint#GetCommand(buffer) abort$/;"	f
ale_linters#kotlin#ktlint#Handle	pack/plugins/start/w0rp-ale/ale_linters/kotlin/ktlint.vim	/^function! ale_linters#kotlin#ktlint#Handle(buffer, lines) abort$/;"	f
ale_linters#less#lessc#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/less/lessc.vim	/^function! ale_linters#less#lessc#GetCommand(buffer) abort$/;"	f
ale_linters#less#lessc#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/less/lessc.vim	/^function! ale_linters#less#lessc#GetExecutable(buffer) abort$/;"	f
ale_linters#less#lessc#Handle	pack/plugins/start/w0rp-ale/ale_linters/less/lessc.vim	/^function! ale_linters#less#lessc#Handle(buffer, lines) abort$/;"	f
ale_linters#less#stylelint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/less/stylelint.vim	/^function! ale_linters#less#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#less#stylelint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/less/stylelint.vim	/^function! ale_linters#less#stylelint#GetExecutable(buffer) abort$/;"	f
ale_linters#llvm#llc#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/llvm/llc.vim	/^function! ale_linters#llvm#llc#GetCommand(buffer) abort$/;"	f
ale_linters#llvm#llc#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/llvm/llc.vim	/^function! ale_linters#llvm#llc#GetExecutable(buffer) abort$/;"	f
ale_linters#llvm#llc#HandleErrors	pack/plugins/start/w0rp-ale/ale_linters/llvm/llc.vim	/^function! ale_linters#llvm#llc#HandleErrors(buffer, lines) abort$/;"	f
ale_linters#lua#luacheck#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/lua/luacheck.vim	/^function! ale_linters#lua#luacheck#GetCommand(buffer) abort$/;"	f
ale_linters#lua#luacheck#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/lua/luacheck.vim	/^function! ale_linters#lua#luacheck#GetExecutable(buffer) abort$/;"	f
ale_linters#lua#luacheck#Handle	pack/plugins/start/w0rp-ale/ale_linters/lua/luacheck.vim	/^function! ale_linters#lua#luacheck#Handle(buffer, lines) abort$/;"	f
ale_linters#make#checkmake#Handle	pack/plugins/start/w0rp-ale/ale_linters/make/checkmake.vim	/^function! ale_linters#make#checkmake#Handle(buffer, lines) abort$/;"	f
ale_linters#markdown#mdl#Handle	pack/plugins/start/w0rp-ale/ale_linters/markdown/mdl.vim	/^function! ale_linters#markdown#mdl#Handle(buffer, lines) abort$/;"	f
ale_linters#markdown#remark_lint#Handle	pack/plugins/start/w0rp-ale/ale_linters/markdown/remark_lint.vim	/^function! ale_linters#markdown#remark_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#matlab#mlint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/matlab/mlint.vim	/^function! ale_linters#matlab#mlint#GetCommand(buffer) abort$/;"	f
ale_linters#matlab#mlint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/matlab/mlint.vim	/^function! ale_linters#matlab#mlint#GetExecutable(buffer) abort$/;"	f
ale_linters#matlab#mlint#Handle	pack/plugins/start/w0rp-ale/ale_linters/matlab/mlint.vim	/^function! ale_linters#matlab#mlint#Handle(buffer, lines) abort$/;"	f
ale_linters#nim#nimcheck#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/nim/nimcheck.vim	/^function! ale_linters#nim#nimcheck#GetCommand(buffer) abort$/;"	f
ale_linters#nim#nimcheck#Handle	pack/plugins/start/w0rp-ale/ale_linters/nim/nimcheck.vim	/^function! ale_linters#nim#nimcheck#Handle(buffer, lines) abort$/;"	f
ale_linters#nix#nix#Handle	pack/plugins/start/w0rp-ale/ale_linters/nix/nix.vim	/^function! ale_linters#nix#nix#Handle(buffer, lines) abort$/;"	f
ale_linters#objc#clang#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/objc/clang.vim	/^function! ale_linters#objc#clang#GetCommand(buffer) abort$/;"	f
ale_linters#objcpp#clang#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/objcpp/clang.vim	/^function! ale_linters#objcpp#clang#GetCommand(buffer) abort$/;"	f
ale_linters#ocaml#merlin#Handle	pack/plugins/start/w0rp-ale/ale_linters/ocaml/merlin.vim	/^function! ale_linters#ocaml#merlin#Handle(buffer, lines) abort$/;"	f
ale_linters#perl#perl#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/perl/perl.vim	/^function! ale_linters#perl#perl#GetCommand(buffer) abort$/;"	f
ale_linters#perl#perl#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/perl/perl.vim	/^function! ale_linters#perl#perl#GetExecutable(buffer) abort$/;"	f
ale_linters#perl#perl#Handle	pack/plugins/start/w0rp-ale/ale_linters/perl/perl.vim	/^function! ale_linters#perl#perl#Handle(buffer, lines) abort$/;"	f
ale_linters#perl#perlcritic#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/perl/perlcritic.vim	/^function! ale_linters#perl#perlcritic#GetCommand(buffer) abort$/;"	f
ale_linters#perl#perlcritic#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/perl/perlcritic.vim	/^function! ale_linters#perl#perlcritic#GetExecutable(buffer) abort$/;"	f
ale_linters#perl#perlcritic#GetProfile	pack/plugins/start/w0rp-ale/ale_linters/perl/perlcritic.vim	/^function! ale_linters#perl#perlcritic#GetProfile(buffer) abort$/;"	f
ale_linters#perl#perlcritic#Handle	pack/plugins/start/w0rp-ale/ale_linters/perl/perlcritic.vim	/^function! ale_linters#perl#perlcritic#Handle(buffer, lines) abort$/;"	f
ale_linters#php#hack#Handle	pack/plugins/start/w0rp-ale/ale_linters/php/hack.vim	/^function! ale_linters#php#hack#Handle(buffer, lines) abort$/;"	f
ale_linters#php#langserver#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/php/langserver.vim	/^function! ale_linters#php#langserver#GetCommand(buffer) abort$/;"	f
ale_linters#php#langserver#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/php/langserver.vim	/^function! ale_linters#php#langserver#GetExecutable(buffer) abort$/;"	f
ale_linters#php#langserver#GetLanguage	pack/plugins/start/w0rp-ale/ale_linters/php/langserver.vim	/^function! ale_linters#php#langserver#GetLanguage(buffer) abort$/;"	f
ale_linters#php#langserver#GetProjectRoot	pack/plugins/start/w0rp-ale/ale_linters/php/langserver.vim	/^function! ale_linters#php#langserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#php#phan#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/php/phan.vim	/^function! ale_linters#php#phan#GetCommand(buffer) abort$/;"	f
ale_linters#php#phan#Handle	pack/plugins/start/w0rp-ale/ale_linters/php/phan.vim	/^function! ale_linters#php#phan#Handle(buffer, lines) abort$/;"	f
ale_linters#php#php#Handle	pack/plugins/start/w0rp-ale/ale_linters/php/php.vim	/^function! ale_linters#php#php#Handle(buffer, lines) abort$/;"	f
ale_linters#php#phpcs#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/php/phpcs.vim	/^function! ale_linters#php#phpcs#GetCommand(buffer) abort$/;"	f
ale_linters#php#phpcs#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/php/phpcs.vim	/^function! ale_linters#php#phpcs#GetExecutable(buffer) abort$/;"	f
ale_linters#php#phpcs#Handle	pack/plugins/start/w0rp-ale/ale_linters/php/phpcs.vim	/^function! ale_linters#php#phpcs#Handle(buffer, lines) abort$/;"	f
ale_linters#php#phpmd#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/php/phpmd.vim	/^function! ale_linters#php#phpmd#GetCommand(buffer) abort$/;"	f
ale_linters#php#phpmd#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/php/phpmd.vim	/^function! ale_linters#php#phpmd#GetExecutable(buffer) abort$/;"	f
ale_linters#php#phpmd#Handle	pack/plugins/start/w0rp-ale/ale_linters/php/phpmd.vim	/^function! ale_linters#php#phpmd#Handle(buffer, lines) abort$/;"	f
ale_linters#php#phpstan#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/php/phpstan.vim	/^function! ale_linters#php#phpstan#GetCommand(buffer) abort$/;"	f
ale_linters#php#phpstan#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/php/phpstan.vim	/^function! ale_linters#php#phpstan#GetExecutable(buffer) abort$/;"	f
ale_linters#php#phpstan#Handle	pack/plugins/start/w0rp-ale/ale_linters/php/phpstan.vim	/^function! ale_linters#php#phpstan#Handle(buffer, lines) abort$/;"	f
ale_linters#proto#protoc_gen_lint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/proto/protoc_gen_lint.vim	/^function! ale_linters#proto#protoc_gen_lint#GetCommand(buffer) abort$/;"	f
ale_linters#pug#puglint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/pug/puglint.vim	/^function! ale_linters#pug#puglint#GetCommand(buffer) abort$/;"	f
ale_linters#pug#puglint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/pug/puglint.vim	/^function! ale_linters#pug#puglint#GetExecutable(buffer) abort$/;"	f
ale_linters#puppet#puppet#Handle	pack/plugins/start/w0rp-ale/ale_linters/puppet/puppet.vim	/^function! ale_linters#puppet#puppet#Handle(buffer, lines) abort$/;"	f
ale_linters#puppet#puppetlint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/puppet/puppetlint.vim	/^function! ale_linters#puppet#puppetlint#GetCommand(buffer) abort$/;"	f
ale_linters#puppet#puppetlint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/puppet/puppetlint.vim	/^function! ale_linters#puppet#puppetlint#GetExecutable(buffer) abort$/;"	f
ale_linters#python#flake8#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#GetCommand(buffer, version_output) abort$/;"	f
ale_linters#python#flake8#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#GetExecutable(buffer) abort$/;"	f
ale_linters#python#flake8#Handle	pack/plugins/start/w0rp-ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#Handle(buffer, lines) abort$/;"	f
ale_linters#python#flake8#VersionCheck	pack/plugins/start/w0rp-ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#VersionCheck(buffer) abort$/;"	f
ale_linters#python#mypy#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#GetCommand(buffer) abort$/;"	f
ale_linters#python#mypy#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#GetExecutable(buffer) abort$/;"	f
ale_linters#python#mypy#Handle	pack/plugins/start/w0rp-ale/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#Handle(buffer, lines) abort$/;"	f
ale_linters#python#prospector#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/python/prospector.vim	/^function! ale_linters#python#prospector#GetCommand(buffer) abort$/;"	f
ale_linters#python#prospector#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/python/prospector.vim	/^function! ale_linters#python#prospector#GetExecutable(buffer) abort$/;"	f
ale_linters#python#prospector#Handle	pack/plugins/start/w0rp-ale/ale_linters/python/prospector.vim	/^function! ale_linters#python#prospector#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pycodestyle#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/python/pycodestyle.vim	/^function! ale_linters#python#pycodestyle#GetCommand(buffer) abort$/;"	f
ale_linters#python#pycodestyle#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/python/pycodestyle.vim	/^function! ale_linters#python#pycodestyle#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pycodestyle#Handle	pack/plugins/start/w0rp-ale/ale_linters/python/pycodestyle.vim	/^function! ale_linters#python#pycodestyle#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pyflakes#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/python/pyflakes.vim	/^function! ale_linters#python#pyflakes#GetCommand(buffer) abort$/;"	f
ale_linters#python#pyflakes#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/python/pyflakes.vim	/^function! ale_linters#python#pyflakes#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pyflakes#Handle	pack/plugins/start/w0rp-ale/ale_linters/python/pyflakes.vim	/^function! ale_linters#python#pyflakes#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pylint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#GetCommand(buffer) abort$/;"	f
ale_linters#python#pylint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pylint#Handle	pack/plugins/start/w0rp-ale/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pyls#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/python/pyls.vim	/^function! ale_linters#python#pyls#GetCommand(buffer) abort$/;"	f
ale_linters#python#pyls#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/python/pyls.vim	/^function! ale_linters#python#pyls#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pyls#GetLanguage	pack/plugins/start/w0rp-ale/ale_linters/python/pyls.vim	/^function! ale_linters#python#pyls#GetLanguage(buffer) abort$/;"	f
ale_linters#r#lintr#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/r/lintr.vim	/^function! ale_linters#r#lintr#GetCommand(buffer) abort$/;"	f
ale_linters#reason#merlin#Handle	pack/plugins/start/w0rp-ale/ale_linters/reason/merlin.vim	/^function! ale_linters#reason#merlin#Handle(buffer, lines) abort$/;"	f
ale_linters#rst#rstcheck#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/rst/rstcheck.vim	/^function! ale_linters#rst#rstcheck#GetCommand(buffer) abort$/;"	f
ale_linters#rst#rstcheck#Handle	pack/plugins/start/w0rp-ale/ale_linters/rst/rstcheck.vim	/^function! ale_linters#rst#rstcheck#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#brakeman#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/ruby/brakeman.vim	/^function! ale_linters#ruby#brakeman#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#brakeman#Handle	pack/plugins/start/w0rp-ale/ale_linters/ruby/brakeman.vim	/^function! ale_linters#ruby#brakeman#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#rails_best_practices#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/ruby/rails_best_practices.vim	/^function! ale_linters#ruby#rails_best_practices#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#rails_best_practices#Handle	pack/plugins/start/w0rp-ale/ale_linters/ruby/rails_best_practices.vim	/^function! ale_linters#ruby#rails_best_practices#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#reek#Handle	pack/plugins/start/w0rp-ale/ale_linters/ruby/reek.vim	/^function! ale_linters#ruby#reek#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#rubocop#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/ruby/rubocop.vim	/^function! ale_linters#ruby#rubocop#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#rubocop#GetType	pack/plugins/start/w0rp-ale/ale_linters/ruby/rubocop.vim	/^function! ale_linters#ruby#rubocop#GetType(severity) abort$/;"	f
ale_linters#ruby#rubocop#Handle	pack/plugins/start/w0rp-ale/ale_linters/ruby/rubocop.vim	/^function! ale_linters#ruby#rubocop#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#ruby#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/ruby/ruby.vim	/^function! ale_linters#ruby#ruby#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#ruby#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/ruby/ruby.vim	/^function! ale_linters#ruby#ruby#GetExecutable(buffer) abort$/;"	f
ale_linters#rust#cargo#GetCargoExecutable	pack/plugins/start/w0rp-ale/ale_linters/rust/cargo.vim	/^function! ale_linters#rust#cargo#GetCargoExecutable(bufnr) abort$/;"	f
ale_linters#rust#cargo#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/rust/cargo.vim	/^function! ale_linters#rust#cargo#GetCommand(buffer, version_output) abort$/;"	f
ale_linters#rust#cargo#VersionCheck	pack/plugins/start/w0rp-ale/ale_linters/rust/cargo.vim	/^function! ale_linters#rust#cargo#VersionCheck(buffer) abort$/;"	f
ale_linters#rust#rls#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/rust/rls.vim	/^function! ale_linters#rust#rls#GetCommand(buffer) abort$/;"	f
ale_linters#rust#rls#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/rust/rls.vim	/^function! ale_linters#rust#rls#GetExecutable(buffer) abort$/;"	f
ale_linters#rust#rls#GetLanguage	pack/plugins/start/w0rp-ale/ale_linters/rust/rls.vim	/^function! ale_linters#rust#rls#GetLanguage(buffer) abort$/;"	f
ale_linters#rust#rls#GetProjectRoot	pack/plugins/start/w0rp-ale/ale_linters/rust/rls.vim	/^function! ale_linters#rust#rls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#rust#rustc#RustcCommand	pack/plugins/start/w0rp-ale/ale_linters/rust/rustc.vim	/^function! ale_linters#rust#rustc#RustcCommand(buffer_number) abort$/;"	f
ale_linters#sass#stylelint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/sass/stylelint.vim	/^function! ale_linters#sass#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#sass#stylelint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/sass/stylelint.vim	/^function! ale_linters#sass#stylelint#GetExecutable(buffer) abort$/;"	f
ale_linters#scala#scalac#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/scala/scalac.vim	/^function! ale_linters#scala#scalac#GetCommand(buffer) abort$/;"	f
ale_linters#scala#scalac#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/scala/scalac.vim	/^function! ale_linters#scala#scalac#GetExecutable(buffer) abort$/;"	f
ale_linters#scala#scalac#Handle	pack/plugins/start/w0rp-ale/ale_linters/scala/scalac.vim	/^function! ale_linters#scala#scalac#Handle(buffer, lines) abort$/;"	f
ale_linters#scala#scalastyle#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/scala/scalastyle.vim	/^function! ale_linters#scala#scalastyle#GetCommand(buffer) abort$/;"	f
ale_linters#scala#scalastyle#Handle	pack/plugins/start/w0rp-ale/ale_linters/scala/scalastyle.vim	/^function! ale_linters#scala#scalastyle#Handle(buffer, lines) abort$/;"	f
ale_linters#scss#scsslint#Handle	pack/plugins/start/w0rp-ale/ale_linters/scss/scsslint.vim	/^function! ale_linters#scss#scsslint#Handle(buffer, lines) abort$/;"	f
ale_linters#scss#stylelint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/scss/stylelint.vim	/^function! ale_linters#scss#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#scss#stylelint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/scss/stylelint.vim	/^function! ale_linters#scss#stylelint#GetExecutable(buffer) abort$/;"	f
ale_linters#sh#shell#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/sh/shell.vim	/^function! ale_linters#sh#shell#GetCommand(buffer) abort$/;"	f
ale_linters#sh#shell#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/sh/shell.vim	/^function! ale_linters#sh#shell#GetExecutable(buffer) abort$/;"	f
ale_linters#sh#shell#Handle	pack/plugins/start/w0rp-ale/ale_linters/sh/shell.vim	/^function! ale_linters#sh#shell#Handle(buffer, lines) abort$/;"	f
ale_linters#sh#shellcheck#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/sh/shellcheck.vim	/^function! ale_linters#sh#shellcheck#GetCommand(buffer, version_output) abort$/;"	f
ale_linters#sh#shellcheck#GetDialectArgument	pack/plugins/start/w0rp-ale/ale_linters/sh/shellcheck.vim	/^function! ale_linters#sh#shellcheck#GetDialectArgument(buffer) abort$/;"	f
ale_linters#sh#shellcheck#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/sh/shellcheck.vim	/^function! ale_linters#sh#shellcheck#GetExecutable(buffer) abort$/;"	f
ale_linters#sh#shellcheck#Handle	pack/plugins/start/w0rp-ale/ale_linters/sh/shellcheck.vim	/^function! ale_linters#sh#shellcheck#Handle(buffer, lines) abort$/;"	f
ale_linters#sh#shellcheck#VersionCheck	pack/plugins/start/w0rp-ale/ale_linters/sh/shellcheck.vim	/^function! ale_linters#sh#shellcheck#VersionCheck(buffer) abort$/;"	f
ale_linters#slim#slimlint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/slim/slimlint.vim	/^function! ale_linters#slim#slimlint#GetCommand(buffer) abort$/;"	f
ale_linters#slim#slimlint#Handle	pack/plugins/start/w0rp-ale/ale_linters/slim/slimlint.vim	/^function! ale_linters#slim#slimlint#Handle(buffer, lines) abort$/;"	f
ale_linters#sml#smlnj_cm#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/sml/smlnj_cm.vim	/^function! ale_linters#sml#smlnj_cm#GetCommand(buffer) abort$/;"	f
ale_linters#spec#rpmlint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/spec/rpmlint.vim	/^function! ale_linters#spec#rpmlint#GetCommand(buffer) abort$/;"	f
ale_linters#spec#rpmlint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/spec/rpmlint.vim	/^function! ale_linters#spec#rpmlint#GetExecutable(buffer) abort$/;"	f
ale_linters#spec#rpmlint#Handle	pack/plugins/start/w0rp-ale/ale_linters/spec/rpmlint.vim	/^function! ale_linters#spec#rpmlint#Handle(buffer, lines) abort$/;"	f
ale_linters#sql#sqlint#Handle	pack/plugins/start/w0rp-ale/ale_linters/sql/sqlint.vim	/^function! ale_linters#sql#sqlint#Handle(buffer, lines) abort$/;"	f
ale_linters#stylus#stylelint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/stylus/stylelint.vim	/^function! ale_linters#stylus#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#stylus#stylelint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/stylus/stylelint.vim	/^function! ale_linters#stylus#stylelint#GetExecutable(buffer) abort$/;"	f
ale_linters#swift#swiftlint#Handle	pack/plugins/start/w0rp-ale/ale_linters/swift/swiftlint.vim	/^function! ale_linters#swift#swiftlint#Handle(buffer, lines) abort$/;"	f
ale_linters#tcl#nagelfar#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/tcl/nagelfar.vim	/^function! ale_linters#tcl#nagelfar#GetCommand(buffer) abort$/;"	f
ale_linters#tcl#nagelfar#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/tcl/nagelfar.vim	/^function! ale_linters#tcl#nagelfar#GetExecutable(buffer) abort$/;"	f
ale_linters#tcl#nagelfar#Handle	pack/plugins/start/w0rp-ale/ale_linters/tcl/nagelfar.vim	/^function! ale_linters#tcl#nagelfar#Handle(buffer, lines) abort$/;"	f
ale_linters#terraform#tflint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/terraform/tflint.vim	/^function! ale_linters#terraform#tflint#GetCommand(buffer) abort$/;"	f
ale_linters#terraform#tflint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/terraform/tflint.vim	/^function! ale_linters#terraform#tflint#GetExecutable(buffer) abort$/;"	f
ale_linters#terraform#tflint#Handle	pack/plugins/start/w0rp-ale/ale_linters/terraform/tflint.vim	/^function! ale_linters#terraform#tflint#Handle(buffer, lines) abort$/;"	f
ale_linters#tex#chktex#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/tex/chktex.vim	/^function! ale_linters#tex#chktex#GetCommand(buffer) abort$/;"	f
ale_linters#tex#chktex#Handle	pack/plugins/start/w0rp-ale/ale_linters/tex/chktex.vim	/^function! ale_linters#tex#chktex#Handle(buffer, lines) abort$/;"	f
ale_linters#tex#lacheck#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/tex/lacheck.vim	/^function! ale_linters#tex#lacheck#GetCommand(buffer) abort$/;"	f
ale_linters#tex#lacheck#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/tex/lacheck.vim	/^function! ale_linters#tex#lacheck#GetExecutable(buffer) abort$/;"	f
ale_linters#tex#lacheck#Handle	pack/plugins/start/w0rp-ale/ale_linters/tex/lacheck.vim	/^function! ale_linters#tex#lacheck#Handle(buffer, lines) abort$/;"	f
ale_linters#thrift#thrift#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/thrift/thrift.vim	/^function! ale_linters#thrift#thrift#GetCommand(buffer) abort$/;"	f
ale_linters#thrift#thrift#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/thrift/thrift.vim	/^function! ale_linters#thrift#thrift#GetExecutable(buffer) abort$/;"	f
ale_linters#thrift#thrift#Handle	pack/plugins/start/w0rp-ale/ale_linters/thrift/thrift.vim	/^function! ale_linters#thrift#thrift#Handle(buffer, lines) abort$/;"	f
ale_linters#typescript#tslint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/typescript/tslint.vim	/^function! ale_linters#typescript#tslint#GetCommand(buffer) abort$/;"	f
ale_linters#typescript#tslint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/typescript/tslint.vim	/^function! ale_linters#typescript#tslint#GetExecutable(buffer) abort$/;"	f
ale_linters#typescript#tslint#Handle	pack/plugins/start/w0rp-ale/ale_linters/typescript/tslint.vim	/^function! ale_linters#typescript#tslint#Handle(buffer, lines) abort$/;"	f
ale_linters#typescript#tsserver#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/typescript/tsserver.vim	/^function! ale_linters#typescript#tsserver#GetExecutable(buffer) abort$/;"	f
ale_linters#typescript#tsserver#GetLanguage	pack/plugins/start/w0rp-ale/ale_linters/typescript/tsserver.vim	/^function! ale_linters#typescript#tsserver#GetLanguage(buffer) abort$/;"	f
ale_linters#typescript#tsserver#GetProjectRoot	pack/plugins/start/w0rp-ale/ale_linters/typescript/tsserver.vim	/^function! ale_linters#typescript#tsserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#typescript#typecheck#Handle	pack/plugins/start/w0rp-ale/ale_linters/typescript/typecheck.vim	/^function! ale_linters#typescript#typecheck#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#iverilog#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/verilog/iverilog.vim	/^function! ale_linters#verilog#iverilog#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#iverilog#Handle	pack/plugins/start/w0rp-ale/ale_linters/verilog/iverilog.vim	/^function! ale_linters#verilog#iverilog#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#verilator#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/verilog/verilator.vim	/^function! ale_linters#verilog#verilator#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#verilator#Handle	pack/plugins/start/w0rp-ale/ale_linters/verilog/verilator.vim	/^function! ale_linters#verilog#verilator#Handle(buffer, lines) abort$/;"	f
ale_linters#vim#vint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/vim/vint.vim	/^function! ale_linters#vim#vint#GetCommand(buffer, version_output) abort$/;"	f
ale_linters#vim#vint#Handle	pack/plugins/start/w0rp-ale/ale_linters/vim/vint.vim	/^function! ale_linters#vim#vint#Handle(buffer, lines) abort$/;"	f
ale_linters#vim#vint#VersionCommand	pack/plugins/start/w0rp-ale/ale_linters/vim/vint.vim	/^function! ale_linters#vim#vint#VersionCommand(buffer) abort$/;"	f
ale_linters#xml#xmllint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/xml/xmllint.vim	/^function! ale_linters#xml#xmllint#GetCommand(buffer) abort$/;"	f
ale_linters#xml#xmllint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/xml/xmllint.vim	/^function! ale_linters#xml#xmllint#GetExecutable(buffer) abort$/;"	f
ale_linters#xml#xmllint#Handle	pack/plugins/start/w0rp-ale/ale_linters/xml/xmllint.vim	/^function! ale_linters#xml#xmllint#Handle(buffer, lines) abort$/;"	f
ale_linters#yaml#swaglint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/yaml/swaglint.vim	/^function! ale_linters#yaml#swaglint#GetCommand(buffer) abort$/;"	f
ale_linters#yaml#swaglint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/yaml/swaglint.vim	/^function! ale_linters#yaml#swaglint#GetExecutable(buffer) abort$/;"	f
ale_linters#yaml#swaglint#Handle	pack/plugins/start/w0rp-ale/ale_linters/yaml/swaglint.vim	/^function! ale_linters#yaml#swaglint#Handle(buffer, lines) abort$/;"	f
ale_linters#yaml#yamllint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/yaml/yamllint.vim	/^function! ale_linters#yaml#yamllint#GetCommand(buffer) abort$/;"	f
ale_linters#yaml#yamllint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/yaml/yamllint.vim	/^function! ale_linters#yaml#yamllint#GetExecutable(buffer) abort$/;"	f
ale_linters#yaml#yamllint#Handle	pack/plugins/start/w0rp-ale/ale_linters/yaml/yamllint.vim	/^function! ale_linters#yaml#yamllint#Handle(buffer, lines) abort$/;"	f
append	pack/plugins/start/machakann-vim-sandwich/test/test-magicchar-t-emmet.vim	/^function! s:append(itemlist, name) abort  "{{{$/;"	f
args	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^  let args = {$/;"	v
argument_error	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! s:argument_error(kind, motionwise, option, value) abort "{{{$/;"	f
argument_error	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich.vim	/^function! s:argument_error(kind, option, value) abort "{{{$/;"	f
asmfmt_autosave	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:asmfmt_autosave()$/;"	f
assert	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^function! s:assert(a1, a2, kind) abort$/;"	f
async_guru	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:async_guru(args) abort$/;"	f
asyncdo#lrun	pack/plugins/start/hauleth-asyncdo-vim/autoload/asyncdo.vim	/^func! asyncdo#lrun(...) abort$/;"	f
asyncdo#lstop	pack/plugins/start/hauleth-asyncdo-vim/autoload/asyncdo.vim	/^func! asyncdo#lstop(...) abort$/;"	f
asyncdo#run	pack/plugins/start/hauleth-asyncdo-vim/autoload/asyncdo.vim	/^func! asyncdo#run(...) abort$/;"	f
asyncdo#stop	pack/plugins/start/hauleth-asyncdo-vim/autoload/asyncdo.vim	/^func! asyncdo#stop(...) abort$/;"	f
asyncomplete#sources#tmuxcomplete#completor	pack/plugins/start/wellle-tmux-complete-vim/autoload/asyncomplete/sources/tmuxcomplete.vim	/^function! asyncomplete#sources#tmuxcomplete#completor(opt, ctx)$/;"	f
asyncomplete#sources#tmuxcomplete#register	pack/plugins/start/wellle-tmux-complete-vim/autoload/asyncomplete/sources/tmuxcomplete.vim	/^function! asyncomplete#sources#tmuxcomplete#register(opts)$/;"	f
auto_sameids	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:auto_sameids()$/;"	f
auto_type_info	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:auto_type_info()$/;"	f
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^let b:current_syntax = "go"$/;"	v
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/godefstack.vim	/^let b:current_syntax = "godefstack"$/;"	v
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/gohtmltmpl.vim	/^let b:current_syntax = "gohtmltmpl"$/;"	v
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/gotexttmpl.vim	/^let b:current_syntax = "gotexttmpl"$/;"	v
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/vimgo.vim	/^let b:current_syntax = "vimgo"$/;"	v
b:current_syntax	pack/plugins/start/w0rp-ale/syntax/ale-fix-suggest.vim	/^let b:current_syntax = 'ale-fix-suggest'$/;"	v
b:did_ftplugin	pack/plugins/start/fatih-vim-go/ftplugin/asm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	pack/plugins/start/fatih-vim-go/indent/go.vim	/^let b:did_indent = 1$/;"	v
b:did_sandwich_initex_ftplugin	pack/plugins/start/machakann-vim-sandwich/after/ftplugin/initex/sandwich.vim	/^let b:did_sandwich_initex_ftplugin = 1$/;"	v
b:did_sandwich_plaintex_ftplugin	pack/plugins/start/machakann-vim-sandwich/after/ftplugin/plaintex/sandwich.vim	/^let b:did_sandwich_plaintex_ftplugin = 1$/;"	v
b:did_sandwich_tex_ftplugin	pack/plugins/start/machakann-vim-sandwich/after/ftplugin/tex/sandwich.vim	/^let b:did_sandwich_tex_ftplugin = 1$/;"	v
b:qf_isLoc	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^let b:qf_isLoc = !empty(getloclist(0))$/;"	v
b:sandwich_tex_marks_recipes	pack/plugins/start/machakann-vim-sandwich/after/ftplugin/initex/sandwich.vim	/^let b:sandwich_tex_marks_recipes = deepcopy(s:marks_recipes)$/;"	v
b:undo_ftplugin	pack/plugins/start/fatih-vim-go/ftplugin/asm.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	pack/plugins/start/machakann-vim-sandwich/after/ftplugin/initex/sandwich.vim	/^  let b:undo_ftplugin .= ' | '$/;"	v
b:undo_ftplugin	pack/plugins/start/machakann-vim-sandwich/after/ftplugin/initex/sandwich.vim	/^  let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	pack/plugins/start/machakann-vim-sandwich/after/ftplugin/initex/sandwich.vim	/^let b:undo_ftplugin .= 'unlet b:did_sandwich_initex_ftplugin | call sandwich#util#ftrevert("initex")'$/;"	v
b:undo_ftplugin	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^let b:undo_ftplugin = "setl fo< com< ofu<"$/;"	v
badgood	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:badgood(args)$/;"	f
blockwisevisual_info	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! s:blockwisevisual_info(mode) abort  "{{{$/;"	f
buffer	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer_commit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_compare_age	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
buffer_completion	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! s:buffer_completion() abort "{{{$/;"	f
buffer_containing_commit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_exec	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:buffer_exec(buffer, fn)$/;"	f
buffer_expand	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_getline	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getvar	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_name	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_path	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_repo	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_rev	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_setvar	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_sha1	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_spec	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  function! s:buffer_spec() dict abort$/;"	f
buffer_type	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_up	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_up(...) dict abort$/;"	f
bufignore.detect	pack/plugins/start/kopischke-vim-fetch/autoload/fetch.vim	/^function! s:bufignore.detect(bufnr) abort$/;"	f
bufignore.freaks	pack/plugins/start/kopischke-vim-fetch/autoload/fetch.vim	/^function! s:bufignore.freaks[-1].detect(buffer) abort$/;"	f
build	pack/plugins/start/hauleth-asyncdo-vim/autoload/asyncdo.vim	/^func! s:build(scope, prefix, reset, settitle) abort$/;"	f
build	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! s:build(itemlist) abort "{{{$/;"	f
build_command	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:build_command(cmd)$/;"	f
build_command	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! s:build_command(base, capture_args, splitmode, as)$/;"	f
c	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:c()$/;"	f
c2p	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/lib.vim	/^function! s:c2p(coord) abort  "{{{$/;"	f
cache_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! s:cache_project_root(path) abort$/;"	f
callback_handlers_on_exit	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:callback_handlers_on_exit(job, exit_status, data) abort$/;"	f
callbacks	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let callbacks = go#job#Spawn(a:args)$/;"	v
callbacks	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let callbacks = go#job#Spawn(a:args)$/;"	v
callbacks	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^  let callbacks = go#job#Spawn(a:args)$/;"	v
camelcase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:camelcase(word)$/;"	f
can_diffoff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
cancel_highlight	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:cancel_highlight(id) abort  "{{{$/;"	f
cbs	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^    let cbs.callback = a:args.callback$/;"	v
cbs	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^    let cbs.exit_cb = a:args.exit_cb$/;"	v
cbs.exit_cb	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^  function cbs.exit_cb(job, exitval) dict$/;"	f
cbs.show_errors	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^  function cbs.show_errors(listtype) dict$/;"	f
cd	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let cd = exists('*haslocaldir') && haslocaldir() ? 'lcd ' : 'cd '$/;"	v
cd	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let cd = exists('*haslocaldir') && haslocaldir() ? 'lcd ' : 'cd '$/;"	v
cd	pack/plugins/start/fatih-vim-go/autoload/go/test.vim	/^  let cd = exists('*haslocaldir') && haslocaldir() ? 'lcd ' : 'cd '$/;"	v
cfile	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:cfile() abort$/;"	f
cgc	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^    nmap cgc <Plug>ChangeCommentary$/;"	m
chCwd	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chCwd(node)$/;"	f
chRoot	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chRoot(node)$/;"	f
check_a_bun	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^function! s:check_a_bun(bun) abort  "{{{$/;"	f
check_buns	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:check_buns(buns) abort  "{{{$/;"	f
check_edges	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^function! s:check_edges(head, tail, patterns) abort  "{{{$/;"	f
check_errors	pack/plugins/start/w0rp-ale/test/script/custom-linting-rules	/^check_errors() {$/;"	f
check_ket	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! s:check_ket(itemlist, i) abort  "{{{$/;"	f
check_textobj_diff	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^function! s:check_textobj_diff(head, tail, candidate, opt_noremap) abort  "{{{$/;"	f
chomp	pack/plugins/start/fatih-vim-go/autoload/go/keyify.vim	/^function! s:chomp(string)$/;"	f
clean	pack/plugins/start/xtal8-traces-vim/plugin/traces.vim	/^function! s:clean() abort$/;"	f
clearPack	get-plugins.go	/^func clearPack() {$/;"	f
clear_autocmds	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:clear_autocmds() abort "{{{$/;"	f
clock.elapsed	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/clock.vim	/^function! s:clock.elapsed() dict abort "{{{$/;"	f
clock.pause	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/clock.vim	/^function! s:clock.pause() dict abort "{{{$/;"	f
clock.start	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/clock.vim	/^function! s:clock.start() dict abort  "{{{$/;"	f
clock.stop	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/clock.vim	/^function! s:clock.stop() dict abort  "{{{$/;"	f
closeChildren	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeChildren(node)$/;"	f
closeCurrentDir	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeCurrentDir(node)$/;"	f
closeTreeWindow	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeTreeWindow()$/;"	f
close_cb	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^  function! s:close_cb(ch) closure$/;"	f
cmd_job	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function s:cmd_job(args) abort$/;"	f
co	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^  nmap co =o$/;"	m
code	pack/plugins/start/fatih-vim-go/autoload/fzf/decls.vim	/^function! s:code(group, attr) abort$/;"	f
coerce	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:coerce(transformation)$/;"	f
colmax	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/constants.vim	/^function! s:colmax() abort$/;"	f
color	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^type color struct {$/;"	t
color	pack/plugins/start/fatih-vim-go/autoload/fzf/decls.vim	/^function! s:color(str, group) abort$/;"	f
color	pack/plugins/start/w0rp-ale/test/script/run-vader-tests	/^function color-vader-output() {$/;"	f
colors	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^var colors = map[string]color{$/;"	v
colors_name	pack/colors/start/romainl-apprentice/colors/apprentice.vim	/^let colors_name = "apprentice"$/;"	v
colors_name	pack/colors/start/romainl-disciple/colors/disciple.vim	/^let colors_name = 'disciple'$/;"	v
command	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:command(definition) abort$/;"	f
commands.abbrev.process	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:commands.abbrev.process(bang,line1,line2,count,args)$/;"	f
commands.abstract.dispatch	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:commands.abstract.dispatch(bang,line1,line2,count,args)$/;"	f
commands.abstract.go	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:commands.abstract.go(bang,line1,line2,count,args)$/;"	f
commands.search.process	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:commands.search.process(bang,line1,line2,count,args)$/;"	f
commands.substitute.process	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:commands.substitute.process(bang,line1,line2,count,args)$/;"	f
compare	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! s:compare(i1, i2) abort "{{{$/;"	f
compare_buf_length	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^  function! s:compare_buf_length(i1, i2) abort$/;"	f
compare_buf_length	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^function! s:compare_buf_length(i1, i2) abort  "{{{$/;"	f
complete	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^fun! s:complete(lead, cmdline, cursor)$/;"	f
complete	pack/plugins/start/wellle-tmux-complete-vim/autoload/asyncomplete/sources/tmuxcomplete.vim	/^function! s:complete(params, candidates, incomplete)$/;"	f
configured_tree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:configured_tree(git_dir) abort$/;"	f
constants.colmax	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/constants.vim	/^function! s:constants.colmax() dict abort$/;"	f
coord.get_inner	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^function! s:coord.get_inner(buns, skip_break) dict abort "{{{$/;"	f
coord.initialize	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^function! s:coord.initialize() dict abort "{{{$/;"	f
coord.next	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^function! s:coord.next() dict abort  "{{{$/;"	f
coverage_browser_callback	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! s:coverage_browser_callback(coverfile, job, exit_status, data)$/;"	f
coverage_browser_handler	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! s:coverage_browser_handler(job, exit_status, data) abort$/;"	f
coverage_callback	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! s:coverage_callback(coverfile, job, exit_status, data)$/;"	f
coverage_handler	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! s:coverage_handler(job, exit_status, data) abort$/;"	f
coverage_job	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function s:coverage_job(args)$/;"	f
cpath	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:cpath(path) abort$/;"	f
cr	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^  nmap cr  <Plug>Coerce$/;"	m
create_cmd	pack/plugins/start/fatih-vim-go/autoload/go/tags.vim	/^func s:create_cmd(args) abort$/;"	f
create_dictionary	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:create_dictionary(lhs,rhs,opts)$/;"	f
cs	pack/plugins/start/machakann-vim-sandwich/macros/sandwich/keymap/surround.vim	/^nmap cs <Plug>(operator-sandwich-replace)<Plug>(operator-sandwich-release-count)<Plug>(textobj-sandwich-query-a)$/;"	m
css	pack/plugins/start/machakann-vim-sandwich/macros/sandwich/keymap/surround.vim	/^nmap css <Plug>(operator-sandwich-replace)<Plug>(operator-sandwich-release-count)<Plug>(textobj-sandwich-auto-a)$/;"	m
ctrlp#decls#accept	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#accept(mode, str) abort$/;"	f
ctrlp#decls#cmd	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#cmd(mode, ...) abort$/;"	f
ctrlp#decls#enter	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#enter() abort$/;"	f
ctrlp#decls#exit	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#exit() abort$/;"	f
ctrlp#decls#init	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#init() abort$/;"	f
cursor_options	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:cursor_options() abort$/;"	f
cword.clear	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! s:cword.clear() "{{{$/;"	f
cword.init	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! s:cword.init() "{{{$/;"	f
cword.init_highlight	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! s:cword.init_highlight() "{{{$/;"	f
cword.refresh	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! s:cword.refresh() "{{{$/;"	f
cword.set	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! s:cword.set() "{{{$/;"	f
dab	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal dab$/;"	m
das(	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal das($/;"	m
dasc	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal dasc$/;"	m
dashcase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:dashcase(word)$/;"	f
decho	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:decho(msg) "{{{1$/;"	f
def_job	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function s:def_job(args) abort$/;"	f
default	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^function! s:default() abort$/;"	f
default_highlight	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^function! s:default_highlight() abort$/;"	f
default_options	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! s:default_options(kind, motionwise) abort "{{{$/;"	f
default_options	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich.vim	/^function! s:default_options(kind) abort "{{{$/;"	f
define_commands	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:define_commands() abort$/;"	f
deleteBookmark	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:deleteBookmark(bm)$/;"	f
delete_former	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:delete_former(head, tail, latter_head, opt, ...) abort  "{{{$/;"	f
delete_latter	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:delete_latter(head, tail, former_head, opt) abort  "{{{$/;"	f
delete_portion	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:delete_portion(head, tail, undojoin_cmd) abort  "{{{$/;"	f
dib	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal dib$/;"	m
diff_modifier	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diff_modifier(count) abort$/;"	f
diff_restore	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diff_restore() abort$/;"	f
diff_window_count	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
diffoff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff() abort$/;"	f
diffoff_all	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
diffthis	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diffthis() abort$/;"	f
dir	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let dir = getcwd()$/;"	v
dir	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let dir = getcwd()$/;"	v
dir	pack/plugins/start/fatih-vim-go/autoload/go/test.vim	/^  let dir = getcwd()$/;"	v
dis(	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal dis($/;"	m
disc	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal disc$/;"	m
dispatcher	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:dispatcher(bang,line1,line2,count,args)$/;"	f
displayHelp	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:displayHelp()$/;"	f
do	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! s:do(kind, motionwise, AutocmdPre, AutocmdPost) abort "{{{$/;"	f
doautocmd	pack/plugins/start/kopischke-vim-fetch/autoload/fetch.vim	/^function! s:doautocmd(pattern) abort$/;"	f
doautocmd	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! s:doautocmd(name) abort "{{{$/;"	f
dotcase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:dotcase(word)$/;"	f
dovisual	pack/plugins/start/kopischke-vim-fetch/autoload/fetch.vim	/^function! s:dovisual(command) abort$/;"	f
ds	pack/plugins/start/machakann-vim-sandwich/macros/sandwich/keymap/surround.vim	/^nmap ds <Plug>(operator-sandwich-delete)<Plug>(operator-sandwich-release-count)<Plug>(textobj-sandwich-query-a)$/;"	m
dss	pack/plugins/start/machakann-vim-sandwich/macros/sandwich/keymap/surround.vim	/^nmap dss <Plug>(operator-sandwich-delete)<Plug>(operator-sandwich-release-count)<Plug>(textobj-sandwich-auto-a)$/;"	m
echo	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! s:echo(msg, hi)$/;"	f
echo_go_info	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:echo_go_info()$/;"	f
egrep_pattern	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:egrep_pattern(dict,boundaries)$/;"	f
enable_syntax	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! s:enable_syntax() abort$/;"	f
enmasse#DisplayQuickfixEntryForCurrentLine	pack/plugins/start/olical-vim-enmasse/autoload/enmasse.vim	/^function! enmasse#DisplayQuickfixEntryForCurrentLine()$/;"	f
enmasse#GetVersion	pack/plugins/start/olical-vim-enmasse/autoload/enmasse.vim	/^function! enmasse#GetVersion()$/;"	f
enmasse#Open	pack/plugins/start/olical-vim-enmasse/autoload/enmasse.vim	/^function! enmasse#Open()$/;"	f
enmasse#WriteCurrentBuffer	pack/plugins/start/olical-vim-enmasse/autoload/enmasse.vim	/^function! enmasse#WriteCurrentBuffer()$/;"	f
entries	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:entries(path)$/;"	f
escape	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/lib.vim	/^function! s:escape(string) abort  "{{{$/;"	f
escape	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! s:escape(string) abort  "{{{$/;"	f
eunuch	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^augroup eunuch$/;"	a
eval	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^function! s:eval(expr, ...) abort "{{{$/;"	f
evalexpr	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^function! s:evalexpr(dough) abort "{{{$/;"	f
exe	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:exe(cmd) "{{{1$/;"	f
executable	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:executable(binary) abort$/;"	f
execute_command	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:execute_command(head, tail, command_list) abort "{{{$/;"	f
exists	get-plugins.go	/^func exists(path string) (bool, error) {$/;"	f
exit	pack/plugins/start/wellle-tmux-complete-vim/autoload/asyncomplete/sources/tmuxcomplete.vim	/^function! s:exit(params, id, data, event) abort$/;"	f
exit_cb	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^  function! s:exit_cb(job, exitval) closure$/;"	f
exit_cb	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  function! s:exit_cb(job, exitval) closure$/;"	f
exit_cb	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  function! s:exit_cb(job, exitval) closure$/;"	f
exit_cb	pack/plugins/start/fatih-vim-go/autoload/go/test.vim	/^  function! s:exit_cb(job, exitval) closure$/;"	f
exitval	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^  let exitval = 0$/;"	v
expand	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! s:expand(text) abort  "{{{$/;"	f
expand_braces	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:expand_braces(dict)$/;"	f
expr_filter	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:expr_filter(candidate) abort  "{{{$/;"	f
expr_filter	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/recipes.vim	/^function! s:expr_filter(candidate) abort  "{{{$/;"	f
extract_pattern	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! s:extract_pattern(string, pat) abort "{{{$/;"	f
extract_pattern	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/i.vim	/^function! s:extract_pattern(string, pat) abort "{{{$/;"	f
extract_patterns_from_lines	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/i.vim	/^function! s:extract_patterns_from_lines(lines, pat) abort "{{{$/;"	f
extractopts	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:extractopts(list,opts)$/;"	f
fetch	pack/plugins/start/kopischke-vim-fetch/plugin/fetch.vim	/^augroup fetch$/;"	a
fetch#buffer	pack/plugins/start/kopischke-vim-fetch/autoload/fetch.vim	/^function! fetch#buffer(spec) abort " {{{$/;"	f
fetch#cfile	pack/plugins/start/kopischke-vim-fetch/autoload/fetch.vim	/^function! fetch#cfile(count) abort " {{{$/;"	f
fetch#specs	pack/plugins/start/kopischke-vim-fetch/autoload/fetch.vim	/^function! fetch#specs() abort " {{{$/;"	f
fetch#visual	pack/plugins/start/kopischke-vim-fetch/autoload/fetch.vim	/^function! fetch#visual(count) abort " {{{$/;"	f
ffsda[	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal ffsda[$/;"	m
ffsra(c	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal ffsra(c$/;"	m
filter	pack/plugins/start/w0rp-ale/test/script/run-vader-tests	/^function filter-vader-output() {$/;"	f
finalize	pack/plugins/start/hauleth-asyncdo-vim/autoload/asyncdo.vim	/^func! s:finalize(scope, prefix, settitle) abort$/;"	f
findAndRevealPath	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:findAndRevealPath()$/;"	f
find_command	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:find_command(cmd,flags,word)$/;"	f
fmt_autosave	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:fmt_autosave()$/;"	f
fmt_cmd	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! s:fmt_cmd(bin_name, source, target)$/;"	f
fnameescape	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:fnameescape(string) abort$/;"	f
fnameescape	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
fnameescape	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:fnameescape(file) abort$/;"	f
format_for_log	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:format_for_log(data) abort$/;"	f
friendly_name	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^  let friendly_name = FriendlyName(test)$/;"	v
fugitive	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#buffer	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#can_diffoff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#can_diffoff(buf) abort$/;"	f
fugitive#cfile	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#cfile() abort$/;"	f
fugitive#cwindow	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#cwindow() abort$/;"	f
fugitive#detect	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#foldtext	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#git_commands	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_commands() abort$/;"	f
fugitive#git_version	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_version(...) abort$/;"	f
fugitive#head	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#reload_status	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#repo	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#statusline	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive_blame	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_foldtext	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_foldtext$/;"	a
fugitive_remove	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_status	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_statusline	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_statusline$/;"	a
fugitive_temp	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_temp$/;"	a
function	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:function(name)$/;"	f
function	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:function(name) abort$/;"	f
fzf#decls#cmd	pack/plugins/start/fatih-vim-go/autoload/fzf/decls.vim	/^function! fzf#decls#cmd(...) abort$/;"	f
g:NERDTree	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/nerdtree.vim	/^let g:NERDTree = s:NERDTree$/;"	v
g:NERDTreeAutoDeleteBuffer	pack/plugins/start/scrooloose-nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeAutoDeleteBuffer	vimrc	/^        let g:NERDTreeAutoDeleteBuffer=1$/;"	v
g:NERDTreeBookmark	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeCreator	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirArrowCollapsible	vimrc	/^        let g:NERDTreeDirArrowCollapsible="-"$/;"	v
g:NERDTreeDirArrowExpandable	vimrc	/^        let g:NERDTreeDirArrowExpandable="+"$/;"	v
g:NERDTreeDirNode	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeEvent	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/event.vim	/^let g:NERDTreeEvent = s:Event$/;"	v
g:NERDTreeFileNode	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeFlagSet	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/flag_set.vim	/^let g:NERDTreeFlagSet = s:FlagSet$/;"	v
g:NERDTreeHijackNetrw	vimrc	/^        let g:NERDTreeHijackNetrw=1$/;"	v
g:NERDTreeIgnore	pack/plugins/start/scrooloose-nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeKeyMap	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMenuController	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuItem	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeMinimalUI	vimrc	/^        let g:NERDTreeMinimalUI=1$/;"	v
g:NERDTreeOpener	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreePathNotifier	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/notifier.vim	/^let g:NERDTreePathNotifier = deepcopy(s:Notifier)$/;"	v
g:NERDTreeQuitOnOpen	vimrc	/^        let g:NERDTreeQuitOnOpen=1$/;"	v
g:NERDTreeSortOrder	pack/plugins/start/scrooloose-nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	pack/plugins/start/scrooloose-nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTree')?b:NERDTree.root.path.str():''}"$/;"	v
g:NERDTreeUI	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^let g:NERDTreeUI = s:UI$/;"	v
g:abolish_save_file	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^    let g:abolish_save_file = expand("~\/.vim\/after\/plugin\/abolish.vim")$/;"	v
g:abolish_save_file	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^    let g:abolish_save_file = expand("~\/vimfiles\/after\/plugin\/abolish.vim")$/;"	v
g:ale#util#nul_file	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^        let g:ale#util#nul_file = 'nul'$/;"	v
g:ale#util#nul_file	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^    let g:ale#util#nul_file = '\/dev\/null'$/;"	v
g:ale_awk_gawk_executable	pack/plugins/start/w0rp-ale/ale_linters/awk/gawk.vim	/^let g:ale_awk_gawk_executable =$/;"	v
g:ale_awk_gawk_options	pack/plugins/start/w0rp-ale/ale_linters/awk/gawk.vim	/^let g:ale_awk_gawk_options =$/;"	v
g:ale_buffer_info	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_buffer_info = {}$/;"	v
g:ale_c_build_dir_names	pack/plugins/start/w0rp-ale/autoload/ale/c.vim	/^let g:ale_c_build_dir_names = get(g:, 'ale_c_build_dir_names', [$/;"	v
g:ale_cmake_cmakelint_executable	pack/plugins/start/w0rp-ale/ale_linters/cmake/cmakelint.vim	/^let g:ale_cmake_cmakelint_executable =$/;"	v
g:ale_cmake_cmakelint_options	pack/plugins/start/w0rp-ale/ale_linters/cmake/cmakelint.vim	/^let g:ale_cmake_cmakelint_options =$/;"	v
g:ale_cs_mcs_options	pack/plugins/start/w0rp-ale/ale_linters/cs/mcs.vim	/^let g:ale_cs_mcs_options = get(g:, 'ale_cs_mcs_options', '')$/;"	v
g:ale_cs_mcsc_assemblies	pack/plugins/start/w0rp-ale/ale_linters/cs/mcsc.vim	/^let g:ale_cs_mcsc_assemblies = get(g:, 'ale_cs_mcsc_assemblies',[])$/;"	v
g:ale_cs_mcsc_assembly_path	pack/plugins/start/w0rp-ale/ale_linters/cs/mcsc.vim	/^let g:ale_cs_mcsc_assembly_path = get(g:, 'ale_cs_mcsc_assembly_path',[])$/;"	v
g:ale_cs_mcsc_options	pack/plugins/start/w0rp-ale/ale_linters/cs/mcsc.vim	/^let g:ale_cs_mcsc_options = get(g:, 'ale_cs_mcsc_options', '')$/;"	v
g:ale_cs_mcsc_source	pack/plugins/start/w0rp-ale/ale_linters/cs/mcsc.vim	/^let g:ale_cs_mcsc_source = get(g:, 'ale_cs_mcsc_source','.')$/;"	v
g:ale_echo_cursor	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_echo_cursor = get(g:, 'ale_echo_cursor', 1)$/;"	v
g:ale_echo_delay	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_echo_delay = get(g:, 'ale_echo_delay', 10)$/;"	v
g:ale_echo_msg_error_str	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_echo_msg_error_str = get(g:, 'ale_echo_msg_error_str', 'Error')$/;"	v
g:ale_echo_msg_info_str	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_echo_msg_info_str = get(g:, 'ale_echo_msg_info_str', 'Info')$/;"	v
g:ale_echo_msg_warning_str	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_echo_msg_warning_str = get(g:, 'ale_echo_msg_warning_str', 'Warning')$/;"	v
g:ale_emit_conflict_warnings	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_emit_conflict_warnings = get(g:, 'ale_emit_conflict_warnings', 1)$/;"	v
g:ale_enabled	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_enabled = get(g:, 'ale_enabled', 1)$/;"	v
g:ale_erlang_erlc_options	pack/plugins/start/w0rp-ale/ale_linters/erlang/erlc.vim	/^let g:ale_erlang_erlc_options = get(g:, 'ale_erlang_erlc_options', '')$/;"	v
g:ale_filetype_blacklist	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_filetype_blacklist = [$/;"	v
g:ale_fix_buffer_data	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^    let g:ale_fix_buffer_data = {}$/;"	v
g:ale_fixers	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_fixers = get(g:, 'ale_fixers', {})$/;"	v
g:ale_fortran_gcc_executable	pack/plugins/start/w0rp-ale/ale_linters/fortran/gcc.vim	/^    let g:ale_fortran_gcc_executable = 'gcc'$/;"	v
g:ale_fortran_gcc_options	pack/plugins/start/w0rp-ale/ale_linters/fortran/gcc.vim	/^    let g:ale_fortran_gcc_options = '-Wall'$/;"	v
g:ale_fortran_gcc_use_free_form	pack/plugins/start/w0rp-ale/ale_linters/fortran/gcc.vim	/^    let g:ale_fortran_gcc_use_free_form = 1$/;"	v
g:ale_fuse_fusionlint_executable	pack/plugins/start/w0rp-ale/ale_linters/fuse/fusionlint.vim	/^let g:ale_fuse_fusionlint_executable =$/;"	v
g:ale_fuse_fusionlint_options	pack/plugins/start/w0rp-ale/ale_linters/fuse/fusionlint.vim	/^let g:ale_fuse_fusionlint_options =$/;"	v
g:ale_glsl_glslang_executable	pack/plugins/start/w0rp-ale/ale_linters/glsl/glslang.vim	/^let g:ale_glsl_glslang_executable =$/;"	v
g:ale_glsl_glslang_options	pack/plugins/start/w0rp-ale/ale_linters/glsl/glslang.vim	/^let g:ale_glsl_glslang_options = get(g:, 'ale_glsl_glslang_options', '')$/;"	v
g:ale_has_override	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^let g:ale_has_override = get(g:, 'ale_has_override', {})$/;"	v
g:ale_history_enabled	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_history_enabled = get(g:, 'ale_history_enabled', 1)$/;"	v
g:ale_history_log_output	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_history_log_output = get(g:, 'ale_history_log_output', 1)$/;"	v
g:ale_html_tidy_executable	pack/plugins/start/w0rp-ale/ale_linters/html/tidy.vim	/^let g:ale_html_tidy_executable = get(g:, 'ale_html_tidy_executable', 'tidy')$/;"	v
g:ale_html_tidy_options	pack/plugins/start/w0rp-ale/ale_linters/html/tidy.vim	/^let g:ale_html_tidy_options = get(g:, 'ale_html_tidy_options', s:default_options)$/;"	v
g:ale_java_checkstyle_options	pack/plugins/start/w0rp-ale/ale_linters/java/checkstyle.vim	/^    let g:ale_java_checkstyle_options = '-c \/google_checks.xml'$/;"	v
g:ale_java_javac_classpath	pack/plugins/start/w0rp-ale/ale_linters/java/javac.vim	/^let g:ale_java_javac_classpath = get(g:, 'ale_java_javac_classpath', '')$/;"	v
g:ale_java_javac_options	pack/plugins/start/w0rp-ale/ale_linters/java/javac.vim	/^let g:ale_java_javac_options = get(g:, 'ale_java_javac_options', '')$/;"	v
g:ale_keep_list_window_open	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_keep_list_window_open = get(g:, 'ale_keep_list_window_open', 0)$/;"	v
g:ale_kotlin_kotlinc_classpath	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_classpath = get(g:, 'ale_kotlin_kotlinc_classpath', '')$/;"	v
g:ale_kotlin_kotlinc_config_file	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_config_file = get(g:, 'ale_kotlin_kotlinc_config_file', '.ale_kotlinc_config')$/;"	v
g:ale_kotlin_kotlinc_enable_config	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_enable_config = get(g:, 'ale_kotlin_kotlinc_enable_config', 0)$/;"	v
g:ale_kotlin_kotlinc_module_filename	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_module_filename = get(g:, 'ale_kotlin_kotlinc_module_filename', 'module.xml')$/;"	v
g:ale_kotlin_kotlinc_options	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_options = get(g:, 'ale_kotlin_kotlinc_options', '')$/;"	v
g:ale_kotlin_kotlinc_sourcepath	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_sourcepath = get(g:, 'ale_kotlin_kotlinc_sourcepath', '')$/;"	v
g:ale_kotlin_kotlinc_use_module_file	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_use_module_file = get(g:, 'ale_kotlin_kotlinc_use_module_file', 0)$/;"	v
g:ale_lint_delay	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_lint_delay = get(g:, 'ale_lint_delay', 200)$/;"	v
g:ale_lint_on_enter	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_lint_on_enter = get(g:, 'ale_lint_on_enter', 1)$/;"	v
g:ale_lint_on_filetype_changed	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_lint_on_filetype_changed = get(g:, 'ale_lint_on_filetype_changed', 1)$/;"	v
g:ale_lint_on_insert_leave	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_lint_on_insert_leave = get(g:, 'ale_lint_on_insert_leave', 0)$/;"	v
g:ale_lint_on_save	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_lint_on_save = get(g:, 'ale_lint_on_save', 1)$/;"	v
g:ale_lint_on_text_changed	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_lint_on_text_changed = get(g:, 'ale_lint_on_text_changed', 'always')$/;"	v
g:ale_linter_aliases	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_linter_aliases = get(g:, 'ale_linter_aliases', {})$/;"	v
g:ale_lsp_next_message_id	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^let g:ale_lsp_next_message_id = 1$/;"	v
g:ale_lsp_next_version_id	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^let g:ale_lsp_next_version_id = 1$/;"	v
g:ale_lua_luacheck_executable	pack/plugins/start/w0rp-ale/ale_linters/lua/luacheck.vim	/^let g:ale_lua_luacheck_executable =$/;"	v
g:ale_lua_luacheck_options	pack/plugins/start/w0rp-ale/ale_linters/lua/luacheck.vim	/^let g:ale_lua_luacheck_options =$/;"	v
g:ale_matlab_mlint_executable	pack/plugins/start/w0rp-ale/ale_linters/matlab/mlint.vim	/^let g:ale_matlab_mlint_executable =$/;"	v
g:ale_max_buffer_history_size	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_max_buffer_history_size = get(g:, 'ale_max_buffer_history_size', 20)$/;"	v
g:ale_max_signs	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_max_signs = get(g:, 'ale_max_signs', -1)$/;"	v
g:ale_objc_clang_options	pack/plugins/start/w0rp-ale/ale_linters/objc/clang.vim	/^    let g:ale_objc_clang_options = '-std=c11 -Wall'$/;"	v
g:ale_objcpp_clang_options	pack/plugins/start/w0rp-ale/ale_linters/objcpp/clang.vim	/^    let g:ale_objcpp_clang_options = '-std=c++14 -Wall'$/;"	v
g:ale_open_list	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_open_list = get(g:, 'ale_open_list', 0)$/;"	v
g:ale_perl_perl_executable	pack/plugins/start/w0rp-ale/ale_linters/perl/perl.vim	/^let g:ale_perl_perl_executable =$/;"	v
g:ale_perl_perl_options	pack/plugins/start/w0rp-ale/ale_linters/perl/perl.vim	/^let g:ale_perl_perl_options =$/;"	v
g:ale_perl_perlcritic_executable	pack/plugins/start/w0rp-ale/ale_linters/perl/perlcritic.vim	/^let g:ale_perl_perlcritic_executable =$/;"	v
g:ale_perl_perlcritic_options	pack/plugins/start/w0rp-ale/ale_linters/perl/perlcritic.vim	/^let g:ale_perl_perlcritic_options =$/;"	v
g:ale_perl_perlcritic_profile	pack/plugins/start/w0rp-ale/ale_linters/perl/perlcritic.vim	/^let g:ale_perl_perlcritic_profile =$/;"	v
g:ale_perl_perlcritic_showrules	pack/plugins/start/w0rp-ale/ale_linters/perl/perlcritic.vim	/^let g:ale_perl_perlcritic_showrules =$/;"	v
g:ale_php_phan_minimum_severity	pack/plugins/start/w0rp-ale/ale_linters/php/phan.vim	/^let g:ale_php_phan_minimum_severity = get(g:, 'ale_php_phan_minimum_severity', 0)$/;"	v
g:ale_php_phpcs_standard	pack/plugins/start/w0rp-ale/ale_linters/php/phpcs.vim	/^let g:ale_php_phpcs_standard = get(g:, 'ale_php_phpcs_standard', '')$/;"	v
g:ale_php_phpmd_executable	pack/plugins/start/w0rp-ale/ale_linters/php/phpmd.vim	/^let g:ale_php_phpmd_executable = get(g:, 'ale_php_phpmd_executable', 'phpmd')$/;"	v
g:ale_php_phpmd_ruleset	pack/plugins/start/w0rp-ale/ale_linters/php/phpmd.vim	/^let g:ale_php_phpmd_ruleset = get(g:, 'ale_php_phpmd_ruleset', 'cleancode,codesize,controversial,design,naming,unusedcode')$/;"	v
g:ale_php_phpstan_configuration	pack/plugins/start/w0rp-ale/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_configuration = get(g:, 'ale_php_phpstan_configuration', '')$/;"	v
g:ale_php_phpstan_executable	pack/plugins/start/w0rp-ale/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_executable = get(g:, 'ale_php_phpstan_executable', 'phpstan')$/;"	v
g:ale_php_phpstan_level	pack/plugins/start/w0rp-ale/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_level = get(g:, 'ale_php_phpstan_level', '4')$/;"	v
g:ale_puppet_puppetlint_executable	pack/plugins/start/w0rp-ale/ale_linters/puppet/puppetlint.vim	/^let g:ale_puppet_puppetlint_executable =$/;"	v
g:ale_puppet_puppetlint_executable	pack/plugins/start/w0rp-ale/autoload/ale/fixers/puppetlint.vim	/^    let g:ale_puppet_puppetlint_executable = 'puppet-lint'$/;"	v
g:ale_puppet_puppetlint_options	pack/plugins/start/w0rp-ale/ale_linters/puppet/puppetlint.vim	/^let g:ale_puppet_puppetlint_options =$/;"	v
g:ale_puppet_puppetlint_options	pack/plugins/start/w0rp-ale/autoload/ale/fixers/puppetlint.vim	/^    let g:ale_puppet_puppetlint_options = ''$/;"	v
g:ale_python_flake8_executable	pack/plugins/start/w0rp-ale/ale_linters/python/flake8.vim	/^let g:ale_python_flake8_executable =$/;"	v
g:ale_python_flake8_options	pack/plugins/start/w0rp-ale/ale_linters/python/flake8.vim	/^let g:ale_python_flake8_options =$/;"	v
g:ale_python_flake8_use_global	pack/plugins/start/w0rp-ale/ale_linters/python/flake8.vim	/^let g:ale_python_flake8_use_global = get(g:, 'ale_python_flake8_use_global', 0)$/;"	v
g:ale_python_mypy_executable	pack/plugins/start/w0rp-ale/ale_linters/python/mypy.vim	/^let g:ale_python_mypy_executable =$/;"	v
g:ale_python_mypy_options	pack/plugins/start/w0rp-ale/ale_linters/python/mypy.vim	/^let g:ale_python_mypy_options = get(g:, 'ale_python_mypy_options', '')$/;"	v
g:ale_python_mypy_use_global	pack/plugins/start/w0rp-ale/ale_linters/python/mypy.vim	/^let g:ale_python_mypy_use_global = get(g:, 'ale_python_mypy_use_global', 0)$/;"	v
g:ale_python_prospector_executable	pack/plugins/start/w0rp-ale/ale_linters/python/prospector.vim	/^let g:ale_python_prospector_executable =$/;"	v
g:ale_python_prospector_options	pack/plugins/start/w0rp-ale/ale_linters/python/prospector.vim	/^let g:ale_python_prospector_options =$/;"	v
g:ale_python_prospector_use_global	pack/plugins/start/w0rp-ale/ale_linters/python/prospector.vim	/^let g:ale_python_prospector_use_global = get(g:, 'ale_python_prospector_use_global', 0)$/;"	v
g:ale_python_pylint_executable	pack/plugins/start/w0rp-ale/ale_linters/python/pylint.vim	/^let g:ale_python_pylint_executable =$/;"	v
g:ale_python_pylint_options	pack/plugins/start/w0rp-ale/ale_linters/python/pylint.vim	/^let g:ale_python_pylint_options =$/;"	v
g:ale_python_pylint_use_global	pack/plugins/start/w0rp-ale/ale_linters/python/pylint.vim	/^let g:ale_python_pylint_use_global = get(g:, 'ale_python_pylint_use_global', 0)$/;"	v
g:ale_r_lintr_options	pack/plugins/start/w0rp-ale/ale_linters/r/lintr.vim	/^let g:ale_r_lintr_options =$/;"	v
g:ale_ruby_brakeman_options	pack/plugins/start/w0rp-ale/ale_linters/ruby/brakeman.vim	/^let g:ale_ruby_brakeman_options =$/;"	v
g:ale_ruby_rails_best_practices_options	pack/plugins/start/w0rp-ale/ale_linters/ruby/rails_best_practices.vim	/^let g:ale_ruby_rails_best_practices_options =$/;"	v
g:ale_rust_ignore_error_codes	pack/plugins/start/w0rp-ale/autoload/ale/handlers/rust.vim	/^    let g:ale_rust_ignore_error_codes = []$/;"	v
g:ale_scala_scalastyle_options	pack/plugins/start/w0rp-ale/ale_linters/scala/scalastyle.vim	/^let g:ale_scala_scalastyle_options =$/;"	v
g:ale_scalastyle_config_loc	pack/plugins/start/w0rp-ale/ale_linters/scala/scalastyle.vim	/^let g:ale_scalastyle_config_loc =$/;"	v
g:ale_set_highlights	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_set_highlights = get(g:, 'ale_set_highlights', has('syntax'))$/;"	v
g:ale_set_lists_synchronously	pack/plugins/start/w0rp-ale/test/.config/nvim/init.vim	/^let g:ale_set_lists_synchronously = 1$/;"	v
g:ale_set_lists_synchronously	pack/plugins/start/w0rp-ale/test/vimrc	/^let g:ale_set_lists_synchronously = 1$/;"	v
g:ale_set_loclist	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_set_loclist = get(g:, 'ale_set_loclist', 1)$/;"	v
g:ale_set_quickfix	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_set_quickfix = get(g:, 'ale_set_quickfix', 0)$/;"	v
g:ale_set_signs	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_set_signs = get(g:, 'ale_set_signs', has('signs'))$/;"	v
g:ale_sh_shell_default_shell	pack/plugins/start/w0rp-ale/ale_linters/sh/shell.vim	/^        let g:ale_sh_shell_default_shell = 'bash'$/;"	v
g:ale_sh_shell_default_shell	pack/plugins/start/w0rp-ale/ale_linters/sh/shell.vim	/^    let g:ale_sh_shell_default_shell = fnamemodify($SHELL, ':t')$/;"	v
g:ale_sh_shell_default_shell	pack/plugins/start/w0rp-ale/ale_linters/sh/shell.vim	/^    let g:ale_sh_shell_default_shell = g:ale_linters_sh_shell_default_shell$/;"	v
g:ale_sh_shellcheck_exclusions	pack/plugins/start/w0rp-ale/ale_linters/sh/shellcheck.vim	/^let g:ale_sh_shellcheck_exclusions =$/;"	v
g:ale_sh_shellcheck_executable	pack/plugins/start/w0rp-ale/ale_linters/sh/shellcheck.vim	/^let g:ale_sh_shellcheck_executable =$/;"	v
g:ale_sh_shellcheck_options	pack/plugins/start/w0rp-ale/ale_linters/sh/shellcheck.vim	/^let g:ale_sh_shellcheck_options =$/;"	v
g:ale_sign_column_always	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_sign_column_always = get(g:, 'ale_sign_column_always', 0)$/;"	v
g:ale_sign_offset	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_sign_offset = get(g:, 'ale_sign_offset', 1000000)$/;"	v
g:ale_spec_rpmlint_executable	pack/plugins/start/w0rp-ale/ale_linters/spec/rpmlint.vim	/^let g:ale_spec_rpmlint_executable =$/;"	v
g:ale_spec_rpmlint_options	pack/plugins/start/w0rp-ale/ale_linters/spec/rpmlint.vim	/^let g:ale_spec_rpmlint_options =$/;"	v
g:ale_statusline_format	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_statusline_format = get(g:, 'ale_statusline_format',$/;"	v
g:ale_tex_chktex_executable	pack/plugins/start/w0rp-ale/ale_linters/tex/chktex.vim	/^let g:ale_tex_chktex_executable =$/;"	v
g:ale_tex_chktex_options	pack/plugins/start/w0rp-ale/ale_linters/tex/chktex.vim	/^let g:ale_tex_chktex_options =$/;"	v
g:ale_tex_lacheck_executable	pack/plugins/start/w0rp-ale/ale_linters/tex/lacheck.vim	/^let g:ale_tex_lacheck_executable =$/;"	v
g:ale_verilog_verilator_options	pack/plugins/start/w0rp-ale/ale_linters/verilog/verilator.vim	/^    let g:ale_verilog_verilator_options = ''$/;"	v
g:ale_vim_vint_show_style_issues	pack/plugins/start/w0rp-ale/ale_linters/vim/vint.vim	/^let g:ale_vim_vint_show_style_issues =$/;"	v
g:ale_virtualenv_dir_names	pack/plugins/start/w0rp-ale/autoload/ale/python.vim	/^let g:ale_virtualenv_dir_names = get(g:, 'ale_virtualenv_dir_names', [$/;"	v
g:ale_xml_xmllint_executable	pack/plugins/start/w0rp-ale/ale_linters/xml/xmllint.vim	/^let g:ale_xml_xmllint_executable = get(g:, 'ale_xml_xmllint_executable', 'xmllint')$/;"	v
g:ale_xml_xmllint_options	pack/plugins/start/w0rp-ale/ale_linters/xml/xmllint.vim	/^let g:ale_xml_xmllint_options = get(g:, 'ale_xml_xmllint_options', '')$/;"	v
g:ale_yaml_yamllint_executable	pack/plugins/start/w0rp-ale/ale_linters/yaml/yamllint.vim	/^let g:ale_yaml_yamllint_executable =$/;"	v
g:ale_yaml_yamllint_options	pack/plugins/start/w0rp-ale/ale_linters/yaml/yamllint.vim	/^let g:ale_yaml_yamllint_options =$/;"	v
g:colors_name	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^let g:colors_name = "nofrils-acme"$/;"	v
g:colors_name	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^let g:colors_name = "nofrils-dark"$/;"	v
g:colors_name	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^let g:colors_name = "nofrils-light"$/;"	v
g:colors_name	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^let g:colors_name = "nofrils-sepia"$/;"	v
g:ctrlp_ext_vars	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^  let g:ctrlp_ext_vars = [s:go_decls_var]$/;"	v
g:ctrlp_ext_vars	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^  let g:ctrlp_ext_vars = add(g:ctrlp_ext_vars, s:go_decls_var)$/;"	v
g:current_compiler	pack/plugins/start/fatih-vim-go/compiler/go.vim	/^let g:current_compiler = "go"$/;"	v
g:fugitive_browse_handlers	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_browse_handlers = []$/;"	v
g:fugitive_git_executable	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:gitgutter_eager	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_eager = 0$/;"	v
g:gitgutter_realtime	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_realtime = 0$/;"	v
g:gitgutter_sign_column_always	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_column_always = 0$/;"	v
g:gitgutter_sign_removed_first_line	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_removed_first_line = '_^'$/;"	v
g:go_decls_mode	pack/plugins/start/fatih-vim-go/autoload/go/decls.vim	/^  let g:go_decls_mode = ''$/;"	v
g:go_doc_command	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^  let g:go_doc_command = ["godoc"]$/;"	v
g:go_errcheck_bin	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_errcheck_bin = "errcheck"$/;"	v
g:go_fmt_command	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_fmt_command = "gofmt"$/;"	v
g:go_fmt_experimental	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_fmt_experimental = 0$/;"	v
g:go_fmt_fail_silently	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_fmt_fail_silently = 0$/;"	v
g:go_fmt_options	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_fmt_options = ''$/;"	v
g:go_golint_bin	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_golint_bin = "golint"$/;"	v
g:go_gorename_bin	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let g:go_gorename_bin = "gorename"$/;"	v
g:go_gotags_bin	pack/plugins/start/fatih-vim-go/ftplugin/go/tagbar.vim	/^  let g:go_gotags_bin = "gotags"$/;"	v
g:go_highlight_array_whitespace_error	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_array_whitespace_error = 0$/;"	v
g:go_highlight_build_constraints	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_build_constraints = 0$/;"	v
g:go_highlight_chan_whitespace_error	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_chan_whitespace_error = 0$/;"	v
g:go_highlight_extra_types	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_extra_types = 0$/;"	v
g:go_highlight_fields	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_fields = 0$/;"	v
g:go_highlight_format_strings	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_format_strings = 1$/;"	v
g:go_highlight_functions	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_functions = 0$/;"	v
g:go_highlight_generate_tags	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_generate_tags = 0$/;"	v
g:go_highlight_methods	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_methods = 0$/;"	v
g:go_highlight_operators	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_operators = 0$/;"	v
g:go_highlight_space_tab_error	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_space_tab_error = 0$/;"	v
g:go_highlight_string_spellcheck	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_string_spellcheck = 1$/;"	v
g:go_highlight_trailing_whitespace_error	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_trailing_whitespace_error = 0$/;"	v
g:go_highlight_types	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_types = 0$/;"	v
g:go_highlight_variable_assignments	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_variable_assignments = 0$/;"	v
g:go_highlight_variable_declarations	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_variable_declarations = 0$/;"	v
g:go_jump_to_error	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^  let g:go_jump_to_error = 1$/;"	v
g:go_list_type	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^  let g:go_list_type = ""$/;"	v
g:go_list_type_commands	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^  let g:go_list_type_commands = {}$/;"	v
g:go_loaded_gosnippets	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^let g:go_loaded_gosnippets = 1$/;"	v
g:go_loaded_install	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^let g:go_loaded_install = 1$/;"	v
g:go_messages	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^  let g:go_messages = []$/;"	v
g:go_messages	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let g:go_messages = []$/;"	v
g:go_metalinter_autosave_enabled	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_metalinter_autosave_enabled = ['vet', 'golint']$/;"	v
g:go_metalinter_command	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_metalinter_command = ""$/;"	v
g:go_metalinter_enabled	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_metalinter_enabled = ['vet', 'golint', 'errcheck']$/;"	v
g:go_metalinter_excludes	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_metalinter_excludes = []$/;"	v
g:go_play_open_browser	pack/plugins/start/fatih-vim-go/autoload/go/play.vim	/^  let g:go_play_open_browser = 1$/;"	v
g:go_running_tests	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let g:go_running_tests = 1$/;"	v
g:go_snippet_engine	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^  let g:go_snippet_engine = "ultisnips"$/;"	v
g:go_term_mode	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^  let g:go_term_mode = 'vsplit'$/;"	v
g:go_test_verbose	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^  let g:go_test_verbose = 0$/;"	v
g:go_testdir	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let g:go_testdir = '\/tmp\/vim-go-test\/testrun'$/;"	v
g:go_textobj_enabled	pack/plugins/start/fatih-vim-go/autoload/go/textobj.vim	/^  let g:go_textobj_enabled = 1$/;"	v
g:go_textobj_include_function_doc	pack/plugins/start/fatih-vim-go/autoload/go/textobj.vim	/^  let g:go_textobj_include_function_doc = 1$/;"	v
g:go_textobj_include_variable	pack/plugins/start/fatih-vim-go/autoload/go/textobj.vim	/^  let g:go_textobj_include_variable = 1$/;"	v
g:gutentags_add_default_project_roots	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_default_project_roots = get(g:, 'gutentags_add_default_project_roots', 1)$/;"	v
g:gutentags_auto_add_cscope	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_auto_add_cscope = 1$/;"	v
g:gutentags_auto_add_gtags_cscope	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_auto_add_gtags_cscope = 1$/;"	v
g:gutentags_background_update	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_background_update = get(g:, 'gutentags_background_update', 1)$/;"	v
g:gutentags_cache_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = ''$/;"	v
g:gutentags_cache_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':p')$/;"	v
g:gutentags_cache_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':s?[\/\\\\]$??')$/;"	v
g:gutentags_cscope_executable	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_executable = 'cscope'$/;"	v
g:gutentags_ctags_auto_set_tags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_auto_set_tags = get(g:, 'gutentags_ctags_auto_set_tags', 1)$/;"	v
g:gutentags_ctags_check_tagfile	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_check_tagfile = get(g:, 'gutentags_ctags_check_tagfile', 0)$/;"	v
g:gutentags_ctags_exclude	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude = get(g:, 'gutentags_ctags_exclude', [])$/;"	v
g:gutentags_ctags_exclude_wildignore	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude_wildignore = get(g:, 'gutentags_ctags_exclude_wildignore', 1)$/;"	v
g:gutentags_ctags_executable	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_executable = get(g:, 'gutentags_ctags_executable', 'ctags')$/;"	v
g:gutentags_ctags_executable	vimrc	/^                let g:gutentags_ctags_executable='ctags-exuberant'$/;"	v
g:gutentags_ctags_extra_args	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_extra_args = get(g:, 'gutentags_ctags_extra_args', [])$/;"	v
g:gutentags_ctags_options_file	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_options_file = get(g:, 'gutentags_ctags_options_file', '.gutctags')$/;"	v
g:gutentags_ctags_post_process_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_post_process_cmd = get(g:, 'gutentags_ctags_post_process_cmd', '')$/;"	v
g:gutentags_ctags_tagfile	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_tagfile = get(g:, 'gutentags_ctags_tagfile', 'tags')$/;"	v
g:gutentags_debug	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_debug = get(g:, 'gutentags_debug', 0)$/;"	v
g:gutentags_define_advanced_commands	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_define_advanced_commands = get(g:, 'gutentags_define_advanced_commands', 0)$/;"	v
g:gutentags_enabled	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_enabled = get(g:, 'gutentags_enabled', 1)$/;"	v
g:gutentags_exclude_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_project_root = get(g:, 'gutentags_exclude_project_root', ['\/usr\/local'])$/;"	v
g:gutentags_fake	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_fake = get(g:, 'gutentags_fake', 0)$/;"	v
g:gutentags_file_list_command	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_file_list_command = get(g:, 'gutentags_file_list_command', '')$/;"	v
g:gutentags_generate_on_empty_buffer	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_empty_buffer = get(g:, 'gutentags_generate_on_empty_buffer', 0)$/;"	v
g:gutentags_generate_on_missing	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_missing = get(g:, 'gutentags_generate_on_missing', 1)$/;"	v
g:gutentags_generate_on_new	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_new = get(g:, 'gutentags_generate_on_new', 1)$/;"	v
g:gutentags_generate_on_write	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_write = get(g:, 'gutentags_generate_on_write', 1)$/;"	v
g:gutentags_gtags_cscope_executable	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_cscope_executable = 'gtags-cscope'$/;"	v
g:gutentags_gtags_dbpath	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_dbpath = ''$/;"	v
g:gutentags_gtags_executable	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_executable = 'gtags'$/;"	v
g:gutentags_gtags_options_file	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_options_file = '.gutgtags'$/;"	v
g:gutentags_init_user_func	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_init_user_func = get(g:, 'gutentags_init_user_func', $/;"	v
g:gutentags_modules	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_modules = get(g:, 'gutentags_modules', ['ctags'])$/;"	v
g:gutentags_pause_after_update	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_pause_after_update = get(g:, 'gutentags_pause_after_update', 0)$/;"	v
g:gutentags_plat_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . "\\\\plat\\\\win32\\\\"$/;"	v
g:gutentags_plat_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . '\/plat\/unix\/'$/;"	v
g:gutentags_project_info	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_info = get(g:, 'gutentags_project_info', [])$/;"	v
g:gutentags_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_project_root += ['.git', '.hg', '.svn', '.bzr', '_darcs', '_FOSSIL_', '.fslckout']$/;"	v
g:gutentags_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root = get(g:, 'gutentags_project_root', [])$/;"	v
g:gutentags_project_root_finder	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root_finder = get(g:, 'gutentags_project_root_finder', '')$/;"	v
g:gutentags_res_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . "\\\\res\\\\"$/;"	v
g:gutentags_res_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . '\/res\/'$/;"	v
g:gutentags_resolve_symlinks	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_resolve_symlinks = get(g:, 'gutentags_resolve_symlinks', 0)$/;"	v
g:gutentags_scopefile	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_scopefile = 'cscope.out'$/;"	v
g:gutentags_script_ext	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.cmd'$/;"	v
g:gutentags_script_ext	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.sh'$/;"	v
g:gutentags_trace	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_trace = get(g:, 'gutentags_trace', 0)$/;"	v
g:html_indent_inctags	vimrc	/^        let g:html_indent_inctags='html,body,head,tbody,p,li,dd,dt,h1,h2,h3,h4,h5,h6,blockquote,section'$/;"	v
g:html_indent_script1	vimrc	/^        let g:html_indent_script1='inc'$/;"	v
g:html_indent_style1	vimrc	/^        let g:html_indent_style1='inc'$/;"	v
g:html_wrong_comments	vimrc	/^        let g:html_wrong_comments=1$/;"	v
g:loaded_abolish	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let g:loaded_abolish = 1$/;"	v
g:loaded_ale	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:loaded_ale = 1$/;"	v
g:loaded_ale_after	pack/plugins/start/w0rp-ale/after/plugin/ale.vim	/^let g:loaded_ale_after = 1$/;"	v
g:loaded_ale_dont_use_this_in_other_plugins_please	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:loaded_ale_dont_use_this_in_other_plugins_please = 1$/;"	v
g:loaded_asyncdo_vim	pack/plugins/start/hauleth-asyncdo-vim/plugin/asyncdo.vim	/^let g:loaded_asyncdo_vim = 1$/;"	v
g:loaded_commentary	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^let g:loaded_commentary = 1$/;"	v
g:loaded_eunuch	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^let g:loaded_eunuch = 1$/;"	v
g:loaded_fugitive	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_gitgutter	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^let g:loaded_gitgutter = 1$/;"	v
g:loaded_gutentags	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:loaded_gutentags = 1$/;"	v
g:loaded_nerdtree_autoload	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	pack/plugins/start/scrooloose-nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	pack/plugins/start/scrooloose-nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_ui_glue_autoload	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^let g:loaded_nerdtree_ui_glue_autoload = 1$/;"	v
g:loaded_operator_sandwich	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^let g:loaded_operator_sandwich = 1$/;"	v
g:loaded_qf	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^let g:loaded_qf = 1$/;"	v
g:loaded_qlist	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^let g:loaded_qlist = 1$/;"	v
g:loaded_quickhl	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^let g:loaded_quickhl = 1$/;"	v
g:loaded_repeat	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^let g:loaded_repeat = 1$/;"	v
g:loaded_rsi	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^let g:loaded_rsi = 1$/;"	v
g:loaded_sandwich	pack/plugins/start/machakann-vim-sandwich/plugin/sandwich.vim	/^let g:loaded_sandwich = 1$/;"	v
g:loaded_textobj_sandwich	pack/plugins/start/machakann-vim-sandwich/plugin/textobj/sandwich.vim	/^let g:loaded_textobj_sandwich = 1$/;"	v
g:loaded_traces_plugin	pack/plugins/start/xtal8-traces-vim/plugin/traces.vim	/^let g:loaded_traces_plugin = 1$/;"	v
g:loaded_unimpaired	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^let g:loaded_unimpaired = 1$/;"	v
g:main_syntax	pack/plugins/start/fatih-vim-go/syntax/gohtmltmpl.vim	/^  let g:main_syntax = 'html'$/;"	v
g:mapleader	pack/plugins/start/w0rp-ale/test/.config/nvim/init.vim	/^let g:mapleader=','$/;"	v
g:mapleader	pack/plugins/start/w0rp-ale/test/vimrc	/^let g:mapleader=','$/;"	v
g:mapleader	vimrc	/^        let g:mapleader="\\<space>"$/;"	v
g:minisnip_backrefmarker	pack/plugins/start/keyboardfire-vim-minisnip/plugin/vim-minisnip.vim	/^let g:minisnip_backrefmarker = get(g:, 'minisnip_backrefmarker', '\\\\~')$/;"	v
g:minisnip_dir	pack/plugins/start/keyboardfire-vim-minisnip/plugin/vim-minisnip.vim	/^let g:minisnip_dir = fnamemodify(get(g:, 'minisnip_dir', '~\/.vim\/minisnip'), ':p')$/;"	v
g:minisnip_enddelim	pack/plugins/start/keyboardfire-vim-minisnip/plugin/vim-minisnip.vim	/^let g:minisnip_enddelim = get(g:, 'minisnip_enddelim', '+}}')$/;"	v
g:minisnip_evalmarker	pack/plugins/start/keyboardfire-vim-minisnip/plugin/vim-minisnip.vim	/^let g:minisnip_evalmarker = get(g:, 'minisnip_evalmarker', '~')$/;"	v
g:minisnip_startdelim	pack/plugins/start/keyboardfire-vim-minisnip/plugin/vim-minisnip.vim	/^let g:minisnip_startdelim = get(g:, 'minisnip_startdelim', '{{+')$/;"	v
g:minisnip_trigger	pack/plugins/start/keyboardfire-vim-minisnip/plugin/vim-minisnip.vim	/^let g:minisnip_trigger = get(g:, 'minisnip_trigger', '<Tab>')$/;"	v
g:mucomplete#enable_auto_at_startup	vimrc	/^        let g:mucomplete#enable_auto_at_startup=0$/;"	v
g:nofrils_heavycomments	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^    let g:nofrils_heavycomments = 0$/;"	v
g:nofrils_heavycomments	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^    let g:nofrils_heavycomments = 0$/;"	v
g:nofrils_heavycomments	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^    let g:nofrils_heavycomments = 0$/;"	v
g:nofrils_heavycomments	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^    let g:nofrils_heavycomments = 0$/;"	v
g:nofrils_heavycomments	vimrc	/^        let g:nofrils_heavycomments=0 " bright comments off$/;"	v
g:nofrils_heavylinenumbers	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^    let g:nofrils_heavylinenumbers = 0$/;"	v
g:nofrils_heavylinenumbers	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^    let g:nofrils_heavylinenumbers = 0$/;"	v
g:nofrils_heavylinenumbers	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^    let g:nofrils_heavylinenumbers = 0$/;"	v
g:nofrils_heavylinenumbers	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^    let g:nofrils_heavylinenumbers = 0$/;"	v
g:nofrils_heavylinenumbers	vimrc	/^        let g:nofrils_heavylinenumbers=0 " heavy line numbers off$/;"	v
g:nofrils_strbackgrounds	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^    let g:nofrils_strbackgrounds = 0$/;"	v
g:nofrils_strbackgrounds	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^    let g:nofrils_strbackgrounds = 0$/;"	v
g:nofrils_strbackgrounds	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^    let g:nofrils_strbackgrounds = 0$/;"	v
g:nofrils_strbackgrounds	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^    let g:nofrils_strbackgrounds = 0$/;"	v
g:nofrils_strbackgrounds	vimrc	/^        let g:nofrils_strbackgrounds=1 " to turn off highlighted string backgrounds$/;"	v
g:operator#sandwich#default_recipes	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^let g:operator#sandwich#default_recipes = []$/;"	v
g:operator#sandwich#recipes	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^let g:operator#sandwich#recipes = [{'buns': 'ListCount()', 'listexpr': 1, 'input': ['c']}, {'buns': ['(', ')']}]$/;"	v
g:operator#sandwich#recipes	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^let g:operator#sandwich#recipes = [{'buns': 'ListCount()', 'listexpr': 1, 'input': ['c']}]$/;"	v
g:operator#sandwich#recipes	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^let g:operator#sandwich#recipes = [{'buns': 'ListCount()', 'listexpr': 2, 'input': ['c']}, {'buns': ['(', ')']}]$/;"	v
g:operator#sandwich#recipes	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^let g:operator#sandwich#recipes = [{'buns': 'ListCount()', 'listexpr': 2, 'input': ['c']}]$/;"	v
g:operator#sandwich#recipes	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^let g:operator#sandwich#recipes = [{'buns': ['Count()', 'Count()'], 'expr': 1, 'input': ['c']}, {'buns': ['(', ')']}]$/;"	v
g:operator#sandwich#recipes	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^let g:operator#sandwich#recipes = [{'buns': ['Count()', 'Count()'], 'expr': 1, 'input': ['c']}]$/;"	v
g:operator#sandwich#recipes	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^let g:operator#sandwich#recipes = [{'buns': ['Count()', 'Count()'], 'expr': 2, 'input': ['c']}, {'buns': ['(', ')']}]$/;"	v
g:operator#sandwich#recipes	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^let g:operator#sandwich#recipes = [{'buns': ['Count()', 'Count()'], 'expr': 2, 'input': ['c']}]$/;"	v
g:operator#sandwich#recipes	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^let g:operator#sandwich#recipes = [{'external': ['it', 'at'], 'noremap': 1}, {'buns': ['(', ')']}]$/;"	v
g:operator#sandwich#recipes	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^let g:operator#sandwich#recipes = [{'external': ['it', 'at'], 'noremap': 1}]$/;"	v
g:operator_sandwich_no_default_key_mappings	pack/plugins/start/machakann-vim-sandwich/macros/sandwich/keymap/surround.vim	/^let g:operator_sandwich_no_default_key_mappings = 1$/;"	v
g:operator_sandwich_no_visualrepeat	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^let g:operator_sandwich_no_visualrepeat = 1$/;"	v
g:quickhl_debug	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^  let g:quickhl_debug = 0$/;"	v
g:quickhl_manual_colors	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^  let g:quickhl_manual_colors = [$/;"	v
g:quickhl_manual_colors	vimrc	/^        let g:quickhl_manual_colors=['gui=bold ctermfg=16 ctermbg=153 guifg=#ffffff guibg=#0a7383', 'gui=bold ctermfg=black ctermbg=2 guibg=#4070a0 guifg=#ffffff', 'gui=bold ctermfg=black ctermbg=3 guibg=#40a070 guifg=#ffffff', 'gui=bold ctermfg=7 ctermbg=4 guibg=#70a040 guifg=#ffffff', 'gui=bold ctermfg=black ctermbg=5 guibg=#0070e0 guifg=#ffffff', 'gui=bold ctermfg=black ctermbg=6 guibg=#007020 guifg=#ffffff', 'gui=bold ctermfg=7 ctermbg=21 guibg=#d4a00d guifg=#ffffff', 'gui=bold ctermfg=7 ctermbg=22 guibg=#06287e guifg=#ffffff', 'gui=bold ctermfg=black ctermbg=45 guibg=#5b3674 guifg=#ffffff', 'gui=bold ctermfg=7 ctermbg=16 guibg=#4c8f2f guifg=#ffffff', 'gui=bold ctermfg=black ctermbg=50 guibg=#1060a0 guifg=#ffffff', 'gui=bold ctermfg=7 ctermbg=56 guibg=#a0b0c0 guifg=black', 'gui=bold ctermfg=black ctermbg=1 guibg=#a07040 guifg=#ffffff']$/;"	v
g:repeat_reg	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^let g:repeat_reg = ['', '']$/;"	v
g:repeat_tick	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^let g:repeat_tick = -1$/;"	v
g:sandwich#default_recipes	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich.vim	/^let g:sandwich#default_recipes = [$/;"	v
g:sandwich#filetype#tex#environments	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/filetype/tex.vim	/^let g:sandwich#filetype#tex#environments = get(g:, 'sandwich#filetype#tex#environments', [$/;"	v
g:sandwich#recipes	pack/plugins/start/machakann-vim-sandwich/macros/sandwich/keymap/surround.vim	/^let g:sandwich#recipes = [$/;"	v
g:sandwich#recipes	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^let g:sandwich#recipes = []$/;"	v
g:sandwich_no_default_key_mappings	pack/plugins/start/machakann-vim-sandwich/macros/sandwich/keymap/surround.vim	/^let g:sandwich_no_default_key_mappings = 1$/;"	v
g:skip_loading_mswin	vimrc	/^        let g:skip_loading_mswin=1 " Just in case :)$/;"	v
g:testname	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let g:testname = expand('%')$/;"	v
g:textobj#sandwich#default_recipes	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich.vim	/^let g:textobj#sandwich#default_recipes = []$/;"	v
g:textobj#sandwich#recipes	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^let g:textobj#sandwich#recipes = [{'buns': 'ListCount()', 'listexpr': 1, 'input': ['c']}]$/;"	v
g:textobj#sandwich#recipes	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^let g:textobj#sandwich#recipes = [{'buns': 'ListCount()', 'listexpr': 2, 'input': ['c']}]$/;"	v
g:textobj#sandwich#recipes	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^let g:textobj#sandwich#recipes = [{'buns': ['Count()', 'Count()'], 'expr': 1, 'input': ['c']}]$/;"	v
g:textobj#sandwich#recipes	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^let g:textobj#sandwich#recipes = [{'buns': ['Count()', 'Count()'], 'expr': 2, 'input': ['c']}]$/;"	v
g:textobj#sandwich#recipes	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^let g:textobj#sandwich#recipes = [{'buns': ['foo', 'baz'], 'synchro': 1, 'input': ['f']}]$/;"	v
g:textobj#sandwich#recipes	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^let g:textobj#sandwich#recipes = [{'external': ['it', 'at'], 'noremap': 1, 'input': ['t']}]$/;"	v
g:textobj_sandwich_no_default_key_mappings	pack/plugins/start/machakann-vim-sandwich/macros/sandwich/keymap/surround.vim	/^let g:textobj_sandwich_no_default_key_mappings = 1$/;"	v
g:tmuxcomplete#loaded	pack/plugins/start/wellle-tmux-complete-vim/plugin/tmuxcomplete.vim	/^let g:tmuxcomplete#loaded = '0.1.3' " version number$/;"	v
g:traces_whole_file_range	pack/plugins/start/xtal8-traces-vim/plugin/traces.vim	/^  let g:traces_whole_file_range = 1$/;"	v
g:unimpaired_html_entities	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^let g:unimpaired_html_entities = {$/;"	v
g:vim_go_root	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let g:vim_go_root = fnamemodify(getcwd(), ':p')$/;"	v
g:vim_markdown_folding_disabled	vimrc	/^        let g:vim_markdown_folding_disabled=0$/;"	v
g:vim_markdown_frontmatter	vimrc	/^        let g:vim_markdown_frontmatter=1$/;"	v
g<LeftMouse>	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> g<LeftMouse> <LeftMouse>:GoDef<cr>$/;"	m
gF	pack/plugins/start/kopischke-vim-fetch/plugin/fetch.vim	/^nnoremap gF :<C-u>call fetch#cfile(v:count1)<CR>$/;"	m
gather_candidates	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! s:gather_candidates(mode, count, pattern_list, opt) abort  "{{{$/;"	f
gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/rplugin/python3/deoplete/sources/tmuxcomplete.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gc	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^  nmap gc  <Plug>Commentary$/;"	m
gc	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^  omap gc  <Plug>Commentary$/;"	m
gcc	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^  nmap gcc <Plug>CommentaryLine$/;"	m
gcu	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^  nmap gcu <Plug>Commentary<Plug>Commentary$/;"	m
gd	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> gd :GoDef<cr>$/;"	m
general	vimrc	/^        augroup general$/;"	a
get	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/lib.vim	/^function! s:get(name, default) abort  "{{{$/;"	f
get	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:get(id) abort "{{{$/;"	f
get	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! s:get(name, default) abort  "{{{$/;"	f
get	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich.vim	/^function! s:get(name, default) abort  "{{{$/;"	f
getReceiver	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! s:getReceiver()$/;"	f
get_assigned_region	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:get_assigned_region(kind, motionwise) abort "{{{$/;"	f
get_browser_command	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! s:get_browser_command() abort$/;"	f
get_buf_length	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^function! s:get_buf_length(start, end) abort  "{{{$/;"	f
get_buf_length	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! s:get_buf_length(start, end) abort  "{{{$/;"	f
get_buf_length	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^function! s:get_buf_length(start, end) abort  "{{{$/;"	f
get_buns	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:get_buns(recipe, opt_expr, opt_listexpr) abort  "{{{$/;"	f
get_command	pack/plugins/start/xtal8-traces-vim/plugin/traces.vim	/^function! s:get_command(cmd_line) abort$/;"	f
get_ctags_executable	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:get_ctags_executable(proj_dir) abort$/;"	f
get_cursorchar	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^function! s:get_cursorchar(pos) abort "{{{$/;"	f
get_default_cursor_pos	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:get_default_cursor_pos(inner_head) abort  "{{{$/;"	f
get_displaycoord	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:get_displaycoord(pos) abort "{{{$/;"	f
get_headend_cursor_pos	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:get_headend_cursor_pos(head, inner_head) abort  "{{{$/;"	f
get_ifnotempty	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! s:get_ifnotempty(list, idx, default) abort "{{{$/;"	f
get_left_pos	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/lib.vim	/^function! s:get_left_pos(pos) abort  "{{{$/;"	f
get_narrower_region	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! s:get_narrower_region(head_edge, tail_edge) abort "{{{$/;"	f
get_pattern	pack/plugins/start/xtal8-traces-vim/plugin/traces.vim	/^function! s:get_pattern(command, cmd_line) abort$/;"	f
get_pattern_regexp	pack/plugins/start/xtal8-traces-vim/plugin/traces.vim	/^function! s:get_pattern_regexp(command, range, pattern) abort$/;"	f
get_patterns	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^function! s:get_patterns(candidate, opt_regex) abort "{{{$/;"	f
get_range	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! s:get_range(mode, count, candidates) abort "{{{$/;"	f
get_range	pack/plugins/start/xtal8-traces-vim/plugin/traces.vim	/^function! s:get_range(range, cmd_line) abort$/;"	f
get_right_pos	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/lib.vim	/^function! s:get_right_pos(pos) abort  "{{{$/;"	f
get_selection_regexp	pack/plugins/start/xtal8-traces-vim/plugin/traces.vim	/^function! s:get_selection_regexp(range) abort$/;"	f
get_tailstart_cursor_pos	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:get_tailstart_cursor_pos(tail, inner_tail) abort  "{{{$/;"	f
get_textobj_region	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^function! s:get_textobj_region(cursor, cmd, visualmode, count, key_seq) abort "{{{$/;"	f
get_textobj_region	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^function! s:get_textobj_region(initpos, cmd, visualmode, count, key_seq) abort "{{{$/;"	f
get_unix_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! s:get_unix_cmd(for_job, proj_options, db_path) abort$/;"	f
get_visual_content	pack/plugins/start/fatih-vim-go/autoload/go/play.vim	/^function! s:get_visual_content() abort$/;"	f
get_visual_selection	pack/plugins/start/fatih-vim-go/autoload/go/play.vim	/^function! s:get_visual_selection() abort$/;"	f
get_wider_region	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/lib.vim	/^function! s:get_wider_region(head_edge, tail_edge) abort "{{{$/;"	f
get_win32_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! s:get_win32_cmd(for_job, proj_options, db_path) abort$/;"	f
getregister	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! s:getregister(register) abort "{{{$/;"	f
ggdab	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal ggdab$/;"	m
ggdasf	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal ggdasf$/;"	m
ggdast	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal ggdast$/;"	m
ggdib	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal ggdib$/;"	m
ggdisf	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal ggdisf$/;"	m
ggdist	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal ggdist$/;"	m
ggsdat	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal ggsdat$/;"	m
ggsrat(	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal ggsrat($/;"	m
git_command	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:git_command() abort$/;"	f
git_diff	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff()$/;"	f
git_diff_staged	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff_staged()$/;"	f
gitgutter	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^augroup gitgutter$/;"	a
gitgutter#all	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#all() abort$/;"	f
gitgutter#async#available	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#available()$/;"	f
gitgutter#async#execute	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#execute(cmd) abort$/;"	f
gitgutter#debug#debug	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#debug()$/;"	f
gitgutter#debug#git_version	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#git_version()$/;"	f
gitgutter#debug#grep_version	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#grep_version()$/;"	f
gitgutter#debug#log	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#log(message, ...) abort$/;"	f
gitgutter#debug#option	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#option(name)$/;"	f
gitgutter#debug#output	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#output(text)$/;"	f
gitgutter#debug#separator	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#separator()$/;"	f
gitgutter#debug#vim_version	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#vim_version()$/;"	f
gitgutter#diff#adjust_hunk_summary	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#adjust_hunk_summary(diff_for_hunk, staging) abort$/;"	f
gitgutter#diff#discard_hunks	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#discard_hunks(diff, keep_header) abort$/;"	f
gitgutter#diff#generate_diff_for_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#generate_diff_for_hunk(diff, type) abort$/;"	f
gitgutter#diff#is_added	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_added(from_count, to_count) abort$/;"	f
gitgutter#diff#is_modified	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_modified(from_count, to_count) abort$/;"	f
gitgutter#diff#is_modified_and_added	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_modified_and_added(from_count, to_count) abort$/;"	f
gitgutter#diff#is_modified_and_removed	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_modified_and_removed(from_count, to_count) abort$/;"	f
gitgutter#diff#is_removed	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_removed(from_count, to_count) abort$/;"	f
gitgutter#diff#parse_diff	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_diff(diff) abort$/;"	f
gitgutter#diff#parse_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_hunk(line) abort$/;"	f
gitgutter#diff#process_added	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_added(modifications, from_count, to_count, to_line) abort$/;"	f
gitgutter#diff#process_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_hunk(hunk) abort$/;"	f
gitgutter#diff#process_hunks	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_hunks(hunks) abort$/;"	f
gitgutter#diff#process_modified	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_modified(modifications, from_count, to_count, to_line) abort$/;"	f
gitgutter#diff#process_modified_and_added	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_modified_and_added(modifications, from_count, to_count, to_line) abort$/;"	f
gitgutter#diff#process_modified_and_removed	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_modified_and_removed(modifications, from_count, to_count, to_line) abort$/;"	f
gitgutter#diff#process_removed	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_removed(modifications, from_count, to_count, to_line) abort$/;"	f
gitgutter#diff#run_diff	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#run_diff(realtime, preserve_full_diff) abort$/;"	f
gitgutter#disable	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#disable() abort$/;"	f
gitgutter#enable	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#enable() abort$/;"	f
gitgutter#handle_diff	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#handle_diff(diff) abort$/;"	f
gitgutter#highlight#define_highlights	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_highlights() abort$/;"	f
gitgutter#highlight#define_sign_column_highlight	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_column_highlight() abort$/;"	f
gitgutter#highlight#define_sign_line_highlights	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_line_highlights() abort$/;"	f
gitgutter#highlight#define_sign_text	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_text() abort$/;"	f
gitgutter#highlight#define_sign_text_highlights	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_text_highlights() abort$/;"	f
gitgutter#highlight#define_signs	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_signs() abort$/;"	f
gitgutter#highlight#get_background_colors	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#get_background_colors(group) abort$/;"	f
gitgutter#highlight#match_highlight	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#match_highlight(highlight, pattern) abort$/;"	f
gitgutter#hunk#current_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#current_hunk() abort$/;"	f
gitgutter#hunk#cursor_in_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#cursor_in_hunk(hunk) abort$/;"	f
gitgutter#hunk#hunks	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#hunks() abort$/;"	f
gitgutter#hunk#increment_lines_added	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_added(count) abort$/;"	f
gitgutter#hunk#increment_lines_modified	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_modified(count) abort$/;"	f
gitgutter#hunk#increment_lines_removed	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_removed(count) abort$/;"	f
gitgutter#hunk#line_adjustment_for_current_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#line_adjustment_for_current_hunk() abort$/;"	f
gitgutter#hunk#next_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#next_hunk(count) abort$/;"	f
gitgutter#hunk#prev_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#prev_hunk(count) abort$/;"	f
gitgutter#hunk#reset	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#reset() abort$/;"	f
gitgutter#hunk#set_hunks	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#set_hunks(hunks) abort$/;"	f
gitgutter#hunk#summary	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#summary(bufnr) abort$/;"	f
gitgutter#hunk#text_object	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#text_object(inner) abort$/;"	f
gitgutter#line_highlights_disable	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#line_highlights_disable() abort$/;"	f
gitgutter#line_highlights_enable	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#line_highlights_enable() abort$/;"	f
gitgutter#line_highlights_toggle	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#line_highlights_toggle() abort$/;"	f
gitgutter#preview_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#preview_hunk() abort$/;"	f
gitgutter#process_buffer	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#process_buffer(bufnr, realtime) abort$/;"	f
gitgutter#sign#add_dummy_sign	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#add_dummy_sign() abort$/;"	f
gitgutter#sign#clear_signs	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#clear_signs() abort$/;"	f
gitgutter#sign#find_current_signs	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#find_current_signs() abort$/;"	f
gitgutter#sign#next_sign_id	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#next_sign_id() abort$/;"	f
gitgutter#sign#obsolete_gitgutter_signs_to_remove	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#obsolete_gitgutter_signs_to_remove(new_gitgutter_signs_line_numbers) abort$/;"	f
gitgutter#sign#remove_dummy_sign	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#remove_dummy_sign(force) abort$/;"	f
gitgutter#sign#remove_signs	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#remove_signs(sign_ids, all_signs) abort$/;"	f
gitgutter#sign#reset	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#reset()$/;"	f
gitgutter#sign#update_signs	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#update_signs(modified_lines) abort$/;"	f
gitgutter#sign#upsert_new_gitgutter_signs	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#upsert_new_gitgutter_signs(modified_lines) abort$/;"	f
gitgutter#signs_disable	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#signs_disable() abort$/;"	f
gitgutter#signs_enable	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#signs_enable() abort$/;"	f
gitgutter#signs_toggle	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#signs_toggle() abort$/;"	f
gitgutter#stage_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#stage_hunk() abort$/;"	f
gitgutter#toggle	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#toggle() abort$/;"	f
gitgutter#undo_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#undo_hunk() abort$/;"	f
gitgutter#utility#bufnr	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#bufnr()$/;"	f
gitgutter#utility#command_in_directory_of_file	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#command_in_directory_of_file(cmd) abort$/;"	f
gitgutter#utility#dedup	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#dedup(list)$/;"	f
gitgutter#utility#directory_of_file	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#directory_of_file() abort$/;"	f
gitgutter#utility#exists_file	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#exists_file() abort$/;"	f
gitgutter#utility#extension	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#extension() abort$/;"	f
gitgutter#utility#file	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#file()$/;"	f
gitgutter#utility#file_relative_to_repo_root	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#file_relative_to_repo_root() abort$/;"	f
gitgutter#utility#filename	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#filename() abort$/;"	f
gitgutter#utility#full_path_to_directory_of_file	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#full_path_to_directory_of_file() abort$/;"	f
gitgutter#utility#getbufvar	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#getbufvar(buffer, varname, ...)$/;"	f
gitgutter#utility#git_supports_command_line_config_override	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#git_supports_command_line_config_override() abort$/;"	f
gitgutter#utility#has_fresh_changes	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#has_fresh_changes() abort$/;"	f
gitgutter#utility#has_unsaved_changes	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#has_unsaved_changes() abort$/;"	f
gitgutter#utility#highlight_name_for_change	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#highlight_name_for_change(text) abort$/;"	f
gitgutter#utility#is_active	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#is_active() abort$/;"	f
gitgutter#utility#is_file_buffer	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#is_file_buffer() abort$/;"	f
gitgutter#utility#not_git_dir	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#not_git_dir() abort$/;"	f
gitgutter#utility#restore_shell	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#restore_shell() abort$/;"	f
gitgutter#utility#save_last_seen_change	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#save_last_seen_change() abort$/;"	f
gitgutter#utility#set_buffer	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#set_buffer(bufnr) abort$/;"	f
gitgutter#utility#setbufvar	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#setbufvar(buffer, varname, val)$/;"	f
gitgutter#utility#shell_error	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#shell_error() abort$/;"	f
gitgutter#utility#shellescape	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#shellescape(arg) abort$/;"	f
gitgutter#utility#stringify	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#stringify(list) abort$/;"	f
gitgutter#utility#strip_trailing_new_line	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#strip_trailing_new_line(line) abort$/;"	f
gitgutter#utility#system	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#system(cmd, ...) abort$/;"	f
gitgutter#utility#use_known_shell	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#use_known_shell() abort$/;"	f
gitgutter#utility#using_xolox_shell	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#using_xolox_shell() abort$/;"	f
gitgutter#utility#warn	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn(message) abort$/;"	f
gitgutter#utility#warn_once	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn_once(message, key) abort$/;"	f
github_url	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:github_url(opts, ...) abort$/;"	f
gj	vimrc	/^        nnoremap gj j$/;"	m
gk	vimrc	/^        nnoremap gk k$/;"	m
go	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^function! s:go(type,...) abort$/;"	f
go#alternate#Switch	pack/plugins/start/fatih-vim-go/autoload/go/alternate.vim	/^function! go#alternate#Switch(bang, cmd)$/;"	f
go#asmfmt#Format	pack/plugins/start/fatih-vim-go/autoload/go/asmfmt.vim	/^function! go#asmfmt#Format() abort$/;"	f
go#asmfmt#ToggleAsmFmtAutoSave	pack/plugins/start/fatih-vim-go/autoload/go/asmfmt.vim	/^function! go#asmfmt#ToggleAsmFmtAutoSave() abort$/;"	f
go#cmd#Build	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#Build(bang, ...) abort$/;"	f
go#cmd#BuildTags	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#BuildTags(bang, ...) abort$/;"	f
go#cmd#Generate	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#Generate(bang, ...) abort$/;"	f
go#cmd#Install	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#Install(bang, ...) abort$/;"	f
go#cmd#Run	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#Run(bang, ...) abort$/;"	f
go#cmd#RunTerm	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#RunTerm(bang, mode, files) abort$/;"	f
go#cmd#autowrite	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#autowrite() abort$/;"	f
go#complete#Complete	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! go#complete#Complete(findstart, base) abort$/;"	f
go#complete#GetInfo	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! go#complete#GetInfo() abort$/;"	f
go#complete#Info	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! go#complete#Info(auto) abort$/;"	f
go#complete#ToggleAutoTypeInfo	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! go#complete#ToggleAutoTypeInfo() abort$/;"	f
go#coverage#Browser	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#Browser(bang, ...) abort$/;"	f
go#coverage#Buffer	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#Buffer(bang, ...) abort$/;"	f
go#coverage#BufferToggle	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#BufferToggle(bang, ...) abort$/;"	f
go#coverage#Clear	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#Clear() abort$/;"	f
go#coverage#genmatch	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#genmatch(cov) abort$/;"	f
go#coverage#overlay	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#overlay(file) abort$/;"	f
go#coverage#parsegocoverline	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#parsegocoverline(line) abort$/;"	f
go#decls#Decls	pack/plugins/start/fatih-vim-go/autoload/go/decls.vim	/^function! go#decls#Decls(mode, ...) abort$/;"	f
go#def#Jump	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#Jump(mode) abort$/;"	f
go#def#SelectStackEntry	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#SelectStackEntry() abort$/;"	f
go#def#Stack	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#Stack(...) abort$/;"	f
go#def#StackClear	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#StackClear(...) abort$/;"	f
go#def#StackPop	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#StackPop(...) abort$/;"	f
go#def#StackUI	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#StackUI() abort$/;"	f
go#def#jump_to_declaration	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#jump_to_declaration(out, mode, bin_name) abort$/;"	f
go#doc#Open	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! go#doc#Open(newmode, mode, ...) abort$/;"	f
go#doc#OpenBrowser	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! go#doc#OpenBrowser(...) abort$/;"	f
go#fillstruct#FillStruct	pack/plugins/start/fatih-vim-go/autoload/go/fillstruct.vim	/^function! go#fillstruct#FillStruct() abort$/;"	f
go#fmt#Format	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! go#fmt#Format(withGoimport) abort$/;"	f
go#fmt#ToggleFmtAutoSave	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! go#fmt#ToggleFmtAutoSave() abort$/;"	f
go#fmt#run	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! go#fmt#run(bin_name, source, target)$/;"	f
go#fmt#update_file	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! go#fmt#update_file(source, target)$/;"	f
go#guru#AutoToogleSameIds	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#AutoToogleSameIds() abort$/;"	f
go#guru#Callees	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Callees(selected) abort$/;"	f
go#guru#Callers	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Callers(selected) abort$/;"	f
go#guru#Callstack	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Callstack(selected) abort$/;"	f
go#guru#ChannelPeers	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#ChannelPeers(selected) abort$/;"	f
go#guru#ClearSameIds	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#ClearSameIds() abort$/;"	f
go#guru#Describe	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Describe(selected) abort$/;"	f
go#guru#DescribeInfo	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#DescribeInfo() abort$/;"	f
go#guru#Freevars	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Freevars(selected) abort$/;"	f
go#guru#Implements	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Implements(selected) abort$/;"	f
go#guru#Referrers	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Referrers(selected) abort$/;"	f
go#guru#SameIds	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#SameIds() abort$/;"	f
go#guru#SameIdsTimer	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#SameIdsTimer() abort$/;"	f
go#guru#Scope	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Scope(...) abort$/;"	f
go#guru#ToggleSameIds	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#ToggleSameIds() abort$/;"	f
go#guru#Whicherrs	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Whicherrs(selected) abort$/;"	f
go#impl#Complete	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! go#impl#Complete(arglead, cmdline, cursorpos) abort$/;"	f
go#impl#Impl	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! go#impl#Impl(...) abort$/;"	f
go#import#SwitchImport	pack/plugins/start/fatih-vim-go/autoload/go/import.vim	/^function! go#import#SwitchImport(enabled, localname, path, bang) abort$/;"	f
go#job#Spawn	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^function go#job#Spawn(args)$/;"	f
go#jobcontrol#AddHandler	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! go#jobcontrol#AddHandler(handler) abort$/;"	f
go#jobcontrol#RemoveHandler	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! go#jobcontrol#RemoveHandler(id) abort$/;"	f
go#jobcontrol#Spawn	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! go#jobcontrol#Spawn(bang, desc, for, args) abort$/;"	f
go#keyify#Keyify	pack/plugins/start/fatih-vim-go/autoload/go/keyify.vim	/^function! go#keyify#Keyify()$/;"	f
go#lint#Errcheck	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#Errcheck(...) abort$/;"	f
go#lint#Golint	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#Golint(...) abort$/;"	f
go#lint#Gometa	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#Gometa(autosave, ...) abort$/;"	f
go#lint#ToggleMetaLinterAutoSave	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#ToggleMetaLinterAutoSave() abort$/;"	f
go#lint#Vet	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#Vet(bang, ...) abort$/;"	f
go#list#Clean	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Clean(listtype) abort$/;"	f
go#list#Get	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Get(listtype) abort$/;"	f
go#list#JumpToFirst	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#JumpToFirst(listtype) abort$/;"	f
go#list#Parse	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Parse(listtype, items) abort$/;"	f
go#list#ParseFormat	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#ParseFormat(listtype, errformat, items, title) abort$/;"	f
go#list#Populate	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Populate(listtype, items, title) abort$/;"	f
go#list#Type	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Type(for) abort$/;"	f
go#list#Window	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Window(listtype, ...) abort$/;"	f
go#package#Complete	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#Complete(ArgLead, CmdLine, CursorPos) abort$/;"	f
go#package#CompleteMembers	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#CompleteMembers(package, member) abort$/;"	f
go#package#FromPath	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#FromPath(arg) abort$/;"	f
go#package#ImportPath	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#ImportPath() abort$/;"	f
go#package#Paths	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#Paths() abort$/;"	f
go#path#BinPath	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#BinPath() abort$/;"	f
go#path#CheckBinPath	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#CheckBinPath(binpath) abort$/;"	f
go#path#CygwinPath	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#CygwinPath(path)$/;"	f
go#path#Default	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#Default() abort$/;"	f
go#path#Detect	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#Detect() abort$/;"	f
go#path#GoPath	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#GoPath(...) abort$/;"	f
go#path#HasPath	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#HasPath(path) abort$/;"	f
go#play#Share	pack/plugins/start/fatih-vim-go/autoload/go/play.vim	/^function! go#play#Share(count, line1, line2) abort$/;"	f
go#rename#Complete	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^function! go#rename#Complete(lead, cmdline, cursor)$/;"	f
go#rename#Rename	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^function! go#rename#Rename(bang, ...) abort$/;"	f
go#statusline#Clear	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^function! go#statusline#Clear(timer_id) abort$/;"	f
go#statusline#Show	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^function! go#statusline#Show() abort$/;"	f
go#statusline#Update	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^function! go#statusline#Update(status_dir, status) abort$/;"	f
go#tags#Add	pack/plugins/start/fatih-vim-go/autoload/go/tags.vim	/^function! go#tags#Add(start, end, count, ...) abort$/;"	f
go#tags#Remove	pack/plugins/start/fatih-vim-go/autoload/go/tags.vim	/^function! go#tags#Remove(start, end, count, ...) abort$/;"	f
go#tags#run	pack/plugins/start/fatih-vim-go/autoload/go/tags.vim	/^function! go#tags#run(start, end, offset, mode, fname, test_mode, ...) abort$/;"	f
go#template#ToggleAutoCreate	pack/plugins/start/fatih-vim-go/autoload/go/template.vim	/^function! go#template#ToggleAutoCreate() abort$/;"	f
go#template#create	pack/plugins/start/fatih-vim-go/autoload/go/template.vim	/^function! go#template#create() abort$/;"	f
go#term#new	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! go#term#new(bang, cmd) abort$/;"	f
go#term#newmode	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! go#term#newmode(bang, cmd, mode) abort$/;"	f
go#test#Func	pack/plugins/start/fatih-vim-go/autoload/go/test.vim	/^function! go#test#Func(bang, ...) abort$/;"	f
go#test#Test	pack/plugins/start/fatih-vim-go/autoload/go/test.vim	/^function! go#test#Test(bang, compile, ...) abort$/;"	f
go#textobj#Function	pack/plugins/start/fatih-vim-go/autoload/go/textobj.vim	/^function! go#textobj#Function(mode) abort$/;"	f
go#textobj#FunctionJump	pack/plugins/start/fatih-vim-go/autoload/go/textobj.vim	/^function! go#textobj#FunctionJump(mode, direction) abort$/;"	f
go#tool#Deps	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Deps() abort$/;"	f
go#tool#ExecuteInDir	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#ExecuteInDir(cmd) abort$/;"	f
go#tool#Exists	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Exists(importpath) abort$/;"	f
go#tool#Files	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Files(...) abort$/;"	f
go#tool#FilterValids	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#FilterValids(items) abort$/;"	f
go#tool#Imports	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Imports() abort$/;"	f
go#tool#Info	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Info(auto) abort$/;"	f
go#tool#OpenBrowser	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#OpenBrowser(url) abort$/;"	f
go#tool#PackageName	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#PackageName() abort$/;"	f
go#tool#ParseErrors	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#ParseErrors(lines) abort$/;"	f
go#tool#ValidFiles	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#ValidFiles(...)$/;"	f
go#ui#CloseWindow	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^function! go#ui#CloseWindow() abort$/;"	f
go#ui#GetReturnWindow	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^function! go#ui#GetReturnWindow() abort$/;"	f
go#ui#OpenDefinition	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^function! go#ui#OpenDefinition(filter) abort$/;"	f
go#ui#OpenWindow	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^function! go#ui#OpenWindow(title, content, filetype) abort$/;"	f
go#util#EchoError	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoError(msg)$/;"	f
go#util#EchoInfo	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoInfo(msg)$/;"	f
go#util#EchoProgress	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoProgress(msg)$/;"	f
go#util#EchoSuccess	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoSuccess(msg)$/;"	f
go#util#EchoWarning	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoWarning(msg)$/;"	f
go#util#Exec	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Exec(cmd, ...) abort$/;"	f
go#util#GetLines	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#GetLines()$/;"	f
go#util#IsMac	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#IsMac() abort$/;"	f
go#util#IsUsingCygwinShell	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#IsUsingCygwinShell()$/;"	f
go#util#IsWin	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#IsWin() abort$/;"	f
go#util#Join	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Join(...) abort$/;"	f
go#util#LineEnding	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#LineEnding() abort$/;"	f
go#util#Offset	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Offset(line, col) abort$/;"	f
go#util#OffsetCursor	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#OffsetCursor() abort$/;"	f
go#util#PathListSep	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#PathListSep() abort$/;"	f
go#util#PathSep	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#PathSep() abort$/;"	f
go#util#ShellError	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#ShellError() abort$/;"	f
go#util#Shellescape	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^fu! go#util#Shellescape(arg)$/;"	f
go#util#Shelljoin	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Shelljoin(arglist, ...) abort$/;"	f
go#util#Shelllist	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Shelllist(arglist, ...) abort$/;"	f
go#util#StripPathSep	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#StripPathSep(path) abort$/;"	f
go#util#StripTrailingSlash	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#StripTrailingSlash(paths) abort$/;"	f
go#util#System	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#System(str, ...) abort$/;"	f
go#util#Windo	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Windo(command) abort$/;"	f
go#util#archive	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#archive()$/;"	f
go#util#camelcase	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#camelcase(word) abort$/;"	f
go#util#env	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#env(key) abort$/;"	f
go#util#goarch	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#goarch() abort$/;"	f
go#util#goos	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#goos() abort$/;"	f
go#util#gopath	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#gopath() abort$/;"	f
go#util#goroot	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#goroot() abort$/;"	f
go#util#has_job	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#has_job() abort$/;"	f
go#util#osarch	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#osarch() abort$/;"	f
go#util#pascalcase	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#pascalcase(word) abort$/;"	f
go#util#snakecase	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#snakecase(word) abort$/;"	f
go#util#snippetcase	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#snippetcase(word) abort$/;"	f
go#util#tempdir	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#tempdir(prefix) abort$/;"	f
go_packages	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! s:go_packages(dirs) abort$/;"	f
gocodeAutocomplete	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeAutocomplete() abort$/;"	f
gocodeCommand	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeCommand(cmd, preargs, args) abort$/;"	f
gocodeCurrentBuffer	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeCurrentBuffer() abort$/;"	f
gocodeCurrentBufferOpt	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeCurrentBufferOpt(filename) abort$/;"	f
gocodeEnableOptions	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeEnableOptions() abort$/;"	f
godocNotFound	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! s:godocNotFound(content) abort$/;"	f
godocWord	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! s:godocWord(args) abort$/;"	f
gofiletype_post	pack/plugins/start/fatih-vim-go/ftdetect/gofiletype.vim	/^function! s:gofiletype_post()$/;"	f
gofiletype_pre	pack/plugins/start/fatih-vim-go/ftdetect/gofiletype.vim	/^function! s:gofiletype_pre(type)$/;"	f
gogetdoc	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! s:gogetdoc(json) abort$/;"	f
got_out_of_cmdwindow	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:got_out_of_cmdwindow() abort "{{{$/;"	f
gotest#assert_buffer	pack/plugins/start/fatih-vim-go/autoload/gotest.vim	/^fun! gotest#assert_buffer(skipHeader, want) abort$/;"	f
gotest#assert_fixture	pack/plugins/start/fatih-vim-go/autoload/gotest.vim	/^fun! gotest#assert_fixture(path) abort$/;"	f
gotest#dir	pack/plugins/start/fatih-vim-go/autoload/gotest.vim	/^fun! gotest#dir(path, ...) abort$/;"	f
gotest#lastmsg	pack/plugins/start/fatih-vim-go/autoload/gotest.vim	/^fun! gotest#lastmsg() abort$/;"	f
gotest#load_fixture	pack/plugins/start/fatih-vim-go/autoload/gotest.vim	/^fun! gotest#load_fixture(path) abort$/;"	f
gotest#write_file	pack/plugins/start/fatih-vim-go/autoload/gotest.vim	/^fun! gotest#write_file(path, contents) abort$/;"	f
goto_tab	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:goto_tab(tabnr) abort  "{{{$/;"	f
goto_window	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:goto_window(winnr, ...) abort "{{{$/;"	f
grep_command	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:grep_command(args,bang,flags,word)$/;"	f
gsub	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
guru_cmd	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:guru_cmd(args) range abort$/;"	f
gutentags#add_progress	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#add_progress(module, file) abort$/;"	f
gutentags#chdir	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#chdir(path)$/;"	f
gutentags#cscope#command_terminated	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#command_terminated(job_id, data, event) abort$/;"	f
gutentags#cscope#generate	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#generate(proj_dir, tags_file, write_mode) abort$/;"	f
gutentags#cscope#init	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#init(project_root) abort$/;"	f
gutentags#ctags#generate	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#generate(proj_dir, tags_file, write_mode) abort$/;"	f
gutentags#ctags#init	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#init(project_root) abort$/;"	f
gutentags#delete_lock_files	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#delete_lock_files() abort$/;"	f
gutentags#fake	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#fake(...)$/;"	f
gutentags#get_cachefile	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_cachefile(root_dir, filename) abort$/;"	f
gutentags#get_execute_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_execute_cmd() abort$/;"	f
gutentags#get_execute_cmd_suffix	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_execute_cmd_suffix() abort$/;"	f
gutentags#get_plat_file	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_plat_file(filename) abort$/;"	f
gutentags#get_project_file_list_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_file_list_cmd(path) abort$/;"	f
gutentags#get_project_info	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_info(path) abort$/;"	f
gutentags#get_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_root(path) abort$/;"	f
gutentags#get_res_file	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_res_file(filename) abort$/;"	f
gutentags#gtags_cscope#generate	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#generate(proj_dir, db_file, write_mode) abort$/;"	f
gutentags#gtags_cscope#init	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#init(project_root) abort$/;"	f
gutentags#gtags_cscope#on_job_exit	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#gtags_cscope#on_job_out	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#on_job_out(job, data) abort$/;"	f
gutentags#inprogress	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#inprogress()$/;"	f
gutentags#is_path_rooted	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#is_path_rooted(path) abort$/;"	f
gutentags#normalizepath	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#normalizepath(path)$/;"	f
gutentags#rescan	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#rescan(...)$/;"	f
gutentags#setup_gutentags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#setup_gutentags() abort$/;"	f
gutentags#shellslash	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#shellslash(path)$/;"	f
gutentags#statusline	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline(...) abort$/;"	f
gutentags#stripslash	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#stripslash(path)$/;"	f
gutentags#throw	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#throw(message)$/;"	f
gutentags#throwerr	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#throwerr(message)$/;"	f
gutentags#toggletrace	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#toggletrace(...)$/;"	f
gutentags#trace	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#trace(message, ...)$/;"	f
gutentags#validate_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#validate_cmd(cmd) abort$/;"	f
gutentags_detect	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^augroup gutentags_detect$/;"	a
h.	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal h.$/;"	m
handleLeftClick	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleLeftClick()$/;"	f
handleMiddleMouse	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleMiddleMouse()$/;"	f
handle_class	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! s:handle_class(itemdict, itemlist, i) abort  "{{{$/;"	f
handle_custom_attr_name	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! s:handle_custom_attr_name(itemdict, itemlist, i) abort "{{{$/;"	f
handle_equal	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! s:handle_equal(itemdict, itemlist, i, ...) abort "{{{$/;"	f
handle_id	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! s:handle_id(itemdict, itemlist, i) abort  "{{{$/;"	f
has_action	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:has_action(candidate, action) abort "{{{$/;"	f
has_filetype	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:has_filetype(candidate) abort "{{{$/;"	f
has_filetype	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/recipes.vim	/^function! s:has_filetype(candidate) abort "{{{$/;"	f
has_kind	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:has_kind(candidate, kind) abort "{{{$/;"	f
has_kind	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/recipes.vim	/^function! s:has_kind(candidate, kind) abort "{{{$/;"	f
has_mode	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:has_mode(candidate, mode) abort "{{{$/;"	f
has_mode	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/recipes.vim	/^function! s:has_mode(candidate, mode) abort "{{{$/;"	f
has_motionwise	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:has_motionwise(candidate, motionwise) abort "{{{$/;"	f
hi	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^function! s:hi()$/;"	f
highlight	pack/plugins/start/xtal8-traces-vim/plugin/traces.vim	/^function! s:highlight(pattern_regex, selection_regex, last_specifier_pattern, abs_range) abort$/;"	f
highlight.goto_highlighted_window	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^  function! s:highlight.goto_highlighted_window() dict abort$/;"	f
highlight.highlighted_window	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^  function! s:highlight.highlighted_window() dict abort$/;"	f
highlight.initialize	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:highlight.initialize() dict abort "{{{$/;"	f
highlight.order	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:highlight.order(target, linewise) dict abort  "{{{$/;"	f
highlight.quench	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:highlight.quench() dict abort "{{{$/;"	f
highlight.quench_timer	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:highlight.quench_timer(time) dict abort "{{{$/;"	f
highlight.show	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:highlight.show(...) dict abort "{{{$/;"	f
highlight_order_charwise	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:highlight_order_charwise(order_list, order, head, tail) abort  "{{{$/;"	f
highlight_order_linewise	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:highlight_order_linewise(order_list, order, head, tail) abort  "{{{$/;"	f
i	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^      let i += 1$/;"	v
i	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^    let i = 0$/;"	v
ic	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    omap ic <Plug>GitGutterTextObjectInnerPending$/;"	m
if	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> if :<c-u>call go#textobj#Function('i')<cr>$/;"	m
init	pack/plugins/start/wellle-tmux-complete-vim/plugin/tmuxcomplete.vim	/^function! s:init()$/;"	f
initVariable	pack/plugins/start/scrooloose-nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
initialize_options	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! s:initialize_options(...) abort  "{{{$/;"	f
initialize_options	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich.vim	/^function! s:initialize_options(...) abort  "{{{$/;"	f
input	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/i.vim	/^function! s:input(mes) abort "{{{$/;"	f
instaweb_url	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:instaweb_url(opts) abort$/;"	f
interface_list	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! s:interface_list(pkg) abort$/;"	f
is_ahead	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/lib.vim	/^function! s:is_ahead(pos1, pos2) abort  "{{{$/;"	f
is_ahead	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:is_ahead(pos1, pos2) abort  "{{{$/;"	f
is_ahead	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^function! s:is_ahead(coord1, coord2) abort  "{{{$/;"	f
is_appropriate_patterns	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:is_appropriate_patterns(item) abort "{{{$/;"	f
is_cmdwin	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:is_cmdwin() "{{{1$/;"	f
is_continuous_syntax	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! s:is_continuous_syntax(bra_pos, ket_pos) abort  "{{{$/;"	f
is_duplicated_buns	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:is_duplicated_buns(item, ref, ref_regex, opt_regex) abort  "{{{$/;"	f
is_duplicated_buns	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/recipes.vim	/^function! s:is_duplicated_buns(item, ref, opt_regex, opt_expr) abort  "{{{$/;"	f
is_duplicated_external	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:is_duplicated_external(item, ref, opt_noremap) abort "{{{$/;"	f
is_duplicated_external	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/recipes.vim	/^function! s:is_duplicated_external(item, ref, opt_noremap) abort "{{{$/;"	f
is_equal_or_ahead	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/lib.vim	/^function! s:is_equal_or_ahead(pos1, pos2) abort  "{{{$/;"	f
is_equal_or_ahead	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:is_equal_or_ahead(pos1, pos2) abort  "{{{$/;"	f
is_equal_or_ahead	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^function! s:is_equal_or_ahead(coord1, coord2) abort  "{{{$/;"	f
is_highlighted_window	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:is_highlighted_window(id) abort "{{{$/;"	f
is_in_between	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/lib.vim	/^function! s:is_in_between(pos, head, tail) abort  "{{{$/;"	f
is_in_between	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^function! s:is_in_between(coord, head, tail) abort  "{{{$/;"	f
is_in_cmdline_window	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^  function! s:is_in_cmdline_window() abort$/;"	f
is_in_the_range	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! s:is_in_the_range(pos, head, tail) abort  "{{{$/;"	f
is_input_matched	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:is_input_matched(candidate, input, opt, flag) abort "{{{$/;"	f
is_input_matched	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/recipes.vim	/^function! s:is_input_matched(candidate, input, opt, flag) abort "{{{$/;"	f
is_not_expr	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:is_not_expr(item, default_expr, default_listexpr) abort "{{{$/;"	f
is_string_literal	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! s:is_string_literal(pos) abort  "{{{$/;"	f
is_valid_2pos	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/lib.vim	/^function! s:is_valid_2pos(pos) abort  "{{{$/;"	f
is_valid_4pos	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/lib.vim	/^function! s:is_valid_4pos(pos) abort  "{{{$/;"	f
is_valid_region	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:is_valid_region(kind, region, ...) abort "{{{$/;"	f
is_valid_region	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^function! s:is_valid_region(head, tail, prev_head, prev_tail, count) abort  "{{{$/;"	f
itemdict.list_custom_attr	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! s:itemdict.list_custom_attr(name, ...) dict abort "{{{$/;"	f
itemdict.queue_class	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! s:itemdict.queue_class(...) dict abort  "{{{$/;"	f
itemdict.queue_custom_attr	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! s:itemdict.queue_custom_attr() dict abort "{{{$/;"	f
itemdict.queue_element	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! s:itemdict.queue_element(value) dict abort  "{{{$/;"	f
itemdict.queue_id	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! s:itemdict.queue_id(...) dict abort  "{{{$/;"	f
j	vimrc	/^        nnoremap j gj$/;"	m
j.	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal j.$/;"	m
jh.	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal jh.$/;"	m
jl.	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal jl.$/;"	m
jobdir	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let jobdir = fnameescape(expand("%:p:h"))$/;"	v
jobdir	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let jobdir = fnameescape(expand("%:p:h"))$/;"	v
jobdir	pack/plugins/start/fatih-vim-go/autoload/go/test.vim	/^  let jobdir = fnameescape(expand("%:p:h"))$/;"	v
jumpToChild	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToChild(currentNode, direction)$/;"	f
jumpToFirstChild	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToFirstChild(node)$/;"	f
jumpToLastChild	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToLastChild(node)$/;"	f
jumpToNextSibling	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToNextSibling(node)$/;"	f
jumpToParent	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToParent(node)$/;"	f
jumpToPrevSibling	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToPrevSibling(node)$/;"	f
jumpToRoot	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToRoot()$/;"	f
jumpToSibling	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToSibling(currentNode, forward)$/;"	f
jump_to_declaration_cb	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! s:jump_to_declaration_cb(mode, bin_name, job, exit_status, data) abort$/;"	f
k	vimrc	/^        nnoremap k gk$/;"	m
l:start_options	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^    let l:start_options.in_io = "file"$/;"	v
l:start_options	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^    let l:start_options.in_name = l:tmpname$/;"	v
l:start_options	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^    let l:start_options.in_io = "file"$/;"	v
l:start_options	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^    let l:start_options.in_name = l:tmpname$/;"	v
l:tmpname	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^    let l:tmpname = tempname()$/;"	v
l:tmpname	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^    let l:tmpname = tempname()$/;"	v
lib.c2p	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/lib.vim	/^function! s:lib.c2p(coord) abort  "{{{$/;"	f
lib.escape	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/lib.vim	/^function! s:lib.escape(string) abort  "{{{$/;"	f
lib.get_displaycoord	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/lib.vim	/^function! s:lib.get_displaycoord(coord) abort "{{{$/;"	f
lib.get_displaysyntax	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/lib.vim	/^function! s:lib.get_displaysyntax(coord) abort  "{{{$/;"	f
lib.is_included_syntax	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/lib.vim	/^function! s:lib.is_included_syntax(coord, syntaxID) abort  "{{{$/;"	f
lib.is_matched_syntax	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/lib.vim	/^function! s:lib.is_matched_syntax(coord, syntaxID) abort  "{{{$/;"	f
lib.set_displaycoord	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/lib.vim	/^function! s:lib.set_displaycoord(disp_coord) abort "{{{$/;"	f
lib.sort	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/lib.vim	/^  function! s:lib.sort(list, func, count) abort$/;"	f
linechars	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
lines.gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^function! s:lines.gather_candidates(args, context)$/;"	f
lint_job	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function s:lint_job(args)$/;"	f
listtype	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! s:listtype(listtype) abort$/;"	f
loaded_nerd_tree	pack/plugins/start/scrooloose-nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
main	get-plugins.go	/^func main() {$/;"	f
main	get-plugins.go	/^package main$/;"	p
main	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^func main() {$/;"	f
main	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/def/jump.go	/^func main() {$/;"	f
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/def/jump.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/hello.go	/^  func main() {$/;"	f
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/hello.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/hello_golden.go	/^func main() {$/;"	f
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/hello_golden.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/imports/goimports.go	/^func main() {$/;"	f
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/imports/goimports.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/imports/goimports_golden.go	/^func main() {$/;"	f
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/imports/goimports_golden.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports.go	/^func main() {$/;"	f
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports_golden.go	/^func main() {$/;"	f
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports_golden.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/templates/hello_world.go	/^func main() {$/;"	f
main	pack/plugins/start/fatih-vim-go/templates/hello_world.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/templates/hello_world_test.go	/^package main$/;"	p
main	pack/plugins/start/xtal8-traces-vim/plugin/traces.vim	/^function! s:main(...) abort$/;"	f
manual._inject_keywords	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual._inject_keywords(keywords) "{{{$/;"	f
manual.add	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.add(pattern, escaped) "{{{$/;"	f
manual.clear	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.clear() "{{{$/;"	f
manual.del	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.del(pattern, escaped) "{{{$/;"	f
manual.del_by_index	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.del_by_index(idx) "{{{$/;"	f
manual.dump	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.dump() "{{{$/;"	f
manual.index_of	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.index_of(pattern) "{{{$/;"	f
manual.init	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.init() "{{{$/;"	f
manual.init_highlight	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.init_highlight() "{{{$/;"	f
manual.inject_keywords	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.inject_keywords() "{{{$/;"	f
manual.is_locked	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.is_locked() "{{{$/;"	f
manual.list	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.list() "{{{$/;"	f
manual.next_index	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.next_index() "{{{$/;"	f
manual.read_colors	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.read_colors(list) "{{{$/;"	f
manual.refresh	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.refresh() "{{{$/;"	f
manual.reset	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.reset() "{{{$/;"	f
manual.set	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.set() "{{{$/;"	f
manual.show_colors	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.show_colors() "{{{$/;"	f
manual_update_tags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! s:manual_update_tags(bang) abort$/;"	f
map	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:map(mode, lhs, rhs, ...) abort$/;"	f
mark_to_absolute	pack/plugins/start/xtal8-traces-vim/plugin/traces.vim	/^function! s:mark_to_absolute(address, last_position, range_size) abort$/;"	f
matchaddpos	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^  function! s:matchaddpos(group, pos) abort$/;"	f
matchstrpos	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^  function! s:matchstrpos(expr, pat, ...) abort$/;"	f
matchstrpos	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/i.vim	/^  function! s:matchstrpos(expr, pat, ...) abort$/;"	f
messenger_prototype.error.echoerr	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/messenger.vim	/^function! s:messenger_prototype.error.echoerr(prefix) dict abort  "{{{$/;"	f
messenger_prototype.error.set	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/messenger.vim	/^function! s:messenger_prototype.error.set(errmes) dict abort  "{{{$/;"	f
messenger_prototype.initialize	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/messenger.vim	/^function! s:messenger_prototype.initialize() dict abort  "{{{$/;"	f
messenger_prototype.notice.echo	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/messenger.vim	/^function! s:messenger_prototype.notice.echo(prefix) dict abort "{{{$/;"	f
messenger_prototype.notice.queue	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/messenger.vim	/^function! s:messenger_prototype.notice.queue(line) dict abort "{{{$/;"	f
messenger_prototype.notify	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/messenger.vim	/^function! s:messenger_prototype.notify(prefix) dict abort "{{{$/;"	f
metalinter_autosave	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:metalinter_autosave()$/;"	f
mixedcase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:mixedcase(word)$/;"	f
mustNotError	get-plugins.go	/^func mustNotError(err error, note string) {$/;"	f
neocomplcache#sources#tmuxcomplete#define	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplcache/sources/tmuxcomplete.vim	/^function! neocomplcache#sources#tmuxcomplete#define()$/;"	f
neocomplete#sources#tmuxcomplete#define	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplete/sources/tmuxcomplete.vim	/^function! neocomplete#sources#tmuxcomplete#define()$/;"	f
nerdtree#checkForBrowse	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir)$/;"	f
nerdtree#compareNodes	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2)$/;"	f
nerdtree#compareNodesBySortKey	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodesBySortKey(n1, n2)$/;"	f
nerdtree#completeBookmarks	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P)$/;"	f
nerdtree#deprecated	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...)$/;"	f
nerdtree#echo	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg)$/;"	f
nerdtree#echoError	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg)$/;"	f
nerdtree#echoWarning	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg)$/;"	f
nerdtree#exec	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd)$/;"	f
nerdtree#has_opt	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name)$/;"	f
nerdtree#loadClassFiles	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles()$/;"	f
nerdtree#postSourceActions	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions()$/;"	f
nerdtree#renderView	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView()$/;"	f
nerdtree#runningCygwin	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningCygwin()$/;"	f
nerdtree#runningWindows	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows()$/;"	f
nerdtree#ui_glue#bookmarkNode	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#bookmarkNode(...)$/;"	f
nerdtree#ui_glue#chRootCwd	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#chRootCwd()$/;"	f
nerdtree#ui_glue#clearBookmarks	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#clearBookmarks(bookmarks)$/;"	f
nerdtree#ui_glue#createDefaultBindings	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#createDefaultBindings()$/;"	f
nerdtree#ui_glue#invokeKeyMap	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#invokeKeyMap(key)$/;"	f
nerdtree#ui_glue#openBookmark	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#openBookmark(name)$/;"	f
nerdtree#ui_glue#revealBookmark	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#revealBookmark(name)$/;"	f
nerdtree#ui_glue#setupCommands	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#setupCommands()$/;"	f
nerdtree#ui_glue#upDir	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#upDir(keepState)$/;"	f
nerdtree#version	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version()$/;"	f
newcommand	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! s:newcommand(as)$/;"	f
nofrilsTheme	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^type nofrilsTheme struct {$/;"	t
normalize_options	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:normalize_options(flags)$/;"	f
o	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^    nnoremap <silent> <buffer> o <CR><C-w>p$/;"	m
object.clone	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:object.clone(...)$/;"	f
of_for_add	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^function! s:of_for_add(opt_name, ...) dict abort  "{{{$/;"	f
of_for_delete	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^function! s:of_for_delete(opt_name, ...) dict abort  "{{{$/;"	f
of_for_replace	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^function! s:of_for_replace(opt_name, ...) dict abort  "{{{$/;"	f
of_for_textobj	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^function! s:of_for_textobj(opt_name) dict abort  "{{{$/;"	f
offset_to_num	pack/plugins/start/xtal8-traces-vim/plugin/traces.vim	/^function! s:offset_to_num(string) abort$/;"	f
on_exit	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:on_exit(job_id, exit_status, event) dict abort$/;"	f
on_exit	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! s:on_exit(job_id, exit_status, event) dict abort$/;"	f
on_exit_nvim	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_exit_nvim(_job_id, _data, _event) dict abort$/;"	f
on_exit_vim	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_exit_vim(_channel) dict abort$/;"	f
on_stderr	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:on_stderr(job_id, data, event) dict abort$/;"	f
on_stderr	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! s:on_stderr(job_id, data, event) dict abort$/;"	f
on_stderr_nvim	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stderr_nvim(_job_id, _data, _event) dict abort$/;"	f
on_stderr_vim	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stderr_vim(_channel, _data) dict abort$/;"	f
on_stdout	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:on_stdout(job_id, data, event) dict abort$/;"	f
on_stdout	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! s:on_stdout(job_id, data, event) dict abort$/;"	f
on_stdout_nvim	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stdout_nvim(_job_id, data, _event) dict abort$/;"	f
on_stdout_vim	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stdout_vim(_channel, data) dict abort$/;"	f
openExplorer	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openExplorer(node)$/;"	f
openHSplit	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplit(target)$/;"	f
openInNewTab	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTab(target)$/;"	f
openInNewTabSilent	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTabSilent(target)$/;"	f
openNodeRecursively	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openNodeRecursively(node)$/;"	f
openVSplit	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplit(target)$/;"	f
operator#sandwich#act#new	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! operator#sandwich#act#new() abort "{{{$/;"	f
operator#sandwich#add	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! operator#sandwich#add(motionwise, ...) abort  "{{{$/;"	f
operator#sandwich#delete	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! operator#sandwich#delete(motionwise, ...) abort  "{{{$/;"	f
operator#sandwich#dot	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! operator#sandwich#dot() abort  "{{{$/;"	f
operator#sandwich#get_info	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! operator#sandwich#get_info(...) abort  "{{{$/;"	f
operator#sandwich#get_recipes	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! operator#sandwich#get_recipes() abort  "{{{$/;"	f
operator#sandwich#is_in_cmd_window	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! operator#sandwich#is_in_cmd_window() abort  "{{{$/;"	f
operator#sandwich#keymap	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! operator#sandwich#keymap(kind, mode, ...) abort "{{{$/;"	f
operator#sandwich#kind	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! operator#sandwich#kind() abort  "{{{$/;"	f
operator#sandwich#lib#funcref	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/lib.vim	/^function! operator#sandwich#lib#funcref(list) abort "{{{$/;"	f
operator#sandwich#operator#new	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! operator#sandwich#operator#new() abort  "{{{$/;"	f
operator#sandwich#predot	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! operator#sandwich#predot() abort  "{{{$/;"	f
operator#sandwich#prerequisite	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! operator#sandwich#prerequisite(kind, mode, ...) abort "{{{$/;"	f
operator#sandwich#quench	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! operator#sandwich#quench(...) abort  "{{{$/;"	f
operator#sandwich#query1st	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! operator#sandwich#query1st(kind, mode, ...) abort "{{{$/;"	f
operator#sandwich#release_count	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! operator#sandwich#release_count() abort  "{{{$/;"	f
operator#sandwich#replace	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! operator#sandwich#replace(motionwise, ...) abort  "{{{$/;"	f
operator#sandwich#set	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! operator#sandwich#set(kind, motionwise, option, value) abort  "{{{$/;"	f
operator#sandwich#set_default	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! operator#sandwich#set_default() abort "{{{$/;"	f
operator#sandwich#setlocal	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! operator#sandwich#setlocal(kind, motionwise, option, value) abort  "{{{$/;"	f
operator#sandwich#show	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! operator#sandwich#show(...) abort  "{{{$/;"	f
operator#sandwich#squash_count	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! operator#sandwich#squash_count() abort  "{{{$/;"	f
operator#sandwich#stuff#new	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^function! operator#sandwich#stuff#new() abort "{{{$/;"	f
operator#sandwich#synchro_count	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! operator#sandwich#synchro_count() abort  "{{{$/;"	f
operator#sandwich#synchronize	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! operator#sandwich#synchronize(kind, recipe) abort "{{{$/;"	f
operator#sandwich#visualrepeat	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! operator#sandwich#visualrepeat(kind) abort  "{{{$/;"	f
operator-sandwich	pack/plugins/start/machakann-vim-sandwich/README.md	/^### operator-sandwich$/;"	k
operator.add	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.add() dict abort "{{{$/;"	f
operator.add_once	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.add_once(i, recipe) dict abort  "{{{$/;"	f
operator.blink	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.blink(place, hi_group, duration) dict abort "{{{$/;"	f
operator.delete	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.delete() dict abort  "{{{$/;"	f
operator.delete_once	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.delete_once(i) dict abort "{{{$/;"	f
operator.execute	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.execute(motionwise) dict abort  "{{{$/;"	f
operator.fill	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.fill() dict abort  "{{{$/;"	f
operator.finalize	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.finalize() dict abort  "{{{$/;"	f
operator.glow	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.glow(place, hi_group, duration) dict abort "{{{$/;"	f
operator.highlight_added	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.highlight_added(opt) dict abort  "{{{$/;"	f
operator.initialize	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.initialize(motionwise) dict abort "{{{$/;"	f
operator.last_succeeded	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.last_succeeded() abort "{{{$/;"	f
operator.match	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.match(i) dict abort  "{{{$/;"	f
operator.quench	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.quench(place) dict abort "{{{$/;"	f
operator.quench_timer	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.quench_timer(place, duration) abort "{{{$/;"	f
operator.query	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.query() dict abort  "{{{$/;"	f
operator.recipes.fill	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.recipes.fill(recipe, count) dict abort  "{{{$/;"	f
operator.recipes.integrate	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.recipes.integrate(kind, motionwise, mode) dict abort  "{{{$/;"	f
operator.replace	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.replace() dict abort  "{{{$/;"	f
operator.replace_once	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.replace_once(i, recipe) dict abort  "{{{$/;"	f
operator.set_target	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.set_target() dict abort  "{{{$/;"	f
operator.show	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.show(place, hi_group, ...) dict abort "{{{$/;"	f
operator.skip_space	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.skip_space(i) dict abort "{{{$/;"	f
operator.split	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:operator.split(region) dict abort  "{{{$/;"	f
opt._of	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^function! s:opt._of(opt_name, ...) dict abort  "{{{$/;"	f
opt.clear	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^function! s:opt.clear(target) dict abort "{{{$/;"	f
opt.get	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^function! s:opt.get(opt_name, kind, ...) dict abort "{{{$/;"	f
opt.has	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^function! s:opt.has(opt_name) dict abort  "{{{$/;"	f
opt.max	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^function! s:opt.max(opt_name, ...) dict abort "{{{$/;"	f
opt.update	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^function! s:opt.update(target, dict) dict abort "{{{$/;"	f
opt_syntax_affair	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^function! s:opt_syntax_affair(sandwich) abort "{{{$/;"	f
option_map	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:option_map(letter, option, mode) abort$/;"	f
overwrite	pack/plugins/start/machakann-vim-sandwich/test/test-magicchar-t-emmet.vim	/^function! s:overwrite(itemlist, name) abort "{{{$/;"	f
p	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^    nnoremap <silent> <buffer> p :call qf#preview#PreviewFileUnderCursor()<CR>$/;"	m
parse	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! s:parse(tokenlist) abort  "{{{$/;"	f
parse_custom_attributes	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! s:parse_custom_attributes(itemdict, itemlist, i) abort  "{{{$/;"	f
parse_errors	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! s:parse_errors(filename, content) abort$/;"	f
parse_errors	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^function s:parse_errors(exit_val, bang, out)$/;"	f
parse_errors	pack/plugins/start/fatih-vim-go/autoload/go/test.vim	/^function! s:parse_errors(lines) abort$/;"	f
parse_guru_output	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:parse_guru_output(exit_val, output, title) abort$/;"	f
parse_substitute	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:parse_substitute(bang,line1,line2,count,args)$/;"	f
parse_subvert	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:parse_subvert(bang,line1,line2,count,args)$/;"	f
paste	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:paste(bun, ...) abort "{{{$/;"	f
pattern	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:pattern(dict,boundaries)$/;"	f
previewNodeCurrent	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeCurrent(node)$/;"	f
previewNodeHSplit	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplit(node)$/;"	f
previewNodeVSplit	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplit(node)$/;"	f
print_help	pack/plugins/start/w0rp-ale/test/script/custom-linting-rules	/^function print_help() {$/;"	f
process_options_file	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:process_options_file(proj_dir, path) abort$/;"	f
promptToDelBuffer	pack/plugins/start/scrooloose-nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToRenameBuffer	pack/plugins/start/scrooloose-nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToRenameBuffer(bufnum, msg, newFileName)$/;"	f
prototype	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! s:prototype(mode) abort  "{{{$/;"	f
prototype	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! s:prototype(kind) abort "{{{$/;"	f
pull1	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:pull1(shifted_pos, target, deletion, is_linewise) abort "{{{$/;"	f
pull2	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:pull2(shifted_pos, target, deletion, is_linewise) abort "{{{$/;"	f
push	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:push(shift, shifted_pos, head, addition, indent, is_linewise) abort  "{{{$/;"	f
push1	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:push1(shifted_pos, target, addition, indent, is_linewise) abort  "{{{$/;"	f
push2	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:push2(shifted_pos, target, addition, indent, is_linewise) abort  "{{{$/;"	f
putline	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:putline(how, map) abort$/;"	f
q	pack/plugins/start/w0rp-ale/ftplugin/ale-fix-suggest.vim	/^noremap <buffer> q :q!<CR>$/;"	m
q	pack/plugins/start/w0rp-ale/ftplugin/ale-preview.vim	/^noremap <buffer> q :q!<CR>$/;"	m
qf	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^augroup qf$/;"	a
qf#GetEntryPath	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#GetEntryPath(line) abort$/;"	f
qf#GetList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#GetList()$/;"	f
qf#IsLocWindow	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#IsLocWindow(nmbr)$/;"	f
qf#IsLocWindowOpen	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#IsLocWindowOpen(nmbr) abort$/;"	f
qf#IsQfWindow	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#IsQfWindow(nmbr)$/;"	f
qf#IsQfWindowOpen	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#IsQfWindowOpen() abort$/;"	f
qf#OpenLoclist	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#OpenLoclist()$/;"	f
qf#OpenQuickfix	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#OpenQuickfix()$/;"	f
qf#PreviewFileUnderCursor	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#PreviewFileUnderCursor()$/;"	f
qf#SetList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#SetList(newlist, ...)$/;"	f
qf#do#DoList	pack/plugins/start/romainl-vim-qf/autoload/qf/do.vim	/^function! qf#do#DoList(line, cmd)$/;"	f
qf#filegroup#NextFile	pack/plugins/start/romainl-vim-qf/autoload/qf/filegroup.vim	/^function! qf#filegroup#NextFile() abort$/;"	f
qf#filegroup#PreviousFile	pack/plugins/start/romainl-vim-qf/autoload/qf/filegroup.vim	/^function! qf#filegroup#PreviousFile() abort$/;"	f
qf#filter#FilterList	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! qf#filter#FilterList(pat, reject)$/;"	f
qf#filter#RestoreList	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! qf#filter#RestoreList()$/;"	f
qf#filter#ReuseTitle	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! qf#filter#ReuseTitle()$/;"	f
qf#namedlist#CompleteList	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^function! qf#namedlist#CompleteList(ArgLead, CmdLine, CursorPos)$/;"	f
qf#namedlist#ListLists	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^function! qf#namedlist#ListLists()$/;"	f
qf#namedlist#LoadList	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^function! qf#namedlist#LoadList(add, ...)$/;"	f
qf#namedlist#RemoveList	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^function! qf#namedlist#RemoveList(bang, ...)$/;"	f
qf#namedlist#SaveList	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^function! qf#namedlist#SaveList(add, name) abort$/;"	f
qf#preview#PreviewFileUnderCursor	pack/plugins/start/romainl-vim-qf/autoload/qf/preview.vim	/^function! qf#preview#PreviewFileUnderCursor()$/;"	f
qf#statusline#SetStatusline	pack/plugins/start/romainl-vim-qf/autoload/qf/statusline.vim	/^function! qf#statusline#SetStatusline()$/;"	f
qf#toggle#ToggleLocWindow	pack/plugins/start/romainl-vim-qf/autoload/qf/toggle.vim	/^function! qf#toggle#ToggleLocWindow(stay) abort$/;"	f
qf#toggle#ToggleQfWindow	pack/plugins/start/romainl-vim-qf/autoload/qf/toggle.vim	/^function! qf#toggle#ToggleQfWindow(stay) abort$/;"	f
qf#wrap#WrapCommand	pack/plugins/start/romainl-vim-qf/autoload/qf/wrap.vim	/^function! qf#wrap#WrapCommand(direction, prefix)$/;"	f
quench	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:quench(id) abort  "{{{$/;"	f
quench_paused	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:quench_paused(...) abort "{{{$/;"	f
quickhl#cword#disable	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! quickhl#cword#disable() "{{{$/;"	f
quickhl#cword#enable	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! quickhl#cword#enable() "{{{$/;"	f
quickhl#cword#init_highlight	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! quickhl#cword#init_highlight() "{{{$/;"	f
quickhl#cword#refresh	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! quickhl#cword#refresh() "{{{$/;"	f
quickhl#cword#toggle	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! quickhl#cword#toggle() "{{{$/;"	f
quickhl#escape	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl.vim	/^function! quickhl#escape(pattern) "{{{$/;"	f
quickhl#get_selected_text	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl.vim	/^function! quickhl#get_selected_text() "{{{$/;"	f
quickhl#manual#add	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#add(pattern, escaped) "{{{$/;"	f
quickhl#manual#add_or_del	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#add_or_del(pattern, escaped) "{{{$/;"	f
quickhl#manual#clear_this	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#clear_this(mode) " {{{$/;"	f
quickhl#manual#colors	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#colors() "{{{$/;"	f
quickhl#manual#del	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#del(pattern, escaped) "{{{$/;"	f
quickhl#manual#disable	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#disable() "{{{$/;"	f
quickhl#manual#dump	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#dump() "{{{$/;"	f
quickhl#manual#enable	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#enable() "{{{$/;"	f
quickhl#manual#init_highlight	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#init_highlight() "{{{$/;"	f
quickhl#manual#list	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#list() "{{{$/;"	f
quickhl#manual#lock	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#lock() "{{{$/;"	f
quickhl#manual#lock_toggle	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#lock_toggle() "{{{$/;"	f
quickhl#manual#lock_window	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#lock_window() "{{{$/;"	f
quickhl#manual#lock_window_toggle	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#lock_window_toggle() "{{{$/;"	f
quickhl#manual#refresh	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#refresh() "{{{$/;"	f
quickhl#manual#reset	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#reset() "{{{$/;"	f
quickhl#manual#status	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#status() "{{{$/;"	f
quickhl#manual#this	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#this(mode) "{{{$/;"	f
quickhl#manual#this_motion	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#this_motion(motion_wise) " {{{$/;"	f
quickhl#manual#this_whole_word	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#this_whole_word(mode) "{{{$/;"	f
quickhl#manual#unlock	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#unlock() "{{{$/;"	f
quickhl#manual#unlock_window	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#unlock_window() "{{{$/;"	f
quickhl#our_match	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl.vim	/^function! quickhl#our_match(pattern) "{{{$/;"	f
quickhl#tag#disable	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! quickhl#tag#disable() "{{{$/;"	f
quickhl#tag#enable	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! quickhl#tag#enable() "{{{$/;"	f
quickhl#tag#init_highlight	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! quickhl#tag#init_highlight() "{{{$/;"	f
quickhl#tag#refresh	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! quickhl#tag#refresh() "{{{$/;"	f
quickhl#tag#toggle	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! quickhl#tag#toggle() "{{{$/;"	f
quickhl#warn	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl.vim	/^function! quickhl#warn(error) "{{{$/;"	f
quickhl#windo	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl.vim	/^function! quickhl#windo(func, obj) "{{{$/;"	f
quit_by_error	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^function! s:quit_by_error() abort$/;"	f
range.initialize	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^function! s:range.initialize(cursor, expand_range) dict abort "{{{$/;"	f
range.next	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^function! s:range.next() dict abort  "{{{$/;"	f
range_to_apsolute	pack/plugins/start/xtal8-traces-vim/plugin/traces.vim	/^function! s:range_to_apsolute(range_structure) abort$/;"	f
recall	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:recall() abort$/;"	f
recipes._integrate	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/recipes.vim	/^function! s:recipes._integrate(kind, mode) dict abort  "{{{$/;"	f
recipes.query	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/recipes.vim	/^function! s:recipes.query(opt, timeoutlen) dict abort "{{{$/;"	f
recipes.uniq	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/recipes.vim	/^function! s:recipes.uniq(opt) dict abort "{{{$/;"	f
refreshCurrent	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshCurrent(node)$/;"	f
refreshRoot	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshRoot()$/;"	f
rename_job	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^function s:rename_job(args)$/;"	f
repeat#invalidate	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^function! repeat#invalidate()$/;"	f
repeat#run	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^function! repeat#run(count)$/;"	f
repeat#set	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^function! repeat#set(sequence,...)$/;"	f
repeat#setreg	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^function! repeat#setreg(sequence,register)$/;"	f
repeat#wrap	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^function! repeat#wrap(command,count)$/;"	f
repeatPlugin	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^augroup repeatPlugin$/;"	a
replace_former	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:replace_former(buns, head, tail, within_a_line, opt, ...) abort "{{{$/;"	f
replace_latter	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:replace_latter(buns, head, tail, within_a_line, opt) abort "{{{$/;"	f
repo	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo_aliases	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_aliases() dict abort$/;"	f
repo_bare	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_config(conf) dict abort$/;"	f
repo_dir	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dirglob	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_git_chomp	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
repo_head_ref	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
repo_keywordprg	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_rev_parse	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_tree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
reset_summary	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:reset_summary() abort$/;"	f
resolve_patterns	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! s:resolve_patterns() abort  "{{{$/;"	f
restore_indent	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:restore_indent(indentopt) abort  "{{{$/;"	f
restore_options	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:restore_options(kind, mode, options) abort "{{{$/;"	f
restore_options	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:restore_options(options) abort "{{{$/;"	f
restoreregisters	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! s:restoreregisters(registers) abort "{{{$/;"	f
restview	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! s:restview(view, name) abort  "{{{$/;"	f
reuseWin	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree.vim	/^function! s:reuseWin(dir) abort$/;"	f
reverse	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^func reverse(vcr vimColorRow) vimColorRow {$/;"	f
robertmeta's vimrc	README.md	/^# robertmeta's vimrc$/;"	h
root_dirs	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! s:root_dirs() abort$/;"	f
run_guru	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:run_guru(args) abort$/;"	f
s	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^    nnoremap <silent> <buffer> s <C-w><CR>$/;"	m
s:Bookmark	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:COMPLETION_TRIGGER_CHARACTER	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^let s:COMPLETION_TRIGGER_CHARACTER = 2$/;"	v
s:COMPLETION_TRIGGER_INVOKED	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^let s:COMPLETION_TRIGGER_INVOKED = 1$/;"	v
s:Creator	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:Event	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/event.vim	/^let s:Event = {}$/;"	v
s:FALSE	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^let s:FALSE = 0$/;"	v
s:FlagSet	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/flag_set.vim	/^let s:FlagSet = {}$/;"	v
s:Indent	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^let s:Indent = {$/;"	v
s:KeyMap	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:LSP_COMPLETION_CLASS_KIND	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_CLASS_KIND = 7$/;"	v
s:LSP_COMPLETION_COLOR_KIND	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_COLOR_KIND = 16$/;"	v
s:LSP_COMPLETION_CONSTRUCTOR_KIND	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_CONSTRUCTOR_KIND = 4$/;"	v
s:LSP_COMPLETION_ENUM_KIND	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_ENUM_KIND = 13$/;"	v
s:LSP_COMPLETION_FIELD_KIND	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_FIELD_KIND = 5$/;"	v
s:LSP_COMPLETION_FILE_KIND	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_FILE_KIND = 17$/;"	v
s:LSP_COMPLETION_FUNCTION_KIND	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_FUNCTION_KIND = 3$/;"	v
s:LSP_COMPLETION_INTERFACE_KIND	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_INTERFACE_KIND = 8$/;"	v
s:LSP_COMPLETION_KEYWORD_KIND	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_KEYWORD_KIND = 14$/;"	v
s:LSP_COMPLETION_METHOD_KIND	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_METHOD_KIND = 2$/;"	v
s:LSP_COMPLETION_MODULE_KIND	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_MODULE_KIND = 9$/;"	v
s:LSP_COMPLETION_PROPERTY_KIND	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_PROPERTY_KIND = 10$/;"	v
s:LSP_COMPLETION_REFERENCE_KIND	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_REFERENCE_KIND = 18$/;"	v
s:LSP_COMPLETION_SNIPPET_KIND	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_SNIPPET_KIND = 15$/;"	v
s:LSP_COMPLETION_TEXT_KIND	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_TEXT_KIND = 1$/;"	v
s:LSP_COMPLETION_UNIT_KIND	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_UNIT_KIND = 11$/;"	v
s:LSP_COMPLETION_VALUE_KIND	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_VALUE_KIND = 12$/;"	v
s:LSP_COMPLETION_VARIABLE_KIND	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_VARIABLE_KIND = 6$/;"	v
s:MAX_COL_SIZE	pack/plugins/start/w0rp-ale/autoload/ale/highlight.vim	/^let s:MAX_COL_SIZE = 1073741824 " pow(2, 30)$/;"	v
s:MAX_POS_VALUES	pack/plugins/start/w0rp-ale/autoload/ale/highlight.vim	/^let s:MAX_POS_VALUES = 8$/;"	v
s:MenuController	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:NERDTree	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/nerdtree.vim	/^let s:NERDTree = {}$/;"	v
s:NERDTreeSortStarIndex	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:Notifier	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/notifier.vim	/^let s:Notifier = {}$/;"	v
s:Opener	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:Path	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:SEVERITY_ERROR	pack/plugins/start/w0rp-ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_ERROR = 1$/;"	v
s:SEVERITY_HINT	pack/plugins/start/w0rp-ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_HINT = 4$/;"	v
s:SEVERITY_INFORMATION	pack/plugins/start/w0rp-ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_INFORMATION = 3$/;"	v
s:SEVERITY_WARNING	pack/plugins/start/w0rp-ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_WARNING = 2$/;"	v
s:SID	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^let s:SID = printf("\\<SNR>%s_", s:SID())$/;"	v
s:TRUE	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^let s:TRUE = 1$/;"	v
s:TreeDirNode	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeFileNode	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:UI	pack/plugins/start/scrooloose-nerdtree/lib/nerdtree/ui.vim	/^let s:UI = {}$/;"	v
s:abstract_prototype	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:act	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^let s:act = {$/;"	v
s:added_db_files	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^let s:added_db_files = {}$/;"	v
s:added_dbs	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^let s:added_dbs = []$/;"	v
s:available	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^let s:available = has('nvim') || ($/;"	v
s:begin_failed_skip_pattern	pack/plugins/start/w0rp-ale/ale_linters/perl/perl.vim	/^let s:begin_failed_skip_pattern = '\\v' . join([$/;"	v
s:bin_dir	pack/plugins/start/w0rp-ale/autoload/ale/python.vim	/^let s:bin_dir = has('unix') ? 'bin' : 'Scripts'$/;"	v
s:buf_nr	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^let s:buf_nr = -1$/;"	v
s:buf_nr	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^let s:buf_nr = -1$/;"	v
s:buffer_prototype	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:bufignore	pack/plugins/start/kopischke-vim-fetch/autoload/fetch.vim	/^let s:bufignore = {'freaks': []}$/;"	v
s:bufnr	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^let s:bufnr       = bufnr('')$/;"	v
s:c_flag	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:c_flag = gitgutter#utility#git_supports_command_line_config_override()$/;"	v
s:cached_map	pack/plugins/start/w0rp-ale/autoload/ale/filetypes.vim	/^let s:cached_map = {}$/;"	v
s:cd	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:cd = exists('*haslocaldir') && haslocaldir() ? 'lcd ' : 'cd '$/;"	v
s:channel_log	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:channel_log = s:plugin_dir.'channel.log'$/;"	v
s:classpath_sep	pack/plugins/start/w0rp-ale/ale_linters/java/javac.vim	/^let s:classpath_sep = has('unix') ? ':' : ';'$/;"	v
s:classpath_sep	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^let s:classpath_sep = has('unix') ? ':' : ';'$/;"	v
s:clock	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/clock.vim	/^let s:clock = {$/;"	v
s:col_end_patterns	pack/plugins/start/w0rp-ale/autoload/ale/handlers/eslint.vim	/^let s:col_end_patterns = [$/;"	v
s:colmax	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/constants.vim	/^let s:colmax = 2147483647   " default value in many cases$/;"	v
s:colmax_obtained	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/constants.vim	/^let s:colmax_obtained = 0$/;"	v
s:colorful_term	vimrc	/^        let s:colorful_term=(&term=~?'xterm') || (&term=~?'screen')$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands = {}$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.abbrev     = s:commands.abstract.clone()$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.abbrev.options = {"buffer":0,"cmdline":0,"delete":0}$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.abstract = s:object.clone()$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.delete   = s:commands.abbrev.clone()$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.delete.options.delete = 1$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.search = s:commands.abstract.clone()$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.search.options = {"word": 0, "variable": 0, "flags": ""}$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.substitute = s:commands.abstract.clone()$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.substitute.options = {"word": 0, "variable": 0, "flags": "g"}$/;"	v
s:commands	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:commands = []$/;"	v
s:common_efm	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:common_efm = ''$/;"	v
s:connections	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^let s:connections = []$/;"	v
s:constants	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^let s:constants = function('sandwich#constants#get')$/;"	v
s:constants	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^let s:constants = function('sandwich#constants#get')$/;"	v
s:constants	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/constants.vim	/^let s:constants = {}$/;"	v
s:coord	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^let s:coord = deepcopy(s:null_4coord)$/;"	v
s:count	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^let s:count = 0$/;"	v
s:coverage_browser_handler_jobs	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^let s:coverage_browser_handler_jobs = {}$/;"	v
s:coverage_handler_jobs	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^let s:coverage_handler_jobs = {}$/;"	v
s:cpo_save	pack/plugins/start/xtal8-traces-vim/plugin/traces.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpoptions	pack/plugins/start/kopischke-vim-fetch/autoload/fetch.vim	/^let s:cpoptions = &cpoptions$/;"	v
s:cpoptions	pack/plugins/start/kopischke-vim-fetch/autoload/stay/integrate/fetch.vim	/^let s:cpoptions = &cpoptions$/;"	v
s:cpoptions	pack/plugins/start/kopischke-vim-fetch/plugin/fetch.vim	/^let s:cpoptions = &cpoptions$/;"	v
s:curhour	vimrc	/^                        let s:curhour=system('date -u +%H')$/;"	v
s:current_dir	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^let s:current_dir = expand('%:p:h')$/;"	v
s:current_file	pack/plugins/start/fatih-vim-go/autoload/go/template.vim	/^let s:current_file = expand("<sfile>")$/;"	v
s:current_fileencodings	pack/plugins/start/fatih-vim-go/ftdetect/gofiletype.vim	/^let s:current_fileencodings = ''$/;"	v
s:current_fileformats	pack/plugins/start/fatih-vim-go/ftdetect/gofiletype.vim	/^let s:current_fileformats = ''$/;"	v
s:cursor_timer	pack/plugins/start/w0rp-ale/autoload/ale/cursor.vim	/^let s:cursor_timer = -1$/;"	v
s:cword	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^let s:cword = {$/;"	v
s:default_ale_linter_aliases	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^let s:default_ale_linter_aliases = {$/;"	v
s:default_ale_linters	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^let s:default_ale_linters = {$/;"	v
s:default_list_type_commands	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^let s:default_list_type_commands = {$/;"	v
s:default_options	pack/plugins/start/w0rp-ale/ale_linters/html/tidy.vim	/^let s:default_options = get(g:, 'ale_html_tidy_args', '-q -e -language en')$/;"	v
s:default_options	pack/plugins/start/w0rp-ale/ale_linters/python/flake8.vim	/^let s:default_options = get(g:, 'ale_python_flake8_args', '')$/;"	v
s:default_registry	pack/plugins/start/w0rp-ale/autoload/ale/fix/registry.vim	/^let s:default_registry = {$/;"	v
s:default_settings	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^let s:default_settings = {$/;"	v
s:default_values	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^let s:default_values = {}$/;"	v
s:default_values	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^let s:default_values.add = {}$/;"	v
s:default_values	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^let s:default_values.add.block = {$/;"	v
s:default_values	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^let s:default_values.add.char = {$/;"	v
s:default_values	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^let s:default_values.add.filter = printf('v:key =~# ''\\%%(%s\\)''', join(keys(s:default_values['add']['char']), '\\|'))$/;"	v
s:default_values	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^let s:default_values.add.line = {$/;"	v
s:default_values	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^let s:default_values.delete = {}$/;"	v
s:default_values	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^let s:default_values.delete.block = {$/;"	v
s:default_values	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^let s:default_values.delete.char = {$/;"	v
s:default_values	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^let s:default_values.delete.filter = printf('v:key =~# ''\\%%(%s\\)''', join(keys(s:default_values['delete']['char']), '\\|'))$/;"	v
s:default_values	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^let s:default_values.delete.line = {$/;"	v
s:default_values	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^let s:default_values.replace = {}$/;"	v
s:default_values	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^let s:default_values.replace.block = {$/;"	v
s:default_values	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^let s:default_values.replace.char = {$/;"	v
s:default_values	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^let s:default_values.replace.filter = printf('v:key =~# ''\\%%(%s\\)''', join(keys(s:default_values['replace']['char']), '\\|'))$/;"	v
s:default_values	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^let s:default_values.replace.line = {$/;"	v
s:default_values	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^let s:default_values.textobj = {}$/;"	v
s:default_values	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^let s:default_values.textobj.auto = {$/;"	v
s:default_values	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^let s:default_values.textobj.filter = printf('v:key =~# ''\\%%(%s\\)''', join(keys(s:default_values.textobj.auto), '\\|'))$/;"	v
s:default_values	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^let s:default_values.textobj.query = {$/;"	v
s:defaultconfig	pack/plugins/start/wellle-tmux-complete-vim/autoload/asyncomplete/sources/tmuxcomplete.vim	/^let s:defaultconfig = {$/;"	v
s:defaultopts	pack/plugins/start/wellle-tmux-complete-vim/autoload/asyncomplete/sources/tmuxcomplete.vim	/^let s:defaultopts = {$/;"	v
s:delimpat	pack/plugins/start/keyboardfire-vim-minisnip/plugin/vim-minisnip.vim	/^let s:delimpat = '\\V' . g:minisnip_startdelim . '\\.\\{-}' . g:minisnip_enddelim$/;"	v
s:did_check_exe	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let s:did_check_exe = 0$/;"	v
s:dirArrows	pack/plugins/start/scrooloose-nerdtree/syntax/nerdtree.vim	/^let s:dirArrows = escape(g:NERDTreeDirArrowCollapsible, '~]\\-').escape(g:NERDTreeDirArrowExpandable, '~]\\-')$/;"	v
s:dir_for_worktree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:dir_for_worktree = {}$/;"	v
s:done	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^  let s:done += 1$/;"	v
s:done	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:done = 0$/;"	v
s:done	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^  let s:done += 1$/;"	v
s:done	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:done = 0$/;"	v
s:dummy_sign_id	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:dummy_sign_id = s:first_sign_id - 1$/;"	v
s:elapsed_time	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^  let s:elapsed_time = substitute(reltimestr(reltime(s:started)), '^\\s*\\(.\\{-}\\)\\s*$', '\\1', '')$/;"	v
s:enable_neovim	pack/plugins/start/w0rp-ale/ale_linters/vim/vint.vim	/^let s:enable_neovim = has('nvim') ? ' --enable-neovim ' : ''$/;"	v
s:end_col_pattern_map	pack/plugins/start/w0rp-ale/ale_linters/python/flake8.vim	/^let s:end_col_pattern_map = {$/;"	v
s:env_cache	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^let s:env_cache = {}$/;"	v
s:error_delay_ms	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^let s:error_delay_ms = 1000 * 60 * 2$/;"	v
s:error_file	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^let s:error_file = tempname()$/;"	v
s:error_priority	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^let s:error_priority = 1$/;"	v
s:errored	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^      let s:errored = 0$/;"	v
s:errored	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:errored = 0$/;"	v
s:errors	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^      let s:errors += 1$/;"	v
s:errors	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^  let s:errors += 1$/;"	v
s:errors	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:errors = 0$/;"	v
s:executable_cache_map	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^    let s:executable_cache_map = {}$/;"	v
s:executables	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:executables = {}$/;"	v
s:exit_code	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^let s:exit_code = 0$/;"	v
s:fail	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^      let s:fail += 1$/;"	v
s:fail	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:fail = 0$/;"	v
s:fail	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^    let s:fail += 1$/;"	v
s:fail	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:fail = 0$/;"	v
s:file	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^let s:file = ''$/;"	v
s:first_sign_id	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:first_sign_id = 3000$/;"	v
s:fold_block	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^    let s:fold_block = 0$/;"	v
s:fold_block	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^let s:fold_block = 1$/;"	v
s:fold_comment	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^    let s:fold_comment = 1$/;"	v
s:fold_comment	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^let s:fold_comment = 0$/;"	v
s:fold_import	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^    let s:fold_import = 0$/;"	v
s:fold_import	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^let s:fold_import = 1$/;"	v
s:fold_package_comment	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^    let s:fold_package_comment = 0$/;"	v
s:fold_package_comment	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^let s:fold_package_comment = 1$/;"	v
s:fold_varconst	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^    let s:fold_varconst = 0$/;"	v
s:fold_varconst	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^let s:fold_varconst = 1$/;"	v
s:format	pack/plugins/start/w0rp-ale/ale_linters/vim/vint.vim	/^let s:format = '-f "{file_path}:{line_number}:{column_number}: {severity}: {description} (see {reference})"'$/;"	v
s:getcmdwintype_exists	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^let s:getcmdwintype_exists = exists('*getcmdwintype')$/;"	v
s:git_versions	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:global_variable_list	pack/plugins/start/w0rp-ale/autoload/ale/debugging.vim	/^let s:global_variable_list = [$/;"	v
s:go_decls_var	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^let s:go_decls_var = {$/;"	v
s:go_stack	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^let s:go_stack = []$/;"	v
s:go_stack_level	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^let s:go_stack_level = 0$/;"	v
s:go_to_definition_map	pack/plugins/start/w0rp-ale/autoload/ale/definition.vim	/^let s:go_to_definition_map = {}$/;"	v
s:goarch	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goarch = '*'$/;"	v
s:goarch	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goarch = g:golang_goarch$/;"	v
s:goarch	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^let s:goarch = $GOARCH$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goos = '*'$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goos = 'darwin'$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goos = 'windows'$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goos = g:golang_goos$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^let s:goos = $GOOS$/;"	v
s:gopath	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:gopath = $GOPATH$/;"	v
s:got_fmt_error	pack/plugins/start/fatih-vim-go/autoload/go/asmfmt.vim	/^let s:got_fmt_error = 0$/;"	v
s:grep_available	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^  let s:grep_available = 1$/;"	v
s:grep_available	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^  let s:grep_available = executable('grep')$/;"	v
s:grep_command	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^      let s:grep_command .= ' --color=never'$/;"	v
s:grep_command	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^    let s:grep_command = 'grep'$/;"	v
s:grep_command	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^  let s:grep_command = g:gitgutter_grep_command$/;"	v
s:handlers	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^let s:handlers = {}$/;"	v
s:has_features	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^    let s:has_features = has('timers') && exists('*job_start') && exists('*ch_close_in')$/;"	v
s:has_features	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^    let s:has_features = has('timers')$/;"	v
s:has_gui_running	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^let s:has_gui_running = has('gui_running')$/;"	v
s:has_gui_running	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^let s:has_gui_running = has('gui_running')$/;"	v
s:has_gui_running	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^let s:has_gui_running = has('gui_running')$/;"	v
s:has_patch_7_4_1685	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^  let s:has_patch_7_4_1685 = has('patch-7.4.1685')$/;"	v
s:has_patch_7_4_1685	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^  let s:has_patch_7_4_1685 = v:version == 704 && has('patch1685')$/;"	v
s:has_patch_7_4_1685	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/i.vim	/^  let s:has_patch_7_4_1685 = has('patch-7.4.1685')$/;"	v
s:has_patch_7_4_1685	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/i.vim	/^  let s:has_patch_7_4_1685 = v:version == 704 && has('patch1685')$/;"	v
s:has_patch_7_4_2011	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^  let s:has_patch_7_4_2011 = has('patch-7.4.2011')$/;"	v
s:has_patch_7_4_2011	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^  let s:has_patch_7_4_2011 = v:version == 704 && has('patch2011')$/;"	v
s:has_patch_7_4_310	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^  let s:has_patch_7_4_310 = has('patch-7.4.310')$/;"	v
s:has_patch_7_4_310	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^  let s:has_patch_7_4_310 = v:version == 704 && has('patch310')$/;"	v
s:has_patch_7_4_358	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^  let s:has_patch_7_4_358 = has('patch-7.4.358')$/;"	v
s:has_patch_7_4_358	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^  let s:has_patch_7_4_358 = v:version == 704 && has('patch358')$/;"	v
s:has_patch_7_4_358	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/lib.vim	/^  let s:has_patch_7_4_358 = has('patch-7.4.358')$/;"	v
s:has_patch_7_4_358	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/lib.vim	/^  let s:has_patch_7_4_358 = v:version == 704 && has('patch358')$/;"	v
s:has_patch_7_4_362	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^  let s:has_patch_7_4_362 = has('patch-7.4.362')$/;"	v
s:has_patch_7_4_362	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^  let s:has_patch_7_4_362 = v:version == 704 && has('patch362')$/;"	v
s:has_patch_7_4_392	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^  let s:has_patch_7_4_392 = has('patch-7.4.392')$/;"	v
s:has_patch_7_4_392	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^  let s:has_patch_7_4_392 = v:version == 704 && has('patch392')$/;"	v
s:has_patch_7_4_392	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^  let s:has_patch_7_4_392 = has('patch-7.4.392')$/;"	v
s:has_patch_7_4_392	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^  let s:has_patch_7_4_392 = v:version == 704 && has('patch392')$/;"	v
s:has_patch_7_4_771	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^  let s:has_patch_7_4_771 = has('patch-7.4.771')$/;"	v
s:has_patch_7_4_771	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^  let s:has_patch_7_4_771 = v:version == 704 && has('patch771')$/;"	v
s:has_reltime_and_float	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/clock.vim	/^let s:has_reltime_and_float = has('reltime') && has('float')$/;"	v
s:has_timer	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^let s:has_timer       = has('timers')$/;"	v
s:has_window_ID	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^let s:has_window_ID = exists('*win_getid')$/;"	v
s:hash_colors	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:hidden_all	vimrc	/^        let s:hidden_all = 0$/;"	v
s:highlight	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^let s:highlight = {$/;"	v
s:hunk_re	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:hunk_re = '^@@ -\\(\\d\\+\\),\\?\\(\\d*\\) +\\(\\d\\+\\),\\?\\(\\d*\\) @@'$/;"	v
s:id	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:indent	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:indent = ''$/;"	v
s:indent	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:indent = max(map(copy(s:tests), {_, val -> len(FriendlyName(val))}))$/;"	v
s:info_priority	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^let s:info_priority = 3$/;"	v
s:init_path	pack/plugins/start/w0rp-ale/autoload/ale/gradle.vim	/^let s:init_path = has('win32')$/;"	v
s:initial_go_path	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^let s:initial_go_path = ""$/;"	v
s:is_in_cmdline_window	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^let s:is_in_cmdline_window = 0$/;"	v
s:itemdict	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^let s:itemdict = {$/;"	v
s:job_db_files	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^let s:job_db_files = []$/;"	v
s:job_info_map	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^    let s:job_info_map = {}$/;"	v
s:job_info_map	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^    let s:job_info_map = {}$/;"	v
s:job_kill_timers	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^    let s:job_kill_timers = {}$/;"	v
s:job_map	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^    let s:job_map = {}$/;"	v
s:jobs	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^let s:jobs = {}$/;"	v
s:jobs	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^let s:jobs = {}$/;"	v
s:known_files	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^let s:known_files = []$/;"	v
s:known_projects	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^let s:known_projects = {}$/;"	v
s:last_done_pos	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:last_done_pos = []$/;"	v
s:last_inserted	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/i.vim	/^let s:last_inserted = []$/;"	v
s:last_pattern_options	pack/plugins/start/w0rp-ale/autoload/ale/pattern_options.vim	/^let s:last_pattern_options = {}$/;"	v
s:last_pos	pack/plugins/start/w0rp-ale/autoload/ale/cursor.vim	/^let s:last_pos = [0, 0, 0]$/;"	v
s:last_saved_list	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^let s:last_saved_list = ''$/;"	v
s:last_searched	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/i.vim	/^let s:last_searched = []$/;"	v
s:last_status	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^let s:last_status = ""$/;"	v
s:lib	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/lib.vim	/^let s:lib = {}$/;"	v
s:lib	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^let s:lib = textobj#sandwich#lib#get()$/;"	v
s:lib	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^let s:lib = textobj#sandwich#lib#get()$/;"	v
s:lines	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:lines = deepcopy(s:words)$/;"	v
s:lines	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:lines.description = 'lines in the current tmux session'$/;"	v
s:lines	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:lines.name = 'tmuxcomplete\/lines'$/;"	v
s:lint_timer	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^let s:lint_timer = -1$/;"	v
s:linters	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^let s:linters = {}$/;"	v
s:ll	pack/plugins/start/hauleth-asyncdo-vim/autoload/asyncdo.vim	/^let s:ll = s:build(w:, 'l', {nr -> setloclist(nr, [], 'r')},$/;"	v
s:local_recipes	pack/plugins/start/machakann-vim-sandwich/after/ftplugin/initex/sandwich.vim	/^  let s:local_recipes = [$/;"	v
s:log_file	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:log_file    = s:plugin_dir.'gitgutter.log'$/;"	v
s:logs	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:logs = []$/;"	v
s:logs	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:logs = s:logs + filter(split(s:mess, "\\n"), 'v:val !~ "^Messages maintainer"')$/;"	v
s:lsp_linter_map	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^    let s:lsp_linter_map = {}$/;"	v
s:manual	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^let s:manual = {$/;"	v
s:marks_recipes	pack/plugins/start/machakann-vim-sandwich/after/ftplugin/initex/sandwich.vim	/^  let s:marks_recipes += [$/;"	v
s:marks_recipes	pack/plugins/start/machakann-vim-sandwich/after/ftplugin/initex/sandwich.vim	/^  let s:marks_recipes = []$/;"	v
s:matchers	pack/plugins/start/kopischke-vim-fetch/plugin/fetch.vim	/^let s:matchers = {$/;"	v
s:matchstrpos	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^  let s:matchstrpos = function('matchstrpos')$/;"	v
s:matchstrpos	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/i.vim	/^  let s:matchstrpos = function('matchstrpos')$/;"	v
s:maybe_in_progress	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^    let s:maybe_in_progress[module] = {}$/;"	v
s:maybe_in_progress	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^let s:maybe_in_progress = {}$/;"	v
s:messages	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:messages = []$/;"	v
s:messenger_prototype	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/messenger.vim	/^let s:messenger_prototype = {$/;"	v
s:metachar	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl.vim	/^let s:metachar = '\\\/~ .*^[''$'$/;"	v
s:named_lists	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^let s:named_lists = {}$/;"	v
s:new_log_session	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:new_log_session = 1$/;"	v
s:next_sign_id	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:next_sign_id  = s:first_sign_id$/;"	v
s:nomodeline	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' : ''$/;"	v
s:null_2pos	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^let s:null_2pos  = {$/;"	v
s:null_2pos	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^let s:null_2pos  = {$/;"	v
s:null_4coord	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^let s:null_4coord = {$/;"	v
s:null_4pos	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^let s:null_4pos  = {$/;"	v
s:null_4pos	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^let s:null_4pos  = {$/;"	v
s:null_4pos	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^let s:null_4pos  = {$/;"	v
s:null_coord	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^let s:null_coord = [0, 0]$/;"	v
s:null_coord	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^let s:null_coord = [0, 0]$/;"	v
s:null_coord	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^let s:null_coord = [0, 0]$/;"	v
s:null_coord	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/lib.vim	/^let s:null_coord  = [0, 0]$/;"	v
s:null_coord	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^let s:null_coord  = [0, 0]$/;"	v
s:null_coord	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^let s:null_coord = [0, 0]$/;"	v
s:null_pos	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^let s:null_pos   = [0, 0, 0, 0]$/;"	v
s:null_pos	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/lib.vim	/^let s:null_pos   = [0, 0, 0, 0]$/;"	v
s:null_pos	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^let s:null_pos   = [0, 0, 0, 0]$/;"	v
s:null_pos	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^let s:null_pos   = [0, 0, 0, 0]$/;"	v
s:null_pos	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^let s:null_pos = [0, 0, 0, 0]$/;"	v
s:null_pos	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^let s:null_pos  = [0, 0]$/;"	v
s:object	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^let s:object = 'g:operator#sandwich#object'$/;"	v
s:object	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^let s:object = 'g:operator#sandwich#object'$/;"	v
s:object	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:object = {}$/;"	v
s:old_cpo	pack/plugins/start/scrooloose-nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:old_cpo	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^let s:old_cpo = &cpo$/;"	v
s:omni_start_map	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:omni_start_map = {$/;"	v
s:operator	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^let s:operator = ''$/;"	v
s:operator	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^let s:operator = {$/;"	v
s:opt	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^let s:opt = {$/;"	v
s:optionsEnabled	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^let s:optionsEnabled = 0$/;"	v
s:packages	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^let s:packages = {$/;"	v
s:partial_timers	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^    let s:partial_timers = {}$/;"	v
s:patterns	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^let s:patterns = {}$/;"	v
s:patterns	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^let s:patterns['_'] = [$/;"	v
s:patterns	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^let s:patterns['julia'] = [$/;"	v
s:patterns	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^let s:patterns['vim'] = [$/;"	v
s:paused	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^let s:paused = []$/;"	v
s:plugin_dir	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:plugin_dir  = expand('<sfile>:p:h:h:h').'\/'$/;"	v
s:pragma_error	pack/plugins/start/w0rp-ale/autoload/ale/handlers/gcc.vim	/^let s:pragma_error = '#pragma once in main file'$/;"	v
s:qf	pack/plugins/start/hauleth-asyncdo-vim/autoload/asyncdo.vim	/^let s:qf = s:build(g:, 'c', {nr -> setqflist([], 'r')},$/;"	v
s:quench_table	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^let s:quench_table = {}$/;"	v
s:queued_buffer_number	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^let s:queued_buffer_number = -1$/;"	v
s:range	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^let s:range = {$/;"	v
s:recipes	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/recipes.vim	/^let s:recipes = {$/;"	v
s:redirects	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:redirects = {}$/;"	v
s:repo_prototype	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:repos = {}$/;"	v
s:runner_exe	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^let s:runner_exe = gutentags#get_plat_file('update_scopedb')$/;"	v
s:runner_exe	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let s:runner_exe = gutentags#get_plat_file('update_tags')$/;"	v
s:running_windows	vimrc	/^        let s:running_windows=has('win16') || has('win32') || has('win64')$/;"	v
s:sandwich	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^let s:sandwich = {$/;"	v
s:save_cpo	pack/plugins/start/fatih-vim-go/autoload/unite/sources/decls.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	pack/plugins/start/fatih-vim-go/compiler/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/hauleth-asyncdo-vim/plugin/asyncdo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/do.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/filegroup.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/preview.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/statusline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/toggle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/wrap.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplcache/sources/tmuxcomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplete/sources/tmuxcomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:scope	pack/plugins/start/machakann-vim-sandwich/test/test-magicchar-t-emmet.vim	/^let s:scope = themis#helper('scope')$/;"	v
s:script	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^let s:script = expand('<sfile>:h:h') . "\/sh\/tmuxcomplete"$/;"	v
s:script_path	pack/plugins/start/w0rp-ale/autoload/ale/gradle.vim	/^let s:script_path = fnamemodify(resolve(expand('<sfile>:p')), ':h')$/;"	v
s:sep	pack/plugins/start/w0rp-ale/autoload/ale/handlers/eslint.vim	/^let s:sep = has('win32') ? '\\' : '\/'$/;"	v
s:sep	pack/plugins/start/w0rp-ale/autoload/ale/python.vim	/^let s:sep = has('win32') ? '\\' : '\/'$/;"	v
s:should_complete_map	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:should_complete_map = {$/;"	v
s:should_lint_file_for_buffer	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^let s:should_lint_file_for_buffer = {}$/;"	v
s:sock_type	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^let s:sock_type = (has('win32') || has('win64')) ? 'tcp' : 'unix'$/;"	v
s:sorted_items	pack/plugins/start/w0rp-ale/autoload/ale/pattern_options.vim	/^let s:sorted_items = []$/;"	v
s:source	pack/plugins/start/fatih-vim-go/autoload/unite/sources/decls.vim	/^let s:source = {$/;"	v
s:source	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplcache/sources/tmuxcomplete.vim	/^let s:source = {$/;"	v
s:source	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplete/sources/tmuxcomplete.vim	/^let s:source = {$/;"	v
s:specs	pack/plugins/start/kopischke-vim-fetch/autoload/fetch.vim	/^let s:specs = {}$/;"	v
s:specs	pack/plugins/start/kopischke-vim-fetch/autoload/fetch.vim	/^let s:specs.colon = {'pattern': '\\m\\%(:\\d\\+\\)\\{1,2}:\\?'}$/;"	v
s:specs	pack/plugins/start/kopischke-vim-fetch/autoload/fetch.vim	/^let s:specs.paren = {'pattern': '\\m(\\(\\d\\+\\%(:\\d\\+\\)\\?\\))'}$/;"	v
s:specs	pack/plugins/start/kopischke-vim-fetch/autoload/fetch.vim	/^let s:specs.plan9 = {'pattern': '\\m:#\\(\\d\\+\\)'}$/;"	v
s:specs	pack/plugins/start/kopischke-vim-fetch/autoload/fetch.vim	/^let s:specs.pytest = {'pattern': '\\m::\\(\\w\\+\\)'}$/;"	v
s:started	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^  let s:started = reltime()$/;"	v
s:statuses	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^let s:statuses = {}$/;"	v
s:stuff	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^let s:stuff = {$/;"	v
s:style_error_priority	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^let s:style_error_priority = 4$/;"	v
s:style_warning_priority	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^let s:style_warning_priority = 5$/;"	v
s:suite	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^let s:suite = themis#suite('operator-sandwich: add:')$/;"	v
s:suite	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^let s:suite = themis#suite('operator-sandwich: delete:')$/;"	v
s:suite	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^let s:suite = themis#suite('operator-sandwich: replace:')$/;"	v
s:suite	pack/plugins/start/machakann-vim-sandwich/test/test-magicchar-t-emmet.vim	/^let s:suite = themis#suite('magicchar-t emmet-like behavior:')$/;"	v
s:suite	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^let s:suite = themis#suite('textobj-sandwich: auto:')$/;"	v
s:suite	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^let s:suite = themis#suite('textobj-sandwich: query:')$/;"	v
s:supports_star	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:supports_star = v:version > 703 || (v:version == 703 && has("patch596"))$/;"	v
s:t	pack/plugins/start/machakann-vim-sandwich/test/test-magicchar-t-emmet.vim	/^let s:t = s:scope.funcs('autoload\/sandwich\/magicchar\/t.vim')$/;"	v
s:tag	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^let s:tag = {$/;"	v
s:temp_buffer	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:temp_buffer = tempname()$/;"	v
s:temp_dir	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^let s:temp_dir = fnamemodify(tempname(), ':h')$/;"	v
s:temp_dir	pack/plugins/start/w0rp-ale/autoload/ale/handlers/haskell.vim	/^let s:temp_dir = fnamemodify(tempname(), ':h')$/;"	v
s:temp_dir	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^let s:temp_dir = fnamemodify(tempname(), ':h')$/;"	v
s:temp_files	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:temp_index	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:temp_index = tempname()$/;"	v
s:temp_regex_prefix	pack/plugins/start/w0rp-ale/autoload/ale/handlers/haskell.vim	/^let s:temp_regex_prefix =$/;"	v
s:test_repo	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^let s:test_repo   = s:current_dir.'\/test-repo'$/;"	v
s:testfile	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:testfile = expand('%:t')$/;"	v
s:tests	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^  let s:tests = filter(s:tests, 'v:val =~ argv(1)')$/;"	v
s:tests	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:tests = split(substitute(@q, 'function \\(\\k*()\\)', '\\1', 'g'))$/;"	v
s:tests	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:tests = split(substitute(@q, 'function \\(\\k*()\\)', '\\1', 'g'))$/;"	v
s:testseeds	pack/plugins/start/machakann-vim-sandwich/test/test-magicchar-t-emmet.vim	/^let s:testseeds = {}$/;"	v
s:testseeds	pack/plugins/start/machakann-vim-sandwich/test/test-magicchar-t-emmet.vim	/^let s:testseeds.attributes = [$/;"	v
s:testseeds	pack/plugins/start/machakann-vim-sandwich/test/test-magicchar-t-emmet.vim	/^let s:testseeds.element = [$/;"	v
s:textobj	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^let s:textobj = {$/;"	v
s:timer_args	pack/plugins/start/w0rp-ale/autoload/ale/list.vim	/^    let s:timer_args = {}$/;"	v
s:timer_id	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^let s:timer_id = 0$/;"	v
s:timer_id	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:timer_id = -1$/;"	v
s:timestamp_map	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^let s:timestamp_map = {}$/;"	v
s:toggle	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^let s:toggle = 0$/;"	v
s:total_elapsed_time	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:total_elapsed_time = substitute(reltimestr(reltime(s:total_started)), '^\\s*\\(.\\{-}\\)\\s*$', '\\1', '')$/;"	v
s:total_started	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:total_started = reltime()$/;"	v
s:tree_up_dir_line	pack/plugins/start/scrooloose-nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:trigger_character_map	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:trigger_character_map = {$/;"	v
s:type_dict	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^let s:type_dict = type({})$/;"	v
s:type_fref	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^let s:type_fref = type(function('tr'))$/;"	v
s:type_fref	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^let s:type_fref = type(function('tr'))$/;"	v
s:type_list	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^let s:type_list = type([])$/;"	v
s:type_list	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^let s:type_list = type([])$/;"	v
s:type_list	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/constants.vim	/^let s:type_list = type([])$/;"	v
s:type_list	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^let s:type_list = type([])$/;"	v
s:type_list	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^let s:type_list = type([])$/;"	v
s:type_list	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^let s:type_list = type([])$/;"	v
s:type_list	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^let s:type_list = type([])$/;"	v
s:type_num	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^let s:type_num  = type(0)$/;"	v
s:type_num	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^let s:type_num  = type(0)$/;"	v
s:type_num	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/recipes.vim	/^let s:type_num = type(0)$/;"	v
s:type_num	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^let s:type_num = type(0)$/;"	v
s:type_str	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^let s:type_str = type('')$/;"	v
s:type_str	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^let s:type_str  = type('')$/;"	v
s:type_str	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^let s:type_str  = type('')$/;"	v
s:type_str	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/recipes.vim	/^let s:type_str = type('')$/;"	v
s:type_str	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^let s:type_str = type('')$/;"	v
s:unix_redir	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unix_redir	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:update_queue	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^    let s:update_queue[module] = []$/;"	v
s:update_queue	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^let s:update_queue = {}$/;"	v
s:using_xolox_shell	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^let s:using_xolox_shell = -1$/;"	v
s:version_cache	pack/plugins/start/w0rp-ale/autoload/ale/semver.vim	/^let s:version_cache = {}$/;"	v
s:visualrepeat_exists	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^let s:visualrepeat_exists = -1$/;"	v
s:warning_priority	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^let s:warning_priority = 2$/;"	v
s:word_regex_list	pack/plugins/start/w0rp-ale/ale_linters/vim/vint.vim	/^let s:word_regex_list = [$/;"	v
s:words	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:words = {$/;"	v
s:worktree_for_dir	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:worktree_for_dir = {}$/;"	v
saiw(	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal saiw($/;"	m
saiw[	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal saiw[$/;"	m
saiwc	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal saiwc$/;"	m
same_ids_highlight	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:same_ids_highlight(exit_val, output) abort$/;"	f
sandwich	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^  augroup sandwich-predot$/;"	a
sandwich	pack/plugins/start/machakann-vim-sandwich/plugin/operator/sandwich.vim	/^augroup sandwich-event-ColorScheme$/;"	a
sandwich#clock#new	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/clock.vim	/^function! sandwich#clock#new() abort  "{{{$/;"	f
sandwich#constants#get	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/constants.vim	/^function! sandwich#constants#get(name) abort  "{{{$/;"	f
sandwich#filetype#tex#CmdInput	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/filetype/tex.vim	/^function! sandwich#filetype#tex#CmdInput() abort$/;"	f
sandwich#filetype#tex#EnvCompl	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/filetype/tex.vim	/^function! sandwich#filetype#tex#EnvCompl(argread, cmdline, cursorpos) abort$/;"	f
sandwich#filetype#tex#EnvInput	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/filetype/tex.vim	/^function! sandwich#filetype#tex#EnvInput() abort$/;"	f
sandwich#get_recipes	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich.vim	/^function! sandwich#get_recipes() abort  "{{{$/;"	f
sandwich#highlight#cancel	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! sandwich#highlight#cancel(...) abort "{{{$/;"	f
sandwich#highlight#new	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! sandwich#highlight#new() abort  "{{{$/;"	f
sandwich#magicchar#f#a	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! sandwich#magicchar#f#a() abort  "{{{$/;"	f
sandwich#magicchar#f#ap	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! sandwich#magicchar#f#ap() abort  "{{{$/;"	f
sandwich#magicchar#f#fname	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! sandwich#magicchar#f#fname() abort  "{{{$/;"	f
sandwich#magicchar#f#fnamecompl	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! sandwich#magicchar#f#fnamecompl(ArgLead, CmdLine, CursorPos) abort  "{{{$/;"	f
sandwich#magicchar#f#fnamecompl_vim	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! sandwich#magicchar#f#fnamecompl_vim(ArgLead, CmdLine, CursorPos) abort  "{{{$/;"	f
sandwich#magicchar#f#i	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! sandwich#magicchar#f#i() abort  "{{{$/;"	f
sandwich#magicchar#f#ip	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! sandwich#magicchar#f#ip() abort  "{{{$/;"	f
sandwich#magicchar#i#compl	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/i.vim	/^function! sandwich#magicchar#i#compl(ArgLead, CmdLine, CursorPos) abort  "{{{$/;"	f
sandwich#magicchar#i#input	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/i.vim	/^function! sandwich#magicchar#i#input(kind, ...) abort "{{{$/;"	f
sandwich#magicchar#i#lastinput	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/i.vim	/^function! sandwich#magicchar#i#lastinput(kind, ...) abort "{{{$/;"	f
sandwich#magicchar#t#a	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! sandwich#magicchar#t#a() abort "{{{$/;"	f
sandwich#magicchar#t#at	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! sandwich#magicchar#t#at() abort "{{{$/;"	f
sandwich#magicchar#t#i	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! sandwich#magicchar#t#i() abort "{{{$/;"	f
sandwich#magicchar#t#it	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! sandwich#magicchar#t#it() abort "{{{$/;"	f
sandwich#magicchar#t#tag	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! sandwich#magicchar#t#tag() abort "{{{$/;"	f
sandwich#magicchar#t#tagname	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! sandwich#magicchar#t#tagname() abort "{{{$/;"	f
sandwich#messenger#get	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/messenger.vim	/^function! sandwich#messenger#get() abort  "{{{$/;"	f
sandwich#messenger#new	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/messenger.vim	/^function! sandwich#messenger#new() abort  "{{{$/;"	f
sandwich#opt#defaults	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^function! sandwich#opt#defaults(kind, ...) abort "{{{$/;"	f
sandwich#opt#new	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/opt.vim	/^function! sandwich#opt#new(kind, defaultopt, argopt) abort  "{{{$/;"	f
sandwich#util#addlocal	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/util.vim	/^function! sandwich#util#addlocal(recipes) abort "{{{$/;"	f
sandwich#util#echo	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/util.vim	/^function! sandwich#util#echo(messages) abort  "{{{$/;"	f
sandwich#util#ftrevert	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/util.vim	/^function! sandwich#util#ftrevert(filetype) abort "{{{$/;"	f
sandwich._searchpos	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^function! s:sandwich._searchpos(pattern, flag, is_head, stopline, stimeoutlen) dict abort "{{{$/;"	f
sandwich.bake_buns	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^function! s:sandwich.bake_buns(state, clock) dict abort  "{{{$/;"	f
sandwich.check_syntax	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^function! s:sandwich.check_syntax(coord) dict abort "{{{$/;"	f
sandwich.export_recipe	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^function! s:sandwich.export_recipe() dict abort  "{{{$/;"	f
sandwich.initialize	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^function! s:sandwich.initialize(cursor, is_syntax_on) dict abort "{{{$/;"	f
sandwich.search_head	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^function! s:sandwich.search_head(flag, stimeoutlen) dict abort "{{{$/;"	f
sandwich.search_tail	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^function! s:sandwich.search_tail(flag, stimeoutlen) dict abort "{{{$/;"	f
sandwich.searchpair_head	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^function! s:sandwich.searchpair_head(stimeoutlen) dict abort "{{{$/;"	f
sandwich.searchpair_tail	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^function! s:sandwich.searchpair_tail(stimeoutlen) dict abort "{{{$/;"	f
sandwich.skip	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^function! s:sandwich.skip(is_head, ...) dict abort "{{{$/;"	f
saveregisters	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! s:saveregisters() abort "{{{$/;"	f
saveview	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! s:saveview() abort  "{{{$/;"	f
scan_windows	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:scan_windows(id, tabnr) abort "{{{$/;"	f
sd	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^nmap sd <Plug>(operator-sandwich-delete)$/;"	m
sda(	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal sda($/;"	m
sda[	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^normal sda[$/;"	m
search_edges	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^function! s:search_edges(head, tail, patterns) abort "{{{$/;"	f
search_highlighted_windows	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:search_highlighted_windows(id, ...) abort  "{{{$/;"	f
search_key_bra	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! s:search_key_bra(mode, orig_pos, bra, ket, head, tail, upper_line, lower_line) abort  "{{{$/;"	f
search_pattern	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! s:search_pattern(candidates, pattern, mode, count, rank, orig_pos, upper_line, lower_line) abort "{{{$/;"	f
searchpos_bce	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^  function! s:searchpos_bce(curpos, pattern, stopline) abort$/;"	f
select	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! s:select(range) abort  "{{{$/;"	f
send	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:send(self,func,...)$/;"	f
separator	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:separator()$/;"	f
set	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^function! s:set(var, default) abort$/;"	f
set_autocmds	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:set_autocmds(id) abort "{{{$/;"	f
set_cursor_position	pack/plugins/start/xtal8-traces-vim/plugin/traces.vim	/^function! s:set_cursor_position(pattern_regex, range, abs_range) abort$/;"	f
set_default	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^function! s:set_default(dict) "{{{$/;"	f
set_displaycoord	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:set_displaycoord(disp_coord) abort "{{{$/;"	f
set_indent	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:set_indent(opt) abort "{{{$/;"	f
set_option_value	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! s:set_option_value(dest, kinds, motionwises, option, value) abort  "{{{$/;"	f
setpos	pack/plugins/start/kopischke-vim-fetch/autoload/fetch.vim	/^function! s:setpos(calldata) abort$/;"	f
setregister	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^function! s:setregister(register, contains) abort "{{{$/;"	f
setup_paste	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:setup_paste() abort$/;"	f
shellesc	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellslash	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:shellslash(path) abort$/;"	f
shift_added	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:shift_added(func_name, added, ...) abort  "{{{$/;"	f
shift_for_add	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:shift_for_add(shifted_pos, target, addition, indent, is_linewise) abort "{{{$/;"	f
shift_for_delete	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:shift_for_delete(shifted_pos, target, deletion, is_linewise) abort  "{{{$/;"	f
shift_for_replace	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/act.vim	/^function! s:shift_for_replace(shifted_pos, target, addition, deletion, indent, is_linewise) abort "{{{$/;"	f
shift_options	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:shift_options(kind, mode) abort "{{{$/;"	f
shift_options	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:shift_options() abort "{{{$/;"	f
shortest	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^  function! s:shortest(list) abort$/;"	f
showMenu	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:showMenu(node)$/;"	f
show_errors	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! s:show_errors(errors) abort$/;"	f
show_errors	pack/plugins/start/fatih-vim-go/autoload/go/test.vim	/^function! s:show_errors(args, exit_val, messages) abort$/;"	f
signs	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function s:signs(filename)$/;"	f
sink	pack/plugins/start/fatih-vim-go/autoload/fzf/decls.vim	/^function! s:sink(str) abort$/;"	f
skip_space	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^function! s:skip_space(head, tail) abort  "{{{$/;"	f
snakecase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:snakecase(word)$/;"	f
sort	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:sort(a,b)$/;"	f
sort_candidates	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/f.vim	/^function! s:sort_candidates(candidates, top_line, bottom_line) abort  "{{{$/;"	f
source	pack/plugins/start/fatih-vim-go/autoload/fzf/decls.vim	/^function! s:source(mode,...) abort$/;"	f
source.gather_candidates	pack/plugins/start/fatih-vim-go/autoload/unite/sources/decls.vim	/^function! s:source.gather_candidates(args, context) abort$/;"	f
source.gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplcache/sources/tmuxcomplete.vim	/^function! s:source.gather_candidates(context)$/;"	f
source.gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplete/sources/tmuxcomplete.vim	/^function! s:source.gather_candidates(context)$/;"	f
source.hooks.on_syntax	pack/plugins/start/fatih-vim-go/autoload/unite/sources/decls.vim	/^function! s:source.hooks.on_syntax(args, context) abort$/;"	f
spacecase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:spacecase(word)$/;"	f
spawn	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:spawn(bang, desc, for, args) abort$/;"	f
specs.colon.parse	pack/plugins/start/kopischke-vim-fetch/autoload/fetch.vim	/^function! s:specs.colon.parse(file) abort$/;"	f
specs.paren.parse	pack/plugins/start/kopischke-vim-fetch/autoload/fetch.vim	/^function! s:specs.paren.parse(file) abort$/;"	f
specs.plan9.parse	pack/plugins/start/kopischke-vim-fetch/autoload/fetch.vim	/^function! s:specs.plan9.parse(file) abort$/;"	f
specs.pytest.parse	pack/plugins/start/kopischke-vim-fetch/autoload/fetch.vim	/^function! s:specs.pytest.parse(file) abort$/;"	f
sr	pack/plugins/start/machakann-vim-sandwich/test/dot-repeat/test_dot.vim	/^nmap sr <Plug>(operator-sandwich-replace)$/;"	m
stage_info	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:stage_info(lnum) abort$/;"	f
start_options	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let start_options = {$/;"	v
start_options	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let start_options = {$/;"	v
start_options	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^  let start_options = {$/;"	v
start_options	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^  let start_options = {$/;"	v
start_options	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let start_options = {$/;"	v
start_options	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let start_options = {$/;"	v
start_options	pack/plugins/start/fatih-vim-go/autoload/go/test.vim	/^  let start_options = {$/;"	v
start_traces	pack/plugins/start/xtal8-traces-vim/plugin/traces.vim	/^function! s:start_traces() abort$/;"	f
status	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^  let status = {}$/;"	v
status_dir	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let status_dir =  expand('%:p:h')$/;"	v
statusbump	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:statusbump() abort$/;"	f
stay#integrate#fetch#setup	pack/plugins/start/kopischke-vim-fetch/autoload/stay/integrate/fetch.vim	/^function! stay#integrate#fetch#setup() abort$/;"	f
stdout	pack/plugins/start/wellle-tmux-complete-vim/autoload/asyncomplete/sources/tmuxcomplete.vim	/^function! s:stdout(params, id, data, event) abort$/;"	f
string_decode	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:string_decode(str)$/;"	f
string_encode	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:string_encode(str)$/;"	f
strip_white_space	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^function! s:strip_white_space(l,r,line) abort$/;"	f
stuff._match_edges	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^function! s:stuff._match_edges(recipes, opt, edge_chars) dict abort "{{{$/;"	f
stuff._match_recipes	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^function! s:stuff._match_recipes(recipes, opt, ...) dict abort "{{{$/;"	f
stuff.hi_list	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^function! s:stuff.hi_list(place, linewise) dict abort "{{{$/;"	f
stuff.initialize	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^function! s:stuff.initialize(count, cursor, modmark) dict abort  "{{{$/;"	f
stuff.match	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^function! s:stuff.match(recipes, opt, ...) dict abort "{{{$/;"	f
stuff.set_target	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^function! s:stuff.set_target() dict abort  "{{{$/;"	f
stuff.skip_space	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/stuff.vim	/^function! s:stuff.skip_space() dict abort  "{{{$/;"	f
sub	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
subesc	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:subesc(pattern)$/;"	f
substitute_command	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:substitute_command(cmd,bad,good,flags)$/;"	f
subvert_dispatcher	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:subvert_dispatcher(bang,line1,line2,count,args)$/;"	f
suite.a_function_interface	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_function_interface() abort  "{{{$/;"	f
suite.a_function_interface	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_function_interface() abort  "{{{$/;"	f
suite.a_o_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_o_default_recipes() abort "{{{$/;"	f
suite.a_o_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_o_default_recipes() abort "{{{$/;"	f
suite.a_o_external_textobj	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_o_external_textobj() abort  "{{{$/;"	f
suite.a_o_external_textobj	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_o_external_textobj() abort  "{{{$/;"	f
suite.a_o_multibyte	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_o_multibyte() abort  "{{{$/;"	f
suite.a_o_multibyte	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_o_multibyte() abort  "{{{$/;"	f
suite.a_o_nest	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_o_nest() abort  "{{{$/;"	f
suite.a_o_nest	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_o_nest() abort  "{{{$/;"	f
suite.a_o_no_nest	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_o_no_nest() abort "{{{$/;"	f
suite.a_o_no_nest	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_o_no_nest() abort "{{{$/;"	f
suite.a_o_option_expand_range	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_o_option_expand_range() abort  "{{{$/;"	f
suite.a_o_option_expand_range	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_o_option_expand_range() abort  "{{{$/;"	f
suite.a_o_option_expr	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_o_option_expr() abort "{{{$/;"	f
suite.a_o_option_expr	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_o_option_expr() abort "{{{$/;"	f
suite.a_o_option_inner_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_o_option_inner_syntax() abort "{{{$/;"	f
suite.a_o_option_inner_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_o_option_inner_syntax() abort "{{{$/;"	f
suite.a_o_option_listexpr	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_o_option_listexpr() abort "{{{$/;"	f
suite.a_o_option_listexpr	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_o_option_listexpr() abort "{{{$/;"	f
suite.a_o_option_match_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_o_option_match_syntax() abort "{{{$/;"	f
suite.a_o_option_match_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_o_option_match_syntax() abort "{{{$/;"	f
suite.a_o_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_o_option_noremap() abort  "{{{$/;"	f
suite.a_o_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_o_option_noremap() abort  "{{{$/;"	f
suite.a_o_option_quoteescape	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_o_option_quoteescape() abort  "{{{$/;"	f
suite.a_o_option_quoteescape	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_o_option_quoteescape() abort  "{{{$/;"	f
suite.a_o_option_regex	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_o_option_regex() abort "{{{$/;"	f
suite.a_o_option_regex	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_o_option_regex() abort "{{{$/;"	f
suite.a_o_option_skip_expr	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_o_option_skip_expr() abort  "{{{$/;"	f
suite.a_o_option_skip_expr	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_o_option_skip_expr() abort  "{{{$/;"	f
suite.a_o_option_skip_regex	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_o_option_skip_regex() abort  "{{{$/;"	f
suite.a_o_option_skip_regex	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_o_option_skip_regex() abort  "{{{$/;"	f
suite.a_o_option_synchro	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_o_option_synchro() abort  "{{{$/;"	f
suite.a_o_option_synchro	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_o_option_synchro() abort  "{{{$/;"	f
suite.a_o_option_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_o_option_syntax() abort "{{{$/;"	f
suite.a_o_option_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_o_option_syntax() abort "{{{$/;"	f
suite.a_o_priority	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_o_priority() abort  "{{{$/;"	f
suite.a_o_priority	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_o_priority() abort  "{{{$/;"	f
suite.a_x_blockwise_visual	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_x_blockwise_visual() abort  "{{{$/;"	f
suite.a_x_blockwise_visual	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_x_blockwise_visual() abort  "{{{$/;"	f
suite.a_x_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_x_default_recipes() abort "{{{$/;"	f
suite.a_x_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_x_default_recipes() abort "{{{$/;"	f
suite.a_x_external_textobj	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_x_external_textobj() abort  "{{{$/;"	f
suite.a_x_external_textobj	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_x_external_textobj() abort  "{{{$/;"	f
suite.a_x_multibyte	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_x_multibyte() abort  "{{{$/;"	f
suite.a_x_multibyte	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_x_multibyte() abort  "{{{$/;"	f
suite.a_x_nest	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_x_nest() abort  "{{{$/;"	f
suite.a_x_nest	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_x_nest() abort  "{{{$/;"	f
suite.a_x_no_nest	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_x_no_nest() abort "{{{$/;"	f
suite.a_x_no_nest	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_x_no_nest() abort "{{{$/;"	f
suite.a_x_option_expand_range	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_x_option_expand_range() abort  "{{{$/;"	f
suite.a_x_option_expand_range	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_x_option_expand_range() abort  "{{{$/;"	f
suite.a_x_option_expr	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_x_option_expr() abort "{{{$/;"	f
suite.a_x_option_expr	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_x_option_expr() abort "{{{$/;"	f
suite.a_x_option_inner_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_x_option_inner_syntax() abort "{{{$/;"	f
suite.a_x_option_inner_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_x_option_inner_syntax() abort "{{{$/;"	f
suite.a_x_option_listexpr	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_x_option_listexpr() abort "{{{$/;"	f
suite.a_x_option_listexpr	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_x_option_listexpr() abort "{{{$/;"	f
suite.a_x_option_match_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_x_option_match_syntax() abort "{{{$/;"	f
suite.a_x_option_match_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_x_option_match_syntax() abort "{{{$/;"	f
suite.a_x_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_x_option_noremap() abort  "{{{$/;"	f
suite.a_x_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_x_option_noremap() abort  "{{{$/;"	f
suite.a_x_option_quoteescape	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_x_option_quoteescape() abort  "{{{$/;"	f
suite.a_x_option_quoteescape	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_x_option_quoteescape() abort  "{{{$/;"	f
suite.a_x_option_regex	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_x_option_regex() abort "{{{$/;"	f
suite.a_x_option_regex	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_x_option_regex() abort "{{{$/;"	f
suite.a_x_option_skip_expr	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_x_option_skip_expr() abort  "{{{$/;"	f
suite.a_x_option_skip_expr	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_x_option_skip_expr() abort  "{{{$/;"	f
suite.a_x_option_skip_regex	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_x_option_skip_regex() abort  "{{{$/;"	f
suite.a_x_option_skip_regex	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_x_option_skip_regex() abort  "{{{$/;"	f
suite.a_x_option_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_x_option_syntax() abort "{{{$/;"	f
suite.a_x_option_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_x_option_syntax() abort "{{{$/;"	f
suite.a_x_priority	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_x_priority() abort  "{{{$/;"	f
suite.a_x_priority	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_x_priority() abort  "{{{$/;"	f
suite.a_x_selected_area_extending	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.a_x_selected_area_extending() abort  "{{{$/;"	f
suite.a_x_selected_area_extending	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.a_x_selected_area_extending() abort  "{{{$/;"	f
suite.after	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.after() abort "{{{$/;"	f
suite.after	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.after() abort "{{{$/;"	f
suite.after	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.after() abort "{{{$/;"	f
suite.after	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.after() abort "{{{$/;"	f
suite.after	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.after() abort "{{{$/;"	f
suite.autoindent	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.autoindent() abort "{{{$/;"	f
suite.before	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.before() abort  "{{{$/;"	f
suite.before	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.before() abort  "{{{$/;"	f
suite.before_each	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.before_each() abort "{{{$/;"	f
suite.before_each	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.before_each() abort "{{{$/;"	f
suite.before_each	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.before_each() abort "{{{$/;"	f
suite.before_each	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.before_each() abort "{{{$/;"	f
suite.before_each	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.before_each() abort "{{{$/;"	f
suite.blockwise_n_a_character	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_n_a_character() abort "{{{$/;"	f
suite.blockwise_n_a_character	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_n_a_character() abort "{{{$/;"	f
suite.blockwise_n_a_character	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_n_a_character() abort "{{{$/;"	f
suite.blockwise_n_breaking	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_n_breaking() abort "{{{$/;"	f
suite.blockwise_n_count	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_n_count() abort "{{{$/;"	f
suite.blockwise_n_count	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_n_count() abort "{{{$/;"	f
suite.blockwise_n_count	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_n_count() abort "{{{$/;"	f
suite.blockwise_n_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_n_default_recipes() abort "{{{$/;"	f
suite.blockwise_n_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_n_default_recipes() abort "{{{$/;"	f
suite.blockwise_n_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_n_default_recipes() abort "{{{$/;"	f
suite.blockwise_n_external_textobj	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_n_external_textobj() abort  "{{{$/;"	f
suite.blockwise_n_external_textobj	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_n_external_textobj() abort "{{{$/;"	f
suite.blockwise_n_multibyte	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_n_multibyte() abort  "{{{$/;"	f
suite.blockwise_n_multibyte	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_n_multibyte() abort  "{{{$/;"	f
suite.blockwise_n_multibyte	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_n_multibyte() abort  "{{{$/;"	f
suite.blockwise_n_not_registered	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_n_not_registered() abort "{{{$/;"	f
suite.blockwise_n_not_registered	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_n_not_registered() abort "{{{$/;"	f
suite.blockwise_n_not_registered	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_n_not_registered() abort "{{{$/;"	f
suite.blockwise_n_nothing_inside	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_n_nothing_inside() abort  "{{{$/;"	f
suite.blockwise_n_nothing_inside	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_n_nothing_inside() abort "{{{$/;"	f
suite.blockwise_n_option_autoindent	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_n_option_autoindent() abort  "{{{$/;"	f
suite.blockwise_n_option_autoindent	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_n_option_autoindent() abort  "{{{$/;"	f
suite.blockwise_n_option_command	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_n_option_command() abort  "{{{$/;"	f
suite.blockwise_n_option_command	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_n_option_command() abort  "{{{$/;"	f
suite.blockwise_n_option_command	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_n_option_command() abort  "{{{$/;"	f
suite.blockwise_n_option_cursor	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_n_option_cursor() abort  "{{{$/;"	f
suite.blockwise_n_option_cursor	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_n_option_cursor() abort  "{{{$/;"	f
suite.blockwise_n_option_cursor	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_n_option_cursor() abort  "{{{$/;"	f
suite.blockwise_n_option_expr	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_n_option_expr() abort "{{{$/;"	f
suite.blockwise_n_option_expr	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_n_option_expr() abort "{{{$/;"	f
suite.blockwise_n_option_indentkeys	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_n_option_indentkeys() abort  "{{{$/;"	f
suite.blockwise_n_option_indentkeys	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_n_option_indentkeys() abort  "{{{$/;"	f
suite.blockwise_n_option_linewise	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_n_option_linewise() abort "{{{$/;"	f
suite.blockwise_n_option_listexpr	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_n_option_listexpr() abort "{{{$/;"	f
suite.blockwise_n_option_listexpr	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_n_option_listexpr() abort "{{{$/;"	f
suite.blockwise_n_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_n_option_noremap() abort  "{{{$/;"	f
suite.blockwise_n_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_n_option_noremap() abort  "{{{$/;"	f
suite.blockwise_n_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_n_option_noremap() abort  "{{{$/;"	f
suite.blockwise_n_option_query_once	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_n_option_query_once() abort  "{{{$/;"	f
suite.blockwise_n_option_query_once	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_n_option_query_once() abort  "{{{$/;"	f
suite.blockwise_n_option_regex	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_n_option_regex() abort  "{{{$/;"	f
suite.blockwise_n_option_regex	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_n_option_regex() abort  "{{{$/;"	f
suite.blockwise_n_option_skip_char	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_n_option_skip_char() abort "{{{$/;"	f
suite.blockwise_n_option_skip_char	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_n_option_skip_char() abort "{{{$/;"	f
suite.blockwise_n_option_skip_space	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_n_option_skip_space() abort  "{{{$/;"	f
suite.blockwise_n_option_skip_space	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_n_option_skip_space() abort  "{{{$/;"	f
suite.blockwise_n_option_skip_space	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_n_option_skip_space() abort  "{{{$/;"	f
suite.blockwise_n_positioning	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_n_positioning() abort "{{{$/;"	f
suite.blockwise_n_positioning	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_n_positioning() abort "{{{$/;"	f
suite.blockwise_n_positioning	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_n_positioning() abort "{{{$/;"	f
suite.blockwise_x_a_character	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_x_a_character() abort "{{{$/;"	f
suite.blockwise_x_a_character	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_x_a_character() abort "{{{$/;"	f
suite.blockwise_x_a_character	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_x_a_character() abort "{{{$/;"	f
suite.blockwise_x_breaking	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_x_breaking() abort "{{{$/;"	f
suite.blockwise_x_count	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_x_count() abort "{{{$/;"	f
suite.blockwise_x_count	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_x_count() abort "{{{$/;"	f
suite.blockwise_x_count	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_x_count() abort "{{{$/;"	f
suite.blockwise_x_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_x_default_recipes() abort "{{{$/;"	f
suite.blockwise_x_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_x_default_recipes() abort "{{{$/;"	f
suite.blockwise_x_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_x_default_recipes() abort "{{{$/;"	f
suite.blockwise_x_external_textobj	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_x_external_textobj() abort  "{{{$/;"	f
suite.blockwise_x_external_textobj	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_x_external_textobj() abort "{{{$/;"	f
suite.blockwise_x_multibyte	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_x_multibyte() abort  "{{{$/;"	f
suite.blockwise_x_multibyte	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_x_multibyte() abort  "{{{$/;"	f
suite.blockwise_x_multibyte	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_x_multibyte() abort  "{{{$/;"	f
suite.blockwise_x_not_registered	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_x_not_registered() abort "{{{$/;"	f
suite.blockwise_x_not_registered	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_x_not_registered() abort "{{{$/;"	f
suite.blockwise_x_not_registered	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_x_not_registered() abort "{{{$/;"	f
suite.blockwise_x_nothing_inside	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_x_nothing_inside() abort  "{{{$/;"	f
suite.blockwise_x_nothing_inside	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_x_nothing_inside() abort "{{{$/;"	f
suite.blockwise_x_option_autoindent	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_x_option_autoindent() abort  "{{{$/;"	f
suite.blockwise_x_option_autoindent	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_x_option_autoindent() abort  "{{{$/;"	f
suite.blockwise_x_option_command	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_x_option_command() abort  "{{{$/;"	f
suite.blockwise_x_option_command	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_x_option_command() abort  "{{{$/;"	f
suite.blockwise_x_option_command	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_x_option_command() abort  "{{{$/;"	f
suite.blockwise_x_option_cursor	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_x_option_cursor() abort  "{{{$/;"	f
suite.blockwise_x_option_cursor	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_x_option_cursor() abort  "{{{$/;"	f
suite.blockwise_x_option_cursor	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_x_option_cursor() abort  "{{{$/;"	f
suite.blockwise_x_option_expr	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_x_option_expr() abort "{{{$/;"	f
suite.blockwise_x_option_expr	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_x_option_expr() abort "{{{$/;"	f
suite.blockwise_x_option_indentkeys	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_x_option_indentkeys() abort  "{{{$/;"	f
suite.blockwise_x_option_indentkeys	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_x_option_indentkeys() abort  "{{{$/;"	f
suite.blockwise_x_option_linewise	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_x_option_linewise() abort "{{{$/;"	f
suite.blockwise_x_option_listexpr	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_x_option_listexpr() abort "{{{$/;"	f
suite.blockwise_x_option_listexpr	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_x_option_listexpr() abort "{{{$/;"	f
suite.blockwise_x_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_x_option_noremap() abort  "{{{$/;"	f
suite.blockwise_x_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_x_option_noremap() abort  "{{{$/;"	f
suite.blockwise_x_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_x_option_noremap() abort  "{{{$/;"	f
suite.blockwise_x_option_query_once	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_x_option_query_once() abort  "{{{$/;"	f
suite.blockwise_x_option_query_once	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_x_option_query_once() abort  "{{{$/;"	f
suite.blockwise_x_option_regex	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_x_option_regex() abort  "{{{$/;"	f
suite.blockwise_x_option_regex	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_x_option_regex() abort  "{{{$/;"	f
suite.blockwise_x_option_skip_char	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_x_option_skip_char() abort "{{{$/;"	f
suite.blockwise_x_option_skip_char	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_x_option_skip_char() abort "{{{$/;"	f
suite.blockwise_x_option_skip_space	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_x_option_skip_space() abort  "{{{$/;"	f
suite.blockwise_x_option_skip_space	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_x_option_skip_space() abort  "{{{$/;"	f
suite.blockwise_x_option_skip_space	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_x_option_skip_space() abort  "{{{$/;"	f
suite.blockwise_x_positioning	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.blockwise_x_positioning() abort "{{{$/;"	f
suite.blockwise_x_positioning	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.blockwise_x_positioning() abort "{{{$/;"	f
suite.blockwise_x_positioning	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.blockwise_x_positioning() abort "{{{$/;"	f
suite.charwise_n_a_character	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_n_a_character() abort "{{{$/;"	f
suite.charwise_n_a_character	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_n_a_character() abort "{{{$/;"	f
suite.charwise_n_a_character	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_n_a_character() abort "{{{$/;"	f
suite.charwise_n_breaking	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_n_breaking() abort "{{{$/;"	f
suite.charwise_n_breaking	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_n_breaking() abort "{{{$/;"	f
suite.charwise_n_breaking	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_n_breaking() abort "{{{$/;"	f
suite.charwise_n_count	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_n_count() abort "{{{$/;"	f
suite.charwise_n_count	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_n_count() abort "{{{$/;"	f
suite.charwise_n_count	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_n_count() abort "{{{$/;"	f
suite.charwise_n_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_n_default_recipes() abort "{{{$/;"	f
suite.charwise_n_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_n_default_recipes() abort "{{{$/;"	f
suite.charwise_n_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_n_default_recipes() abort "{{{$/;"	f
suite.charwise_n_external_textobj	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_n_external_textobj() abort "{{{$/;"	f
suite.charwise_n_external_textobj	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_n_external_textobj() abort "{{{$/;"	f
suite.charwise_n_multibyte	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_n_multibyte() abort  "{{{$/;"	f
suite.charwise_n_multibyte	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_n_multibyte() abort  "{{{$/;"	f
suite.charwise_n_multibyte	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_n_multibyte() abort  "{{{$/;"	f
suite.charwise_n_not_registered	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_n_not_registered() abort "{{{$/;"	f
suite.charwise_n_not_registered	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_n_not_registered() abort "{{{$/;"	f
suite.charwise_n_not_registered	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_n_not_registered() abort "{{{$/;"	f
suite.charwise_n_nothing_inside	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_n_nothing_inside() abort "{{{$/;"	f
suite.charwise_n_nothing_inside	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_n_nothing_inside() abort "{{{$/;"	f
suite.charwise_n_option_autoindent	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_n_option_autoindent() abort  "{{{$/;"	f
suite.charwise_n_option_autoindent	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_n_option_autoindent() abort  "{{{$/;"	f
suite.charwise_n_option_command	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_n_option_command() abort  "{{{$/;"	f
suite.charwise_n_option_command	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_n_option_command() abort  "{{{$/;"	f
suite.charwise_n_option_command	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_n_option_command() abort  "{{{$/;"	f
suite.charwise_n_option_cursor	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_n_option_cursor() abort  "{{{$/;"	f
suite.charwise_n_option_cursor	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_n_option_cursor() abort  "{{{$/;"	f
suite.charwise_n_option_cursor	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_n_option_cursor() abort  "{{{$/;"	f
suite.charwise_n_option_expr	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_n_option_expr() abort "{{{$/;"	f
suite.charwise_n_option_expr	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_n_option_expr() abort "{{{$/;"	f
suite.charwise_n_option_indentkeys	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_n_option_indentkeys() abort  "{{{$/;"	f
suite.charwise_n_option_indentkeys	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_n_option_indentkeys() abort  "{{{$/;"	f
suite.charwise_n_option_linewise	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_n_option_linewise() abort "{{{$/;"	f
suite.charwise_n_option_linewise	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_n_option_linewise() abort  "{{{$/;"	f
suite.charwise_n_option_linewise	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_n_option_linewise() abort  "{{{$/;"	f
suite.charwise_n_option_listexpr	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_n_option_listexpr() abort "{{{$/;"	f
suite.charwise_n_option_listexpr	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_n_option_listexpr() abort "{{{$/;"	f
suite.charwise_n_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_n_option_noremap() abort  "{{{$/;"	f
suite.charwise_n_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_n_option_noremap() abort  "{{{$/;"	f
suite.charwise_n_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_n_option_noremap() abort  "{{{$/;"	f
suite.charwise_n_option_query_once	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_n_option_query_once() abort  "{{{$/;"	f
suite.charwise_n_option_query_once	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_n_option_query_once() abort  "{{{$/;"	f
suite.charwise_n_option_regex	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_n_option_regex() abort  "{{{$/;"	f
suite.charwise_n_option_regex	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_n_option_regex() abort  "{{{$/;"	f
suite.charwise_n_option_skip_char	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_n_option_skip_char() abort "{{{$/;"	f
suite.charwise_n_option_skip_char	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_n_option_skip_char() abort "{{{$/;"	f
suite.charwise_n_option_skip_space	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_n_option_skip_space() abort  "{{{$/;"	f
suite.charwise_n_option_skip_space	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_n_option_skip_space() abort  "{{{$/;"	f
suite.charwise_n_option_skip_space	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_n_option_skip_space() abort  "{{{$/;"	f
suite.charwise_n_positioning	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_n_positioning() abort "{{{$/;"	f
suite.charwise_n_positioning	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_n_positioning() abort "{{{$/;"	f
suite.charwise_n_positioning	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_n_positioning() abort "{{{$/;"	f
suite.charwise_x_a_character	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_x_a_character() abort "{{{$/;"	f
suite.charwise_x_a_character	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_x_a_character() abort "{{{$/;"	f
suite.charwise_x_a_character	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_x_a_character() abort "{{{$/;"	f
suite.charwise_x_breaking	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_x_breaking() abort "{{{$/;"	f
suite.charwise_x_breaking	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_x_breaking() abort "{{{$/;"	f
suite.charwise_x_breaking	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_x_breaking() abort "{{{$/;"	f
suite.charwise_x_count	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_x_count() abort "{{{$/;"	f
suite.charwise_x_count	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_x_count() abort "{{{$/;"	f
suite.charwise_x_count	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_x_count() abort "{{{$/;"	f
suite.charwise_x_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_x_default_recipes() abort "{{{$/;"	f
suite.charwise_x_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_x_default_recipes() abort "{{{$/;"	f
suite.charwise_x_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_x_default_recipes() abort "{{{$/;"	f
suite.charwise_x_external_textobj	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_x_external_textobj() abort "{{{$/;"	f
suite.charwise_x_external_textobj	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_x_external_textobj() abort "{{{$/;"	f
suite.charwise_x_multibyte	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_x_multibyte() abort  "{{{$/;"	f
suite.charwise_x_multibyte	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_x_multibyte() abort  "{{{$/;"	f
suite.charwise_x_multibyte	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_x_multibyte() abort  "{{{$/;"	f
suite.charwise_x_not_registered	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_x_not_registered() abort "{{{$/;"	f
suite.charwise_x_not_registered	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_x_not_registered() abort "{{{$/;"	f
suite.charwise_x_not_registered	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_x_not_registered() abort "{{{$/;"	f
suite.charwise_x_nothing_inside	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_x_nothing_inside() abort "{{{$/;"	f
suite.charwise_x_nothing_inside	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_x_nothing_inside() abort "{{{$/;"	f
suite.charwise_x_option_autoindent	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_x_option_autoindent() abort  "{{{$/;"	f
suite.charwise_x_option_autoindent	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_x_option_autoindent() abort  "{{{$/;"	f
suite.charwise_x_option_command	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_x_option_command() abort  "{{{$/;"	f
suite.charwise_x_option_command	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_x_option_command() abort  "{{{$/;"	f
suite.charwise_x_option_command	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_x_option_command() abort  "{{{$/;"	f
suite.charwise_x_option_cursor	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_x_option_cursor() abort  "{{{$/;"	f
suite.charwise_x_option_cursor	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_x_option_cursor() abort  "{{{$/;"	f
suite.charwise_x_option_cursor	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_x_option_cursor() abort  "{{{$/;"	f
suite.charwise_x_option_expr	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_x_option_expr() abort  "{{{$/;"	f
suite.charwise_x_option_expr	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_x_option_expr() abort "{{{$/;"	f
suite.charwise_x_option_indentkeys	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_x_option_indentkeys() abort  "{{{$/;"	f
suite.charwise_x_option_indentkeys	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_x_option_indentkeys() abort  "{{{$/;"	f
suite.charwise_x_option_linewise	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_x_option_linewise() abort "{{{$/;"	f
suite.charwise_x_option_linewise	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_x_option_linewise() abort  "{{{$/;"	f
suite.charwise_x_option_linewise	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_x_option_linewise() abort  "{{{$/;"	f
suite.charwise_x_option_listexpr	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_x_option_listexpr() abort "{{{$/;"	f
suite.charwise_x_option_listexpr	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_x_option_listexpr() abort "{{{$/;"	f
suite.charwise_x_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_x_option_noremap() abort "{{{$/;"	f
suite.charwise_x_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_x_option_noremap() abort  "{{{$/;"	f
suite.charwise_x_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_x_option_noremap() abort  "{{{$/;"	f
suite.charwise_x_option_query_once	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_x_option_query_once() abort  "{{{$/;"	f
suite.charwise_x_option_query_once	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_x_option_query_once() abort  "{{{$/;"	f
suite.charwise_x_option_regex	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_x_option_regex() abort  "{{{$/;"	f
suite.charwise_x_option_regex	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_x_option_regex() abort  "{{{$/;"	f
suite.charwise_x_option_skip_char	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_x_option_skip_char() abort "{{{$/;"	f
suite.charwise_x_option_skip_char	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_x_option_skip_char() abort "{{{$/;"	f
suite.charwise_x_option_skip_space	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_x_option_skip_space() abort  "{{{$/;"	f
suite.charwise_x_option_skip_space	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_x_option_skip_space() abort  "{{{$/;"	f
suite.charwise_x_option_skip_space	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_x_option_skip_space() abort  "{{{$/;"	f
suite.charwise_x_positioning	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.charwise_x_positioning() abort "{{{$/;"	f
suite.charwise_x_positioning	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.charwise_x_positioning() abort "{{{$/;"	f
suite.charwise_x_positioning	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.charwise_x_positioning() abort "{{{$/;"	f
suite.filter_action	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.filter_action() abort "{{{$/;"	f
suite.filter_action	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.filter_action() abort "{{{$/;"	f
suite.filter_action	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.filter_action() abort "{{{$/;"	f
suite.filter_expr	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.filter_expr() abort "{{{$/;"	f
suite.filter_expr	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.filter_expr() abort "{{{$/;"	f
suite.filter_expr	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.filter_expr() abort "{{{$/;"	f
suite.filter_expr	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.filter_expr() abort "{{{$/;"	f
suite.filter_expr	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.filter_expr() abort "{{{$/;"	f
suite.filter_filetype	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.filter_filetype() abort "{{{$/;"	f
suite.filter_filetype	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.filter_filetype() abort "{{{$/;"	f
suite.filter_filetype	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.filter_filetype() abort "{{{$/;"	f
suite.filter_filetype	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.filter_filetype() abort "{{{$/;"	f
suite.filter_filetype	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.filter_filetype() abort "{{{$/;"	f
suite.filter_kind	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.filter_kind() abort "{{{$/;"	f
suite.filter_kind	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.filter_kind() abort "{{{$/;"	f
suite.filter_kind	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.filter_kind() abort "{{{$/;"	f
suite.filter_kind	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.filter_kind() abort "{{{$/;"	f
suite.filter_kind	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.filter_kind() abort "{{{$/;"	f
suite.filter_mode	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.filter_mode() abort "{{{$/;"	f
suite.filter_mode	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.filter_mode() abort "{{{$/;"	f
suite.filter_mode	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.filter_mode() abort "{{{$/;"	f
suite.filter_mode	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.filter_mode() abort "{{{$/;"	f
suite.filter_mode	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.filter_mode() abort "{{{$/;"	f
suite.filter_motionwise	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.filter_motionwise() abort "{{{$/;"	f
suite.filter_motionwise	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.filter_motionwise() abort "{{{$/;"	f
suite.filter_motionwise	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.filter_motionwise() abort "{{{$/;"	f
suite.function_interface	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.function_interface() abort  "{{{$/;"	f
suite.function_interface	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.function_interface() abort  "{{{$/;"	f
suite.function_interface	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.function_interface() abort  "{{{$/;"	f
suite.i_function_interface	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_function_interface() abort  "{{{$/;"	f
suite.i_function_interface	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_function_interface() abort  "{{{$/;"	f
suite.i_o_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_o_default_recipes() abort "{{{$/;"	f
suite.i_o_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_o_default_recipes() abort "{{{$/;"	f
suite.i_o_external_textobj	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_o_external_textobj() abort  "{{{$/;"	f
suite.i_o_external_textobj	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_o_external_textobj() abort  "{{{$/;"	f
suite.i_o_multibyte	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_o_multibyte() abort  "{{{$/;"	f
suite.i_o_multibyte	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_o_multibyte() abort  "{{{$/;"	f
suite.i_o_nest	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_o_nest() abort  "{{{$/;"	f
suite.i_o_nest	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_o_nest() abort  "{{{$/;"	f
suite.i_o_no_nest	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_o_no_nest() abort "{{{$/;"	f
suite.i_o_no_nest	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_o_no_nest() abort "{{{$/;"	f
suite.i_o_option_expand_range	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_o_option_expand_range() abort  "{{{$/;"	f
suite.i_o_option_expand_range	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_o_option_expand_range() abort  "{{{$/;"	f
suite.i_o_option_expr	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_o_option_expr() abort "{{{$/;"	f
suite.i_o_option_expr	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_o_option_expr() abort "{{{$/;"	f
suite.i_o_option_inner_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_o_option_inner_syntax() abort "{{{$/;"	f
suite.i_o_option_inner_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_o_option_inner_syntax() abort "{{{$/;"	f
suite.i_o_option_listexpr	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_o_option_listexpr() abort "{{{$/;"	f
suite.i_o_option_listexpr	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_o_option_listexpr() abort "{{{$/;"	f
suite.i_o_option_match_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_o_option_match_syntax() abort "{{{$/;"	f
suite.i_o_option_match_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_o_option_match_syntax() abort "{{{$/;"	f
suite.i_o_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_o_option_noremap() abort  "{{{$/;"	f
suite.i_o_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_o_option_noremap() abort  "{{{$/;"	f
suite.i_o_option_quoteescape	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_o_option_quoteescape() abort  "{{{$/;"	f
suite.i_o_option_quoteescape	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_o_option_quoteescape() abort  "{{{$/;"	f
suite.i_o_option_regex	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_o_option_regex() abort "{{{$/;"	f
suite.i_o_option_regex	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_o_option_regex() abort "{{{$/;"	f
suite.i_o_option_skip_break	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_o_option_skip_break() abort  "{{{$/;"	f
suite.i_o_option_skip_break	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_o_option_skip_break() abort  "{{{$/;"	f
suite.i_o_option_skip_expr	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_o_option_skip_expr() abort  "{{{$/;"	f
suite.i_o_option_skip_expr	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_o_option_skip_expr() abort  "{{{$/;"	f
suite.i_o_option_skip_regex	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_o_option_skip_regex() abort  "{{{$/;"	f
suite.i_o_option_skip_regex	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_o_option_skip_regex() abort  "{{{$/;"	f
suite.i_o_option_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_o_option_syntax() abort "{{{$/;"	f
suite.i_o_option_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_o_option_syntax() abort "{{{$/;"	f
suite.i_o_priority	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_o_priority() abort  "{{{$/;"	f
suite.i_x_blockwise_visual	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_x_blockwise_visual() abort  "{{{$/;"	f
suite.i_x_blockwise_visual	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_x_blockwise_visual() abort  "{{{$/;"	f
suite.i_x_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_x_default_recipes() abort "{{{$/;"	f
suite.i_x_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_x_default_recipes() abort "{{{$/;"	f
suite.i_x_external_textobj	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_x_external_textobj() abort  "{{{$/;"	f
suite.i_x_external_textobj	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_x_external_textobj() abort  "{{{$/;"	f
suite.i_x_multibyte	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_x_multibyte() abort  "{{{$/;"	f
suite.i_x_multibyte	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_x_multibyte() abort  "{{{$/;"	f
suite.i_x_nest	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_x_nest() abort  "{{{$/;"	f
suite.i_x_nest	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_x_nest() abort  "{{{$/;"	f
suite.i_x_no_nest	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_x_no_nest() abort "{{{$/;"	f
suite.i_x_no_nest	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_x_no_nest() abort "{{{$/;"	f
suite.i_x_option_expand_range	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_x_option_expand_range() abort  "{{{$/;"	f
suite.i_x_option_expand_range	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_x_option_expand_range() abort  "{{{$/;"	f
suite.i_x_option_expr	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_x_option_expr() abort "{{{$/;"	f
suite.i_x_option_expr	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_x_option_expr() abort "{{{$/;"	f
suite.i_x_option_inner_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_x_option_inner_syntax() abort "{{{$/;"	f
suite.i_x_option_inner_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_x_option_inner_syntax() abort "{{{$/;"	f
suite.i_x_option_listexpr	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_x_option_listexpr() abort "{{{$/;"	f
suite.i_x_option_listexpr	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_x_option_listexpr() abort "{{{$/;"	f
suite.i_x_option_match_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_x_option_match_syntax() abort "{{{$/;"	f
suite.i_x_option_match_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_x_option_match_syntax() abort "{{{$/;"	f
suite.i_x_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_x_option_noremap() abort  "{{{$/;"	f
suite.i_x_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_x_option_noremap() abort  "{{{$/;"	f
suite.i_x_option_quoteescape	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_x_option_quoteescape() abort  "{{{$/;"	f
suite.i_x_option_quoteescape	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_x_option_quoteescape() abort  "{{{$/;"	f
suite.i_x_option_regex	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_x_option_regex() abort "{{{$/;"	f
suite.i_x_option_regex	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_x_option_regex() abort "{{{$/;"	f
suite.i_x_option_skip_break	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_x_option_skip_break() abort  "{{{$/;"	f
suite.i_x_option_skip_break	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_x_option_skip_break() abort  "{{{$/;"	f
suite.i_x_option_skip_expr	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_x_option_skip_expr() abort  "{{{$/;"	f
suite.i_x_option_skip_expr	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_x_option_skip_expr() abort  "{{{$/;"	f
suite.i_x_option_skip_regex	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_x_option_skip_regex() abort  "{{{$/;"	f
suite.i_x_option_skip_regex	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_x_option_skip_regex() abort  "{{{$/;"	f
suite.i_x_option_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_x_option_syntax() abort "{{{$/;"	f
suite.i_x_option_syntax	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_x_option_syntax() abort "{{{$/;"	f
suite.i_x_priority	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_x_priority() abort  "{{{$/;"	f
suite.i_x_selected_area_extending	pack/plugins/start/machakann-vim-sandwich/test/textobj-auto.vim	/^function! s:suite.i_x_selected_area_extending() abort  "{{{$/;"	f
suite.i_x_selected_area_extending	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.i_x_selected_area_extending() abort  "{{{$/;"	f
suite.input	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.input() abort "{{{$/;"	f
suite.input	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.input() abort "{{{$/;"	f
suite.input	pack/plugins/start/machakann-vim-sandwich/test/textobj-query.vim	/^function! s:suite.input() abort "{{{$/;"	f
suite.insertspace	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.insertspace() abort "{{{$/;"	f
suite.invalid_region	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.invalid_region() abort  "{{{$/;"	f
suite.invalid_region	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.invalid_region() abort  "{{{$/;"	f
suite.linewise_n_a_character	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_n_a_character() abort "{{{$/;"	f
suite.linewise_n_a_character	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_n_a_character() abort "{{{$/;"	f
suite.linewise_n_breaking	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_n_breaking() abort "{{{$/;"	f
suite.linewise_n_breaking	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_n_breaking() abort "{{{$/;"	f
suite.linewise_n_breaking	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_n_breaking() abort "{{{$/;"	f
suite.linewise_n_count	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_n_count() abort "{{{$/;"	f
suite.linewise_n_count	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_n_count() abort "{{{$/;"	f
suite.linewise_n_count	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_n_count() abort "{{{$/;"	f
suite.linewise_n_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_n_default_recipes() abort "{{{$/;"	f
suite.linewise_n_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_n_default_recipes() abort "{{{$/;"	f
suite.linewise_n_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_n_default_recipes() abort "{{{$/;"	f
suite.linewise_n_external_textobj	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_n_external_textobj() abort "{{{$/;"	f
suite.linewise_n_external_textobj	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_n_external_textobj() abort "{{{$/;"	f
suite.linewise_n_multibyte	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_n_multibyte() abort  "{{{$/;"	f
suite.linewise_n_multibyte	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_n_multibyte() abort  "{{{$/;"	f
suite.linewise_n_multibyte	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_n_multibyte() abort  "{{{$/;"	f
suite.linewise_n_not_registered	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_n_not_registered() abort "{{{$/;"	f
suite.linewise_n_not_registered	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_n_not_registered() abort "{{{$/;"	f
suite.linewise_n_not_registered	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_n_not_registered() abort "{{{$/;"	f
suite.linewise_n_nothing_inside	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_n_nothing_inside() abort "{{{$/;"	f
suite.linewise_n_nothing_inside	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_n_nothing_inside() abort "{{{$/;"	f
suite.linewise_n_option_autoindent	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_n_option_autoindent() abort  "{{{$/;"	f
suite.linewise_n_option_autoindent	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_n_option_autoindent() abort  "{{{$/;"	f
suite.linewise_n_option_command	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_n_option_command() abort  "{{{$/;"	f
suite.linewise_n_option_command	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_n_option_command() abort  "{{{$/;"	f
suite.linewise_n_option_command	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_n_option_command() abort  "{{{$/;"	f
suite.linewise_n_option_cursor	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_n_option_cursor() abort  "{{{$/;"	f
suite.linewise_n_option_cursor	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_n_option_cursor() abort  "{{{$/;"	f
suite.linewise_n_option_cursor	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_n_option_cursor() abort  "{{{$/;"	f
suite.linewise_n_option_expr	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_n_option_expr() abort  "{{{$/;"	f
suite.linewise_n_option_expr	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_n_option_expr() abort "{{{$/;"	f
suite.linewise_n_option_indentkeys	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_n_option_indentkeys() abort  "{{{$/;"	f
suite.linewise_n_option_indentkeys	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_n_option_indentkeys() abort  "{{{$/;"	f
suite.linewise_n_option_linewise	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_n_option_linewise() abort "{{{$/;"	f
suite.linewise_n_option_linewise	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_n_option_linewise() abort  "{{{$/;"	f
suite.linewise_n_option_linewise	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_n_option_linewise() abort  "{{{$/;"	f
suite.linewise_n_option_listexpr	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_n_option_listexpr() abort "{{{$/;"	f
suite.linewise_n_option_listexpr	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_n_option_listexpr() abort "{{{$/;"	f
suite.linewise_n_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_n_option_noremap() abort "{{{$/;"	f
suite.linewise_n_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_n_option_noremap() abort  "{{{$/;"	f
suite.linewise_n_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_n_option_noremap() abort  "{{{$/;"	f
suite.linewise_n_option_query_once	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_n_option_query_once() abort  "{{{$/;"	f
suite.linewise_n_option_query_once	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_n_option_query_once() abort  "{{{$/;"	f
suite.linewise_n_option_regex	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_n_option_regex() abort  "{{{$/;"	f
suite.linewise_n_option_regex	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_n_option_regex() abort  "{{{$/;"	f
suite.linewise_n_option_skip_char	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_n_option_skip_char() abort "{{{$/;"	f
suite.linewise_n_option_skip_char	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_n_option_skip_char() abort "{{{$/;"	f
suite.linewise_n_option_skip_space	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_n_option_skip_space() abort  "{{{$/;"	f
suite.linewise_n_option_skip_space	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_n_option_skip_space() abort  "{{{$/;"	f
suite.linewise_n_option_skip_space	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_n_option_skip_space() abort  "{{{$/;"	f
suite.linewise_n_positioning	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_n_positioning() abort "{{{$/;"	f
suite.linewise_n_positioning	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_n_positioning() abort "{{{$/;"	f
suite.linewise_n_positioning	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_n_positioning() abort "{{{$/;"	f
suite.linewise_x_a_character	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_x_a_character() abort "{{{$/;"	f
suite.linewise_x_a_character	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_x_a_character() abort "{{{$/;"	f
suite.linewise_x_breaking	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_x_breaking() abort "{{{$/;"	f
suite.linewise_x_breaking	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_x_breaking() abort "{{{$/;"	f
suite.linewise_x_breaking	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_x_breaking() abort "{{{$/;"	f
suite.linewise_x_count	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_x_count() abort "{{{$/;"	f
suite.linewise_x_count	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_x_count() abort "{{{$/;"	f
suite.linewise_x_count	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_x_count() abort "{{{$/;"	f
suite.linewise_x_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_x_default_recipes() abort "{{{$/;"	f
suite.linewise_x_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_x_default_recipes() abort "{{{$/;"	f
suite.linewise_x_default_recipes	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_x_default_recipes() abort "{{{$/;"	f
suite.linewise_x_external_textobj	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_x_external_textobj() abort "{{{$/;"	f
suite.linewise_x_external_textobj	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_x_external_textobj() abort "{{{$/;"	f
suite.linewise_x_multibyte	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_x_multibyte() abort  "{{{$/;"	f
suite.linewise_x_multibyte	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_x_multibyte() abort  "{{{$/;"	f
suite.linewise_x_multibyte	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_x_multibyte() abort  "{{{$/;"	f
suite.linewise_x_not_registered	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_x_not_registered() abort "{{{$/;"	f
suite.linewise_x_not_registered	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_x_not_registered() abort "{{{$/;"	f
suite.linewise_x_not_registered	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_x_not_registered() abort "{{{$/;"	f
suite.linewise_x_nothing_inside	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_x_nothing_inside() abort "{{{$/;"	f
suite.linewise_x_nothing_inside	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_x_nothing_inside() abort "{{{$/;"	f
suite.linewise_x_option_autoindent	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_x_option_autoindent() abort  "{{{$/;"	f
suite.linewise_x_option_autoindent	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_x_option_autoindent() abort  "{{{$/;"	f
suite.linewise_x_option_command	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_x_option_command() abort  "{{{$/;"	f
suite.linewise_x_option_command	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_x_option_command() abort  "{{{$/;"	f
suite.linewise_x_option_command	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_x_option_command() abort  "{{{$/;"	f
suite.linewise_x_option_cursor	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_x_option_cursor() abort  "{{{$/;"	f
suite.linewise_x_option_cursor	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_x_option_cursor() abort  "{{{$/;"	f
suite.linewise_x_option_cursor	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_x_option_cursor() abort  "{{{$/;"	f
suite.linewise_x_option_expr	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_x_option_expr() abort  "{{{$/;"	f
suite.linewise_x_option_expr	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_x_option_expr() abort "{{{$/;"	f
suite.linewise_x_option_indentkeys	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_x_option_indentkeys() abort  "{{{$/;"	f
suite.linewise_x_option_indentkeys	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_x_option_indentkeys() abort  "{{{$/;"	f
suite.linewise_x_option_linewise	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_x_option_linewise() abort "{{{$/;"	f
suite.linewise_x_option_linewise	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_x_option_linewise() abort  "{{{$/;"	f
suite.linewise_x_option_linewise	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_x_option_linewise() abort  "{{{$/;"	f
suite.linewise_x_option_listexpr	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_x_option_listexpr() abort "{{{$/;"	f
suite.linewise_x_option_listexpr	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_x_option_listexpr() abort "{{{$/;"	f
suite.linewise_x_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_x_option_noremap() abort "{{{$/;"	f
suite.linewise_x_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_x_option_noremap() abort  "{{{$/;"	f
suite.linewise_x_option_noremap	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_x_option_noremap() abort  "{{{$/;"	f
suite.linewise_x_option_query_once	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_x_option_query_once() abort  "{{{$/;"	f
suite.linewise_x_option_query_once	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_x_option_query_once() abort  "{{{$/;"	f
suite.linewise_x_option_regex	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_x_option_regex() abort  "{{{$/;"	f
suite.linewise_x_option_regex	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_x_option_regex() abort  "{{{$/;"	f
suite.linewise_x_option_skip_char	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_x_option_skip_char() abort "{{{$/;"	f
suite.linewise_x_option_skip_char	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_x_option_skip_char() abort "{{{$/;"	f
suite.linewise_x_option_skip_space	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_x_option_skip_space() abort  "{{{$/;"	f
suite.linewise_x_option_skip_space	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_x_option_skip_space() abort  "{{{$/;"	f
suite.linewise_x_option_skip_space	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_x_option_skip_space() abort  "{{{$/;"	f
suite.linewise_x_positioning	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.linewise_x_positioning() abort "{{{$/;"	f
suite.linewise_x_positioning	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.linewise_x_positioning() abort "{{{$/;"	f
suite.linewise_x_positioning	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.linewise_x_positioning() abort "{{{$/;"	f
suite.parse	pack/plugins/start/machakann-vim-sandwich/test/test-magicchar-t-emmet.vim	/^function! s:suite.parse() dict abort  "{{{$/;"	f
suite.tokenize	pack/plugins/start/machakann-vim-sandwich/test/test-magicchar-t-emmet.vim	/^function! s:suite.tokenize() dict abort "{{{$/;"	f
suite.undo	pack/plugins/start/machakann-vim-sandwich/test/operator-add.vim	/^function! s:suite.undo() abort  "{{{$/;"	f
suite.undo	pack/plugins/start/machakann-vim-sandwich/test/operator-delete.vim	/^function! s:suite.undo() abort  "{{{$/;"	f
suite.undo	pack/plugins/start/machakann-vim-sandwich/test/operator-replace.vim	/^function! s:suite.undo() abort  "{{{$/;"	f
summary	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let summary = [$/;"	v
surroundings	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^function! s:surroundings() abort$/;"	f
sw	pack/plugins/start/fatih-vim-go/indent/go.vim	/^  func s:sw()$/;"	f
switch_highlight	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/highlight.vim	/^function! s:switch_highlight(id) abort "{{{$/;"	f
sync_guru	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:sync_guru(args) abort$/;"	f
system	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! s:system(cmd, ...) abort$/;"	f
t	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^    nnoremap <silent> <buffer> t <C-w><CR><C-w>T$/;"	m
tag.clear	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! s:tag.clear() "{{{$/;"	f
tag.init	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! s:tag.init() "{{{$/;"	f
tag.init_highlight	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! s:tag.init_highlight() "{{{$/;"	f
tag.refresh	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! s:tag.refresh() "{{{$/;"	f
tag.set	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! s:tag.set() "{{{$/;"	f
template_autocreate	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:template_autocreate()$/;"	f
test_job	pack/plugins/start/fatih-vim-go/autoload/go/test.vim	/^function s:test_job(args) abort$/;"	f
tests	pack/plugins/start/w0rp-ale/run-tests.bat	/^if not "%1"=="" set tests=%1$/;"	v
tests	pack/plugins/start/w0rp-ale/run-tests.bat	/^set tests=test\/*.vader test\/*\/*.vader test\/*\/*\/*.vader test\/*\/*\/*\/*.vader$/;"	v
testseeds.generate_parsed	pack/plugins/start/machakann-vim-sandwich/test/test-magicchar-t-emmet.vim	/^function! s:testseeds.generate_parsed(itemlist) dict abort  "{{{$/;"	f
textobj	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! s:textobj(a_or_i) abort "{{{$/;"	f
textobj#sandwich#auto	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich.vim	/^function! textobj#sandwich#auto(mode, a_or_i, ...) abort  "{{{$/;"	f
textobj#sandwich#get_recipes	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich.vim	/^function! textobj#sandwich#get_recipes() abort  "{{{$/;"	f
textobj#sandwich#lib#get	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/lib.vim	/^function! textobj#sandwich#lib#get() abort "{{{$/;"	f
textobj#sandwich#query	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich.vim	/^function! textobj#sandwich#query(mode, a_or_i, ...) abort  "{{{$/;"	f
textobj#sandwich#recipes#new	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/recipes.vim	/^function! textobj#sandwich#recipes#new(kind, mode, ...) abort "{{{$/;"	f
textobj#sandwich#sandwich#new	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^function! textobj#sandwich#sandwich#new(recipe, opt) abort  "{{{$/;"	f
textobj#sandwich#select	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich.vim	/^function! textobj#sandwich#select() abort  "{{{$/;"	f
textobj#sandwich#set	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich.vim	/^function! textobj#sandwich#set(kind, option, value) abort "{{{$/;"	f
textobj#sandwich#set_default	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich.vim	/^function! textobj#sandwich#set_default() abort  "{{{$/;"	f
textobj#sandwich#setlocal	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich.vim	/^function! textobj#sandwich#setlocal(kind, option, value) abort "{{{$/;"	f
textobj#sandwich#textobj#new	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^function! textobj#sandwich#textobj#new(kind, a_or_i, mode, count, recipes, opt) abort  "{{{$/;"	f
textobj-sandwich	pack/plugins/start/machakann-vim-sandwich/README.md	/^### textobj-sandwich$/;"	k
textobj._get_region	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^function! s:textobj._get_region(sandwich, stimeoutlen) dict abort "{{{$/;"	f
textobj._search_with_nest	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^function! s:textobj._search_with_nest(sandwich, stimeoutlen) dict abort  "{{{$/;"	f
textobj._search_without_nest	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^function! s:textobj._search_without_nest(sandwich, stimeoutlen) dict abort  "{{{$/;"	f
textobj.elect	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^function! s:textobj.elect(candidates) dict abort "{{{$/;"	f
textobj.finalize	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^function! s:textobj.finalize(mark_latestjump) dict abort "{{{$/;"	f
textobj.initialize	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^function! s:textobj.initialize() dict abort  "{{{$/;"	f
textobj.is_valid_candidate	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^function! s:textobj.is_valid_candidate(sandwich) dict abort "{{{$/;"	f
textobj.list	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^function! s:textobj.list(stimeoutlen) dict abort  "{{{$/;"	f
textobj.search	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^function! s:textobj.search(sandwich, stimeoutlen) dict abort "{{{$/;"	f
textobj.select	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^function! s:textobj.select(sandwich) dict abort  "{{{$/;"	f
textobject	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^function! s:textobject(inner) abort$/;"	f
throw	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:throw(msg)$/;"	f
throw	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:throw(string) abort$/;"	f
titlecase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:titlecase(word)$/;"	f
tmux-complete.vim	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^# tmux-complete.vim$/;"	h
tmuxcomplete#complete	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#complete(findstart, base)$/;"	f
tmuxcomplete#completions	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#completions(base, capture_args, splitmode)$/;"	f
tmuxcomplete#findstartWORD	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#findstartWORD(line, max)$/;"	f
tmuxcomplete#findstartword	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#findstartword(line, max)$/;"	f
tmuxcomplete#gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#gather_candidates()$/;"	f
tmuxcomplete#getcommand	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#getcommand(base, splitmode)$/;"	f
tmuxcomplete#getcommandlist	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#getcommandlist(base, scrollback, splitmode)$/;"	f
tmuxcomplete#grepargs	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#grepargs(base)$/;"	f
tmuxcomplete#init	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#init()$/;"	f
tmuxcomplete#list	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#list(splitmode, scrollback)$/;"	f
toBool	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:toBool(val) abort$/;"	f
toggle	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:toggle(op) abort$/;"	f
toggleIgnoreFilter	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleShowBookmarks	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowFiles	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowHidden	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowHidden()$/;"	f
toggleZoom	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleZoom()$/;"	f
tokenize	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! s:tokenize(text) abort  "{{{$/;"	f
tokenize_custom_attributes	pack/plugins/start/machakann-vim-sandwich/autoload/sandwich/magicchar/t.vim	/^function! s:tokenize_custom_attributes(text, j) abort "{{{$/;"	f
traces.vim	pack/plugins/start/xtal8-traces-vim/README.md	/^# traces.vim$/;"	h
traces_augroup	pack/plugins/start/xtal8-traces-vim/plugin/traces.vim	/^augroup traces_augroup$/;"	a
trim	pack/plugins/start/xtal8-traces-vim/plugin/traces.vim	/^function! s:trim(...) abort$/;"	f
trim_bracket	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:trim_bracket(val) abort$/;"	f
u	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^    nmap u <Plug>(RepeatUndo)$/;"	m
uniq	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^  function! s:uniq(list)$/;"	f
uniq	pack/plugins/start/machakann-vim-sandwich/test/test-magicchar-t-emmet.vim	/^function! s:uniq(list) abort  "{{{$/;"	f
uniq_candidates	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^function! s:uniq_candidates(candidates, a_or_i) abort "{{{$/;"	f
uniq_recipes	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:uniq_recipes(recipes, opt_regex, opt_noremap) abort "{{{$/;"	f
unite#sources#decls#define	pack/plugins/start/fatih-vim-go/autoload/unite/sources/decls.vim	/^function! unite#sources#decls#define()$/;"	f
unite#sources#tmuxcomplete#define	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^function! unite#sources#tmuxcomplete#define()$/;"	f
unknown_coercion	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:unknown_coercion(letter,word)$/;"	f
unplanned	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## unplanned$/;"	i
upDirCurrentRootClosed	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootClosed()$/;"	f
upDirCurrentRootOpen	pack/plugins/start/scrooloose-nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootOpen()$/;"	f
updatePlugin	get-plugins.go	/^func updatePlugin(wg *sync.WaitGroup, org, plugin string) {$/;"	f
update_is_in_cmdline_window	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich.vim	/^  function! s:update_is_in_cmdline_window() abort$/;"	f
update_tags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! s:update_tags(bufno, module, write_mode, queue_mode) abort$/;"	f
uppercase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:uppercase(word)$/;"	f
url_decode	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:url_decode(str)$/;"	f
url_encode	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:url_encode(str)$/;"	f
usage	pack/plugins/start/fatih-vim-go/scripts/test	/^usage() {$/;"	f
use_raw_list	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%FILE_LIST_CMD_IS_ABSOLUTE%"]==["1"] set use_raw_list=1$/;"	v
use_raw_list	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%PROJECT_ROOT%"]==["."] set use_raw_list=1$/;"	v
use_raw_list	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        set use_raw_list=0$/;"	v
v	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^        nnoremap <silent> <expr> <buffer> v &splitright ? "\\<C-w>\\<CR>\\<C-w>L" : "\\<C-w>\\<CR>\\<C-w>H"$/;"	m
v	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^        nnoremap <silent> <expr> <buffer> v &splitright ? "\\<C-w>\\<CR>\\<C-w>L\\<C-w>p\\<C-w>J\\<C-w>p" : "\\<C-w>\\<CR>\\<C-w>H\\<C-w>p\\<C-w>J\\<C-w>p"$/;"	m
valid_buns	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/sandwich.vim	/^function! s:valid_buns(buns) abort  "{{{$/;"	f
vim	pack/plugins/start/fatih-vim-go/ftdetect/gofiletype.vim	/^augroup vim-go-filetype$/;"	a
vim	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^augroup vim-go$/;"	a
vim	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^augroup vim-go-hi$/;"	a
vim-go [![Build Status](http://img.shields.io/travis/fatih/vim-go.svg?style=flat-square)](https://travis-ci.org/fatih/vim-go)	pack/plugins/start/fatih-vim-go/README.md	/^# vim-go [![Build Status](http:\/\/img.shields.io\/travis\/fatih\/vim-go.svg?style=flat-square)](https:\/\/travis-ci.org\/fatih\/vim-go)$/;"	h
vim-qf	pack/plugins/start/romainl-vim-qf/README.md	/^# vim-qf$/;"	h
vim-qlist	pack/plugins/start/romainl-vim-qlist/README.md	/^# vim-qlist$/;"	h
vimColorRow	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^type vimColorRow struct {$/;"	t
visual_mode_affair	pack/plugins/start/machakann-vim-sandwich/autoload/textobj/sandwich/textobj.vim	/^function! s:visual_mode_affair(head, tail, a_or_i, cursor, visual) abort "{{{$/;"	f
visualrepeat_set	pack/plugins/start/machakann-vim-sandwich/autoload/operator/sandwich/operator.vim	/^function! s:visualrepeat_set(kind, count) abort  "{{{$/;"	f
warn	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:warn(str) abort$/;"	f
winshell	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:winshell() abort$/;"	f
withName	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^func withName(name string, vcr vimColorRow) vimColorRow {$/;"	f
words	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:words()$/;"	f
words.gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^function! s:words.gather_candidates(args, context)$/;"	f
write_out	pack/plugins/start/fatih-vim-go/autoload/go/tags.vim	/^func s:write_out(out) abort$/;"	f
write_triggered_update_tags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! s:write_triggered_update_tags(bufno) abort$/;"	f
xml_decode	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:xml_decode(str)$/;"	f
xml_encode	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:xml_encode(str)$/;"	f
xml_entity_decode	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:xml_entity_decode(str)$/;"	f
yS	pack/plugins/start/machakann-vim-sandwich/macros/sandwich/keymap/surround.vim	/^nmap yS ys<SID>gul$/;"	m
ys	pack/plugins/start/machakann-vim-sandwich/macros/sandwich/keymap/surround.vim	/^nmap ys <Plug>(operator-sandwich-add)$/;"	m
yss	pack/plugins/start/machakann-vim-sandwich/macros/sandwich/keymap/surround.vim	/^nmap <silent> yss <Plug>(operator-sandwich-add)<SID>line$/;"	m
zP	vimrc	/^	nnoremap <silent> zP :<c-u>call ZeroPaste('P')<cr>$/;"	m
zp	vimrc	/^	nnoremap <silent> zp :<c-u>call ZeroPaste('p')<cr>$/;"	m
{	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^nnoremap <silent> <buffer> { :call qf#filegroup#PreviousFile()<CR>$/;"	m
}	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^nnoremap <silent> <buffer> } :call qf#filegroup#NextFile()<CR>$/;"	m
“True Color” terminal emulators	pack/colors/start/romainl-apprentice/README.md	/^### “True Color” terminal emulators$/;"	k

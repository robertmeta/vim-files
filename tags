![Apprentice](http://romainl.github.io/Apprentice/images/logo.png)	pack/colors/start/romainl-apprentice/README.md	/^# ![Apprentice](http:\/\/romainl.github.io\/Apprentice\/images\/logo.png)$/;"	h
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
#	pack/plugins/start/sheerun-vim-polyglot/indent/ps1.vim	/^inoremap # X#$/;"	m
$GOPATH	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let $GOPATH = go#path#Detect()$/;"	v
$GOPATH	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let $GOPATH = old_gopath$/;"	v
$GOPATH	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let $GOPATH = go#path#Detect()$/;"	v
$GOPATH	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let $GOPATH = old_gopath$/;"	v
$GOPATH	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let $GOPATH = go#path#Detect()$/;"	v
$GOPATH	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let $GOPATH = old_gopath$/;"	v
$PYTHONWARNINGS	pack/plugins/start/sheerun-vim-polyglot/compiler/python.vim	/^  let $PYTHONWARNINGS="ignore"$/;"	v
%	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^	nmap <buffer> % <Plug>LatexBox_JumpToMatch$/;"	m
%	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^	omap <buffer> % <Plug>LatexBox_JumpToMatch$/;"	m
%	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^	vmap <buffer> % <Plug>LatexBox_JumpToMatch$/;"	m
%%	vimrc	/^cnoremap %% <c-r>=fnameescape(expand('%'))<cr>$/;"	m
(-[udlr]: up/down/left/right)	pack/plugins/start/junegunn-fzf/README.md	/^#        (-[udlr]: up\/down\/left\/right)$/;"	h
*Backward incompatible changes*	pack/plugins/start/junegunn-fzf/CHANGELOG.md	/^### *Backward incompatible changes*$/;"	k
,	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^    nmap , <Plug>Sneak_,$/;"	m
,	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^    omap , <Plug>Sneak_,$/;"	m
-	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^  nmap - <Plug>VinegarUp$/;"	m
- Note that ag only lists files not directories	pack/plugins/start/junegunn-fzf/README.md	/^# - Note that ag only lists files not directories$/;"	h
- See the source code (completion.{bash,zsh}) for the details.	pack/plugins/start/junegunn-fzf/README.md	/^# - See the source code (completion.{bash,zsh}) for the details.$/;"	h
- The first argument to the function is the base path to start traversal	pack/plugins/start/junegunn-fzf/README.md	/^# - The first argument to the function is the base path to start traversal$/;"	h
- You can select multiple items with TAB key	pack/plugins/start/junegunn-fzf/README.md	/^# - You can select multiple items with TAB key$/;"	h
.	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^    nmap . <Plug>(RepeatDot)$/;"	m
1.0 Release Candidate	pack/colors/start/nlknguyen-papercolor-theme/ROADMAP.md	/^# 1.0 Release Candidate$/;"	h
1.10 (November 24, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.10 (November 24, 2016)$/;"	i
1.11 - Unplanned	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.11 - Unplanned$/;"	i
1.6 (April 25, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.6 (April 25, 2016)$/;"	i
1.7 (June 7, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.7 (June 7, 2016)$/;"	i
1.7.1 (June 7, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.7.1 (June 7, 2016)$/;"	i
1.8 (July 31, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.8 (July 31, 2016)$/;"	i
1.9 (September 13, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.9 (September 13, 2016)$/;"	i
256color-ready Terminal emulators	pack/colors/start/romainl-apprentice/README.md	/^### 256color-ready Terminal emulators$/;"	k
::	vimrc	/^cnoremap :: <c-r>=fnameescape(expand('%:p:h'))<cr>\/$/;"	m
;	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^  nmap ; <Plug>Sneak_;$/;"	m
;	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^  omap ; <Plug>Sneak_;$/;"	m
;f	vimrc	/^inoremap <silent> ;f <C-x><C-f>$/;"	m
;i	vimrc	/^inoremap <silent> ;i <C-x><C-i>$/;"	m
;l	vimrc	/^inoremap <silent> ;l <C-x><C-l>$/;"	m
;n	vimrc	/^inoremap <silent> ;n <C-x><C-n>$/;"	m
;o	vimrc	/^inoremap <silent> ;o <C-x><C-o>$/;"	m
;p	vimrc	/^inoremap <silent> ;p <C-x><C-p>$/;"	m
;t	vimrc	/^inoremap <silent> ;t <C-x><C-]>$/;"	m
;u	vimrc	/^inoremap <silent> ;u <C-x><C-u>$/;"	m
<2-leftmouse>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <2-leftmouse> :call <SID>TOCActivate(1)<cr>$/;"	m
<BS>	pack/plugins/start/sheerun-vim-polyglot/indent/elm.vim	/^    inoremap <silent> <BS> <C-R>=<SID>HaskellDedent(1)<CR>$/;"	m
<C-D>	pack/plugins/start/sheerun-vim-polyglot/indent/elm.vim	/^    inoremap <silent> <C-D> <C-R>=<SID>HaskellDedent(0)<CR>$/;"	m
<C-G>S	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^    imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>s	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^    imap      <C-G>s <Plug>Isurround$/;"	m
<C-R>	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^    nmap <C-R> <Plug>(RepeatRedo)$/;"	m
<C-S>	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^      imap    <C-S> <Plug>Isurround$/;"	m
<C-W><C-D>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> <C-W><C-D>  :<C-U>exe <SID>jump('split',v:count)<SID>foldopen<CR>$/;"	m
<C-W>d	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> <C-W>d      :<C-U>exe <SID>jump('split',v:count)<SID>foldopen<CR>$/;"	m
<C-]>	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-]> :GoDef<cr>$/;"	m
<C-r><C-l>	vimrc	/^cnoremap <C-r><C-l> <C-r>=getline('.')<cr>$/;"	m
<C-t>	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-t> :<C-U>call go#def#StackPop(v:count1)<cr>$/;"	m
<C-w><C-]>	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-w><C-]> :<C-u>call go#def#Jump("split")<CR>$/;"	m
<C-w>]	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-w>] :<C-u>call go#def#Jump("split")<CR>$/;"	m
<CR>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <CR> :call <SID>TOCActivate(1)<CR>$/;"	m
<D-R>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^nnoremap <buffer> <D-R> :RustRun! <C-r>=join(b:rust_last_rustc_args)<CR><C-\\>erust#AppendCmdLine(' -- ' . join(b:rust_last_args))<CR>$/;"	m
<D-r>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^nnoremap <silent> <buffer> <D-r> :RustRun<CR>$/;"	m
<Esc>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <Esc> :call <SID>TOCClose()<CR>$/;"	m
<Esc>OA	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <Esc>OA k$/;"	m
<Esc>OB	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <Esc>OB j$/;"	m
<Esc>OC	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <Esc>OC l$/;"	m
<Esc>OD	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <Esc>OD h$/;"	m
<F2>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/r.vim	/^noremap <buffer> <F2> :!xterm -T 'R' -e funnel.pl ~\/.r-pipe "R && echo -e 'Interpreter has finished. Exiting. Goodbye.\\n'"&<CR><CR>$/;"	m
<F2>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rhelp.vim	/^noremap <buffer> <F2> :!xterm -T 'R' -e funnel.pl ~\/.r-pipe "R && echo -e 'Interpreter has finished. Exiting. Goodbye.\\n'"&<CR><CR>$/;"	m
<F2>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rnoweb.vim	/^noremap <buffer> <F2> :!xterm -T 'R' -e funnel.pl ~\/.r-pipe "R && echo -e 'Interpreter has finished. Exiting. Goodbye.\\n'"&<CR><CR>$/;"	m
<F3>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/r.vim	/^noremap <buffer> <F3> :!xterm -T 'R' -e funnel.pl ~\/.r-pipe "R-devel && echo 'Interpreter has finished. Exiting. Goodbye.'"&<CR><CR>$/;"	m
<F4>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/r.vim	/^noremap <buffer> <F4> :!xterm -T 'R' -e funnel.pl ~\/.r-pipe "R -vanilla && echo 'Interpreter has finished. Exiting. Goodbye.'"&<CR><CR>$/;"	m
<F5>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/r.vim	/^noremap <buffer> <F5> :execute '1 ,' line("$") 'w >> ~\/.r-pipe' <CR><CR>$/;"	m
<F5>	vimrc	/^inoremap <F5> <C-R>=strftime("%c")<CR>$/;"	m
<F5>	vimrc	/^nnoremap <F5> "=strftime("%c")<CR>P$/;"	m
<F9>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/r.vim	/^inoremap <buffer> <F9> <Esc> :execute line(".") 'w >> ~\/.r-pipe'<CR>$/;"	m
<F9>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/r.vim	/^noremap <buffer> <F9> :execute line(".") 'w >> ~\/.r-pipe'<CR>$/;"	m
<F9>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rhelp.vim	/^inoremap <buffer> <F9> <Esc> :execute line(".") 'w >> ~\/.r-pipe'<CR>$/;"	m
<F9>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rhelp.vim	/^noremap <buffer> <F9> :execute line(".") 'w >> ~\/.r-pipe'<CR>$/;"	m
<F9>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rnoweb.vim	/^inoremap <buffer> <F9> <Esc> :execute line(".") 'w >> ~\/.r-pipe'<CR>$/;"	m
<F9>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rnoweb.vim	/^noremap <buffer> <F9> :execute line(".") 'w >> ~\/.r-pipe'<CR>$/;"	m
<Leader>*	pack/plugins/start/vim-scripts-multiplesearch/plugin/MultipleSearch.vim	/^    vnoremap <silent> <Leader>* y:call MultipleSearch#MultipleSearch(0,'\\V'.substitute(escape(@@,"\\\\\/\\"'"),"\\n",'\\\\n','ge'))<CR>$/;"	m
<Leader>*	pack/plugins/start/vim-scripts-multiplesearch/plugin/MultipleSearch.vim	/^    vnoremap <silent> <Leader>* y:call MultipleSearch(0,'\\V'.substitute(escape(@@,"\\\\\/\\"'"),"\\n",'\\\\n','ge'))<CR>$/;"	m
<Leader>*	pack/plugins/start/vim-scripts-multiplesearch/plugin/MultipleSearch.vim	/^nnoremap <silent> <Leader>* :execute ':Search \\<' . expand('<cword>') . '\\>'<cr>$/;"	m
<Leader>N	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^nnoremap <silent> <Leader>N :call <SID>SearchNext(1)<CR>$/;"	m
<Leader>fr	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>fr :FufFile <c-r>=scala#GetRootDirForFuzzyFinder('%:p:h')<cr><cr>$/;"	m
<Leader>fs	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>fs :FufFile <c-r>=scala#GetMainDirForFuzzyFinder('%:p:h')<cr><cr>$/;"	m
<Leader>ft	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>ft :FufFile <c-r>=scala#GetTestDirForFuzzyFinder('%:p:h')<cr><cr>$/;"	m
<Leader>n	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^nnoremap <silent> <Leader>n :call <SID>SearchNext(0)<CR>$/;"	m
<Leader>rf	pack/plugins/start/sheerun-vim-polyglot/ftplugin/textile.vim	/^noremap <buffer> <Leader>rf :TextileRenderFile<CR>$/;"	m
<Leader>rp	pack/plugins/start/sheerun-vim-polyglot/ftplugin/textile.vim	/^noremap <buffer> <Leader>rp :TextilePreview<CR>$/;"	m
<Leader>rt	pack/plugins/start/sheerun-vim-polyglot/ftplugin/textile.vim	/^noremap <buffer> <Leader>rt :TextileRenderTab<CR>$/;"	m
<LocalLeader>C	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^    nmap <buffer> <LocalLeader>C <Plug>LUncomOff$/;"	m
<LocalLeader>C	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^    vmap <buffer> <LocalLeader>C <Plug>BUncomOff$/;"	m
<LocalLeader>S	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  map <LocalLeader>S :call OCaml_switch(1)<CR>$/;"	m
<LocalLeader>c	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^    nmap <buffer> <LocalLeader>c <Plug>LUncomOn$/;"	m
<LocalLeader>c	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^    vmap <buffer> <LocalLeader>c <Plug>BUncomOn$/;"	m
<LocalLeader>d	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^map <LocalLeader>d :call OCamlGotoDefinition("normal")<RETURN>$/;"	m
<LocalLeader>d	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^vmap <LocalLeader>d :call OCamlGotoDefinition("visual")<RETURN>$/;"	m
<LocalLeader>lC	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>lC :LatexmkClean!<CR>$/;"	m
<LocalLeader>lG	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>lG :LatexmkStatus!<CR>$/;"	m
<LocalLeader>lL	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>lL :Latexmk!<CR>$/;"	m
<LocalLeader>lc	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>lc :LatexmkClean<CR>$/;"	m
<LocalLeader>le	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>le :LatexErrors<CR>$/;"	m
<LocalLeader>lf	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^	noremap <buffer> <LocalLeader>lf :LatexFold<CR>$/;"	m
<LocalLeader>lg	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>lg :LatexmkStatus<CR>$/;"	m
<LocalLeader>lj	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <silent> <buffer> <LocalLeader>lj :LatexLabels<CR>$/;"	m
<LocalLeader>lk	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>lk :LatexmkStop<CR>$/;"	m
<LocalLeader>ll	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>ll :Latexmk<CR>$/;"	m
<LocalLeader>lt	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <silent> <buffer> <LocalLeader>lt :LatexTOC<CR>$/;"	m
<LocalLeader>lv	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>lv :LatexView<CR>$/;"	m
<LocalLeader>s	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  map <LocalLeader>s :call OCaml_switch(0)<CR>$/;"	m
<LocalLeader>t	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^map <LocalLeader>t :call OCamlPrintType("normal")<RETURN>$/;"	m
<LocalLeader>t	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^vmap <LocalLeader>t :call OCamlPrintType("visual")<RETURN>$/;"	m
<M-Enter>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/r.vim	/^inoremap <M-Enter> <Esc>:execute line(".") 'w >> ~\/.r-pipe'<CR>o$/;"	m
<M-Enter>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rhelp.vim	/^inoremap <M-Enter> <Esc>:execute line(".") 'w >> ~\/.r-pipe'<CR>o$/;"	m
<M-Enter>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rnoweb.vim	/^inoremap <M-Enter> <Esc>:execute line(".") 'w >> ~\/.r-pipe'<CR>o$/;"	m
<Plug>(-fzf-complete-trigger)	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^inoremap <silent> <Plug>(-fzf-complete-trigger) <c-o>:call <sid>complete_trigger()<cr>$/;"	m
<Plug>(RepeatDot)	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatDot)      :<C-U>exe repeat#run(v:count)<CR>$/;"	m
<Plug>(RepeatRedo)	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatRedo)     :<C-U>call repeat#wrap("\\<Lt>C-R>",v:count)<CR>$/;"	m
<Plug>(RepeatUndo)	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatUndo)     :<C-U>call repeat#wrap('u',v:count)<CR>$/;"	m
<Plug>(RepeatUndoLine)	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatUndoLine) :<C-U>call repeat#wrap('U',v:count)<CR>$/;"	m
<Plug>(SneakStreak)	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nmap <Plug>(SneakStreak)         <Plug>SneakLabel_s$/;"	m
<Plug>(SneakStreak)	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^omap <Plug>(SneakStreak)         <Plug>SneakLabel_s$/;"	m
<Plug>(SneakStreakBackward)	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nmap <Plug>(SneakStreakBackward) <Plug>SneakLabel_S$/;"	m
<Plug>(SneakStreakBackward)	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^omap <Plug>(SneakStreakBackward) <Plug>SneakLabel_S$/;"	m
<Plug>(crystal-format)	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^nnoremap <Plug>(crystal-format) :<C-u>CrystalFormat<CR>$/;"	m
<Plug>(crystal-jump-to-definition)	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^nnoremap <Plug>(crystal-jump-to-definition) :<C-u>CrystalDef<CR>$/;"	m
<Plug>(crystal-show-context)	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^nnoremap <Plug>(crystal-show-context) :<C-u>CrystalContext<CR>$/;"	m
<Plug>(crystal-spec-run-all)	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^nnoremap <Plug>(crystal-spec-run-all) :<C-u>CrystalSpecRunAll<CR>$/;"	m
<Plug>(crystal-spec-run-current)	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^nnoremap <Plug>(crystal-spec-run-current) :<C-u>CrystalSpecRunCurrent<CR>$/;"	m
<Plug>(crystal-spec-switch)	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^nnoremap <Plug>(crystal-spec-switch) :<C-u>CrystalSpecSwitch<CR>$/;"	m
<Plug>(go-alternate-edit)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-alternate-edit) :<C-u>call go#alternate#Switch(0, "edit")<CR>$/;"	m
<Plug>(go-alternate-split)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-alternate-split) :<C-u>call go#alternate#Switch(0, "split")<CR>$/;"	m
<Plug>(go-alternate-vertical)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-alternate-vertical) :<C-u>call go#alternate#Switch(0, "vsplit")<CR>$/;"	m
<Plug>(go-build)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-build) :<C-u>call go#cmd#Build(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-callees)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-callees) :<C-u>call go#guru#Callees(-1)<CR>$/;"	m
<Plug>(go-callers)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-callers) :<C-u>call go#guru#Callers(-1)<CR>$/;"	m
<Plug>(go-callstack)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-callstack) :<C-u>call go#guru#Callstack(-1)<CR>$/;"	m
<Plug>(go-channelpeers)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-channelpeers) :<C-u>call go#guru#ChannelPeers(-1)<CR>$/;"	m
<Plug>(go-coverage)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage) :<C-u>call go#coverage#Buffer(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-coverage-browser)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage-browser) :<C-u>call go#coverage#Browser(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-coverage-clear)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage-clear) :<C-u>call go#coverage#Clear()<CR>$/;"	m
<Plug>(go-coverage-toggle)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage-toggle) :<C-u>call go#coverage#BufferToggle(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-def)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def) :<C-u>call go#def#Jump('')<CR>$/;"	m
<Plug>(go-def-pop)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-pop) :<C-u>call go#def#StackPop()<CR>$/;"	m
<Plug>(go-def-split)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-split) :<C-u>call go#def#Jump("split")<CR>$/;"	m
<Plug>(go-def-stack)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-stack) :<C-u>call go#def#Stack()<CR>$/;"	m
<Plug>(go-def-stack-clear)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-stack-clear) :<C-u>call go#def#StackClear()<CR>$/;"	m
<Plug>(go-def-tab)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-tab) :<C-u>call go#def#Jump("tab")<CR>$/;"	m
<Plug>(go-def-vertical)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-vertical) :<C-u>call go#def#Jump("vsplit")<CR>$/;"	m
<Plug>(go-deps)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-deps) :<C-u>call go#tool#Deps()<CR>$/;"	m
<Plug>(go-describe)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-describe) :<C-u>call go#guru#Describe(-1)<CR>$/;"	m
<Plug>(go-doc)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc) :<C-u>call go#doc#Open("new", "split")<CR>$/;"	m
<Plug>(go-doc-browser)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-browser) :<C-u>call go#doc#OpenBrowser()<CR>$/;"	m
<Plug>(go-doc-split)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-split) :<C-u>call go#doc#Open("new", "split")<CR>$/;"	m
<Plug>(go-doc-tab)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-tab) :<C-u>call go#doc#Open("tabnew", "tabe")<CR>$/;"	m
<Plug>(go-doc-vertical)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-vertical) :<C-u>call go#doc#Open("vnew", "vsplit")<CR>$/;"	m
<Plug>(go-files)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-files) :<C-u>call go#tool#Files()<CR>$/;"	m
<Plug>(go-generate)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-generate) :<C-u>call go#cmd#Generate(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-implements)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-implements) :<C-u>call go#guru#Implements(-1)<CR>$/;"	m
<Plug>(go-import)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-import) :<C-u>call go#import#SwitchImport(1, '', expand('<cword>'), '')<CR>$/;"	m
<Plug>(go-imports)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-imports) :<C-u>call go#fmt#Format(1)<CR>$/;"	m
<Plug>(go-info)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-info) :<C-u>call go#tool#Info(0)<CR>$/;"	m
<Plug>(go-install)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-install) :<C-u>call go#cmd#Install(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-lint)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-lint) :<C-u>call go#lint#Golint()<CR>$/;"	m
<Plug>(go-metalinter)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-metalinter) :<C-u>call go#lint#Gometa(0)<CR>$/;"	m
<Plug>(go-referrers)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-referrers) :<C-u>call go#guru#Referrers(-1)<CR>$/;"	m
<Plug>(go-rename)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-rename) :<C-u>call go#rename#Rename(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-run)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-run) :<C-u>call go#cmd#Run(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-run-split)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^  nnoremap <silent> <Plug>(go-run-split) :<C-u>call go#cmd#RunTerm(!g:go_jump_to_error, 'split', [])<CR>$/;"	m
<Plug>(go-run-tab)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^  nnoremap <silent> <Plug>(go-run-tab) :<C-u>call go#cmd#RunTerm(!g:go_jump_to_error, 'tabe', [])<CR>$/;"	m
<Plug>(go-run-vertical)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^  nnoremap <silent> <Plug>(go-run-vertical) :<C-u>call go#cmd#RunTerm(!g:go_jump_to_error, 'vsplit', [])<CR>$/;"	m
<Plug>(go-sameids)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-sameids) :<C-u>call go#guru#SameIds()<CR>$/;"	m
<Plug>(go-sameids-toggle)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-sameids-toggle) :<C-u>call go#guru#ToggleSameIds()<CR>$/;"	m
<Plug>(go-test)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test) :<C-u>call go#cmd#Test(!g:go_jump_to_error, 0)<CR>$/;"	m
<Plug>(go-test-compile)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test-compile) :<C-u>call go#cmd#Test(!g:go_jump_to_error, 1)<CR>$/;"	m
<Plug>(go-test-func)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test-func) :<C-u>call go#cmd#TestFunc(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-vet)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-vet) :<C-u>call go#lint#Vet(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-whicherrs)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-whicherrs) :<C-u>call go#guru#Whicherrs(-1)<CR>$/;"	m
<Plug><cfile>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^cmap <buffer><script><expr> <Plug><cfile> substitute(RubyCursorFile(),'^$',"\\022\\006",'')$/;"	m
<Plug><cword>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^cmap <buffer><script><expr> <Plug><cword> substitute(RubyCursorIdentifier(),'^$',"\\022\\027",'')$/;"	m
<Plug>BUncomOff	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  vnoremap <buffer> <Plug>BUncomOff <ESC>:'<,'><CR>`<dd`>dd`<$/;"	m
<Plug>BUncomOn	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  vnoremap <buffer> <Plug>BUncomOn <ESC>:'<,'><CR>`<O<ESC>0i(*<ESC>`>o<ESC>0i*)<ESC>`<$/;"	m
<Plug>CSurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>CSurround  :<C-U>call <SID>changesurround(1)<CR>$/;"	m
<Plug>ChangeCommentary	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>ChangeCommentary c:<C-U>call <SID>textobject(1)<CR>$/;"	m
<Plug>Coerce	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^nnoremap <silent> <Plug>Coerce :<C-U>call <SID>coerce(nr2char(getchar()))<CR>$/;"	m
<Plug>Commentary	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>Commentary     :<C-U>set opfunc=<SID>go<CR>g@$/;"	m
<Plug>Commentary	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^onoremap <silent> <Plug>Commentary        :<C-U>call <SID>textobject(0)<CR>$/;"	m
<Plug>CommentaryLine	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>CommentaryLine :<C-U>set opfunc=<SID>go<Bar>exe 'norm! 'v:count1.'g@_'<CR>$/;"	m
<Plug>CommentaryUndo	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^nmap <silent> <Plug>CommentaryUndo <Plug>Commentary<Plug>Commentary$/;"	m
<Plug>Csurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>Dsurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>ISurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>Isurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>LUncomOff	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOff :s\/^(\\* \\(.*\\) \\*)\/\\1\/<CR>:noh<CR>$/;"	m
<Plug>LUncomOn	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOn mz0i(* <ESC>$A *)<ESC>`z$/;"	m
<Plug>LatexBox_JumpToMatch	:call	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^nnoremap <silent> <Plug>LatexBox_JumpToMatch	:call <SID>FindMatchingPair('n')<CR>$/;"	m
<Plug>LatexBox_JumpToMatch	:call	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^vnoremap <silent> <Plug>LatexBox_JumpToMatch	:call <SID>FindMatchingPair('v')<CR>$/;"	m
<Plug>LatexBox_JumpToMatch	v:call	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^onoremap <silent> <Plug>LatexBox_JumpToMatch	v:call <SID>FindMatchingPair('o')<CR>$/;"	m
<Plug>LatexBox_SelectCurrentEnvInner	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^vnoremap <silent> <Plug>LatexBox_SelectCurrentEnvInner :<C-U>call <SID>SelectCurrentEnv('inner')<CR>$/;"	m
<Plug>LatexBox_SelectCurrentEnvOuter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^vnoremap <silent> <Plug>LatexBox_SelectCurrentEnvOuter :<C-U>call <SID>SelectCurrentEnv('outer')<CR>$/;"	m
<Plug>LatexBox_SelectInlineMathInner	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^vnoremap <silent> <Plug>LatexBox_SelectInlineMathInner$/;"	m
<Plug>LatexBox_SelectInlineMathOuter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^vnoremap <silent> <Plug>LatexBox_SelectInlineMathOuter$/;"	m
<Plug>LatexChangeEnv				:call	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^nnoremap <silent> <Plug>LatexChangeEnv				:call <SID>ChangeEnvPrompt()<CR>$/;"	m
<Plug>LatexCloseCurEnv			<C-R>=<SID>CloseCurEnv()<CR>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^inoremap <silent> <Plug>LatexCloseCurEnv			<C-R>=<SID>CloseCurEnv()<CR>$/;"	m
<Plug>LatexEnvWrapFmtSelection	:<c-u>call	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^vnoremap <silent> <Plug>LatexEnvWrapFmtSelection	:<c-u>call <SID>PromptEnvWrapSelection(1)<CR>$/;"	m
<Plug>LatexEnvWrapSelection		:<c-u>call	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^vnoremap <silent> <Plug>LatexEnvWrapSelection		:<c-u>call <SID>PromptEnvWrapSelection()<CR>$/;"	m
<Plug>LatexToggleStarEnv			:call	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^nnoremap <silent> <Plug>LatexToggleStarEnv			:call <SID>LatexToggleStarEnv()<CR>$/;"	m
<Plug>LatexWrapSelection			:<c-u>call	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^vnoremap <silent> <Plug>LatexWrapSelection			:<c-u>call <SID>WrapSelection('')<CR>i$/;"	m
<Plug>QfCnext	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>QfCnext     :call qf#WrapCommand('down', 'c')<CR>$/;"	m
<Plug>QfCprevious	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>QfCprevious :call qf#WrapCommand('up', 'c')<CR>$/;"	m
<Plug>QfCtoggle	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>QfCtoggle   :call qf#ToggleQfWindow()<CR>$/;"	m
<Plug>QfLnext	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>QfLnext     :call qf#WrapCommand('down', 'l')<CR>$/;"	m
<Plug>QfLprevious	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>QfLprevious :call qf#WrapCommand('up', 'l')<CR>$/;"	m
<Plug>QfLtoggle	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>QfLtoggle   :call qf#ToggleLocWindow()<CR>$/;"	m
<Plug>QfSwitch	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <expr> <silent> <Plug>QfSwitch &filetype == "qf" ? "<C-w>p" : "<C-w>b"$/;"	m
<Plug>QlistDefinefromhere	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^nnoremap <silent> <Plug>QlistDefinefromhere        :call <sid>Qlist("d", 0, 1, 0)<CR>$/;"	m
<Plug>QlistDefinefromtop	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^nnoremap <silent> <Plug>QlistDefinefromtop         :call <sid>Qlist("d", 0, 0, 0)<CR>$/;"	m
<Plug>QlistIncludefromhere	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^nnoremap <silent> <Plug>QlistIncludefromhere       :call <sid>Qlist("i", 0, 1, 0)<CR>$/;"	m
<Plug>QlistIncludefromtop	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^nnoremap <silent> <Plug>QlistIncludefromtop        :call <sid>Qlist("i", 0, 0, 0)<CR>$/;"	m
<Plug>SneakBackward	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nmap <Plug>SneakBackward  <Plug>Sneak_S$/;"	m
<Plug>SneakForward	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nmap <Plug>SneakForward   <Plug>Sneak_s$/;"	m
<Plug>SneakLabel_S	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>SneakLabel_S :<c-u>call sneak#wrap('', 2, 1, 2, 2)<cr>$/;"	m
<Plug>SneakLabel_S	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>SneakLabel_S :<c-u>call sneak#wrap(v:operator, 2, 1, 2, 2)<cr>$/;"	m
<Plug>SneakLabel_s	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>SneakLabel_s :<c-u>call sneak#wrap('', 2, 0, 2, 2)<cr>$/;"	m
<Plug>SneakLabel_s	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>SneakLabel_s :<c-u>call sneak#wrap(v:operator, 2, 0, 2, 2)<cr>$/;"	m
<Plug>SneakNext	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nmap <Plug>SneakNext     <Plug>Sneak_;$/;"	m
<Plug>SneakNext	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^omap <Plug>SneakNext     <Plug>Sneak_;$/;"	m
<Plug>SneakPrevious	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nmap <Plug>SneakPrevious <Plug>Sneak_,$/;"	m
<Plug>SneakPrevious	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^omap <Plug>SneakPrevious <Plug>Sneak_,$/;"	m
<Plug>SneakRepeat	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>SneakRepeat :<c-u>call sneak#wrap(v:operator, sneak#util#getc(), sneak#util#getc(), sneak#util#getc(), sneak#util#getc())<cr>$/;"	m
<Plug>Sneak_,	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_, :<c-u>call sneak#rpt('', 1)<cr>$/;"	m
<Plug>Sneak_,	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_, :<c-u>call sneak#rpt(v:operator, 1)<cr>$/;"	m
<Plug>Sneak_;	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_; :<c-u>call sneak#rpt('', 0)<cr>$/;"	m
<Plug>Sneak_;	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_; :<c-u>call sneak#rpt(v:operator, 0)<cr>$/;"	m
<Plug>Sneak_F	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_F :<c-u>call sneak#wrap('', 1, 1, 1, 0)<cr>$/;"	m
<Plug>Sneak_F	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_F :<c-u>call sneak#wrap(v:operator, 1, 1, 1, 0)<cr>$/;"	m
<Plug>Sneak_S	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_S :<c-u>call sneak#wrap('', 2, 1, 2, 1)<cr>$/;"	m
<Plug>Sneak_S	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_S :<c-u>call sneak#wrap(v:operator, 2, 1, 2, 1)<cr>$/;"	m
<Plug>Sneak_T	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_T :<c-u>call sneak#wrap('', 1, 1, 0, 0)<cr>$/;"	m
<Plug>Sneak_T	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_T :<c-u>call sneak#wrap(v:operator, 1, 1, 0, 0)<cr>$/;"	m
<Plug>Sneak_f	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_f :<c-u>call sneak#wrap('', 1, 0, 1, 0)<cr>$/;"	m
<Plug>Sneak_f	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_f :<c-u>call sneak#wrap(v:operator, 1, 0, 1, 0)<cr>$/;"	m
<Plug>Sneak_s	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_s :<c-u>call sneak#wrap('', 2, 0, 2, 1)<cr>$/;"	m
<Plug>Sneak_s	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_s :<c-u>call sneak#wrap(v:operator, 2, 0, 2, 1)<cr>$/;"	m
<Plug>Sneak_t	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_t :<c-u>call sneak#wrap('', 1, 0, 0, 0)<cr>$/;"	m
<Plug>Sneak_t	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_t :<c-u>call sneak#wrap(v:operator, 1, 0, 0, 0)<cr>$/;"	m
<Plug>SurroundRepeat	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>SurroundRepeat .$/;"	m
<Plug>VSurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>$/;"	m
<Plug>VgSurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>$/;"	m
<Plug>VinegarSplitUp	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^nnoremap <silent> <Plug>VinegarSplitUp :call <SID>opendir('split')<CR>$/;"	m
<Plug>VinegarTabUp	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^nnoremap <silent> <Plug>VinegarTabUp :call <SID>opendir('tabedit')<CR>$/;"	m
<Plug>VinegarUp	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^nnoremap <silent> <Plug>VinegarUp :call <SID>opendir('edit')<CR>$/;"	m
<Plug>VinegarVerticalSplitUp	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^nnoremap <silent> <Plug>VinegarVerticalSplitUp :call <SID>opendir('vsplit')<CR>$/;"	m
<Plug>YSsurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSsurround :<C-U>call <SID>opfunc2(v:count1)<CR>$/;"	m
<Plug>YSurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSurround  :<C-U>set opfunc=<SID>opfunc2<CR>g@$/;"	m
<Plug>Yssurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Yssurround :<C-U>call <SID>opfunc(v:count1)<CR>$/;"	m
<Plug>Ysurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Ysurround  :<C-U>set opfunc=<SID>opfunc<CR>g@$/;"	m
<SID>:	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  nmap <buffer><script> <SID>:  :<C-U>$/;"	m
<SID>:	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^nnoremap <SID>: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>c:	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  nmap <buffer><script> <SID>c: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>foldopen	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^  cnoremap <SID>foldopen <Bar>if &foldopen =~# 'tag'<Bar>exe 'norm! zv'<Bar>endif$/;"	m
<SID>tagzv	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  cmap <buffer><script><expr> <SID>tagzv &foldopen =~# 'tag' ? '<Bar>norm! zv' : ''$/;"	m
<Space>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <Space> :call <SID>TOCActivate(0)<CR>$/;"	m
<backspace>	vimrc	/^nnoremap <silent> <backspace> :noh<CR>:SearchReset<CR>$/;"	m
<c-h>	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    imap <c-h> <plug>(MUcompleteCycBwd)$/;"	m
<c-l>	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    imap <c-l> <plug>(MUcompleteCycFwd)$/;"	m
<down>	vimrc	/^nmap <silent> <down>  <esc>:cnext<cr>$/;"	m
<leader>"	vimrc	/^nnoremap <silent> <leader>" :split<cr>$/;"	m
<leader>%	vimrc	/^nnoremap <silent> <leader>% :vsplit<cr>$/;"	m
<leader>.	vimrc	/^vnoremap <leader>. :norm! .<cr>$/;"	m
<leader>@	vimrc	/^vnoremap <leader>@ :norm! @<cr>$/;"	m
<leader>A	vimrc	/^nnoremap <leader>A :argadd **\/*$/;"	m
<leader>B	vimrc	/^    nnoremap <leader>B :Buffers<cr>$/;"	m
<leader>B	vimrc	/^nnoremap <leader>B :ls<cr>:b<space>$/;"	m
<leader>C	vimrc	/^    nnoremap <leader>C :BCommits<cr>$/;"	m
<leader>F	vimrc	/^    nnoremap <leader>F :GFiles<cr>$/;"	m
<leader>F	vimrc	/^nnoremap <leader>F :find <c-r>=fnameescape(expand('%:p:h'))<cr>\/*<C-d>$/;"	m
<leader>G	vimrc	/^nnoremap <leader>G :vimgrep<space>$/;"	m
<leader>H	vimrc	/^    nnoremap <leader>H :History:<cr>$/;"	m
<leader>M	vimrc	/^nnoremap <leader>M :make<cr>$/;"	m
<leader>S	vimrc	/^nnoremap <leader>S :call StripTrailingWhitespace()<cr>$/;"	m
<leader>T	vimrc	/^    nnoremap <leader>T :BTags<cr>$/;"	m
<leader>T	vimrc	/^nnoremap <leader>T :TTags<cr>$/;"	m
<leader>W	vimrc	/^nnoremap <leader>W <C-w>W$/;"	m
<leader>a	vimrc	/^nnoremap <leader>a :argadd <c-r>=fnameescape(expand('%:p:h'))<cr>\/*<C-d>$/;"	m
<leader>b	vimrc	/^nnoremap <leader>b :b <C-d>$/;"	m
<leader>c	vimrc	/^    nnoremap <leader>c :Commits<cr>$/;"	m
<leader>c	vimrc	/^nnoremap <silent> <leader>c <esc>:close<cr>$/;"	m
<leader>e	vimrc	/^nnoremap <leader>e :e <c-r>=fnameescape(expand('%:p:h'))<cr>\/*<C-d>$/;"	m
<leader>f	vimrc	/^    nnoremap <leader>f :Files<cr>$/;"	m
<leader>f	vimrc	/^nnoremap <leader>f :find *$/;"	m
<leader>g	vimrc	/^        nnoremap <leader>g :Ag<space>$/;"	m
<leader>g	vimrc	/^nnoremap <leader>g :grep<space>$/;"	m
<leader>h	vimrc	/^    nnoremap <leader>h :History\/<cr>$/;"	m
<leader>i	vimrc	/^nnoremap <leader>i :Ilist<space>$/;"	m
<leader>o	vimrc	/^nnoremap <leader>o <C-w>o$/;"	m
<leader>q	vimrc	/^nnoremap <leader>q :b#<cr>$/;"	m
<leader>s	vimrc	/^nnoremap <leader>s :Search $/;"	m
<leader>t	vimrc	/^    nnoremap <leader>t :Tags<cr>$/;"	m
<leader>t	vimrc	/^nnoremap <leader>t :TTags<space>*<space>*<space>.<cr>$/;"	m
<leader>w	vimrc	/^nnoremap <leader>w <C-w>w$/;"	m
<leader>z	vimrc	/^nnoremap <leader>z :call ToggleFolds()<cr>$/;"	m
<left>	vimrc	/^nmap <silent> <left> <esc>:lprev<cr>$/;"	m
<leftrelease>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <leftrelease> :call <SID>TOCActivate(0)<cr>$/;"	m
<plug>(-fzf-vim-do)	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-vim-do) :execute g:__fzf_command<cr>$/;"	m
<plug>(MUcompleteAuto)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^imap <expr> <silent> <plug>(MUcompleteAuto) mucomplete#complete(1)$/;"	m
<plug>(MUcompleteBwd)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^imap <expr> <silent> <plug>(MUcompleteBwd) mucomplete#tab_complete(-1)$/;"	m
<plug>(MUcompleteBwdKey)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    inoremap <silent> <plug>(MUcompleteBwdKey) <c-h>$/;"	m
<plug>(MUcompleteCtd)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^inoremap    <silent> <plug>(MUcompleteCtd) <c-d>$/;"	m
<plug>(MUcompleteCycBwd)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^imap <expr> <silent> <plug>(MUcompleteCycBwd) pumvisible()?mucomplete#cycle(-1):"\\<plug>(MUcompleteBwdKey)"$/;"	m
<plug>(MUcompleteCycFwd)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^imap <expr> <silent> <plug>(MUcompleteCycFwd) pumvisible()?mucomplete#cycle( 1):"\\<plug>(MUcompleteFwdKey)"$/;"	m
<plug>(MUcompleteFwd)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^imap <expr> <silent> <plug>(MUcompleteFwd) mucomplete#tab_complete( 1)$/;"	m
<plug>(MUcompleteFwdKey)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    inoremap <silent> <plug>(MUcompleteFwdKey) <c-l>$/;"	m
<plug>(MUcompleteNxt)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^imap <expr> <silent> <plug>(MUcompleteNxt) mucomplete#verify_completion()$/;"	m
<plug>(MUcompleteTab)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^inoremap    <silent> <plug>(MUcompleteTab) <tab>$/;"	m
<plug>(fzf-complete-buffer-line)	pack/plugins/start/junegunn-fzf-vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-buffer-line) fzf#vim#complete#buffer_line()$/;"	m
<plug>(fzf-complete-file)	pack/plugins/start/junegunn-fzf-vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-file)        fzf#vim#complete#path("find . -path '*\/\\.*' -prune -o -type f -print -o -type l -print \\| sed 's:^..::'")$/;"	m
<plug>(fzf-complete-file-ag)	pack/plugins/start/junegunn-fzf-vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-file-ag)     fzf#vim#complete#path("ag -l -g ''")$/;"	m
<plug>(fzf-complete-line)	pack/plugins/start/junegunn-fzf-vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-line)        fzf#vim#complete#line()$/;"	m
<plug>(fzf-complete-path)	pack/plugins/start/junegunn-fzf-vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-path)        fzf#vim#complete#path("find . -path '*\/\\.*' -prune -o -print \\| sed '1d;s:^..::'")$/;"	m
<plug>(fzf-complete-word)	pack/plugins/start/junegunn-fzf-vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-word)        fzf#vim#complete#word()$/;"	m
<plug>(fzf-maps-i)	pack/plugins/start/junegunn-fzf-vim/plugin/fzf.vim	/^inoremap <silent> <plug>(fzf-maps-i) <c-o>:call fzf#vim#maps('i', 0)<cr>$/;"	m
<plug>(fzf-maps-n)	pack/plugins/start/junegunn-fzf-vim/plugin/fzf.vim	/^nnoremap <silent> <plug>(fzf-maps-n) :<c-u>call fzf#vim#maps('n', 0)<cr>$/;"	m
<plug>(fzf-maps-o)	pack/plugins/start/junegunn-fzf-vim/plugin/fzf.vim	/^onoremap <silent> <plug>(fzf-maps-o) <c-c>:<c-u>call fzf#vim#maps('o', 0)<cr>$/;"	m
<right>	vimrc	/^nmap <silent> <right> <esc>:lnext<cr>$/;"	m
<s-tab>	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    imap <s-tab> <plug>(MUcompleteBwd)$/;"	m
<tab>	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    imap <tab>   <plug>(MUcompleteFwd)$/;"	m
<up>	vimrc	/^nmap <silent> <up> <esc>:cprev<cr>$/;"	m
=	pack/plugins/start/sheerun-vim-polyglot/compiler/cryptol.vim	/^   command = -nargs =* CompilerSet setlocal <args>$/;"	c
>	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/puppet.vim	/^    inoremap <buffer> <silent> > ><Esc>:call <SID>puppetalign()<CR>a$/;"	m
AGS	pack/plugins/start/junegunn-fzf/src/Makefile	/^		\/bin\/bash -ci 'cd \/fzf\/src; make TAGS=static release'$/;"	m
Abolish	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^  let Abolish = {}$/;"	v
Abolish	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^command! -nargs=+ -bang -bar -range=0 -complete=custom,s:Complete Abolish$/;"	c
Abolished	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! Abolished()$/;"	f
Add	pack/plugins/start/junegunn-fzf/src/cache.go	/^func (cc *ChunkCache) Add(chunk *Chunk, key string, list []*Result) {$/;"	f
Add	pack/plugins/start/sheerun-vim-polyglot/syntax/cucumber.vim	/^function! s:Add(name)$/;"	f
Add	pack/plugins/start/tomtom-tlib-vim/spec/tlib/list.vim	/^fun! Add(a,b)$/;"	f
Add	pack/plugins/start/tomtom-tlib-vim/test/tlib.vim	/^fun! Add(a,b)$/;"	f
Algo	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^type Algo func(caseSensitive bool, forward bool, input util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int)$/;"	t
All terminal emulators	pack/colors/start/romainl-apprentice/README.md	/^### All terminal emulators$/;"	k
Alt0	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Alt0$/;"	c
AltA	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	AltA = Alt0 + 'a' - '0' + iota$/;"	c
AltB	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	AltB$/;"	c
AltBS	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	AltBS$/;"	c
AltC	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	AltC$/;"	c
AltD	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	AltD$/;"	c
AltE	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	AltE$/;"	c
AltEnter	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	AltEnter$/;"	c
AltF	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	AltF$/;"	c
AltSlash	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	AltSlash$/;"	c
AltSpace	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	AltSpace$/;"	c
AltZ	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	AltZ = AltA + 'z' - 'a'$/;"	c
Argument Seek	pack/plugins/start/wellle-targets-vim/README.md	/^### Argument Seek$/;"	k
Argument Text Objects	pack/plugins/start/wellle-targets-vim/README.md	/^## Argument Text Objects$/;"	i
Argument mappings	pack/plugins/start/wellle-targets-vim/cheatsheet.md	/^## Argument mappings$/;"	i
AsString	pack/plugins/start/junegunn-fzf/src/item.go	/^func (item *Item) AsString(stripAnsi bool) string {$/;"	f
AsString	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func (p *Pattern) AsString() string {$/;"	f
AsUint16	pack/plugins/start/junegunn-fzf/src/util/util.go	/^func AsUint16(val int) uint16 {$/;"	f
AsmFmt	pack/plugins/start/fatih-vim-go/ftplugin/asm.vim	/^command! -nargs=0 AsmFmt call go#asmfmt#Format()$/;"	c
AsyncRun	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^command! -bang -nargs=+ -complete=file AsyncRun $/;"	c
AsyncRun_Job_AutoCmd	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_AutoCmd(mode, auto)$/;"	f
AsyncRun_Job_AutoScroll	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_AutoScroll()$/;"	f
AsyncRun_Job_CheckScroll	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_CheckScroll()$/;"	f
AsyncRun_Job_Cursor	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Cursor()$/;"	f
AsyncRun_Job_NeoVim	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_NeoVim(job_id, data, event)$/;"	f
AsyncRun_Job_OnCallback	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_OnCallback(channel, text)$/;"	f
AsyncRun_Job_OnClose	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_OnClose(channel)$/;"	f
AsyncRun_Job_OnExit	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_OnExit(job, message)$/;"	f
AsyncRun_Job_OnFinish	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_OnFinish()$/;"	f
AsyncRun_Job_OnTimer	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! g:AsyncRun_Job_OnTimer(id)$/;"	f
AsyncRun_Job_QuickReset	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_QuickReset()$/;"	f
AsyncRun_Job_Scroll	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Scroll()$/;"	f
AsyncRun_Job_Start	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Start(cmd)$/;"	f
AsyncRun_Job_Status	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Status()$/;"	f
AsyncRun_Job_Stop	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Stop(how)$/;"	f
AsyncRun_Job_Update	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_Update(count)$/;"	f
AsyncRun_Job_ViewReset	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! s:AsyncRun_Job_ViewReset()$/;"	f
AsyncStop	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^command! -bang -nargs=0 AsyncStop call asyncrun#stop('<bang>')$/;"	c
AtomicBool	pack/plugins/start/junegunn-fzf/src/util/atomicbool.go	/^type AtomicBool struct {$/;"	t
Attr	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^type Attr C.uint$/;"	t
Attr	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^type Attr tcell.Style$/;"	t
AttrRegular	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	AttrRegular Attr = 0$/;"	c
AttrRegular	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	AttrRegular Attr = 0$/;"	c
Author	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^## Author$/;"	i
AutoCmd	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! s:AutoCmd(name)$/;"	f
AutoMkdir	vimrc	/^augroup AutoMkdir$/;"	a
AutoMkdir	vimrc	/^function! <SID>AutoMkdir() abort$/;"	f
BINARY	pack/plugins/start/junegunn-fzf/src/Makefile	/^	BINARY := $(BINARY32)$/;"	m
BINARY	pack/plugins/start/junegunn-fzf/src/Makefile	/^	BINARY := $(BINARY64)$/;"	m
BINARY32	pack/plugins/start/junegunn-fzf/src/Makefile	/^BINARY32    := fzf-$(GOOS)_386$/;"	m
BINARY64	pack/plugins/start/junegunn-fzf/src/Makefile	/^BINARY64    := fzf-$(GOOS)_amd64$/;"	m
BINARYARM7	pack/plugins/start/junegunn-fzf/src/Makefile	/^BINARYARM7  := fzf-$(GOOS)_arm7$/;"	m
BINDIR	pack/plugins/start/junegunn-fzf/src/Makefile	/^BINDIR      := $(shell dirname $(ROOTDIR))\/bin$/;"	m
BMRU_Push	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/buffer.vim	/^function! s:BMRU_Push(bnr) "{{{3$/;"	f
BSpace	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	BSpace$/;"	c
BTab	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	BTab$/;"	c
Balanced	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^function s:Balanced(lnum)$/;"	f
Before submitting	pack/plugins/start/junegunn-fzf/.github/ISSUE_TEMPLATE.md	/^### Before submitting$/;"	k
BeginElementFound	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:BeginElementFound(stack, token, curr_vcol, stored_vcol, end_token, sw)$/;"	f
BeginElementFoundIfEmpty	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:BeginElementFoundIfEmpty(stack, token, curr_vcol, stored_vcol, sw)$/;"	f
BeginningOfClauseFound	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:BeginningOfClauseFound(stack, token, stored_vcol, lnum, i)$/;"	f
Behavior	pack/plugins/start/fatih-vim-go/.github/ISSUE_TEMPLATE.md	/^### Behavior$/;"	k
BitwiseComparison	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/bitwise.vim	/^function! s:BitwiseComparison(num1, num2, rtype, expr) "{{{3$/;"	f
Blame	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
BlameCommit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BlameCommit(cmd) abort$/;"	f
BlameJump	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
BlameSyntax	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
Blink	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	Blink          = C.A_BLINK$/;"	c
Blink	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	Blink          = Attr(tcell.AttrBlink)$/;"	c
BlockStarter	pack/plugins/start/sheerun-vim-polyglot/indent/python.vim	/^function! s:BlockStarter(lnum, block_start_re)$/;"	f
Bold	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	Bold      Attr = C.A_BOLD$/;"	c
Bold	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	Bold      Attr = Attr(tcell.AttrBold)$/;"	c
Browse	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
BufReadIndex	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndex() abort$/;"	f
BufReadIndexFile	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndexFile() abort$/;"	f
BufReadObject	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadObject() abort$/;"	f
BufWriteIndexFile	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BufWriteIndexFile() abort$/;"	f
Bug fixes	pack/plugins/start/junegunn-fzf/CHANGELOG.md	/^### Bug fixes$/;"	k
Build 32-bit and 64-bit executables and tarballs	pack/plugins/start/junegunn-fzf/BUILD.md	/^# Build 32-bit and 64-bit executables and tarballs$/;"	h
Build executables and tarballs for Linux using Docker	pack/plugins/start/junegunn-fzf/BUILD.md	/^# Build executables and tarballs for Linux using Docker$/;"	h
Build fzf binary and copy it to bin directory	pack/plugins/start/junegunn-fzf/BUILD.md	/^# Build fzf binary and copy it to bin directory$/;"	h
Build fzf binary for your platform in src/fzf	pack/plugins/start/junegunn-fzf/BUILD.md	/^# Build fzf binary for your platform in src\/fzf$/;"	h
BuildItem	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/input.vim	/^function! s:BuildItem(menu, def) "{{{3$/;"	f
BuildMenu	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/input.vim	/^function! s:BuildMenu(world) "{{{3$/;"	f
BuildPattern	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func BuildPattern(fuzzy bool, fuzzyAlgo algo.Algo, extended bool, caseMode Case, forward bool,$/;"	f
BuildStructures	pack/plugins/start/sheerun-vim-polyglot/indent/twig.vim	/^fun! s:BuildStructures()$/;"	f
But fear no longer!	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^## But fear no longer!$/;"	i
ByOrder	pack/plugins/start/junegunn-fzf/src/result.go	/^type ByOrder []Offset$/;"	t
ByRelevance	pack/plugins/start/junegunn-fzf/src/result.go	/^type ByRelevance []*Result$/;"	t
ByRelevanceTac	pack/plugins/start/junegunn-fzf/src/result.go	/^type ByRelevanceTac []*Result$/;"	t
CFill	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (w *Window) CFill(str string, fg Color, bg Color, attr Attr) bool {$/;"	f
CFill	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) CFill(str string, fg Color, bg Color, a Attr) bool {$/;"	f
CJSX	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^augroup CJSX$/;"	a
CPrint	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (w *Window) CPrint(pair ColorPair, attr Attr, text string) {$/;"	f
CPrint	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) CPrint(pair ColorPair, a Attr, text string) {$/;"	f
CSCOPE_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -R$/;"	v
CSCOPE_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -i %TAGS_FILE%.files$/;"	v
CSCOPE_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=$/;"	v
CSCOPE_EXE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_EXE=%~2$/;"	v
CSCOPE_EXE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_EXE=cscope$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% --append "%UPDATED_SOURCE%"$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% -L %TAGS_FILE%.files$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% "%PROJECT_ROOT%"$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --exclude=%2$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --options=%2$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_ARGS=$/;"	v
CTAGS_EXE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_EXE=%~2$/;"	v
CTAGS_EXE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_EXE=ctags$/;"	v
CacheKey	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func (p *Pattern) CacheKey() string {$/;"	f
CalcVCol	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:CalcVCol(line, first_index, last_index, vcol, tabstop)$/;"	f
CallAgent	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/input.vim	/^function! s:CallAgent(handler, world, list) abort "{{{3$/;"	f
CallBaseIndent	pack/plugins/start/sheerun-vim-polyglot/indent/twig.vim	/^function! s:CallBaseIndent()$/;"	f
Can select multiple processes with <TAB> or <Shift-TAB> keys	pack/plugins/start/junegunn-fzf/README.md	/^# Can select multiple processes with <TAB> or <Shift-TAB> keys$/;"	h
CaptionEnv	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^function! s:CaptionEnv()$/;"	f
CaptionFrame	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^function! s:CaptionFrame(line)$/;"	f
CaptionTable	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^function! s:CaptionTable()$/;"	f
Case	pack/plugins/start/junegunn-fzf/src/options.go	/^type Case int$/;"	t
CaseIgnore	pack/plugins/start/junegunn-fzf/src/options.go	/^	CaseIgnore$/;"	c
CaseRespect	pack/plugins/start/junegunn-fzf/src/options.go	/^	CaseRespect$/;"	c
CaseSmart	pack/plugins/start/junegunn-fzf/src/options.go	/^	CaseSmart Case = iota$/;"	c
ChangeEnvPrompt	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:ChangeEnvPrompt()$/;"	f
Chars	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^type Chars struct {$/;"	t
CheckAgentReturnValue	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/input.vim	/^function! s:CheckAgentReturnValue(name, value) "{{{3$/;"	f
CheckBinaries	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:CheckBinaries()$/;"	f
CheckForFunctions	pack/plugins/start/sheerun-vim-polyglot/syntax/octave.vim	/^function! s:CheckForFunctions()$/;"	f
Chmod	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=1 Chmod :$/;"	c
Chunk	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^type Chunk []*Item \/\/ >>> []Item$/;"	t
ChunkCache	pack/plugins/start/junegunn-fzf/src/cache.go	/^type ChunkCache struct {$/;"	t
ChunkList	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^type ChunkList struct {$/;"	t
Clear	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func Clear() {$/;"	f
Clear	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func Clear() {$/;"	f
Clear	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^func (events *Events) Clear() {$/;"	f
ClearTokenCacheIfNeeded	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:ClearTokenCacheIfNeeded()$/;"	f
Close	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (w *Window) Close() {$/;"	f
Close	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func Close() {$/;"	f
Close	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) Close() {$/;"	f
Close	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func Close() {$/;"	f
CloseCurEnv	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:CloseCurEnv()$/;"	f
CloseWindow	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function s:CloseWindow(prefix)$/;"	f
CoffeeBufNew	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^augroup CoffeeBufNew | augroup END$/;"	a
CoffeeBufUpdate	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^augroup CoffeeBufUpdate | augroup END$/;"	a
CoffeeCompile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^\\        CoffeeCompile call s:CoffeeCompile(<line1>, <line2>, <q-args>)$/;"	c
CoffeeCompile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompile(startline, endline, args)$/;"	f
CoffeeCompileClose	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompileClose()$/;"	f
CoffeeCompileResetVars	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompileResetVars()$/;"	f
CoffeeCompileToBuf	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompileToBuf(buf, startline, endline)$/;"	f
CoffeeComplete	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeComplete(cmd, cmdline, cursor)$/;"	f
CoffeeLint	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^command! -buffer -range=% -bang -bar -nargs=* CoffeeLint$/;"	c
CoffeeLint	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeLint(startline, endline, bang, args)$/;"	f
CoffeeMake	pack/plugins/start/sheerun-vim-polyglot/compiler/coffee.vim	/^command! -bang -bar -nargs=* CoffeeMake$/;"	c
CoffeeMakeDeprecated	pack/plugins/start/sheerun-vim-polyglot/compiler/coffee.vim	/^function! s:CoffeeMakeDeprecated(bang, args)$/;"	f
CoffeeRun	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^command! -buffer -range=% -bar -nargs=* CoffeeRun$/;"	c
CoffeeRun	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeRun(startline, endline, args)$/;"	f
CoffeeRunClose	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeRunClose()$/;"	f
CoffeeRunResetVars	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeRunResetVars()$/;"	f
CoffeeUpdateMakePrg	pack/plugins/start/sheerun-vim-polyglot/compiler/coffee.vim	/^augroup CoffeeUpdateMakePrg$/;"	a
CoffeeWatch	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^\\        CoffeeWatch call s:CoffeeWatch(<q-args>)$/;"	c
CoffeeWatch	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatch(args)$/;"	f
CoffeeWatchClose	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatchClose()$/;"	f
CoffeeWatchResetVars	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatchResetVars()$/;"	f
CoffeeWatchUpdate	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatchUpdate()$/;"	f
ColBorder	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColBorder$/;"	c
ColBorder	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColBorder       ColorPair$/;"	v
ColCurrent	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColCurrent$/;"	c
ColCurrent	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColCurrent      ColorPair$/;"	v
ColCurrentMatch	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColCurrentMatch$/;"	c
ColCurrentMatch	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColCurrentMatch ColorPair$/;"	v
ColCursor	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColCursor$/;"	c
ColCursor	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColCursor       ColorPair$/;"	v
ColDefault	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColDefault ColorPair = iota$/;"	c
ColDefault	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColDefault      = ColorPair{colDefault, colDefault}$/;"	v
ColHeader	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColHeader$/;"	c
ColHeader	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColHeader       ColorPair$/;"	v
ColInfo	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColInfo$/;"	c
ColInfo	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColInfo         ColorPair$/;"	v
ColMatch	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColMatch$/;"	c
ColMatch	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColMatch        ColorPair$/;"	v
ColNormal	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColNormal$/;"	c
ColNormal	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColNormal       ColorPair$/;"	v
ColPrompt	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColPrompt$/;"	c
ColPrompt	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColPrompt       ColorPair$/;"	v
ColSelected	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColSelected$/;"	c
ColSelected	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColSelected     ColorPair$/;"	v
ColSpinner	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColSpinner$/;"	c
ColSpinner	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColSpinner      ColorPair$/;"	v
ColUser	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColUser \/\/ Should be the last entry$/;"	c
ColUser	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColUser         ColorPair$/;"	v
Color	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^type Color int32$/;"	t
ColorPair	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^type ColorPair int16$/;"	t
ColorPair	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^type ColorPair [2]Color$/;"	t
ColorTheme	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^type ColorTheme struct {$/;"	t
Colors	pack/plugins/start/junegunn-fzf/src/item.go	/^func (item *Item) Colors() []ansiOffset {$/;"	f
CommentKeywordMatch	pack/plugins/start/sheerun-vim-polyglot/syntax/swift.vim	/^function! s:CommentKeywordMatch(keyword)$/;"	f
Commentary	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^command! -range -bar Commentary call s:go(<line1>,<line2>)$/;"	c
Commit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Commit(args, ...) abort$/;"	f
CommitComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
CompareBufferNrByMRU	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/buffer.vim	/^function! s:CompareBufferNrByMRU(a, b) "{{{3$/;"	f
CompareBuffernameByBasename	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/buffer.vim	/^function! s:CompareBuffernameByBasename(a, b) "{{{3$/;"	f
CompareHash	pack/plugins/start/tomtom-tlib-vim/spec/tlib/hash.vim	/^function! s:CompareHash(text) "{{{3$/;"	f
Compatibility	pack/plugins/start/lifepillar-vim-mucomplete/Readme.md	/^# Compatibility$/;"	h
CompilerSet	pack/plugins/start/fatih-vim-go/compiler/go.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/cargo.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/cucumber.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/eruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/exunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/go.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/haml.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/nim.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/python.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/rake.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/rspec.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/ruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/rubyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/rustc.vim	/^	command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/sass.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/sbt.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/typescript.vim	/^  command! -nargs=* CompilerSet setlocal <args>$/;"	c
Complete	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:Complete(A,L,P)$/;"	f
CompleteLabels	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:CompleteLabels(regex)$/;"	f
Completion helper	pack/plugins/start/junegunn-fzf-vim/README.md	/^### Completion helper$/;"	k
CompletionTest	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^module CompletionTest$/;"	m
Configuration	pack/plugins/start/fatih-vim-go/.github/ISSUE_TEMPLATE.md	/^### Configuration$/;"	k
Constrain	pack/plugins/start/junegunn-fzf/src/util/util.go	/^func Constrain(val int, min int, max int) int {$/;"	f
Constrain32	pack/plugins/start/junegunn-fzf/src/util/util.go	/^func Constrain32(val int32, min int32, max int32) int32 {$/;"	f
ContainedGroup	pack/plugins/start/sheerun-vim-polyglot/syntax/scala.vim	/^function! s:ContainedGroup()$/;"	f
Contributing	pack/plugins/start/sheerun-vim-polyglot/README.md	/^## Contributing$/;"	i
ConvertBack	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:ConvertBack(line)$/;"	f
Cooperate with other Plugins	pack/plugins/start/skywind3000-asyncrun-vim/README.md	/^## Cooperate with other Plugins$/;"	i
CountHelper	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/string.vim	/^function! s:CountHelper() "{{{3$/;"	f
CountItems	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^func CountItems(cs []*Chunk) int {$/;"	f
CountMatches	pack/plugins/start/sheerun-vim-polyglot/indent/tex.vim	/^function! s:CountMatches(str, pat)$/;"	f
CreateOrExpression	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^function! s:CreateOrExpression(keywords)$/;"	f
Credits	pack/plugins/start/fatih-vim-go/README.md	/^## Credits$/;"	i
Credits	pack/plugins/start/skywind3000-asyncrun-vim/README.md	/^## Credits$/;"	i
CrystalContext	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalContext echo crystal_lang#context(expand('%'), getpos('.'), <q-args>).output$/;"	c
CrystalDef	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=0 CrystalDef call crystal_lang#jump_to_definition(expand('%'), getpos('.'))$/;"	c
CrystalFormat	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* -bar CrystalFormat call crystal_lang#format(<q-args>)$/;"	c
CrystalHierarchy	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalHierarchy echo crystal_lang#type_hierarchy(expand('%'), <q-args>)$/;"	c
CrystalImpl	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalImpl echo crystal_lang#impl(expand('%'), getpos('.'), <q-args>).output$/;"	c
CrystalSpecRunAll	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=? CrystalSpecRunAll call crystal_lang#run_all_spec(<f-args>)$/;"	c
CrystalSpecRunCurrent	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=? CrystalSpecRunCurrent call crystal_lang#run_current_spec(<f-args>)$/;"	c
CrystalSpecSwitch	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=? CrystalSpecSwitch call crystal_lang#switch_spec_file(<f-args>)$/;"	c
CtrlA	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlA$/;"	c
CtrlB	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlB$/;"	c
CtrlC	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlC$/;"	c
CtrlD	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlD$/;"	c
CtrlE	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlE$/;"	c
CtrlF	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlF$/;"	c
CtrlG	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlG$/;"	c
CtrlH	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlH$/;"	c
CtrlJ	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlJ$/;"	c
CtrlK	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlK$/;"	c
CtrlL	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlL$/;"	c
CtrlM	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlM$/;"	c
CtrlN	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlN$/;"	c
CtrlO	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlO$/;"	c
CtrlP	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlP$/;"	c
CtrlQ	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlQ$/;"	c
CtrlR	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlR$/;"	c
CtrlS	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlS$/;"	c
CtrlT	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlT$/;"	c
CtrlU	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlU$/;"	c
CtrlV	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlV$/;"	c
CtrlW	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlW$/;"	c
CtrlX	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlX$/;"	c
CtrlY	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlY$/;"	c
CtrlZ	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlZ$/;"	c
CucumberComplete	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^function! CucumberComplete(findstart,base) abort$/;"	f
Customization	pack/plugins/start/junegunn-fzf-vim/README.md	/^### Customization$/;"	k
Customize seeking	pack/plugins/start/wellle-targets-vim/cheatsheet.md	/^## Customize seeking$/;"	i
Cycle	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar Cycle  :call s:cycle()$/;"	c
DB_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set DB_FILE=%~2$/;"	v
DB_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^set DB_FILE=cscope.out$/;"	v
DEBUG	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^var DEBUG bool$/;"	v
DOCKEROPTS	pack/plugins/start/junegunn-fzf/src/Makefile	/^DOCKEROPTS  := -i -t -v $(ROOTDIR):\/fzf\/src$/;"	m
DONE	pack/plugins/start/romainl-vim-qf/README.md	/^## DONE$/;"	i
DONE	pack/plugins/start/romainl-vim-qlist/README.md	/^## DONE$/;"	i
Dark256	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Dark256       *ColorTheme$/;"	v
DefRuby	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! s:DefRuby()$/;"	f
Default16	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Default16     *ColorTheme$/;"	v
DefaultTheme	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func DefaultTheme() *ColorTheme {$/;"	f
DefaultTheme	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func DefaultTheme() *ColorTheme {$/;"	f
Del	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Del$/;"	c
Delimiter	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^type Delimiter struct {$/;"	t
Derivative works	pack/colors/start/romainl-apprentice/README.md	/^## Derivative works$/;"	i
DetectCoffee	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^function! s:DetectCoffee()$/;"	f
DetectElixir	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^function! s:DetectElixir()$/;"	f
DetectPerl6	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^function! s:DetectPerl6()$/;"	f
DetectScala	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^fun! s:DetectScala()$/;"	f
Diff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Diff(vert,keepfocus,...) abort$/;"	f
DiffGitCached	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitcommit.vim	/^command! -bang -bar -buffer -complete=custom,s:diffcomplete -nargs=* DiffGitCached :call s:gitdiffcached(<bang>0,b:git_dir,<f-args>)$/;"	c
Dim	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	Dim            = C.A_DIM$/;"	c
Dim	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	Dim            = Attr(tcell.AttrDim)$/;"	c
DirComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
Directories under current directory (single-selection)	pack/plugins/start/junegunn-fzf/README.md	/^# Directories under current directory (single-selection)$/;"	h
Directories under ~/github that match `fzf`	pack/plugins/start/junegunn-fzf/README.md	/^# Directories under ~\/github that match `fzf`$/;"	h
Disciple	pack/colors/start/romainl-disciple/README.md	/^# Disciple$/;"	h
Dispatch	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Dispatch(bang, args)$/;"	f
Dlist	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^command! -nargs=1 -bar -bang Dlist call <sid>Qlist("d", 1, 0, '<bang>' == '!', <f-args>)$/;"	c
DoReset	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^function! s:DoReset()$/;"	f
DoSearch	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^function! s:DoSearch(useSearch, forwhat)$/;"	f
Documentation	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^## Documentation$/;"	i
DoesAutoWrap	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func DoesAutoWrap() bool {$/;"	f
DoesAutoWrap	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func DoesAutoWrap() bool {$/;"	f
Dofile	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=1 Dofile call qf#DoList(0, <q-args>)$/;"	c
Doline	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=1 Doline call qf#DoList(1, <q-args>)$/;"	c
Donation	pack/plugins/start/fatih-vim-go/README.md	/^## Donation$/;"	i
DoneParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^:DoneParseArgs$/;"	l
DoneParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:DoneParseArgs$/;"	l
DoubleClick	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	DoubleClick$/;"	c
Down	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Down$/;"	c
DrawBorder	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) DrawBorder() {$/;"	f
DurWithin	pack/plugins/start/junegunn-fzf/src/util/util.go	/^func DurWithin($/;"	f
ESC	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	ESC$/;"	c
Edit	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar Edit   :call s:choose('edit')$/;"	c
Edit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Edit(cmd,bang,...) abort$/;"	f
EditCallback	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/input.vim	/^function! s:EditCallback(...) "{{{3$/;"	f
EditComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditRunComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
ElmEval	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^function! ElmEval(sourceCode)$/;"	f
ElmEvalLine	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^command -buffer ElmEvalLine          call ElmEvalLine()$/;"	c
ElmEvalLine	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^function! ElmEvalLine()$/;"	f
ElmEvalSelection	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^command -buffer ElmEvalSelection     call ElmEvalSelection()$/;"	c
ElmEvalSelection	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^function! ElmEvalSelection()$/;"	f
ElmMake	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^function! ElmMake(file)$/;"	f
ElmMakeCurrentFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^command -buffer ElmMakeCurrentFile   call ElmMakeCurrentFile()$/;"	c
ElmMakeCurrentFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^function! ElmMakeCurrentFile()$/;"	f
ElmMakeFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^command -buffer -nargs=1 ElmMakeFile call ElmMakeFile <args>$/;"	c
ElmMakeFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^function! ElmMakeFile(file)$/;"	f
ElmMakeMain	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^command -buffer ElmMakeMain          call ElmMakeMain()$/;"	c
ElmMakeMain	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^function! ElmMakeMain()$/;"	f
ElmRepl	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^command -buffer ElmRepl              call ElmRepl()$/;"	c
ElmRepl	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^function! ElmRepl()$/;"	f
Emit	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! s:Emit(dict, type, args)$/;"	f
EmptyMerger	pack/plugins/start/junegunn-fzf/src/merger.go	/^var EmptyMerger = NewMerger(nil, [][]*Result{}, false, false)$/;"	v
EmptyTheme	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^func EmptyTheme() *ColorTheme {$/;"	f
EnableJSX	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^fu! <SID>EnableJSX()$/;"	f
Enabling Apprentice.	pack/colors/start/romainl-apprentice/README.md	/^## Enabling Apprentice.$/;"	i
Enabling Disciple.	pack/colors/start/romainl-disciple/README.md	/^## Enabling Disciple.$/;"	i
Enclose	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (w *Window) Enclose(y int, x int) bool {$/;"	f
Enclose	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) Enclose(y int, x int) bool {$/;"	f
End	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	End$/;"	c
EndStructure	pack/plugins/start/sheerun-vim-polyglot/indent/twig.vim	/^function! s:EndStructure(name)$/;"	f
EqualMatch	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func EqualMatch(caseSensitive bool, forward bool, text util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
Erase	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (w *Window) Erase() {$/;"	f
Erase	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) Erase() {$/;"	f
ErlangCalcIndent	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:ErlangCalcIndent(lnum, stack)$/;"	f
ErlangCalcIndent2	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:ErlangCalcIndent2(lnum, stack)$/;"	f
ErlangIndent	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! ErlangIndent()$/;"	f
ErlangShowTokensInCurrentLine	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! ErlangShowTokensInCurrentLine()$/;"	f
ErlangShowTokensInLine	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! ErlangShowTokensInLine(line)$/;"	f
ErrMsg	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! s:ErrMsg(msg)$/;"	f
Error	pack/plugins/start/fatih-vim-go/autoload/go/import.vim	/^function! s:Error(s) abort$/;"	f
ErrorMsg	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! s:ErrorMsg(msg)$/;"	f
EscapeTitle	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^function! s:EscapeTitle(titlestr)$/;"	f
Event	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^type Event struct {$/;"	t
EventBox	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^type EventBox struct {$/;"	t
EventType	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^type EventType int$/;"	t
Events	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^type Events map[EventType]interface{}$/;"	t
EvtClose	pack/plugins/start/junegunn-fzf/src/constants.go	/^	EvtClose$/;"	c
EvtClose	pack/plugins/start/junegunn-fzf/src/util/eventbox_test.go	/^	EvtClose$/;"	c
EvtHeader	pack/plugins/start/junegunn-fzf/src/constants.go	/^	EvtHeader$/;"	c
EvtReadFin	pack/plugins/start/junegunn-fzf/src/constants.go	/^	EvtReadFin$/;"	c
EvtReadFin	pack/plugins/start/junegunn-fzf/src/util/eventbox_test.go	/^	EvtReadFin$/;"	c
EvtReadNew	pack/plugins/start/junegunn-fzf/src/constants.go	/^	EvtReadNew util.EventType = iota$/;"	c
EvtReadNew	pack/plugins/start/junegunn-fzf/src/util/eventbox_test.go	/^	EvtReadNew EventType = iota$/;"	c
EvtSearchFin	pack/plugins/start/junegunn-fzf/src/constants.go	/^	EvtSearchFin$/;"	c
EvtSearchFin	pack/plugins/start/junegunn-fzf/src/util/eventbox_test.go	/^	EvtSearchFin$/;"	c
EvtSearchNew	pack/plugins/start/junegunn-fzf/src/constants.go	/^	EvtSearchNew$/;"	c
EvtSearchNew	pack/plugins/start/junegunn-fzf/src/util/eventbox_test.go	/^	EvtSearchNew$/;"	c
EvtSearchProgress	pack/plugins/start/junegunn-fzf/src/constants.go	/^	EvtSearchProgress$/;"	c
EvtSearchProgress	pack/plugins/start/junegunn-fzf/src/util/eventbox_test.go	/^	EvtSearchProgress$/;"	c
ExactMatchNaive	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func ExactMatchNaive(caseSensitive bool, forward bool, text util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
Example	pack/plugins/start/skywind3000-asyncrun-vim/README.md	/^## Example$/;"	i
Example Mappings	pack/plugins/start/fatih-vim-go/README.md	/^## Example Mappings$/;"	i
Examples	pack/plugins/start/wellle-targets-vim/README.md	/^## Examples$/;"	i
ExecCommand	pack/plugins/start/junegunn-fzf/src/util/util_unix.go	/^func ExecCommand(command string) *exec.Cmd {$/;"	f
ExecCommand	pack/plugins/start/junegunn-fzf/src/util/util_windows.go	/^func ExecCommand(command string) *exec.Cmd {$/;"	f
ExecuteInTree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
ExitingOneLineScope	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:ExitingOneLineScope(lnum)$/;"	f
ExitingOneLineScope	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:ExitingOneLineScope(lnum)$/;"	f
Expand	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! s:Expand(dict, pretty, args)$/;"	f
ExtendKeyMap	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/input.vim	/^function! s:ExtendKeyMap(world, key_mode, key_handlers) "{{{3$/;"	f
ExtendedFuzzyMatcher	pack/plugins/start/junegunn-fzf/fzf	/^  class ExtendedFuzzyMatcher < FuzzyMatcher$/;"	c	class:start_search
ExtraBrackets	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^function s:ExtraBrackets(lnum)$/;"	f
ExtraBrackets	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function s:ExtraBrackets(lnum)$/;"	f
ExtractInputs	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:ExtractInputs()$/;"	f
ExtractLabels	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:ExtractLabels()$/;"	f
ExtractOpt	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! s:ExtractOpt(command) $/;"	f
F	vimrc	/^nmap F <Plug>Sneak_F$/;"	m
F	vimrc	/^omap F <Plug>Sneak_F$/;"	m
F1	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F1$/;"	c
F10	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F10$/;"	c
F11	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F11$/;"	c
F12	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F12$/;"	c
F2	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F2$/;"	c
F3	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F3$/;"	c
F4	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F4$/;"	c
F5	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F5$/;"	c
F6	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F6$/;"	c
F7	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F7$/;"	c
F8	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F8$/;"	c
F9	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F9$/;"	c
FILE_LIST_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD=$/;"	v
FNameEscape	pack/plugins/start/sheerun-vim-polyglot/ftplugin/tex_LatexBox.vim	/^	function! s:FNameEscape(s)$/;"	f
FZF	pack/plugins/start/junegunn-fzf/fzf	/^class FZF$/;"	c
FZF	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^command! -nargs=* -complete=dir -bang FZF call s:cmd(<bang>0, <f-args>)$/;"	c
FastFold	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^	augroup FastFold$/;"	a
Features	pack/plugins/start/fatih-vim-go/README.md	/^## Features$/;"	i
Features	pack/plugins/start/romainl-vim-qf/README.md	/^## Features$/;"	i
Feed the output of ag into fzf	pack/plugins/start/junegunn-fzf/README.md	/^# Feed the output of ag into fzf$/;"	h
Feedback, please!	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^## Feedback, please!$/;"	i
FileRead	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:FileRead() abort$/;"	f
Files under current directory	pack/plugins/start/junegunn-fzf/README.md	/^# Files under current directory$/;"	h
Files under parent directory	pack/plugins/start/junegunn-fzf/README.md	/^# Files under parent directory$/;"	h
Files under parent directory that match `fzf`	pack/plugins/start/junegunn-fzf/README.md	/^# Files under parent directory that match `fzf`$/;"	h
Files under your home directory	pack/plugins/start/junegunn-fzf/README.md	/^# Files under your home directory$/;"	h
Fill	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (w *Window) Fill(str string) bool {$/;"	f
Fill	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) Fill(str string) bool {$/;"	f
FillString	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) FillString(text string, pair ColorPair, a Attr) bool {$/;"	f
Filter	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=1 -bang Filter call qf#FilterList(<q-args>, expand("<bang>") == "!" ? 1 : 0)$/;"	c
Filtered	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^function! s:Filtered(fn, l)$/;"	f
Find	pack/plugins/start/junegunn-fzf/src/cache.go	/^func (cc *ChunkCache) Find(chunk *Chunk, key string) ([]*Result, bool) {$/;"	f
Find	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -complete=file -nargs=+ Find   exe s:Grep(<q-bang>, <q-args>, 'find')$/;"	c
FindBibData	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:FindBibData(...)$/;"	f
FindClosestSection	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:FindClosestSection(toc, fileindices)$/;"	f
FindContainingClass	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^function! s:FindContainingClass()$/;"	f
FindContainingClass	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:FindContainingClass()$/;"	f
FindIndToken	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:FindIndToken(lnum, dir)$/;"	f
FindLet	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^function! s:FindLet(pstart, pmid, pend)$/;"	f
FindMatchingPair	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:FindMatchingPair(mode)$/;"	f
FindPair	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
FindPreviousOpenStructure	pack/plugins/start/sheerun-vim-polyglot/indent/twig.vim	/^function! s:FindPreviousOpenStructure(lineNumber)$/;"	f
FindStartLine	pack/plugins/start/sheerun-vim-polyglot/indent/nim.vim	/^function! s:FindStartLine(fromln, pattern)$/;"	f
FinishCommit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:FinishCommit() abort$/;"	f
FixPaths	pack/plugins/start/sheerun-vim-polyglot/compiler/cargo.vim	/^    function! s:FixPaths()$/;"	f
Fixedgq	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function! Fixedgq(lnum, count)$/;"	f
Fixes and improvements	pack/plugins/start/junegunn-fzf/CHANGELOG.md	/^### Fixes and improvements$/;"	k
Fixup	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar Fixup  :call s:choose('fixup')$/;"	c
FoldSectionLevels	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^function! s:FoldSectionLevels()$/;"	f
FormatHelp	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:FormatHelp(help) "{{{3$/;"	f
FormatHelpItem	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:FormatHelpItem(item, fmt) "{{{3$/;"	f
FormatTag	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! s:FormatTag(tag) "{{{3$/;"	f
FuzzyMatchV1	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func FuzzyMatchV1(caseSensitive bool, forward bool, text util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
FuzzyMatchV2	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func FuzzyMatchV2(caseSensitive bool, forward bool, input util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
FuzzyMatcher	pack/plugins/start/junegunn-fzf/fzf	/^  class FuzzyMatcher < Matcher$/;"	c	class:start_search
G	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> G G4k$/;"	m
GF	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GFInit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:GFInit(...) abort$/;"	f
GOOS	pack/plugins/start/junegunn-fzf/src/Makefile	/^		\/bin\/bash -ci 'cd \/fzf\/src; GOOS=android make android-build'$/;"	m
GOOS	pack/plugins/start/junegunn-fzf/src/Makefile	/^	GOOS := darwin$/;"	m
GOOS	pack/plugins/start/junegunn-fzf/src/Makefile	/^	GOOS := linux$/;"	m
GOPATH	pack/plugins/start/junegunn-fzf/src/Makefile	/^GOPATH      := $(shell dirname $(ROOTDIR))\/gopath$/;"	m
GVim/MacVim	pack/colors/start/romainl-apprentice/README.md	/^### GVim\/MacVim$/;"	k
GVim/MacVim	pack/colors/start/romainl-disciple/README.md	/^### GVim\/MacVim$/;"	k
Get	pack/plugins/start/junegunn-fzf/src/merger.go	/^func (mg *Merger) Get(idx int) *Result {$/;"	f
Get	pack/plugins/start/junegunn-fzf/src/util/atomicbool.go	/^func (a *AtomicBool) Get() bool {$/;"	f
Get	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^func (chars *Chars) Get(i int) rune {$/;"	f
GetAnsibleIndent	pack/plugins/start/sheerun-vim-polyglot/indent/ansible.vim	/^function GetAnsibleIndent(lnum)$/;"	f
GetBladeIndent	pack/plugins/start/sheerun-vim-polyglot/indent/blade.vim	/^function! GetBladeIndent()$/;"	f
GetBufferRubyClass	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubyClass(name, ...)$/;"	f
GetBufferRubyEntity	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubyEntity( name, type, ... )$/;"	f
GetBufferRubyModule	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubyModule(name, ...)$/;"	f
GetBufferRubySingletonMethods	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubySingletonMethods(name)$/;"	f
GetCabalIndent	pack/plugins/start/sheerun-vim-polyglot/indent/cabal.vim	/^function! GetCabalIndent()$/;"	f
GetChar	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func GetChar() Event {$/;"	f
GetChar	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func GetChar() Event {$/;"	f
GetClojureIndent	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! GetClojureIndent()$/;"	f
GetCmd	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/vcs.vim	/^function! s:GetCmd(vcstype, cmd)$/;"	f
GetCoffeeHtmlIndent	pack/plugins/start/sheerun-vim-polyglot/after/indent/html.vim	/^function! GetCoffeeHtmlIndent(curlinenum)$/;"	f
GetCoffeeIndent	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! GetCoffeeIndent(curlnum)$/;"	f
GetContents	pack/plugins/start/sheerun-vim-polyglot/indent/lua.vim	/^function s:GetContents(lnum)$/;"	f
GetCrystalIndent	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^function GetCrystalIndent(...)$/;"	f
GetCucumberIndent	pack/plugins/start/sheerun-vim-polyglot/indent/cucumber.vim	/^function! GetCucumberIndent()$/;"	f
GetDefaultPolicy	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! s:GetDefaultPolicy(curlnum)$/;"	f
GetEelixirIndent	pack/plugins/start/sheerun-vim-polyglot/indent/eelixir.vim	/^function! GetEelixirIndent(...)$/;"	f
GetElixirFilename	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elixir.vim	/^function! GetElixirFilename(word)$/;"	f
GetElixirIndent	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^function! GetElixirIndent()$/;"	f
GetEnvironmentList	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:GetEnvironmentList(lead, cmdline, pos)$/;"	f
GetErubyIndent	pack/plugins/start/sheerun-vim-polyglot/indent/eruby.vim	/^function! GetErubyIndent(...)$/;"	f
GetGitconfigIndent	pack/plugins/start/sheerun-vim-polyglot/indent/gitconfig.vim	/^function! GetGitconfigIndent()$/;"	f
GetGoHTMLTmplIndent	pack/plugins/start/fatih-vim-go/indent/gohtmltmpl.vim	/^function! GetGoHTMLTmplIndent(lnum)$/;"	f
GetGoHTMLTmplIndent	pack/plugins/start/sheerun-vim-polyglot/indent/gohtmltmpl.vim	/^function! GetGoHTMLTmplIndent(lnum)$/;"	f
GetHamlIndent	pack/plugins/start/sheerun-vim-polyglot/indent/haml.vim	/^function! GetHamlIndent()$/;"	f
GetHandlebarsIndent	pack/plugins/start/sheerun-vim-polyglot/indent/handlebars.vim	/^function! GetHandlebarsIndent(...)$/;"	f
GetHaskellIndent	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^function! GetHaskellIndent()$/;"	f
GetInd	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^function! s:GetInd(lnum, pat, lim)$/;"	f
GetIndtokenAtCol	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:GetIndtokenAtCol(indtokens, col)$/;"	f
GetJSONIndent	pack/plugins/start/sheerun-vim-polyglot/indent/json.vim	/^function GetJSONIndent()$/;"	f
GetJavascriptIndent	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^function GetJavascriptIndent()$/;"	f
GetJsIndent	pack/plugins/start/sheerun-vim-polyglot/indent/qml.vim	/^function! GetJsIndent()$/;"	f
GetJstIndent	pack/plugins/start/sheerun-vim-polyglot/indent/jst.vim	/^function! GetJstIndent(...)$/;"	f
GetJsxIndent	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^fu! GetJsxIndent()$/;"	f
GetJuliaIndent	pack/plugins/start/sheerun-vim-polyglot/indent/julia.vim	/^function GetJuliaIndent()$/;"	f
GetJuliaNestingStruct	pack/plugins/start/sheerun-vim-polyglot/indent/julia.vim	/^function GetJuliaNestingStruct(lnum)$/;"	f
GetKotlinIndent	pack/plugins/start/sheerun-vim-polyglot/indent/kotlin.vim	/^function! GetKotlinIndent()$/;"	f
GetLabelCache	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:GetLabelCache(file)$/;"	f
GetLineWithoutFullComment	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^function! s:GetLineWithoutFullComment(lnum)$/;"	f
GetLiquidIndent	pack/plugins/start/sheerun-vim-polyglot/indent/liquid.vim	/^function! GetLiquidIndent(...)$/;"	f
GetLiveScriptIndent	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! GetLiveScriptIndent(curlinenum)$/;"	f
GetLiveScriptIndent	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:GetLiveScriptIndent(curlinenum)$/;"	f
GetLuaIndent	pack/plugins/start/sheerun-vim-polyglot/indent/lua.vim	/^function GetLuaIndent()$/;"	f
GetMSL	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^function s:GetMSL(lnum)$/;"	f
GetMSL	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function s:GetMSL(lnum)$/;"	f
GetMSL	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:GetMSL(lnum, in_one_line_scope)$/;"	f
GetMSL	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:GetMSL(lnum, in_one_line_scope)$/;"	f
GetMakePrg	pack/plugins/start/sheerun-vim-polyglot/compiler/coffee.vim	/^function! s:GetMakePrg()$/;"	f
GetMakePrg	pack/plugins/start/sheerun-vim-polyglot/compiler/ls.vim	/^function! s:GetMakePrg()$/;"	f
GetMakoIndent	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^function GetMakoIndent()$/;"	f
GetMatch	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:GetMatch(curline)$/;"	f
GetModdedChar	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/input.vim	/^function! s:GetModdedChar(world) "{{{3$/;"	f
GetNextSequenceNumber	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^function! s:GetNextSequenceNumber()$/;"	f
GetNimIndent	pack/plugins/start/sheerun-vim-polyglot/indent/nim.vim	/^function! GetNimIndent(lnum)$/;"	f
GetNthElement	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/list.vim	/^function! s:GetNthElement(n, lists, default) "{{{3$/;"	f
GetOCamlIndent	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^function! GetOCamlIndent()$/;"	f
GetObjCIndentImproved	pack/plugins/start/sheerun-vim-polyglot/after/indent/objc.vim	/^function! GetObjCIndentImproved()$/;"	f
GetPair	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^  function s:GetPair(start,end,flags,n)$/;"	f
GetPair	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^  function s:GetPair(start,end,flags,time)$/;"	f
GetPerlIndent	pack/plugins/start/sheerun-vim-polyglot/indent/perl.vim	/^function! GetPerlIndent()$/;"	f
GetPlantUMLIndent	pack/plugins/start/sheerun-vim-polyglot/indent/plantuml.vim	/^function! GetPlantUMLIndent(...) abort$/;"	f
GetPotionFold	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cryptol/folding.vim	/^function! GetPotionFold(lnum)$/;"	f
GetPrevNormalLine	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! s:GetPrevNormalLine(startlnum)$/;"	f
GetPrevNormalLine	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:GetPrevNormalLine(startlinenum)$/;"	f
GetPugIndent	pack/plugins/start/sheerun-vim-polyglot/indent/pug.vim	/^function! GetPugIndent()$/;"	f
GetPuppetIndent	pack/plugins/start/sheerun-vim-polyglot/indent/puppet.vim	/^function! GetPuppetIndent()$/;"	f
GetPurescriptIndent	pack/plugins/start/sheerun-vim-polyglot/indent/purescript.vim	/^function! GetPurescriptIndent()$/;"	f
GetPythonPEPIndent	pack/plugins/start/sheerun-vim-polyglot/indent/python.vim	/^function! GetPythonPEPIndent(lnum)$/;"	f
GetRubyIndent	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function GetRubyIndent(...)$/;"	f
GetRubyVarType	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetRubyVarType(v)$/;"	f
GetRustIndent	pack/plugins/start/sheerun-vim-polyglot/indent/rust.vim	/^function GetRustIndent(lnum)$/;"	f
GetSID	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:GetSID()$/;"	f
GetSassIndent	pack/plugins/start/sheerun-vim-polyglot/indent/sass.vim	/^function! GetSassIndent()$/;"	f
GetScalaIndent	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! GetScalaIndent()$/;"	f
GetSlimIndent	pack/plugins/start/sheerun-vim-polyglot/indent/slim.vim	/^function! GetSlimIndent()$/;"	f
GetSolidityIndent	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function GetSolidityIndent()$/;"	f
GetStylusIndent	pack/plugins/start/sheerun-vim-polyglot/indent/stylus.vim	/^function! GetStylusIndent()$/;"	f
GetTag	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! s:GetTag(world, id) "{{{3$/;"	f
GetTokensFromLine	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:GetTokensFromLine(line, string_continuation, atom_continuation,$/;"	f
GetTrimmedLine	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! s:GetTrimmedLine(lnum)$/;"	f
GetTrimmedLine	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:GetTrimmedLine(linenum)$/;"	f
GetTwigIndent	pack/plugins/start/sheerun-vim-polyglot/indent/twig.vim	/^fun! GetTwigIndent(currentLineNumber)$/;"	f
GetTypescriptIndent	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function GetTypescriptIndent()$/;"	f
GetValueType	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/arg.vim	/^function! s:GetValueType(def) abort "{{{3$/;"	f
GetVarIndent	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:GetVarIndent(lnum)$/;"	f
GetVarIndent	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:GetVarIndent(lnum)$/;"	f
Getting Started	pack/plugins/start/lifepillar-vim-mucomplete/Readme.md	/^# Getting Started$/;"	h
Git	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Git(bang, args) abort$/;"	f
GitComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:GitComplete(A, L, P) abort$/;"	f
Global features (available from any window)	pack/plugins/start/romainl-vim-qf/README.md	/^### Global features (available from any window)$/;"	k
GoAddTags	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range GoAddTags call go#util#AddTags(<line1>, <line2>, <f-args>)$/;"	c
GoAlternate	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -bang GoAlternate call go#alternate#Switch(<bang>0, '')$/;"	c
GoAsmFmtAutoSaveToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoAsmFmtAutoSaveToggle call go#asmfmt#ToggleAsmFmtAutoSave()$/;"	c
GoAutoTypeInfoToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoAutoTypeInfoToggle call go#complete#ToggleAutoTypeInfo()$/;"	c
GoBuild	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoBuild call go#cmd#Build(<bang>0,<f-args>)$/;"	c
GoCallees	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallees call go#guru#Callees(<count>)$/;"	c
GoCallers	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallers call go#guru#Callers(<count>)$/;"	c
GoCallstack	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallstack call go#guru#Callstack(<count>)$/;"	c
GoChannelPeers	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoChannelPeers call go#guru#ChannelPeers(<count>)$/;"	c
GoCoverage	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverage call go#coverage#Buffer(<bang>0, <f-args>)$/;"	c
GoCoverageBrowser	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverageBrowser call go#coverage#Browser(<bang>0, <f-args>)$/;"	c
GoCoverageClear	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverageClear call go#coverage#Clear()$/;"	c
GoCoverageToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverageToggle call go#coverage#BufferToggle(<bang>0, <f-args>)$/;"	c
GoDecls	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^  command! -nargs=? -complete=file GoDecls call ctrlp#init(ctrlp#decls#cmd(0, <q-args>))$/;"	c
GoDeclsDir	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^  command! -nargs=? -complete=dir GoDeclsDir call ctrlp#init(ctrlp#decls#cmd(1, <q-args>))$/;"	c
GoDef	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range GoDef :call go#def#Jump('')$/;"	c
GoDefPop	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoDefPop :call go#def#StackPop(<f-args>)$/;"	c
GoDefStack	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoDefStack :call go#def#Stack(<f-args>)$/;"	c
GoDefStackClear	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoDefStackClear :call go#def#StackClear(<f-args>)$/;"	c
GoDeps	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoDeps echo go#tool#Deps()$/;"	c
GoDescribe	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoDescribe call go#guru#Describe(<count>)$/;"	c
GoDoc	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range -complete=customlist,go#package#Complete GoDoc call go#doc#Open('new', 'split', <f-args>)$/;"	c
GoDocBrowser	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range -complete=customlist,go#package#Complete GoDocBrowser call go#doc#OpenBrowser(<f-args>)$/;"	c
GoDrop	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -complete=customlist,go#package#Complete GoDrop call go#import#SwitchImport(0, '', <f-args>, '')$/;"	c
GoErrCheck	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -complete=customlist,go#package#Complete GoErrCheck call go#lint#Errcheck(<f-args>)$/;"	c
GoFiles	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFiles echo go#tool#Files()$/;"	c
GoFmt	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFmt call go#fmt#Format(-1)$/;"	c
GoFmtAutoSaveToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFmtAutoSaveToggle call go#fmt#ToggleFmtAutoSave()$/;"	c
GoFreevars	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoFreevars call go#guru#Freevars(<count>)$/;"	c
GoGenerate	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoGenerate call go#cmd#Generate(<bang>0,<f-args>)$/;"	c
GoGuruScope	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -complete=customlist,go#package#Complete GoGuruScope call go#guru#Scope(<f-args>)$/;"	c
GoGuruTags	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoGuruTags call go#guru#Tags(<f-args>)$/;"	c
GoImpl	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -buffer -complete=customlist,go#impl#Complete GoImpl call go#impl#Impl(<f-args>)$/;"	c
GoImplements	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoImplements call go#guru#Implements(<count>)$/;"	c
GoImport	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=1 -bang -complete=customlist,go#package#Complete GoImport call go#import#SwitchImport(1, '', <f-args>, '<bang>')$/;"	c
GoImportAs	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang -complete=customlist,go#package#Complete GoImportAs call go#import#SwitchImport(1, <f-args>, '<bang>')$/;"	c
GoImports	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoImports call go#fmt#Format(1)$/;"	c
GoIndent	pack/plugins/start/fatih-vim-go/indent/go.vim	/^function! GoIndent(lnum)$/;"	f
GoIndent	pack/plugins/start/sheerun-vim-polyglot/indent/go.vim	/^function! GoIndent(lnum)$/;"	f
GoInfo	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoInfo call go#tool#Info(0)$/;"	c
GoInstall	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoInstall call go#cmd#Install(<bang>0, <f-args>)$/;"	c
GoInstallBinaries	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^command! GoInstallBinaries call s:GoInstallBinaries(-1)$/;"	c
GoInstallBinaries	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:GoInstallBinaries(updateBinaries)$/;"	f
GoLint	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoLint call go#lint#Golint(<f-args>)$/;"	c
GoMetaLinter	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoMetaLinter call go#lint#Gometa(0, <f-args>)$/;"	c
GoMetaLinterAutoSaveToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoMetaLinterAutoSaveToggle call go#lint#ToggleMetaLinterAutoSave()$/;"	c
GoNeosnippet	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^function! s:GoNeosnippet()$/;"	f
GoPath	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^command! -nargs=? -complete=dir GoPath call go#path#GoPath(<f-args>)$/;"	c
GoPlay	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 -range=% GoPlay call go#play#Share(<count>, <line1>, <line2>)$/;"	c
GoReferrers	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoReferrers call go#guru#Referrers(<count>)$/;"	c
GoRename	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoRename call go#rename#Rename(<bang>0,<f-args>)$/;"	c
GoRun	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang -complete=file GoRun call go#cmd#Run(<bang>0,<f-args>)$/;"	c
GoSameIds	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIds call go#guru#SameIds()$/;"	c
GoSameIdsAutoToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIdsAutoToggle call go#guru#AutoToogleSameIds()$/;"	c
GoSameIdsClear	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIdsClear call go#guru#ClearSameIds()$/;"	c
GoSameIdsToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIdsToggle call go#guru#ToggleSameIds()$/;"	c
GoTemplateAutoCreateToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoTemplateAutoCreateToggle call go#template#ToggleAutoCreate()$/;"	c
GoTest	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTest call go#cmd#Test(<bang>0, 0, <f-args>)$/;"	c
GoTestCompile	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTestCompile call go#cmd#Test(<bang>0, 1, <f-args>)$/;"	c
GoTestFunc	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTestFunc call go#cmd#TestFunc(<bang>0, <f-args>)$/;"	c
GoUltiSnips	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^function! s:GoUltiSnips()$/;"	f
GoUpdateBinaries	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^command! GoUpdateBinaries call s:GoInstallBinaries(1)$/;"	c
GoVet	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoVet call go#lint#Vet(<bang>0, <f-args>)$/;"	c
GoWhicherrs	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoWhicherrs call go#guru#Whicherrs(<count>)$/;"	c
GodocView	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! s:GodocView(newposition, position, content) abort$/;"	f
Grep	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:Grep(bang,args,prg) abort$/;"	f
Grep	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Grep(cmd,bang,arg) abort$/;"	f
GroovyHiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/groovy.vim	/^  command! -nargs=+ GroovyHiLink hi def link <args>$/;"	c
GroovyHiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/groovy.vim	/^  command! -nargs=+ GroovyHiLink hi link <args>$/;"	c
Gutentags	pack/plugins/start/ludovicchabant-vim-gutentags/README.md	/^# Gutentags$/;"	h
GutentagsToggleEnabled	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleEnabled :let g:gutentags_enabled=!g:gutentags_enabled$/;"	c
GutentagsToggleFake	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleFake    :call gutentags#fake()$/;"	c
GutentagsToggleTrace	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleTrace   :call gutentags#toggletrace()$/;"	c
GutentagsUnlock	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^command! GutentagsUnlock :call gutentags#delete_lock_files()$/;"	c
HL	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:HL(group, fg, bg, attr)$/;"	f
HasSyntax	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:HasSyntax(syntaxName, ...)$/;"	f
HaskellDedent	pack/plugins/start/sheerun-vim-polyglot/indent/elm.vim	/^function s:HaskellDedent(isbs)$/;"	f
HaskellFormatImport	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haskell.vim	/^command! -buffer -range HaskellFormatImport call haskell#formatImport(<line1>, <line2>)$/;"	c
HaskellIndent	pack/plugins/start/sheerun-vim-polyglot/indent/elm.vim	/^function HaskellIndent()$/;"	f
HaskellSortImports	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haskell.vim	/^command! -buffer -range HaskellSortImports call haskell#sortImports(<line1>, <line2>)$/;"	c
HaxeHiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/haxe.vim	/^  command! -nargs=+ HaxeHiLink hi def link <args>$/;"	c
HaxeHiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/haxe.vim	/^  command! -nargs=+ HaxeHiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/after/syntax/cpp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/after/syntax/cpp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/extras/flow.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/extras/flow.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/extras/jsdoc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/extras/jsdoc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/cpp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/cpp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/cql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/cql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/cryptol.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/cryptol.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/css.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/css.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/erlang.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/erlang.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/jinja2.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/jinja2.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/lua.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/lua.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/mako.vim	/^    com -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/mako.vim	/^    com -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/mason.vim	/^		com -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/mason.vim	/^		com -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/ocaml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/ocaml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/octave.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/octave.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/perl.vim	/^command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/pgsql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/pgsql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/pod.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/pod.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/proto.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/proto.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/ps1.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/ps1.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/puppet.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/puppet.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/python.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/python.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/qml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/qml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/rhelp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/rhelp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/stylus.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/stylus.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/textile.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/textile.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/thrift.vim	/^    command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/thrift.vim	/^    command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/twig.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/twig.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/vbnet.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/vbnet.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/velocity.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/velocity.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/xs.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/xs.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
Highlighting Customization	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^## Highlighting Customization$/;"	i
History	pack/plugins/start/junegunn-fzf/src/history.go	/^type History struct {$/;"	t
History	pack/plugins/start/skywind3000-asyncrun-vim/README.md	/^## History$/;"	i
Home	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Home$/;"	c
How?	pack/plugins/start/ludovicchabant-vim-gutentags/README.md	/^## How?$/;"	i
HtmlHiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlHiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/mustache.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/mustache.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlIndentClose	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^fun! <SID>HtmlIndentClose(lnum, pattern)$/;"	f
HtmlIndentClose	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentClose(lnum)$/;"	f
HtmlIndentCloseAlt	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^fun! <SID>HtmlIndentCloseAlt(lnum)$/;"	f
HtmlIndentCloseAlt	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentCloseAlt(lnum)$/;"	f
HtmlIndentGet	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^fun! HtmlIndentGet(lnum)$/;"	f
HtmlIndentOpen	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^fun! <SID>HtmlIndentOpen(lnum, pattern)$/;"	f
HtmlIndentOpen	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentOpen(lnum)$/;"	f
HtmlIndentOpenAlt	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^fun! <SID>HtmlIndentOpenAlt(lnum)$/;"	f
HtmlIndentOpenAlt	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentOpenAlt(lnum)$/;"	f
HtmlIndentPush	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentPush(tag)$/;"	f
HtmlIndentSum	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^fun! <SID>HtmlIndentSum(lnum, style)$/;"	f
HtmlIndentSum	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentSum(lnum, style)$/;"	f
INDEX_WHOLE_PROJECT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        set INDEX_WHOLE_PROJECT=0$/;"	v
INDEX_WHOLE_PROJECT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set INDEX_WHOLE_PROJECT=1$/;"	v
Ilist	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^command! -nargs=1 -bar -bang Ilist call <sid>Qlist("i", 1, 0, '<bang>' == '!', <f-args>)$/;"	c
Improvements	pack/plugins/start/junegunn-fzf/CHANGELOG.md	/^### Improvements$/;"	k
InMultiVarStatement	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:InMultiVarStatement(lnum)$/;"	f
InMultiVarStatement	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:InMultiVarStatement(lnum)$/;"	f
InOneLineScope	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:InOneLineScope(lnum)$/;"	f
InOneLineScope	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:InOneLineScope(lnum)$/;"	f
IndentError	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:IndentError(msg, token, stack)$/;"	f
IndentLevel	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cryptol/folding.vim	/^function! IndentLevel(lnum)$/;"	f
IndentWithContinuation	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:IndentWithContinuation(lnum, ind, width)$/;"	f
IndentWithContinuation	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:IndentWithContinuation(lnum, ind, width)$/;"	f
Index	pack/plugins/start/junegunn-fzf/src/item.go	/^func (item *Item) Index() int32 {$/;"	f
Index	pack/plugins/start/junegunn-fzf/src/result.go	/^func (result *Result) Index() int32 {$/;"	f
Init	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func Init(theme *ColorTheme, black bool, mouse bool) {$/;"	f
Init	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func Init(theme *ColorTheme, black bool, mouse bool) {$/;"	f
Init	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/input.vim	/^function! s:Init(world, cmd) "{{{3$/;"	f
InitTheme	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^func InitTheme(theme *ColorTheme, black bool) {$/;"	f
Input	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) Input() []rune {$/;"	f
InsertSelectedItems	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:InsertSelectedItems(rv, current) "{{{3$/;"	f
Install	pack/plugins/start/fatih-vim-go/README.md	/^## Install$/;"	i
Install	pack/plugins/start/skywind3000-asyncrun-vim/README.md	/^## Install$/;"	i
Install shell extensions	pack/plugins/start/junegunn-fzf/README.md	/^# Install shell extensions$/;"	h
Install the executable to ../bin directory	pack/plugins/start/junegunn-fzf/src/README.md	/^# Install the executable to ..\/bin directory$/;"	h
Installation	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^## Installation$/;"	i
Installation	pack/colors/start/tomasr-molokai/README.md	/^## Installation$/;"	i
Installation	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^## Installation$/;"	i
Installation	pack/plugins/start/romainl-vim-qf/README.md	/^## Installation$/;"	i
Installation	pack/plugins/start/romainl-vim-qlist/README.md	/^## Installation$/;"	i
Installation	pack/plugins/start/sheerun-vim-polyglot/README.md	/^## Installation$/;"	i
Installation	pack/plugins/start/wellle-targets-vim/README.md	/^## Installation$/;"	i
Installation	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^## Installation$/;"	i
Installing Apprentice.	pack/colors/start/romainl-apprentice/README.md	/^## Installing Apprentice.$/;"	i
Installing Disciple.	pack/colors/start/romainl-disciple/README.md	/^## Installing Disciple.$/;"	i
Integration tests	pack/plugins/start/junegunn-fzf/src/README.md	/^# Integration tests$/;"	h
Introduction	pack/plugins/start/wellle-targets-vim/README.md	/^## Introduction$/;"	i
Invalid	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Invalid$/;"	c
IsBlock	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^function s:IsBlock()$/;"	f
IsCatchStandalone	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:IsCatchStandalone(lnum, i)$/;"	f
IsComment	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! s:IsComment(lnum, col)$/;"	f
IsComment	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:IsComment(linenum, col)$/;"	f
IsCommentLine	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:IsCommentLine(linenum)$/;"	f
IsCommentLine	pack/plugins/start/sheerun-vim-polyglot/indent/swift.vim	/^function! s:IsCommentLine(lnum)$/;"	f
IsCommentOrString	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! s:IsCommentOrString(lnum, col)$/;"	f
IsCommentOrString	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:IsCommentOrString(linenum, col)$/;"	f
IsEmpty	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func (p *Pattern) IsEmpty() bool {$/;"	f
IsExcludedFromIndent	pack/plugins/start/sheerun-vim-polyglot/indent/swift.vim	/^function! s:IsExcludedFromIndent()$/;"	f
IsExcludedFromIndentAtPosition	pack/plugins/start/sheerun-vim-polyglot/indent/swift.vim	/^function! s:IsExcludedFromIndentAtPosition(line, column)$/;"	f
IsFull	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^func (c *Chunk) IsFull() bool {$/;"	f
IsInClassDef	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! s:IsInClassDef()$/;"	f
IsInCommentOrString	pack/plugins/start/sheerun-vim-polyglot/indent/lua.vim	/^function s:IsInCommentOrString(lnum, col)$/;"	f
IsInMultilineComment	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:IsInMultilineComment(lnum, col)$/;"	f
IsInMultilineComment	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:IsInMultilineComment(lnum, col)$/;"	f
IsInString	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInString	pack/plugins/start/sheerun-vim-polyglot/indent/json.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInString	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInString	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInString	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInStringDelimiter	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^function s:IsInStringDelimiter(lnum, col)$/;"	f
IsInStringDelimiter	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function s:IsInStringDelimiter(lnum, col)$/;"	f
IsInStringOrComment	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrComment	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrComment	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrComment	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrDocumentation	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^function s:IsInStringOrDocumentation(lnum, col)$/;"	f
IsInStringOrDocumentation	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function s:IsInStringOrDocumentation(lnum, col)$/;"	f
IsInsidePythonBlock	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^function IsInsidePythonBlock(startline)$/;"	f
IsLineAtomContinuation	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:IsLineAtomContinuation(lnum)$/;"	f
IsLineComment	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:IsLineComment(lnum, col)$/;"	f
IsLineComment	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:IsLineComment(lnum, col)$/;"	f
IsLineStringContinuation	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:IsLineStringContinuation(lnum)$/;"	f
IsPosInClassDef	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! s:IsPosInClassDef(pos)$/;"	f
IsString	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! s:IsString(lnum, col)$/;"	f
IsString	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:IsString(linenum, col)$/;"	f
IsTty	pack/plugins/start/junegunn-fzf/src/util/util.go	/^func IsTty() bool {$/;"	f
IsUsefulReplOutput	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^function! s:IsUsefulReplOutput(str)$/;"	f
IsWindows	pack/plugins/start/junegunn-fzf/src/util/util_unix.go	/^func IsWindows() bool {$/;"	f
IsWindows	pack/plugins/start/junegunn-fzf/src/util/util_windows.go	/^func IsWindows() bool {$/;"	f
Issues	pack/plugins/start/wellle-targets-vim/README.md	/^## Issues$/;"	i
Italic	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^var Italic Attr = C.A_VERTICAL << 1 \/\/ FIXME$/;"	v
Italic	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	Italic         = Attr(tcell.AttrNone) \/\/ Not supported$/;"	c
Item	pack/plugins/start/junegunn-fzf/src/item.go	/^type Item struct {$/;"	t
ItemBuilder	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^type ItemBuilder func([]byte, int) *Item$/;"	t
ItemCount	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^function! s:ItemCount(string)$/;"	f
JuliaMatch	pack/plugins/start/sheerun-vim-polyglot/indent/julia.vim	/^function JuliaMatch(lnum, str, regex, st)$/;"	f
JumpInit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:JumpInit(...) abort$/;"	f
Jump_Back	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! s:Jump_Back()$/;"	f
Jump_Forward	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! s:Jump_Forward()$/;"	f
K	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> K :GoDoc<cr>$/;"	m
K	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^nnoremap <buffer> <expr> K col('.') < 7 && expand('<Lt>cword>') =~ '\\X' && getline('.') =~ '^\\w\\+\\s\\+\\x\\+\\>' ? 'wK' : 'K'$/;"	m
Keep	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=1 Keep call qf#FilterList(<q-args>, 0)$/;"	c
LOG_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set LOG_FILE=$/;"	v
LabelEnv	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^function! s:LabelEnv()$/;"	f
Language packs	pack/plugins/start/sheerun-vim-polyglot/README.md	/^## Language packs$/;"	i
LatexBoxNextSection	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^function! s:LatexBoxNextSection(type, backwards, visual)$/;"	f
LatexBox_BibComplete	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! LatexBox_BibComplete(regexp)$/;"	f
LatexBox_BibSearch	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! LatexBox_BibSearch(regexp)$/;"	f
LatexBox_Complete	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! LatexBox_Complete(findstart, base)$/;"	f
LatexBox_Completion	pack/plugins/start/sheerun-vim-polyglot/indent/tex.vim	/^	augroup LatexBox_Completion$/;"	a
LatexBox_FoldLevel	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^function! LatexBox_FoldLevel(lnum)$/;"	f
LatexBox_FoldOnDemand	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^function! LatexBox_FoldOnDemand()$/;"	f
LatexBox_FoldText	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^function! LatexBox_FoldText()$/;"	f
LatexBox_FoldText_title	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^function! LatexBox_FoldText_title()$/;"	f
LatexBox_GetAuxFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_GetAuxFile()$/;"	f
LatexBox_GetBuildBasename	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_GetBuildBasename(with_dir)$/;"	f
LatexBox_GetCurrentEnvironment	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_GetCurrentEnvironment(...)$/;"	f
LatexBox_GetLogFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_GetLogFile()$/;"	f
LatexBox_GetMainFileName	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/findmain.vim	/^function! LatexBox_GetMainFileName(...)$/;"	f
LatexBox_GetMainTexFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_GetMainTexFile()$/;"	f
LatexBox_GetOutputFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_GetOutputFile()$/;"	f
LatexBox_GetTexRoot	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_GetTexRoot()$/;"	f
LatexBox_HighlightPairs	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^	augroup LatexBox_HighlightPairs$/;"	a
LatexBox_InComment	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_InComment(...)$/;"	f
LatexBox_JumpToNextBraces	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^function! LatexBox_JumpToNextBraces(backward)$/;"	f
LatexBox_LatexErrors	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! LatexBox_LatexErrors(status, ...)$/;"	f
LatexBox_Latexmk	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! LatexBox_Latexmk(force)$/;"	f
LatexBox_LatexmkClean	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! LatexBox_LatexmkClean(cleanall)$/;"	f
LatexBox_LatexmkStatus	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! LatexBox_LatexmkStatus(detailed)$/;"	f
LatexBox_LatexmkStop	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! LatexBox_LatexmkStop(silent)$/;"	f
LatexBox_TOC	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^function! LatexBox_TOC(...)$/;"	f
LatexBox_TexIndent	pack/plugins/start/sheerun-vim-polyglot/indent/tex.vim	/^function! LatexBox_TexIndent()$/;"	f
LatexBox_TexToTree	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_TexToTree(str)$/;"	f
LatexBox_TreeToTex	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_TreeToTex(tree)$/;"	f
LatexBox_View	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_View(...)$/;"	f
LatexBox_complete_inlineMath_or_not	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:LatexBox_complete_inlineMath_or_not()$/;"	f
LatexBox_inlineMath_completion	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:LatexBox_inlineMath_completion(regex, ...)$/;"	f
LatexBox_inlineMath_mathlist	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:LatexBox_inlineMath_mathlist(line,inline_pattern, line_num)$/;"	f
LatexBox_kpsewhich	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! LatexBox_kpsewhich(file)$/;"	f
LatexErrors	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^command! LatexErrors			call LatexBox_LatexErrors(-1)$/;"	c
LatexFold	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^command! LatexFold  call LatexBox_FoldOnDemand()$/;"	c
LatexLabels	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^command! LatexLabels call <SID>PromptLabelList()$/;"	c
LatexTOC	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^command! LatexTOC call LatexBox_TOC()$/;"	c
LatexTOCToggle	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^command! LatexTOCToggle call LatexBox_TOC(1)$/;"	c
LatexToggleStarEnv	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:LatexToggleStarEnv()$/;"	f
LatexView	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^command! -nargs=* LatexView call LatexBox_View('<args>')$/;"	c
Latexbox_CallIndent	pack/plugins/start/sheerun-vim-polyglot/indent/tex.vim	/^function! Latexbox_CallIndent()$/;"	f
Latexmk	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^command! -bang	Latexmk			call LatexBox_Latexmk(<q-bang> == "!")$/;"	c
LatexmkCallback	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:LatexmkCallback(basename, status)$/;"	f
LatexmkClean	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^command! -bang	LatexmkClean	call LatexBox_LatexmkClean(<q-bang> == "!")$/;"	c
LatexmkSetPID	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:LatexmkSetPID(basename, pid)$/;"	f
LatexmkStatus	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^command! -bang	LatexmkStatus	call LatexBox_LatexmkStatus(<q-bang> == "!")$/;"	c
LatexmkStop	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^command! LatexmkStop			call LatexBox_LatexmkStop(0)$/;"	c
Left	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Left$/;"	c
Len	pack/plugins/start/junegunn-fzf/src/result.go	/^func (a ByOrder) Len() int {$/;"	f
Len	pack/plugins/start/junegunn-fzf/src/result.go	/^func (a ByRelevance) Len() int {$/;"	f
Len	pack/plugins/start/junegunn-fzf/src/result.go	/^func (a ByRelevanceTac) Len() int {$/;"	f
Len	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (a byTimeOrder) Len() int {$/;"	f
Length	pack/plugins/start/junegunn-fzf/src/merger.go	/^func (mg *Merger) Length() int {$/;"	f
Length	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^func (chars *Chars) Length() int {$/;"	f
Less	pack/plugins/start/junegunn-fzf/src/result.go	/^func (a ByOrder) Less(i, j int) bool {$/;"	f
Less	pack/plugins/start/junegunn-fzf/src/result.go	/^func (a ByRelevance) Less(i, j int) bool {$/;"	f
Less	pack/plugins/start/junegunn-fzf/src/result.go	/^func (a ByRelevanceTac) Less(i, j int) bool {$/;"	f
Less	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (a byTimeOrder) Less(i, j int) bool {$/;"	f
License	pack/plugins/start/fatih-vim-go/README.md	/^## License$/;"	i
License	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^## License$/;"	i
License	pack/plugins/start/sheerun-vim-polyglot/README.md	/^## License$/;"	i
Light256	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Light256      *ColorTheme$/;"	v
Lightline and Airline themes	pack/colors/start/romainl-apprentice/README.md	/^## Lightline and Airline themes$/;"	i
LineHasOpeningBrackets	pack/plugins/start/sheerun-vim-polyglot/indent/json.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
LineHasOpeningBrackets	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
LineHasOpeningBrackets	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
ListLists	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer ListLists call qf#ListLists()$/;"	c
LiveScriptCompile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ls.vim	/^\\        LiveScriptCompile call s:LiveScriptCompile(<line1>, <line2>, <q-args>)$/;"	c
LiveScriptCompile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompile(startline, endline, args)$/;"	f
LiveScriptCompileClose	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileClose()$/;"	f
LiveScriptCompileComplete	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileComplete(arg, cmdline, cursor)$/;"	f
LiveScriptCompileResetVars	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileResetVars()$/;"	f
LiveScriptCompileUpdate	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileUpdate(startline, endline)$/;"	f
LiveScriptCompileWatchUpdate	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileWatchUpdate()$/;"	f
LiveScriptMake	pack/plugins/start/sheerun-vim-polyglot/compiler/ls.vim	/^command! -bang -bar -nargs=* LiveScriptMake make<bang> <args>$/;"	c
LiveScriptRun	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ls.vim	/^command! -range=% -bar LiveScriptRun <line1>,<line2>:w !lsc -sp$/;"	c
LiveScriptUpdateMakePrg	pack/plugins/start/sheerun-vim-polyglot/compiler/ls.vim	/^augroup LiveScriptUpdateMakePrg$/;"	a
LoadList	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=+ -complete=customlist,qf#CompleteList LoadList    call qf#LoadList(0, <q-args>)$/;"	c
LoadListAdd	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=+ -complete=customlist,qf#CompleteList LoadListAdd call qf#LoadList(1, <q-args>)$/;"	c
Load_Settings_Override	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:Load_Settings_Override(custom)$/;"	f
Local features (available only in location/quickfix windows)	pack/plugins/start/romainl-vim-qf/README.md	/^### Local features (available only in location\/quickfix windows)$/;"	k
Locate	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -complete=file -nargs=+ Locate exe s:Grep(<q-bang>, <q-args>, 'locate')$/;"	c
Log	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:Log(s)$/;"	f
Log	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Log(cmd, line1, line2, ...) abort$/;"	f
Loop	pack/plugins/start/junegunn-fzf/src/matcher.go	/^func (m *Matcher) Loop() {$/;"	f
Loop	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) Loop() {$/;"	f
LoopParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^:LoopParseArgs$/;"	l
LoopParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:LoopParseArgs$/;"	l
MUcomplete	pack/plugins/start/lifepillar-vim-mucomplete/Readme.md	/^# MUcomplete$/;"	h
MUcomplete in action	pack/plugins/start/lifepillar-vim-mucomplete/Readme.md	/^# MUcomplete in action$/;"	h
MUcompleteAutoOff	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    command -bar -nargs=0 MUcompleteAutoOff :call mucomplete#disable_auto()$/;"	c
MUcompleteAutoOn	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    command -bar -nargs=0 MUcompleteAutoOn :call mucomplete#enable_auto()$/;"	c
MUcompleteAutoToggle	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    command -bar -nargs=0 MUcompleteAutoToggle :call mucomplete#toggle_auto()$/;"	c
MakeQFE	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! s:MakeQFE(tag) "{{{3$/;"	f
MakeQFL	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! s:MakeQFL(tags) "{{{3$/;"	f
MakeSlab	pack/plugins/start/junegunn-fzf/src/util/slab.go	/^func MakeSlab(size16 int, size32 int) *Slab {$/;"	f
MakoIndentClose	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^fun! <SID>MakoIndentClose(lnum)$/;"	f
MakoIndentOpen	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^fun! <SID>MakoIndentOpen(lnum)$/;"	f
MakoIndentPush	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^fun! <SID>MakoIndentPush(tag)$/;"	f
Manual	pack/plugins/start/skywind3000-asyncrun-vim/README.md	/^## Manual$/;"	i
Map	pack/plugins/start/sheerun-vim-polyglot/indent/twig.vim	/^function! s:Map(Fun, list)$/;"	f
Mappings	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^## Mappings$/;"	i
Match	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func (p *Pattern) Match(chunk *Chunk, slab *util.Slab) []*Result {$/;"	f
Match	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^function s:Match(lnum, regex)$/;"	f
Match	pack/plugins/start/sheerun-vim-polyglot/indent/json.vim	/^function s:Match(lnum, regex)$/;"	f
Match	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function s:Match(lnum, regex)$/;"	f
Match	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:Match(lnum, regex)$/;"	f
Match	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:Match(lnum, regex)$/;"	f
MatchCount	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^fun! <SID>MatchCount(expr, pat)$/;"	f
MatchData	pack/plugins/start/junegunn-fzf/fzf	/^    class MatchData$/;"	c	class:start_search.Matcher
MatchItem	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func (p *Pattern) MatchItem(item *Item, withPos bool, slab *util.Slab) (*Result, []Offset, *[]int) {$/;"	f
MatchRequest	pack/plugins/start/junegunn-fzf/src/matcher.go	/^type MatchRequest struct {$/;"	t
Matcher	pack/plugins/start/junegunn-fzf/fzf	/^  class Matcher$/;"	c	class:start_search
Matcher	pack/plugins/start/junegunn-fzf/src/matcher.go	/^type Matcher struct {$/;"	t
Max	pack/plugins/start/junegunn-fzf/src/util/util.go	/^func Max(first int, second int) int {$/;"	f
Max16	pack/plugins/start/junegunn-fzf/src/util/util.go	/^func Max16(first int16, second int16) int16 {$/;"	f
Max32	pack/plugins/start/junegunn-fzf/src/util/util.go	/^func Max32(first int32, second int32) int32 {$/;"	f
MaxLookback	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:MaxLookback(startlinenum)$/;"	f
MaxX	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func MaxX() int {$/;"	f
MaxX	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func MaxX() int {$/;"	f
MaxY	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func MaxY() int {$/;"	f
MaxY	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func MaxY() int {$/;"	f
Merge	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (a Attr) Merge(b Attr) Attr {$/;"	f
Merge	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (a Attr) Merge(b Attr) Attr {$/;"	f
Merge	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Merge(cmd, bang, args) abort$/;"	f
Merger	pack/plugins/start/junegunn-fzf/src/merger.go	/^type Merger struct {$/;"	t
Min	pack/plugins/start/junegunn-fzf/src/util/util.go	/^func Min(first int, second int) int {$/;"	f
Min	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^function! s:Min(...)$/;"	f
Min32	pack/plugins/start/junegunn-fzf/src/util/util.go	/^func Min32(first int32, second int32) int32 {$/;"	f
Minor improvements/fixes	pack/plugins/start/junegunn-fzf/CHANGELOG.md	/^### Minor improvements\/fixes$/;"	k
Mkdir	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -nargs=? -complete=dir Mkdir$/;"	c
Molokai Color Scheme for Vim	pack/colors/start/tomasr-molokai/README.md	/^# Molokai Color Scheme for Vim$/;"	h
More	pack/plugins/start/skywind3000-asyncrun-vim/README.md	/^## More$/;"	i
More info	pack/plugins/start/fatih-vim-go/README.md	/^## More info$/;"	i
Motivation	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^## Motivation$/;"	i
Mouse	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Mouse$/;"	c
MouseEvent	pack/plugins/start/junegunn-fzf/fzf	/^  class MouseEvent$/;"	c	class:start_search
MouseEvent	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^type MouseEvent struct {$/;"	t
Move	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (w *Window) Move(y int, x int) {$/;"	f
Move	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) Move(y int, x int) {$/;"	f
Move	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=1 -bang -complete=file Move :$/;"	c
Move	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Move(force,destination) abort$/;"	f
MoveAndClear	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (w *Window) MoveAndClear(y int, x int) {$/;"	f
MoveAndClear	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) MoveAndClear(y int, x int) {$/;"	f
MoveComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:MoveComplete(A,L,P) abort$/;"	f
MultipleSearch	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^    function! MultipleSearch(allBuffers, forwhat)$/;"	f
MultipleSearch#MultipleSearch	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^    function! MultipleSearch#MultipleSearch(allBuffers, forwhat)$/;"	f
MultipleSearchCommon	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^function! s:MultipleSearchCommon(allBuffers, forwhat)$/;"	f
MultipleSearchInit	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^function! s:MultipleSearchInit()$/;"	f
MultipleSearchReset	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^function! s:MultipleSearchReset(allBuffers)$/;"	f
Neovim terminal theme	pack/colors/start/romainl-apprentice/README.md	/^## Neovim terminal theme$/;"	i
New features	pack/plugins/start/junegunn-fzf/CHANGELOG.md	/^### New features$/;"	k
NewAtomicBool	pack/plugins/start/junegunn-fzf/src/util/atomicbool.go	/^func NewAtomicBool(initialState bool) *AtomicBool {$/;"	f
NewChunkCache	pack/plugins/start/junegunn-fzf/src/cache.go	/^func NewChunkCache() ChunkCache {$/;"	f
NewChunkList	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^func NewChunkList(trans ItemBuilder) *ChunkList {$/;"	f
NewEventBox	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^func NewEventBox() *EventBox {$/;"	f
NewHistory	pack/plugins/start/junegunn-fzf/src/history.go	/^func NewHistory(path string, maxSize int) (*History, error) {$/;"	f
NewMatcher	pack/plugins/start/junegunn-fzf/src/matcher.go	/^func NewMatcher(patternBuilder func([]rune) *Pattern,$/;"	f
NewMerger	pack/plugins/start/junegunn-fzf/src/merger.go	/^func NewMerger(pattern *Pattern, lists [][]*Result, sorted bool, tac bool) *Merger {$/;"	f
NewTerminal	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func NewTerminal(opts *Options, eventBox *util.EventBox) *Terminal {$/;"	f
NewWindow	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func NewWindow(top int, left int, width int, height int, border bool) *Window {$/;"	f
NewWindow	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func NewWindow(top int, left int, width int, height int, border bool) *Window {$/;"	f
News	pack/plugins/start/skywind3000-asyncrun-vim/README.md	/^## News$/;"	i
Next and Last Argument	pack/plugins/start/wellle-targets-vim/README.md	/^### Next and Last Argument$/;"	k
Next and Last Pair	pack/plugins/start/wellle-targets-vim/README.md	/^### Next and Last Pair$/;"	k
Next and Last Quote	pack/plugins/start/wellle-targets-vim/README.md	/^### Next and Last Quote$/;"	k
Next and Last Separator	pack/plugins/start/wellle-targets-vim/README.md	/^### Next and Last Separator$/;"	k
NextCharsMatch	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:NextCharsMatch(regex)$/;"	f
NextIndToken	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:NextIndToken(lnum, i)$/;"	f
NextNonBlankLine	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cryptol/folding.vim	/^function! NextNonBlankLine(lnum)$/;"	f
NextSection	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^function! s:NextSection(backwards)$/;"	f
NilClass	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^class NilClass$/;"	c
No Ruby dependency	pack/plugins/start/junegunn-fzf/src/README.md	/^### No Ruby dependency$/;"	k
NoTags	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! s:NoTags() "{{{3$/;"	f
NofrilsAcme	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsAcme :colo nofrils-acme$/;"	c
NofrilsAcme	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsAcme :colo nofrils-acme$/;"	c
NofrilsAcme	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsAcme :colo nofrils-acme$/;"	c
NofrilsAcme	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsAcme :colo nofrils-acme$/;"	c
NofrilsDark	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsDark :colo nofrils-dark$/;"	c
NofrilsDark	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsDark :colo nofrils-dark$/;"	c
NofrilsDark	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsDark :colo nofrils-dark$/;"	c
NofrilsDark	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsDark :colo nofrils-dark$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsFocusCode :call NofrilsFocusCode()$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^function! NofrilsFocusCode()$/;"	f
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsFocusCode :call NofrilsFocusCode()$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^function! NofrilsFocusCode()$/;"	f
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsFocusCode :call NofrilsFocusCode()$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^function! NofrilsFocusCode()$/;"	f
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsFocusCode :call NofrilsFocusCode()$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^function! NofrilsFocusCode()$/;"	f
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsFocusComments :call NofrilsFocusComments()$/;"	c
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^function! NofrilsFocusComments()$/;"	f
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsFocusComments :call NofrilsFocusComments()$/;"	c
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^function! NofrilsFocusComments()$/;"	f
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsFocusComments :call NofrilsFocusComments()$/;"	c
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^function! NofrilsFocusComments()$/;"	f
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsFocusComments :call NofrilsFocusComments()$/;"	c
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^function! NofrilsFocusComments()$/;"	f
NofrilsFocusNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsFocusNormal :call NofrilsNormal()$/;"	c
NofrilsFocusNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsFocusNormal :call NofrilsNormal()$/;"	c
NofrilsFocusNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsFocusNormal :call NofrilsNormal()$/;"	c
NofrilsFocusNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsFocusNormal :call NofrilsNormal()$/;"	c
NofrilsLight	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsLight :colo nofrils-light$/;"	c
NofrilsLight	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsLight :colo nofrils-light$/;"	c
NofrilsLight	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsLight :colo nofrils-light$/;"	c
NofrilsLight	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsLight :colo nofrils-light$/;"	c
NofrilsNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^function! NofrilsNormal()$/;"	f
NofrilsNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^function! NofrilsNormal()$/;"	f
NofrilsNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^function! NofrilsNormal()$/;"	f
NofrilsNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^function! NofrilsNormal()$/;"	f
NofrilsSepia	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsSepia :colo nofrils-sepia$/;"	c
NofrilsSepia	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsSepia :colo nofrils-sepia$/;"	c
NofrilsSepia	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsSepia :colo nofrils-sepia$/;"	c
NofrilsSepia	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsSepia :colo nofrils-sepia$/;"	c
NotSupport	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! s:NotSupport()$/;"	f
Notes	pack/plugins/start/wellle-targets-vim/README.md	/^## Notes$/;"	i
Now fzf (w/o pipe) will use ag instead of find	pack/plugins/start/junegunn-fzf/README.md	/^# Now fzf (w\/o pipe) will use ag instead of find$/;"	h
NumberOfMatches	pack/plugins/start/sheerun-vim-polyglot/indent/swift.vim	/^function! s:NumberOfMatches(char, string, index)$/;"	f
O	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^        nnoremap <buffer> O <CR>:cclose<CR>$/;"	m
O	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^        nnoremap <buffer> O <CR>:lclose<CR>$/;"	m
OCamlGotoDefinition	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^fun! OCamlGotoDefinition(current_mode)$/;"	f
OCamlParseAnnot	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^fun! OCamlParseAnnot()$/;"	f
OCamlPrintType	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^fun! OCamlPrintType(current_mode)$/;"	f
OCaml_switch	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  fun OCaml_switch(newwin)$/;"	f
OMLetFoldLevel	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^function OMLetFoldLevel(l)$/;"	f
Offset	pack/plugins/start/junegunn-fzf/src/result.go	/^type Offset [2]int32$/;"	t
OneScope	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^function s:OneScope(lnum,text,add)$/;"	f
OpenBrace	pack/plugins/start/sheerun-vim-polyglot/indent/puppet.vim	/^function! s:OpenBrace(lnum)$/;"	f
OpenWindow	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function s:OpenWindow(prefix)$/;"	f
Optional	pack/plugins/start/fatih-vim-go/README.md	/^### Optional$/;"	k
Options	pack/plugins/start/junegunn-fzf/src/options.go	/^type Options struct {$/;"	t
Options	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^## Options$/;"	i
Options to fzf command	pack/plugins/start/junegunn-fzf/README.md	/^# Options to fzf command$/;"	h
Overview	pack/plugins/start/wellle-targets-vim/README.md	/^## Overview$/;"	i
PAUSE_BEFORE_EXIT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set PAUSE_BEFORE_EXIT=1$/;"	v
PAUSE_BEFORE_EXIT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set PAUSE_BEFORE_EXIT=0$/;"	v
PROJECT_ROOT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set PROJECT_ROOT=%~2$/;"	v
PROJECT_ROOT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set PROJECT_ROOT=$/;"	v
PROJ_ROOT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set PROJ_ROOT=%~2$/;"	v
Pair Seek	pack/plugins/start/wellle-targets-vim/README.md	/^### Pair Seek$/;"	k
Pair Text Objects	pack/plugins/start/wellle-targets-vim/README.md	/^## Pair Text Objects$/;"	i
Pair mappings	pack/plugins/start/wellle-targets-vim/cheatsheet.md	/^## Pair mappings$/;"	i
PairFor	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func PairFor(fg Color, bg Color) ColorPair {$/;"	f
PairFor	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func PairFor(fg Color, bg Color) ColorPair {$/;"	f
PaperColor_GenerateSpecs	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! g:PaperColor_GenerateSpecs()$/;"	f
PaperColor_Test	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! g:PaperColor_Test()$/;"	f
ParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^:ParseArgs$/;"	l
ParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:ParseArgs$/;"	l
ParseArgs	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! s:ParseArgs(keyargs_as_string) "{{{3$/;"	f
ParseCoffeeError	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:ParseCoffeeError(output, src, startline)$/;"	f
ParseOptions	pack/plugins/start/junegunn-fzf/src/options.go	/^func ParseOptions() *Options {$/;"	f
ParseRange	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^func ParseRange(str *string) (Range, bool) {$/;"	f
PartOfInclude	pack/plugins/start/sheerun-vim-polyglot/indent/puppet.vim	/^function! s:PartOfInclude(lnum)$/;"	f
PassMerger	pack/plugins/start/junegunn-fzf/src/merger.go	/^func PassMerger(chunks *[]*Chunk, tac bool) *Merger {$/;"	f
Pattern	pack/plugins/start/junegunn-fzf/src/pattern.go	/^type Pattern struct {$/;"	t
Pause	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func Pause() {$/;"	f
Pause	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func Pause() {$/;"	f
Peek	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^func (b *EventBox) Peek(event EventType) bool {$/;"	f
Performance	pack/plugins/start/junegunn-fzf/src/README.md	/^### Performance$/;"	k
PgDn	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	PgDn$/;"	c
PgUp	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	PgUp$/;"	c
Pick	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar Pick   :call s:choose('pick')$/;"	c
Pop	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:Pop(stack)$/;"	f
PopupmenuExists	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/input.vim	/^function! s:PopupmenuExists()$/;"	f
Preface	pack/plugins/start/skywind3000-asyncrun-vim/README.md	/^## Preface$/;"	i
PrefixMatch	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func PrefixMatch(caseSensitive bool, forward bool, text util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
Preparing your environment.	pack/colors/start/romainl-apprentice/README.md	/^## Preparing your environment.$/;"	i
Preparing your environment.	pack/colors/start/romainl-disciple/README.md	/^## Preparing your environment.$/;"	i
Prerequisites	pack/plugins/start/junegunn-fzf/BUILD.md	/^### Prerequisites$/;"	k
PrevCodeLine	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^function s:PrevCodeLine(lnum)$/;"	f
PrevIndToken	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:PrevIndToken(lnum, i)$/;"	f
PrevLineOfCode	pack/plugins/start/sheerun-vim-polyglot/indent/lua.vim	/^function s:PrevLineOfCode(lnum)$/;"	f
PrevNonBlankNonString	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
PrevNonBlankNonString	pack/plugins/start/sheerun-vim-polyglot/indent/json.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
PrevNonBlankNonString	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
PrevNonBlankNonString	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
PrevNonBlankNonString	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
Previous releases	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## Previous releases$/;"	i
Print	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (w *Window) Print(text string) {$/;"	f
Print	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) Print(text string) {$/;"	f
PrintFormat	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/string.vim	/^function! s:PrintFormat(format, string) "{{{3$/;"	f
PrintMe	pack/plugins/start/tomtom-tlib-vim/samples/tlib/input/tlib_input_list.vim	/^function! PrintMe(state, items) "{{{3$/;"	f
PrintString	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) PrintString(text string, pair ColorPair, a Attr) {$/;"	f
PromptEnvWrapSelection	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:PromptEnvWrapSelection(...)$/;"	f
PromptForMainFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! s:PromptForMainFile()$/;"	f
PromptLabelList	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:PromptLabelList(...)$/;"	f
PurgeTimestamp	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cache.vim	/^function! s:PurgeTimestamp(dir) "{{{3$/;"	f
Push	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^func (cl *ChunkList) Push(data []byte) bool {$/;"	f
Push	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:Push(stack, token)$/;"	f
Qlist	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^function! s:Qlist(command, selection, start_at_cursor, force, ...)$/;"	f
Quote Seek	pack/plugins/start/wellle-targets-vim/README.md	/^### Quote Seek$/;"	k
Quote Text Objects	pack/plugins/start/wellle-targets-vim/README.md	/^## Quote Text Objects$/;"	i
Quote mappings	pack/plugins/start/wellle-targets-vim/cheatsheet.md	/^## Quote mappings$/;"	i
RELEASE32	pack/plugins/start/junegunn-fzf/src/Makefile	/^RELEASE32   := fzf-$(VERSION)-$(GOOS)_386$/;"	m
RELEASE64	pack/plugins/start/junegunn-fzf/src/Makefile	/^RELEASE64   := fzf-$(VERSION)-$(GOOS)_amd64$/;"	m
RELEASEARM7	pack/plugins/start/junegunn-fzf/src/Makefile	/^RELEASEARM7 := fzf-$(VERSION)-$(GOOS)_arm7$/;"	m
ROOTDIR	pack/plugins/start/junegunn-fzf/src/Makefile	/^ROOTDIR     := $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))$/;"	m
Range	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^type Range struct {$/;"	t
ReadOnPath	pack/plugins/start/sheerun-vim-polyglot/syntax/ragel.vim	/^fun! <SID>ReadOnPath(script)$/;"	f
ReadSource	pack/plugins/start/junegunn-fzf/src/reader.go	/^func (r *Reader) ReadSource() {$/;"	f
ReadTOC	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:ReadTOC(auxfile, texfile, ...)$/;"	f
Reader	pack/plugins/start/junegunn-fzf/src/reader.go	/^type Reader struct {$/;"	t
Refresh	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func Refresh() {$/;"	f
Refresh	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func Refresh() {$/;"	f
RefreshWindows	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func RefreshWindows(windows []*Window) {$/;"	f
RefreshWindows	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func RefreshWindows(windows []*Window) {$/;"	f
RehighlightBlame	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:RehighlightBlame() abort$/;"	f
Reject	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=1 Reject call qf#FilterList(<q-args>, 1)$/;"	c
Related Projects Based On PaperColor	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^# Related Projects Based On PaperColor$/;"	h
RemoteComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:RemoteComplete(A, L, P) abort$/;"	f
Remove	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang Remove$/;"	c
Remove	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Remove(force) abort$/;"	f
RemoveList	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=* -bang -complete=customlist,qf#CompleteList RemoveList call qf#RemoveList(expand("<bang>") == "!" ? 1 : 0, <q-args>)$/;"	c
RemoveTrailingComments	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:RemoveTrailingComments(content)$/;"	f
RemoveTrailingComments	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:RemoveTrailingComments(content)$/;"	f
Rename	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=1 -bang -complete=custom,s:Rename_complete Rename$/;"	c
Rename_complete	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:Rename_complete(A, L, P) abort$/;"	f
ReplaceCmd	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
Reset	pack/plugins/start/junegunn-fzf/src/matcher.go	/^func (m *Matcher) Reset(chunks []*Chunk, patternRunes []rune, cancel bool, final bool, sort bool) {$/;"	f
Resize	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Resize$/;"	c
Restore	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer Restore call qf#RestoreList()$/;"	c
RestoreFrameParams	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/vim.vim	/^function! s:RestoreFrameParams() "{{{3$/;"	f
Result	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^type Result struct {$/;"	t
Result	pack/plugins/start/junegunn-fzf/src/result.go	/^type Result struct {$/;"	t
Resume	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func Resume() bool {$/;"	f
Resume	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func Resume() bool {$/;"	f
Reverse	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	Reverse        = C.A_REVERSE$/;"	c
Reverse	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	Reverse        = Attr(tcell.AttrReverse)$/;"	c
RevisionComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:RevisionComplete(A, L, P) abort$/;"	f
Reword	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar Reword :call s:choose('reword')$/;"	c
RewriteFormatString	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/string.vim	/^function! s:RewriteFormatString(format, pattern, string) "{{{3$/;"	f
Right	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Right$/;"	c
RmDir	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! s:RmDir(path)$/;"	f
RubyBalloonexpr	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^function! RubyBalloonexpr() abort$/;"	f
RubyCursorFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^function! RubyCursorFile() abort$/;"	f
RubyCursorIdentifier	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^function! RubyCursorIdentifier() abort$/;"	f
Run	pack/plugins/start/junegunn-fzf/src/core.go	/^func Run(opts *Options) {$/;"	f
Run	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! s:Run(dict, rustc_args, args)$/;"	f
RunStateHandlers	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/input.vim	/^function! s:RunStateHandlers(world) "{{{3$/;"	f
Rune	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Rune = iota$/;"	c
RunesToChars	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^func RunesToChars(runes []rune) Chars {$/;"	f
RustEmitAsm	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -buffer RustEmitAsm call rust#Emit("asm", <q-args>)$/;"	c
RustEmitIr	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -buffer RustEmitIr call rust#Emit("llvm-ir", <q-args>)$/;"	c
RustExpand	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -complete=customlist,rust#CompleteExpand -bang -buffer RustExpand call rust#Expand(<bang>0, <q-args>)$/;"	c
RustFmt	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^command! -buffer RustFmt call rustfmt#Format()$/;"	c
RustPlay	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^command! -range=% RustPlay :call rust#Play(<count>, <line1>, <line2>, <f-args>)$/;"	c
RustRun	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -complete=file -bang -buffer RustRun call rust#Run(<bang>0, <q-args>)$/;"	c
S	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^  nmap S <Plug>Sneak_S$/;"	m
S	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^  command -nargs=1 -bang -bar -range=0 -complete=custom,s:SubComplete S$/;"	c
SHELL	pack/plugins/start/junegunn-fzf/src/Makefile	/^	SHELL=\/bin\/sh GOOS=$(GOOS) go test -v -tags "$(TAGS)" .\/...$/;"	m
SID	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function s:SID() abort$/;"	f
SIDWrap	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:SIDWrap(func)$/;"	f
SIDWrap	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:SIDWrap(func)$/;"	f
SLeft	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	SLeft$/;"	c
SOURCES	pack/plugins/start/junegunn-fzf/src/Makefile	/^SOURCES     := $(wildcard *.go *\/*.go)$/;"	m
SRCDIR	pack/plugins/start/junegunn-fzf/src/Makefile	/^SRCDIR      := $(GOPATH)\/src\/github.com\/junegunn\/fzf\/src$/;"	m
SRight	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	SRight$/;"	c
Sample	pack/plugins/start/fatih-vim-go/t/fixtures/src/buildfail/sample.go	/^func Sample() int {$/;"	f
Sample	pack/plugins/start/fatih-vim-go/t/fixtures/src/buildtestfail/sample.go	/^func Sample() int {$/;"	f
Sample	pack/plugins/start/fatih-vim-go/t/fixtures/src/failtest/sample.go	/^func Sample() int {$/;"	f
Sample	pack/plugins/start/fatih-vim-go/t/fixtures/src/pkg1/sample.go	/^func Sample() int {$/;"	f
SaveFrameParams	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/vim.vim	/^function! s:SaveFrameParams() "{{{3$/;"	f
SaveList	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=? -complete=customlist,qf#CompleteList SaveList    call qf#SaveList(0, <q-args>)$/;"	c
SaveListAdd	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=? -complete=customlist,qf#CompleteList SaveListAdd call qf#SaveList(1, <q-args>)$/;"	c
ScratchBufBuild	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:ScratchBufBuild(src, vert, size)$/;"	f
ScratchBufUpdate	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:ScratchBufUpdate(buf, text)$/;"	f
Screenshots	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^## Screenshots$/;"	i
ScriptWrite	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! s:ScriptWrite(command, pause)$/;"	f
Search	pack/plugins/start/vim-scripts-multiplesearch/plugin/MultipleSearch.vim	/^        command -nargs=* Search :silent call MultipleSearch#MultipleSearch(0, <q-args>)$/;"	c
Search	pack/plugins/start/vim-scripts-multiplesearch/plugin/MultipleSearch.vim	/^        command -nargs=* Search :silent call MultipleSearch(0, <q-args>)$/;"	c
SearchAndSkipComments	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:SearchAndSkipComments(pat, ...)$/;"	f
SearchBuffers	pack/plugins/start/vim-scripts-multiplesearch/plugin/MultipleSearch.vim	/^        command -nargs=* SearchBuffers :silent call MultipleSearch#MultipleSearch(1, <q-args>)$/;"	c
SearchBuffers	pack/plugins/start/vim-scripts-multiplesearch/plugin/MultipleSearch.vim	/^        command -nargs=* SearchBuffers :silent call MultipleSearch(1, <q-args>)$/;"	c
SearchBuffersReset	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^    command -nargs=0 SearchBuffersReset :silent call <SID>MultipleSearchReset(1) $/;"	c
SearchCode	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! s:SearchCode(lnum, regex)$/;"	f
SearchEndPair	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:SearchEndPair(lnum, curr_col)$/;"	f
SearchMatchingKeyword	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! s:SearchMatchingKeyword(startlnum, open, close)$/;"	f
SearchNext	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^function! s:SearchNext(direction)$/;"	f
SearchPair	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! s:SearchPair(startlnum, lookback, skip, open, close)$/;"	f
SearchPair	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:SearchPair(lnum, curr_col, start, middle, end)$/;"	f
SearchPair	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:SearchPair(start, end)$/;"	f
SearchParensPair	pack/plugins/start/sheerun-vim-polyglot/indent/python.vim	/^function! s:SearchParensPair()$/;"	f
SearchReinit	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^    command -nargs=0 SearchReinit :silent call <SID>MultipleSearchInit() $/;"	c
SearchReset	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^    command -nargs=0 SearchReset :silent call <SID>MultipleSearchReset(0) $/;"	c
SelectCurrentEnv	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:SelectCurrentEnv(seltype)$/;"	f
SelectInlineMath	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:SelectInlineMath(seltype)$/;"	f
SelectJavascript	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^fun! s:SelectJavascript()$/;"	f
SelectOutput	pack/plugins/start/tomtom-tlib-vim/samples/tlib/input/tlib_input_list.vim	/^function! SelectOutput(ex) "{{{3$/;"	f
Separator Seek	pack/plugins/start/wellle-targets-vim/README.md	/^### Separator Seek$/;"	k
Separator Text Objects	pack/plugins/start/wellle-targets-vim/README.md	/^## Separator Text Objects$/;"	i
Separator mappings	pack/plugins/start/wellle-targets-vim/cheatsheet.md	/^## Separator mappings$/;"	i
Set	pack/plugins/start/junegunn-fzf/src/util/atomicbool.go	/^func (a *AtomicBool) Set(newState bool) bool {$/;"	f
Set	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^func (b *EventBox) Set(event EventType, value interface{}) {$/;"	f
SetFlag	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/arg.vim	/^function! s:SetFlag(def, opts, idx, flag, rest, flagdefs) abort "{{{3$/;"	f
SetMakePrg	pack/plugins/start/sheerun-vim-polyglot/compiler/coffee.vim	/^function! s:SetMakePrg()$/;"	f
SetMakePrg	pack/plugins/start/sheerun-vim-polyglot/compiler/ls.vim	/^function! s:SetMakePrg()$/;"	f
SetOffset	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/input.vim	/^function! s:SetOffset(world) "{{{3$/;"	f
SetOpt	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/arg.vim	/^function! s:SetOpt(def, opts, idx, opt) abort "{{{3$/;"	f
SetScrollBind	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/file.vim	/^function! s:SetScrollBind(world) "{{{3$/;"	f
SetTagbar	pack/plugins/start/fatih-vim-go/ftplugin/go/tagbar.vim	/^function! s:SetTagbar()$/;"	f
SetTimestamp	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cache.vim	/^function! s:SetTimestamp(cfile, type) "{{{3$/;"	f
Setting ag as the default source for fzf	pack/plugins/start/junegunn-fzf/README.md	/^# Setting ag as the default source for fzf$/;"	h
Settings	pack/plugins/start/fatih-vim-go/README.md	/^## Settings$/;"	i
Settings	pack/plugins/start/wellle-targets-vim/README.md	/^## Settings$/;"	i
Settings	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^## Settings$/;"	i
Shell	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^class Shell$/;"	c
ShellTokenize	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! s:ShellTokenize(text)$/;"	f
ShiftWidth	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^  function! s:ShiftWidth()$/;"	f
ShouldPurge	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cache.vim	/^function! s:ShouldPurge(partial_filename) "{{{3$/;"	f
ShouldSkip	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! s:ShouldSkip(startlnum, lnum, col)$/;"	f
ShouldSkip	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:ShouldSkip(startlinenum, linenum, col)$/;"	f
ShowTag	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! s:ShowTag(world, tagline) "{{{3$/;"	f
ShowUsage	pack/plugins/start/ludovicchabant-vim-gutentags/plat/unix/update_scopedb.sh	/^ShowUsage() {$/;"	f
ShowUsage	pack/plugins/start/ludovicchabant-vim-gutentags/plat/unix/update_tags.sh	/^ShowUsage() {$/;"	f
SignId	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/signs.vim	/^function! s:SignId(item) "{{{3$/;"	f
SkipExpr	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:SkipExpr(startlinenum)$/;"	f
Slab	pack/plugins/start/junegunn-fzf/src/util/slab.go	/^type Slab struct {$/;"	t
Slice	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^func (chars *Chars) Slice(b int, e int) Chars {$/;"	f
SmartSearch	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:SmartSearch(linenum, regex)$/;"	f
Snapshot	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^func (cl *ChunkList) Snapshot() ([]*Chunk, int) {$/;"	f
SneakPluginNetrw	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^  augroup SneakPluginNetrw$/;"	a
SortCompletions	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! s:SortCompletions(a, b) abort "{{{3$/;"	f
Source	pack/plugins/start/wellle-tmux-complete-vim/rplugin/python3/deoplete/sources/tmuxcomplete.py	/^class Source(Base):$/;"	c
Source files are located in src directory	pack/plugins/start/junegunn-fzf/BUILD.md	/^# Source files are located in src directory$/;"	h
Split	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^func (chars *Chars) Split(delimiter string) []Chars {$/;"	f
Split	pack/plugins/start/sheerun-vim-polyglot/syntax/ragel.vim	/^function! <SID>Split(path) abort " {{{1$/;"	f
Squash	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar Squash :call s:choose('squash')$/;"	c
StageDiff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StageNext	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageNext(count) abort$/;"	f
StagePatch	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StagePrevious	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StagePrevious(count) abort$/;"	f
StageReloadSeek	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageReloadSeek(target,lnum1,lnum2) abort$/;"	f
StageToggle	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
StageUndo	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageUndo() abort$/;"	f
StarSetf	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^func! s:StarSetf(ft)$/;"	f
StartStructure	pack/plugins/start/sheerun-vim-polyglot/indent/twig.vim	/^function! s:StartStructure(name)$/;"	f
StatementStart	pack/plugins/start/sheerun-vim-polyglot/indent/python.vim	/^function! s:StatementStart(lnum)$/;"	f
Status	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Status() abort$/;"	f
Steps to reproduce:	pack/plugins/start/fatih-vim-go/.github/ISSUE_TEMPLATE.md	/^### Steps to reproduce:$/;"	k
String	pack/plugins/start/junegunn-fzf/fzf	/^  class String$/;"	c
String	pack/plugins/start/junegunn-fzf/fzf	/^class String$/;"	c
StringReplace	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! s:StringReplace(text, old, new)$/;"	f
StringStrip	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! s:StringStrip(text)$/;"	f
StripTrailingWhitespace	vimrc	/^function! StripTrailingWhitespace()$/;"	f
Strntok	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^function! s:Strntok( s, tok, n)$/;"	f
Style	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (c Color) Style() tcell.Color {$/;"	f
Stylus	pack/plugins/start/sheerun-vim-polyglot/ftplugin/stylus.vim	/^command! Stylus !clear; cat % | stylus$/;"	c
SubComplete	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:SubComplete(A,L,P)$/;"	f
Subvert	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^command! -nargs=1 -bang -bar -range=0 -complete=custom,s:SubComplete Subvert$/;"	c
SudoEdit	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -complete=file -nargs=? SudoEdit$/;"	c
SudoEditInit	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SudoEditInit() abort$/;"	f
SudoReadCmd	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SudoReadCmd() abort$/;"	f
SudoSetup	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SudoSetup(file) abort$/;"	f
SudoWrite	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar SudoWrite$/;"	c
SudoWriteCmd	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SudoWriteCmd() abort$/;"	f
SuffixMatch	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func SuffixMatch(caseSensitive bool, forward bool, text util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
Swap	pack/plugins/start/junegunn-fzf/src/result.go	/^func (a ByOrder) Swap(i, j int) {$/;"	f
Swap	pack/plugins/start/junegunn-fzf/src/result.go	/^func (a ByRelevance) Swap(i, j int) {$/;"	f
Swap	pack/plugins/start/junegunn-fzf/src/result.go	/^func (a ByRelevanceTac) Swap(i, j int) {$/;"	f
Swap	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (a byTimeOrder) Swap(i, j int) {$/;"	f
Swift	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^function! s:Swift()$/;"	f
SwiftIndent	pack/plugins/start/sheerun-vim-polyglot/indent/swift.vim	/^function! SwiftIndent(...)$/;"	f
SwitchWindow	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:SwitchWindow(buf)$/;"	f
SynAttrXMLish	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^fu! SynAttrXMLish(synattr)$/;"	f
SynEOL	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^fu! SynEOL(lnum)$/;"	f
SynFold	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFold <args> fold$/;"	c
SynFold	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFold <args>$/;"	c
SynFoldDoc	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFoldDoc <args> fold$/;"	c
SynFoldDoc	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFoldDoc <args>$/;"	c
SynJSXBlockEnd	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^fu! SynJSXBlockEnd(syns)$/;"	f
SynJSXContinues	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^fu! SynJSXContinues(cursyn, prevsyn)$/;"	f
SynJSXDepth	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^fu! SynJSXDepth(syns)$/;"	f
SynSOL	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^fu! SynSOL(lnum)$/;"	f
SynXMLish	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^fu! SynXMLish(syns)$/;"	f
Syntax Highlighting Plugins Target	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^## Syntax Highlighting Plugins Target$/;"	i
SyntaxName	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! s:SyntaxName(lnum, col)$/;"	f
SyntaxName	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:SyntaxName(linenum, col)$/;"	f
SyntaxName	pack/plugins/start/sheerun-vim-polyglot/indent/swift.vim	/^function! s:SyntaxName()$/;"	f
SyntaxNameAtPosition	pack/plugins/start/sheerun-vim-polyglot/indent/swift.vim	/^function! s:SyntaxNameAtPosition(line, column)$/;"	f
T	vimrc	/^nmap T <Plug>Sneak_T$/;"	m
T	vimrc	/^omap T <Plug>Sneak_T$/;"	m
TAGS_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set TAGS_FILE=%~2$/;"	v
TAGS_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set TAGS_FILE=tags$/;"	v
TAPTestLine_foldtext	pack/plugins/start/sheerun-vim-polyglot/syntax/tap.vim	/^function! TAPTestLine_foldtext()$/;"	f
TBrowseOutput	pack/plugins/start/tomtom-tlib-vim/plugin/02tlib.vim	/^command! -nargs=1 -complete=command TBrowseOutput call tlib#cmd#BrowseOutput(<q-args>)$/;"	c
TBrowseScriptnames	pack/plugins/start/tomtom-tlib-vim/plugin/02tlib.vim	/^command! -nargs=0 -complete=command TBrowseScriptnames call tlib#cmd#TBrowseScriptnames()$/;"	c
TLet	pack/plugins/start/tomtom-tlib-vim/plugin/02tlib.vim	/^command! -nargs=+ TLet if !exists(matchstr(<q-args>, '^[^=[:space:]]\\+')) | exec 'let '. <q-args> | endif$/;"	c
TLib	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/autocmdgroup.vim	/^augroup TLib$/;"	a
TOCActivate	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^function! s:TOCActivate(close)$/;"	f
TOCClose	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^function! s:TOCClose()$/;"	f
TOCFindMatch	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^function! s:TOCFindMatch(strsearch,duplicates,files)$/;"	f
TOCFoldLevel	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^function! TOCFoldLevel(lnum)$/;"	f
TOCFoldText	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^function! TOCFoldText()$/;"	f
TOCOpenBuf	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^function! s:TOCOpenBuf(file)$/;"	f
TOCToggleNumbers	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^function! s:TOCToggleNumbers()$/;"	f
TODO	pack/plugins/start/romainl-vim-qf/README.md	/^## TODO$/;"	i
TODO	pack/plugins/start/romainl-vim-qlist/README.md	/^## TODO$/;"	i
TRequire	pack/plugins/start/tomtom-tlib-vim/macros/tlib.vim	/^command! -nargs=+ TRequire let s:require = [<f-args>]$/;"	c
TScratch	pack/plugins/start/tomtom-tlib-vim/plugin/02tlib.vim	/^command! -bar -nargs=* -bang TScratch call tlib#scratch#UseScratch({'scratch_split': empty('<bang>'), <args>})$/;"	c
TTags	pack/plugins/start/tomtom-ttags-vim/plugin/ttags.vim	/^command! -nargs=* -bang TTags call ttags#List(!empty('<bang>'), <f-args>)$/;"	c
TTagselect	pack/plugins/start/tomtom-ttags-vim/plugin/ttags.vim	/^command! -nargs=* -bang TTagselect call ttags#Select(!empty('<bang>'), <q-args>)$/;"	c
TVarArg	pack/plugins/start/tomtom-tlib-vim/plugin/02tlib.vim	/^command! -nargs=+ TVarArg exec tlib#arg#Let([<args>])$/;"	c
Tab	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Tab$/;"	c
Terminal	pack/plugins/start/junegunn-fzf/src/terminal.go	/^type Terminal struct {$/;"	t
Terminal emulators	pack/colors/start/romainl-disciple/README.md	/^### Terminal emulators$/;"	k
Terminal multiplexers	pack/colors/start/romainl-disciple/README.md	/^### Terminal multiplexers$/;"	k
TestArgs	pack/plugins/start/tomtom-tlib-vim/spec/tlib/arg.vim	/^function! TestArgs(...) "{{{3$/;"	f
TestArgs	pack/plugins/start/tomtom-tlib-vim/test/tlib.vim	/^function! TestArgs(...) "{{{3$/;"	f
TestArgs1	pack/plugins/start/tomtom-tlib-vim/spec/tlib/arg.vim	/^function! TestArgs1(...) "{{{3$/;"	f
TestArgs1	pack/plugins/start/tomtom-tlib-vim/test/tlib.vim	/^function! TestArgs1(...) "{{{3$/;"	f
TestArgs2	pack/plugins/start/tomtom-tlib-vim/spec/tlib/arg.vim	/^function! TestArgs2(...) "{{{3$/;"	f
TestArgs2	pack/plugins/start/tomtom-tlib-vim/test/tlib.vim	/^function! TestArgs2(...) "{{{3$/;"	f
TestArgs3	pack/plugins/start/tomtom-tlib-vim/spec/tlib/arg.vim	/^function! TestArgs3(...)$/;"	f
TestArgs3	pack/plugins/start/tomtom-tlib-vim/test/tlib.vim	/^function! TestArgs3(...)$/;"	f
TestAtomicBool	pack/plugins/start/junegunn-fzf/src/util/atomicbool_test.go	/^func TestAtomicBool(t *testing.T) {$/;"	f
TestBase	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^class TestBase < Minitest::Test$/;"	c
TestBash	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^class TestBash < TestBase$/;"	c
TestBind	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestBind(t *testing.T) {$/;"	f
TestCacheKey	pack/plugins/start/junegunn-fzf/src/pattern_test.go	/^func TestCacheKey(t *testing.T) {$/;"	f
TestCaseSensitivity	pack/plugins/start/junegunn-fzf/src/pattern_test.go	/^func TestCaseSensitivity(t *testing.T) {$/;"	f
TestCharsLength	pack/plugins/start/junegunn-fzf/src/util/chars_test.go	/^func TestCharsLength(t *testing.T) {$/;"	f
TestCharsToString	pack/plugins/start/junegunn-fzf/src/util/chars_test.go	/^func TestCharsToString(t *testing.T) {$/;"	f
TestChunkCache	pack/plugins/start/junegunn-fzf/src/cache_test.go	/^func TestChunkCache(t *testing.T) {$/;"	f
TestChunkList	pack/plugins/start/junegunn-fzf/src/chunklist_test.go	/^func TestChunkList(t *testing.T) {$/;"	f
TestColorOffset	pack/plugins/start/junegunn-fzf/src/result_test.go	/^func TestColorOffset(t *testing.T) {$/;"	f
TestColorSpec	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestColorSpec(t *testing.T) {$/;"	f
TestContrain	pack/plugins/start/junegunn-fzf/src/util/util_test.go	/^func TestContrain(t *testing.T) {$/;"	f
TestDefaultCtrlNP	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestDefaultCtrlNP(t *testing.T) {$/;"	f
TestDelimiterRegex	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestDelimiterRegex(t *testing.T) {$/;"	f
TestDelimiterRegexRegex	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestDelimiterRegexRegex(t *testing.T) {$/;"	f
TestDelimiterRegexString	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestDelimiterRegexString(t *testing.T) {$/;"	f
TestEmptyMerger	pack/plugins/start/junegunn-fzf/src/merger_test.go	/^func TestEmptyMerger(t *testing.T) {$/;"	f
TestEmptyPattern	pack/plugins/start/junegunn-fzf/src/algo/algo_test.go	/^func TestEmptyPattern(t *testing.T) {$/;"	f
TestEqual	pack/plugins/start/junegunn-fzf/src/pattern_test.go	/^func TestEqual(t *testing.T) {$/;"	f
TestEventBox	pack/plugins/start/junegunn-fzf/src/util/eventbox_test.go	/^func TestEventBox(t *testing.T) {$/;"	f
TestExact	pack/plugins/start/junegunn-fzf/src/pattern_test.go	/^func TestExact(t *testing.T) {$/;"	f
TestExactMatchNaive	pack/plugins/start/junegunn-fzf/src/algo/algo_test.go	/^func TestExactMatchNaive(t *testing.T) {$/;"	f
TestExactMatchNaiveBackward	pack/plugins/start/junegunn-fzf/src/algo/algo_test.go	/^func TestExactMatchNaiveBackward(t *testing.T) {$/;"	f
TestExtractColor	pack/plugins/start/junegunn-fzf/src/ansi_test.go	/^func TestExtractColor(t *testing.T) {$/;"	f
TestFish	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^class TestFish < TestBase$/;"	c
TestFuzzyMatch	pack/plugins/start/junegunn-fzf/src/algo/algo_test.go	/^func TestFuzzyMatch(t *testing.T) {$/;"	f
TestFuzzyMatchBackward	pack/plugins/start/junegunn-fzf/src/algo/algo_test.go	/^func TestFuzzyMatchBackward(t *testing.T) {$/;"	f
TestGetArg	pack/plugins/start/tomtom-tlib-vim/spec/tlib/arg.vim	/^function! TestGetArg(...) "{{{3$/;"	f
TestGetArg	pack/plugins/start/tomtom-tlib-vim/test/tlib.vim	/^function! TestGetArg(...) "{{{3$/;"	f
TestGetArg1	pack/plugins/start/tomtom-tlib-vim/spec/tlib/arg.vim	/^function! TestGetArg1(...) "{{{3$/;"	f
TestGetArg1	pack/plugins/start/tomtom-tlib-vim/test/tlib.vim	/^function! TestGetArg1(...) "{{{3$/;"	f
TestGoFZF	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^class TestGoFZF < TestBase$/;"	c
TestHistory	pack/plugins/start/junegunn-fzf/src/history_test.go	/^func TestHistory(t *testing.T) {$/;"	f
TestIrrelevantNth	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestIrrelevantNth(t *testing.T) {$/;"	f
TestLongString	pack/plugins/start/junegunn-fzf/src/algo/algo_test.go	/^func TestLongString(t *testing.T) {$/;"	f
TestMax	pack/plugins/start/junegunn-fzf/src/util/util_test.go	/^func TestMax(t *testing.T) {$/;"	f
TestMergerSorted	pack/plugins/start/junegunn-fzf/src/merger_test.go	/^func TestMergerSorted(t *testing.T) {$/;"	f
TestMergerUnsorted	pack/plugins/start/junegunn-fzf/src/merger_test.go	/^func TestMergerUnsorted(t *testing.T) {$/;"	f
TestOffsetSort	pack/plugins/start/junegunn-fzf/src/result_test.go	/^func TestOffsetSort(t *testing.T) {$/;"	f
TestOrigTextAndTransformed	pack/plugins/start/junegunn-fzf/src/pattern_test.go	/^func TestOrigTextAndTransformed(t *testing.T) {$/;"	f
TestPairFor	pack/plugins/start/junegunn-fzf/src/tui/tui_test.go	/^func TestPairFor(t *testing.T) {$/;"	f
TestParseKeys	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestParseKeys(t *testing.T) {$/;"	f
TestParseKeysWithComma	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestParseKeysWithComma(t *testing.T) {$/;"	f
TestParseNilTheme	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestParseNilTheme(t *testing.T) {$/;"	f
TestParseRange	pack/plugins/start/junegunn-fzf/src/tokenizer_test.go	/^func TestParseRange(t *testing.T) {$/;"	f
TestParseTermsEmpty	pack/plugins/start/junegunn-fzf/src/pattern_test.go	/^func TestParseTermsEmpty(t *testing.T) {$/;"	f
TestParseTermsExtended	pack/plugins/start/junegunn-fzf/src/pattern_test.go	/^func TestParseTermsExtended(t *testing.T) {$/;"	f
TestParseTermsExtendedExact	pack/plugins/start/junegunn-fzf/src/pattern_test.go	/^func TestParseTermsExtendedExact(t *testing.T) {$/;"	f
TestPrefixMatch	pack/plugins/start/junegunn-fzf/src/algo/algo_test.go	/^func TestPrefixMatch(t *testing.T) {$/;"	f
TestPreviewOpts	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestPreviewOpts(t *testing.T) {$/;"	f
TestRankComparison	pack/plugins/start/junegunn-fzf/src/result_test.go	/^func TestRankComparison(t *testing.T) {$/;"	f
TestReadFromCommand	pack/plugins/start/junegunn-fzf/src/reader_test.go	/^func TestReadFromCommand(t *testing.T) {$/;"	f
TestReplacePlaceholder	pack/plugins/start/junegunn-fzf/src/terminal_test.go	/^func TestReplacePlaceholder(t *testing.T) {$/;"	f
TestResultRank	pack/plugins/start/junegunn-fzf/src/result_test.go	/^func TestResultRank(t *testing.T) {$/;"	f
TestSample	pack/plugins/start/fatih-vim-go/t/fixtures/src/buildfail/sample_test.go	/^func TestSample(t *testing.T) {$/;"	f
TestSample	pack/plugins/start/fatih-vim-go/t/fixtures/src/buildtestfail/sample_test.go	/^func TestSample(t *testing.T) {$/;"	f
TestSample	pack/plugins/start/fatih-vim-go/t/fixtures/src/failtest/sample_test.go	/^func TestSample(t *testing.T) {$/;"	f
TestSample	pack/plugins/start/fatih-vim-go/t/fixtures/src/parsefail/sample_test.go	/^func TestSample(t *testing.T) {$/;"	f
TestSample	pack/plugins/start/fatih-vim-go/t/fixtures/src/pkg1/sample_test.go	/^func TestSample(t *testing.T) {$/;"	f
TestShell	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^module TestShell$/;"	m
TestSplit	pack/plugins/start/junegunn-fzf/src/util/chars_test.go	/^func TestSplit(t *testing.T) {$/;"	f
TestSplitNth	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestSplitNth(t *testing.T) {$/;"	f
TestStringPtr	pack/plugins/start/junegunn-fzf/src/item_test.go	/^func TestStringPtr(t *testing.T) {$/;"	f
TestSuffixMatch	pack/plugins/start/junegunn-fzf/src/algo/algo_test.go	/^func TestSuffixMatch(t *testing.T) {$/;"	f
TestToCharsAscii	pack/plugins/start/junegunn-fzf/src/util/chars_test.go	/^func TestToCharsAscii(t *testing.T) {$/;"	f
TestToCharsNil	pack/plugins/start/junegunn-fzf/src/util/chars_test.go	/^func TestToCharsNil(t *testing.T) {$/;"	f
TestToggle	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestToggle(t *testing.T) {$/;"	f
TestTokenize	pack/plugins/start/junegunn-fzf/src/tokenizer_test.go	/^func TestTokenize(t *testing.T) {$/;"	f
TestTransform	pack/plugins/start/junegunn-fzf/src/tokenizer_test.go	/^func TestTransform(t *testing.T) {$/;"	f
TestTransformIndexOutOfBounds	pack/plugins/start/junegunn-fzf/src/tokenizer_test.go	/^func TestTransformIndexOutOfBounds(t *testing.T) {$/;"	f
TestTrimLength	pack/plugins/start/junegunn-fzf/src/util/chars_test.go	/^func TestTrimLength(t *testing.T) {$/;"	f
TestZsh	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^class TestZsh < TestBase$/;"	c
TextilePreview	pack/plugins/start/sheerun-vim-polyglot/ftplugin/textile.vim	/^command! -nargs=0 TextilePreview call TextileRenderBufferToPreview()$/;"	c
TextileRender	pack/plugins/start/sheerun-vim-polyglot/ftplugin/textile.vim	/^function! TextileRender(lines)$/;"	f
TextileRenderBufferToFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderBufferToFile()$/;"	f
TextileRenderBufferToPreview	pack/plugins/start/sheerun-vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderBufferToPreview()$/;"	f
TextileRenderBufferToTab	pack/plugins/start/sheerun-vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderBufferToTab()$/;"	f
TextileRenderFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/textile.vim	/^command! -nargs=0 TextileRenderFile call TextileRenderBufferToFile()$/;"	c
TextileRenderFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderFile(lines, filename)$/;"	f
TextileRenderTab	pack/plugins/start/sheerun-vim-polyglot/ftplugin/textile.vim	/^command! -nargs=0 TextileRenderTab call TextileRenderBufferToTab()$/;"	c
There are also _fzf_path_completion and _fzf_dir_completion	pack/plugins/start/junegunn-fzf/README.md	/^# There are also _fzf_path_completion and _fzf_dir_completion$/;"	h
Third party integration	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^## Third party integration$/;"	i
Tlibassert	pack/plugins/start/tomtom-tlib-vim/plugin/02tlib.vim	/^command! -nargs=+ -bang Tlibassert :$/;"	c
Tlibtrace	pack/plugins/start/tomtom-tlib-vim/plugin/02tlib.vim	/^command! -nargs=+ -bang Tlibtrace :$/;"	c
Tlibtraceset	pack/plugins/start/tomtom-tlib-vim/plugin/02tlib.vim	/^command! -nargs=+ -bang Tlibtraceset call tlib#trace#Set(<q-args>)$/;"	c
Tlibtype	pack/plugins/start/tomtom-tlib-vim/plugin/02tlib.vim	/^command! -nargs=+ Tlibtype :$/;"	c
Tmux	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^class Tmux$/;"	c
To apply the command to CTRL-T as well	pack/plugins/start/junegunn-fzf/README.md	/^# To apply the command to CTRL-T as well$/;"	h
ToChars	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^func ToChars(bytea []byte) Chars {$/;"	f
ToRunes	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^func (chars *Chars) ToRunes() []rune {$/;"	f
ToString	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^func (chars *Chars) ToString() string {$/;"	f
Todos	pack/plugins/start/wellle-targets-vim/README.md	/^## Todos$/;"	i
ToggleFolds	vimrc	/^function! ToggleFolds()$/;"	f
Token	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^type Token struct {$/;"	t
Tokenize	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^func Tokenize(text util.Chars, delimiter Delimiter) []Token {$/;"	f
TokenizeLine	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:TokenizeLine(lnum, direction)$/;"	f
TrailingWhitespaces	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^func (chars *Chars) TrailingWhitespaces() int {$/;"	f
Transform	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^func Transform(tokens []Token, withNth []Range) []Token {$/;"	f
Trim	pack/plugins/start/sheerun-vim-polyglot/indent/qml.vim	/^function! Trim(line)$/;"	f
TrimLength	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^func (chars *Chars) TrimLength() int {$/;"	f
Troubleshooting	pack/plugins/start/sheerun-vim-polyglot/README.md	/^## Troubleshooting$/;"	i
Ttimecommand	pack/plugins/start/tomtom-tlib-vim/macros/tlib.vim	/^command! -nargs=1 -complete=command Ttimecommand call tlib#cmd#Time(<q-args>)$/;"	c
Tutorials	pack/plugins/start/skywind3000-asyncrun-vim/README.md	/^## Tutorials$/;"	i
TxClear	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=0 -bar -bang TxClear     call tmuxify#pane_send_raw('C-l', <q-bang>)$/;"	c
TxCreate	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=? -bar -bang TxCreate    call tmuxify#pane_create(<q-bang>, <args>)$/;"	c
TxKill	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=0 -bar -bang TxKill      call tmuxify#pane_kill(<q-bang>)$/;"	c
TxRun	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=? -bar -bang TxRun       call tmuxify#pane_run(<q-bang>, <args>)$/;"	c
TxSend	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=? -bar -bang TxSend      call tmuxify#pane_send(<q-bang>, <args>)$/;"	c
TxSendKey	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=? -bar -bang TxSendKey   call tmuxify#pane_send_raw(<q-args>, <q-bang>)$/;"	c
TxSetPane	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=? -bar -bang TxSetPane   call tmuxify#pane_set(<q-bang>, <f-args>)$/;"	c
TxSetRunCmd	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=? -bar       TxSetRunCmd call tmuxify#set_run_command_for_filetype(<args>)$/;"	c
TxSigInt	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=0 -bar -bang TxSigInt    call tmuxify#pane_send_raw('C-c', <q-bang>)$/;"	c
U	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^    nmap U <Plug>(RepeatUndoLine)$/;"	m
UNAME_M	pack/plugins/start/junegunn-fzf/src/Makefile	/^UNAME_M := $(shell uname -m)$/;"	m
UNAME_S	pack/plugins/start/junegunn-fzf/src/Makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UPDATED_SOURCE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set UPDATED_SOURCE=%~2$/;"	v
UPDATED_SOURCE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set UPDATED_SOURCE=$/;"	v
Underline	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	Underline      = C.A_UNDERLINE$/;"	c
Underline	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	Underline      = Attr(tcell.AttrUnderline)$/;"	c
UndoHighlightLine	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/buffer.vim	/^function! s:UndoHighlightLine() "{{{3$/;"	f
UnexpectedToken	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:UnexpectedToken(token, stack)$/;"	f
Unit tests	pack/plugins/start/junegunn-fzf/src/README.md	/^# Unit tests$/;"	h
Unlink	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang Unlink$/;"	c
Unlock	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:Unlock$/;"	l
Unwatch	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^func (b *EventBox) Unwatch(events ...EventType) {$/;"	f
Up	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Up$/;"	c
UpdateCount	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) UpdateCount(cnt int, final bool) {$/;"	f
UpdateHeader	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) UpdateHeader(header []string) {$/;"	f
UpdateList	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) UpdateList(merger *Merger) {$/;"	f
UpdateMakePrg	pack/plugins/start/sheerun-vim-polyglot/compiler/coffee.vim	/^  function! s:UpdateMakePrg()$/;"	f
UpdateMakePrg	pack/plugins/start/sheerun-vim-polyglot/compiler/ls.vim	/^  function! s:UpdateMakePrg()$/;"	f
UpdateProgress	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) UpdateProgress(progress float32) {$/;"	f
Updating	pack/plugins/start/sheerun-vim-polyglot/README.md	/^## Updating$/;"	i
Upgrading fzf	pack/plugins/start/junegunn-fzf/README.md	/^### Upgrading fzf$/;"	k
Usage	pack/plugins/start/fatih-vim-go/README.md	/^## Usage$/;"	i
Usage	pack/plugins/start/junegunn-fzf-vim/README.md	/^### Usage$/;"	k
Usage	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^:Usage$/;"	l
Usage	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:Usage$/;"	l
Use ag instead of the default find command for listing candidates.	pack/plugins/start/junegunn-fzf/README.md	/^# Use ag instead of the default find command for listing candidates.$/;"	h
Use ~~ as the trigger sequence instead of the default **	pack/plugins/start/junegunn-fzf/README.md	/^# Use ~~ as the trigger sequence instead of the default **$/;"	h
Using Homebrew	pack/plugins/start/junegunn-fzf/README.md	/^### Using Homebrew$/;"	k
Using Makefile	pack/plugins/start/junegunn-fzf/BUILD.md	/^### Using Makefile$/;"	k
Using `go get`	pack/plugins/start/junegunn-fzf/BUILD.md	/^### Using `go get`$/;"	k
Using git	pack/plugins/start/junegunn-fzf/README.md	/^### Using git$/;"	k
Using with Neovim (beta)	pack/plugins/start/fatih-vim-go/README.md	/^### Using with Neovim (beta)$/;"	k
Using with Syntastic	pack/plugins/start/fatih-vim-go/README.md	/^### Using with Syntastic$/;"	k
VADER_OUTPUT_FILE	pack/plugins/start/justinmk-vim-sneak/Makefile	/^	VADER_OUTPUT_FILE=\/dev\/stderr n$(VIM) --headless '+Vader! tests\/*.vader'$/;"	m
VERSION	pack/plugins/start/junegunn-fzf/src/Makefile	/^VERSION     := $(shell awk -F= '\/version =\/ {print $$2}' constants.go | tr -d "\\" ")$/;"	m
VIM	pack/plugins/start/justinmk-vim-sneak/Makefile	/^VIM = vim -N -u NORC -i NONE --cmd 'set rtp+=tests\/vader rtp+=tests\/repeat rtp+=$$PWD'$/;"	m
Validate	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/arg.vim	/^function! s:Validate(def, name, value) abort "{{{3$/;"	f
Vim plugin	pack/plugins/start/junegunn-fzf/README.md	/^### Vim plugin$/;"	k
W	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^  command! -bar W Wall$/;"	c
Wait	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^func (b *EventBox) Wait(callback func(*Events)) {$/;"	f
WaitFor	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^func (b *EventBox) WaitFor(event EventType) {$/;"	f
Wall	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=? Wall$/;"	c
Wall	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:Wall() abort$/;"	f
Watch	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^func (b *EventBox) Watch(events ...EventType) {$/;"	f
What they say about Apprentice.	pack/colors/start/romainl-apprentice/README.md	/^## What they say about Apprentice.$/;"	i
What?	pack/plugins/start/ludovicchabant-vim-gutentags/README.md	/^## What?$/;"	i
Why?	pack/plugins/start/ludovicchabant-vim-gutentags/README.md	/^## Why?$/;"	i
Window	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^type Window struct {$/;"	t
WindowImpl	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^type WindowImpl C.WINDOW$/;"	t
WindowImpl	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^type WindowImpl WindowTcell$/;"	t
WindowTcell	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^type WindowTcell struct {$/;"	t
Windows	pack/plugins/start/junegunn-fzf/README.md	/^### Windows$/;"	k
With ncurses 6	pack/plugins/start/junegunn-fzf/BUILD.md	/^### With ncurses 6$/;"	k
With tcell	pack/plugins/start/junegunn-fzf/BUILD.md	/^### With tcell$/;"	k
WithPath	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! s:WithPath(func, ...)$/;"	f
Working with 8/16 colors	pack/colors/start/romainl-apprentice/README.md	/^### Working with 8\/16 colors$/;"	k
Wq	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
WrapSelection	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:WrapSelection(wrapper)$/;"	f
Write	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
X	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (w *Window) X() int {$/;"	f
X	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) X() int {$/;"	f
Y	vimrc	/^nnoremap Y y\$$/;"	m
Z	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^  omap Z <Plug>Sneak_S$/;"	m
[<C-D>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> [<C-D>      :<C-U>exe <SID>jump('edit',v:count)<SID>foldopen<CR>$/;"	m
[D	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^    nmap <silent> [D <Plug>QlistDefinefromtop$/;"	m
[I	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^    nmap <silent> [I <Plug>QlistIncludefromtop$/;"	m
[M	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','b','n')<CR>$/;"	m
[[	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> [[ :<c-u>call go#textobj#FunctionJump('n', 'prev')<cr>$/;"	m
[[	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> [[ :<c-u>call go#textobj#FunctionJump('o', 'prev')<cr>$/;"	m
[[	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap  <buffer> <silent> [[ :call <SID>LatexBoxNextSection(0,1,0)<CR>$/;"	m
[[	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^vnoremap <buffer> <silent> [[ :<c-u>call <SID>LatexBoxNextSection(0,1,1)<CR>$/;"	m
[[	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^nnoremap <silent> <buffer> [[ :<C-U>call <SID>sectionmovement('{{','b','n',v:count1)<CR>$/;"	m
[[	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[[	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^nnoremap <silent> <buffer> [[ :call rust#Jump('n', 'Back')<CR>$/;"	m
[[	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^onoremap <silent> <buffer> [[ :call rust#Jump('o', 'Back')<CR>$/;"	m
[[	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^noremap <script> <buffer> <silent> [[ :call <SID>NextSection(1)<cr>$/;"	m
[]	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap  <buffer> <silent> [] :call <SID>LatexBoxNextSection(1,1,0)<CR>$/;"	m
[]	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^vnoremap <buffer> <silent> [] :<c-u>call <SID>LatexBoxNextSection(1,1,1)<CR>$/;"	m
[]	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[d	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> [d          :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
[m	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','b','n')<CR>$/;"	m
\	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^    nmap \\ <Plug>Sneak_,$/;"	m
\	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^    omap \\ <Plug>Sneak_,$/;"	m
]<C-D>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> ]<C-D>      :<C-U>exe <SID>jump('edit',v:count)<SID>foldopen<CR>$/;"	m
]D	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^    nmap <silent> ]D <Plug>QlistDefinefromhere$/;"	m
]I	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^    nmap <silent> ]I <Plug>QlistIncludefromhere$/;"	m
]M	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','','n')<CR>$/;"	m
][	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap  <buffer> <silent> ][ :call <SID>LatexBoxNextSection(1,0,0)<CR>$/;"	m
][	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^vnoremap <buffer> <silent> ][ :<c-u>call <SID>LatexBoxNextSection(1,0,1)<CR>$/;"	m
][	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
]]	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> ]] :<c-u>call go#textobj#FunctionJump('n', 'next')<cr>$/;"	m
]]	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> ]] :<c-u>call go#textobj#FunctionJump('o', 'next')<cr>$/;"	m
]]	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap  <buffer> <silent> ]] :call <SID>LatexBoxNextSection(0,0,0)<CR>$/;"	m
]]	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^vnoremap <buffer> <silent> ]] :<c-u>call <SID>LatexBoxNextSection(0,0,1)<CR>$/;"	m
]]	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^nnoremap <silent> <buffer> ]] :<C-U>call <SID>sectionmovement('{{','' ,'n',v:count1)<CR>$/;"	m
]]	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
]]	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^nnoremap <silent> <buffer> ]] :call rust#Jump('n', 'Forward')<CR>$/;"	m
]]	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^onoremap <silent> <buffer> ]] :call rust#Jump('o', 'Forward')<CR>$/;"	m
]]	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^noremap <script> <buffer> <silent> ]] :call <SID>NextSection(0)<cr>$/;"	m
]d	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> ]d          :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
]m	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','','n')<CR>$/;"	m
__fsel	pack/plugins/start/junegunn-fzf/shell/key-bindings.zsh	/^__fsel() {$/;"	f
__fzf_cd__	pack/plugins/start/junegunn-fzf/shell/key-bindings.bash	/^__fzf_cd__() {$/;"	f
__fzf_generic_path_completion	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^__fzf_generic_path_completion() {$/;"	f
__fzf_generic_path_completion	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^__fzf_generic_path_completion() {$/;"	f
__fzf_history__	pack/plugins/start/junegunn-fzf/shell/key-bindings.bash	/^__fzf_history__() ($/;"	f
__fzf_select__	pack/plugins/start/junegunn-fzf/shell/key-bindings.bash	/^__fzf_select__() {$/;"	f
__fzf_select_tmux__	pack/plugins/start/junegunn-fzf/shell/key-bindings.bash	/^__fzf_select_tmux__() {$/;"	f
__fzf_use_tmux__	pack/plugins/start/junegunn-fzf/shell/key-bindings.bash	/^__fzf_use_tmux__() {$/;"	f
__fzfcmd	pack/plugins/start/junegunn-fzf/shell/key-bindings.bash	/^__fzfcmd() {$/;"	f
__fzfcmd	pack/plugins/start/junegunn-fzf/shell/key-bindings.zsh	/^__fzfcmd() {$/;"	f
__init__	pack/plugins/start/wellle-tmux-complete-vim/rplugin/python3/deoplete/sources/tmuxcomplete.py	/^    def __init__(self, vim):$/;"	m	class:Source
_annotations	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^no_annotations = AnnExc("No annotations (.annot) file found")$/;"	m
_build_module	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:_build_module(sid) abort$/;"	f
_cache	pack/plugins/start/junegunn-fzf/src/pattern.go	/^	_cache        ChunkCache$/;"	v
_clickY	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	_clickY       []int$/;"	v
_color	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	_color        bool$/;"	v
_colorFn	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	_colorFn  func(ColorPair, Attr) (C.short, C.int)$/;"	v
_colorMap	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	_colorMap map[int]ColorPair$/;"	v
_colorToAttribute	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	_colorToAttribute = []tcell.Color{$/;"	v
_compare	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
_concat	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:_concat(lists) abort$/;"	f
_default_compare	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
_define_ansi_highlights	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:_define_ansi_highlights() abort$/;"	f
_false	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_false() abort$/;"	f
_file2module	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:_file2module(file) abort$/;"	f
_fzf_compgen_dir	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^  _fzf_compgen_dir() {$/;"	f
_fzf_compgen_dir	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^  _fzf_compgen_dir() {$/;"	f
_fzf_compgen_path	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^  _fzf_compgen_path() {$/;"	f
_fzf_compgen_path	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^  _fzf_compgen_path() {$/;"	f
_fzf_complete	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_complete() {$/;"	f
_fzf_complete	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^_fzf_complete() {$/;"	f
_fzf_complete_export	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_complete_export() {$/;"	f
_fzf_complete_export	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^_fzf_complete_export() {$/;"	f
_fzf_complete_kill	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_complete_kill() {$/;"	f
_fzf_complete_ssh	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_complete_ssh() {$/;"	f
_fzf_complete_ssh	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^_fzf_complete_ssh() {$/;"	f
_fzf_complete_telnet	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_complete_telnet() {$/;"	f
_fzf_complete_telnet	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^_fzf_complete_telnet() {$/;"	f
_fzf_complete_unalias	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_complete_unalias() {$/;"	f
_fzf_complete_unalias	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^_fzf_complete_unalias() {$/;"	f
_fzf_complete_unset	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_complete_unset() {$/;"	f
_fzf_complete_unset	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^_fzf_complete_unset() {$/;"	f
_fzf_defc	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_defc() {$/;"	f
_fzf_dir_completion	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_dir_completion() {$/;"	f
_fzf_dir_completion	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^_fzf_dir_completion() {$/;"	f
_fzf_feed_fifo	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^_fzf_feed_fifo() ($/;"	f
_fzf_file_completion	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_file_completion() {$/;"	f
_fzf_handle_dynamic_completion	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_handle_dynamic_completion() {$/;"	f
_fzf_opts_completion	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_opts_completion() {$/;"	f
_fzf_orig_completion_filter	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_orig_completion_filter() {$/;"	f
_fzf_path_completion	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_path_completion() {$/;"	f
_fzf_path_completion	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^_fzf_path_completion() {$/;"	f
_fzf_statusline	pack/plugins/start/junegunn-fzf-vim/plugin/fzf.vim	/^  augroup _fzf_statusline$/;"	a
_get_functions	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^  function! s:_get_functions(sid) abort$/;"	f
_get_module_path	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:_get_module_path(name) abort$/;"	f
_get_sid_by_script	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:_get_sid_by_script(path) abort$/;"	f
_import	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:_import(name) abort$/;"	f
_is_absolute_path	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^  function! s:_is_absolute_path(path) abort$/;"	f
_is_available	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:_is_available() abort$/;"	f
_mouse	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	_mouse  bool$/;"	v
_null	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_null() abort$/;"	f
_pad_with_char	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
_path2project_directory_git	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
_path2project_directory_others	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
_path2project_directory_svn	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
_patternCache	pack/plugins/start/junegunn-fzf/src/pattern.go	/^	_patternCache map[string]*Pattern$/;"	v
_prevDownTime	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	_prevDownTime time.Time$/;"	v
_redir	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:_redir(cmd) abort$/;"	f
_replace	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
_resolve	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_resolve(val, prefix) abort$/;"	f
_runeWidths	pack/plugins/start/junegunn-fzf/src/terminal.go	/^var _runeWidths = make(map[rune]int)$/;"	v
_runtime_files	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^  function! s:_runtime_files(path) abort$/;"	f
_screen	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	_screen   *C.SCREEN$/;"	v
_screen	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	_screen tcell.Screen$/;"	v
_spinner	pack/plugins/start/junegunn-fzf/src/terminal.go	/^var _spinner = []string{`-`, `\\`, `|`, `\/`, `-`, `\\`, `|`, `\/`}$/;"	v
_splitRegex	pack/plugins/start/junegunn-fzf/src/pattern.go	/^	_splitRegex   *regexp.Regexp$/;"	v
_split_by_wcswidth	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
_split_by_wcswidth_once	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
_tabStop	pack/plugins/start/junegunn-fzf/src/terminal.go	/^var _tabStop int$/;"	v
_true	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_true() abort$/;"	f
_unify_path	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^  function! s:_unify_path(path) abort$/;"	f
_uniq	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^  function! s:_uniq(list) abort$/;"	f
_vital_created	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_vital_created(module) abort$/;"	f
_vital_depends	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_files	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:_vital_files(pattern) abort$/;"	f
_vital_loaded	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_warn_deprecated	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:_warn_deprecated(name, alternative) abort$/;"	f
_wcwidth	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
a$	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^onoremap <buffer> a$ :normal va$<CR>$/;"	m
a$	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^vmap <buffer> a$ <Plug>LatexBox_SelectInlineMathOuter$/;"	m
a:args	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let a:args.error_info_cb = function('s:error_info_cb')$/;"	v
a:args	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let a:args.error_info_cb = function('s:error_info_cb')$/;"	v
a:args	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^  let a:args.error_info_cb = function('s:error_info_cb')$/;"	v
aM	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> aM :<C-U>call <SID>wrap_a('[[','][')<CR>$/;"	m
abbreviate_from_dict	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:abbreviate_from_dict(cmd,dict)$/;"	f
abortMatch	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:abortMatch(message)$/;"	f
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role = {}$/;"	v
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['composite'] = abstract_role['widget'] + ['aria-activedescendant']$/;"	v
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['input'] = abstract_role['widget']$/;"	v
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['landmark'] = role_attributes['region']$/;"	v
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['range'] = abstract_role['input'] + ['aria-valuemax', 'aria-valuemin', 'aria-valuenow', 'aria-valuetext']$/;"	v
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['roletype'] = ['aria-atomic', 'aria-busy', 'aria-controls', 'aria-describedby', 'aria-disabled', 'aria-dropeffect', 'aria-flowto', 'aria-grabbed', 'aria-haspopup', 'aria-hidden', 'aria-invalid', 'aria-label', 'aria-labelledby', 'aria-live', 'aria-owns', 'aria-relevant']$/;"	v
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['section'] = abstract_role['structure'] + ['aria-expanded']$/;"	v
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['sectionhead'] = abstract_role['structure'] + ['aria-expanded']$/;"	v
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['select'] = abstract_role['composite'] + role_attributes['group'] + abstract_role['input']$/;"	v
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['structure'] = abstract_role['roletype']$/;"	v
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['widget'] = abstract_role['roletype']$/;"	v
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['window'] = abstract_role['roletype'] + ['aria-expanded']$/;"	v
abutton_dec	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let abutton_dec = 'details\\\\|embed\\\\|iframe\\\\|keygen\\\\|label\\\\|menu\\\\|select\\\\|textarea'$/;"	v
actAbort	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actAbort$/;"	c
actAccept	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actAccept$/;"	c
actBackwardChar	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actBackwardChar$/;"	c
actBackwardDeleteChar	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actBackwardDeleteChar$/;"	c
actBackwardKillWord	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actBackwardKillWord$/;"	c
actBackwardWord	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actBackwardWord$/;"	c
actBeginningOfLine	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actBeginningOfLine$/;"	c
actCancel	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actCancel$/;"	c
actClearScreen	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actClearScreen$/;"	c
actDeleteChar	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actDeleteChar$/;"	c
actDeleteCharEOF	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actDeleteCharEOF$/;"	c
actDeselectAll	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actDeselectAll$/;"	c
actDown	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actDown$/;"	c
actEndOfLine	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actEndOfLine$/;"	c
actExecute	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actExecute$/;"	c
actExecuteMulti	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actExecuteMulti$/;"	c
actForwardChar	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actForwardChar$/;"	c
actForwardWord	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actForwardWord$/;"	c
actIgnore	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actIgnore actionType = iota$/;"	c
actInvalid	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actInvalid$/;"	c
actJump	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actJump$/;"	c
actJumpAccept	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actJumpAccept$/;"	c
actKillLine	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actKillLine$/;"	c
actKillWord	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actKillWord$/;"	c
actMouse	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actMouse$/;"	c
actNextHistory	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actNextHistory$/;"	c
actPageDown	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actPageDown$/;"	c
actPageUp	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actPageUp$/;"	c
actPreviewDown	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actPreviewDown$/;"	c
actPreviewPageDown	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actPreviewPageDown$/;"	c
actPreviewPageUp	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actPreviewPageUp$/;"	c
actPreviewUp	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actPreviewUp$/;"	c
actPreviousHistory	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actPreviousHistory$/;"	c
actPrintQuery	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actPrintQuery$/;"	c
actRune	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actRune$/;"	c
actSelectAll	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actSelectAll$/;"	c
actToggle	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actToggle$/;"	c
actToggleAll	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actToggleAll$/;"	c
actToggleDown	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actToggleDown$/;"	c
actToggleIn	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actToggleIn$/;"	c
actToggleOut	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actToggleOut$/;"	c
actTogglePreview	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actTogglePreview$/;"	c
actToggleSort	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actToggleSort$/;"	c
actToggleUp	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actToggleUp$/;"	c
actUnixLineDiscard	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actUnixLineDiscard$/;"	c
actUnixWordRubout	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actUnixWordRubout$/;"	c
actUp	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actUp$/;"	c
actYank	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actYank$/;"	c
act_on_pumvisible	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:act_on_pumvisible()$/;"	f
act_on_textchanged	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  fun! s:act_on_textchanged()$/;"	f
actionType	pack/plugins/start/junegunn-fzf/src/terminal.go	/^type actionType int$/;"	t
adapt_to_environment	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:adapt_to_environment()$/;"	f
addMapping1	pack/plugins/start/wellle-targets-vim/plugin/targets.vim	/^function! s:addMapping1(mapType, mapping, aiAI)$/;"	f
addMapping2	pack/plugins/start/wellle-targets-vim/plugin/targets.vim	/^function! s:addMapping2(mapType, mapping, aiAI, nlNL)$/;"	f
addToJumplist	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:addToJumplist(target)$/;"	f
addVisualMappings	pack/plugins/start/wellle-targets-vim/plugin/targets.vim	/^function! s:addVisualMappings()$/;"	f
add_methods	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
addstr_safe	pack/plugins/start/junegunn-fzf/fzf	/^  def addstr_safe str$/;"	f	class:usage
ae	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^onoremap <buffer> ae :normal vae<CR>$/;"	m
ae	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^vmap <buffer> ae <Plug>LatexBox_SelectCurrentEnvOuter$/;"	m
ae	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  onoremap <silent> <buffer> ae :<C-U>call <SID>wrap_around()<CR>$/;"	m
af	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> af :<c-u>call go#textobj#Function('a')<cr>$/;"	m
after	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/label.vim	/^func! s:after()$/;"	f
ag_handler	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:ag_handler(lines, with_column)$/;"	f
ag_to_qf	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:ag_to_qf(line, with_column)$/;"	f
airline#themes#PaperColor#refresh	pack/colors/start/nlknguyen-papercolor-theme/autoload/airline/themes/PaperColor.vim	/^function! airline#themes#PaperColor#refresh()$/;"	f
al	vimrc	/^omap al :<C-u>normal val<CR>$/;"	m
algo	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^package algo$/;"	p
algo	pack/plugins/start/junegunn-fzf/src/algo/algo_test.go	/^package algo$/;"	p
align_lists	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:align_lists(lists)$/;"	f
align_pairs	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:align_pairs(list)$/;"	f
all	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
all_files	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:all_files()$/;"	f
alloc16	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func alloc16(offset int, slab *util.Slab, size int, clear bool) (int, []int16) {$/;"	f
alloc32	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func alloc32(offset int, slab *util.Slab, size int, clear bool) (int, []int32) {$/;"	f
allsteps	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^function! s:allsteps()$/;"	f
am	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> am :<C-U>call <SID>wrap_a('[m',']M')<CR>$/;"	m
and	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:and(xs) abort$/;"	f
ansi	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:ansi(str, group, default, ...)$/;"	f
ansiOffset	pack/plugins/start/junegunn-fzf/src/ansi.go	/^type ansiOffset struct {$/;"	t
ansiRegex	pack/plugins/start/junegunn-fzf/src/ansi.go	/^var ansiRegex *regexp.Regexp$/;"	v
ansiState	pack/plugins/start/junegunn-fzf/src/ansi.go	/^type ansiState struct {$/;"	t
any	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
append	pack/plugins/start/junegunn-fzf/src/history.go	/^func (h *History) append(line string) error {$/;"	f
append_line	pack/plugins/start/junegunn-fzf/install	/^append_line() {$/;"	f
apply_highlightings	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:apply_highlightings()$/;"	f
args	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^  let args = {$/;"	v
aria_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, drag_and_drop_attributes)$/;"	v
aria_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, live_region_attributes)$/;"	v
aria_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, relationship_attributes)$/;"	v
aria_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = widget_attributes$/;"	v
aria_attributes_value	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes_value = {$/;"	v
ask	pack/plugins/start/junegunn-fzf/install	/^ask() {$/;"	f
asmfmt_autosave	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:asmfmt_autosave()$/;"	f
assert	pack/plugins/start/junegunn-fzf/src/merger_test.go	/^func assert(t *testing.T, cond bool, msg ...string) {$/;"	f
assertMatch	pack/plugins/start/junegunn-fzf/src/algo/algo_test.go	/^func assertMatch(t *testing.T, fun Algo, caseSensitive, forward bool, input, pattern string, sidx int, eidx int, score int) {$/;"	f
async_guru	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:async_guru(args) abort$/;"	f
asyncrun#quickfix_toggle	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! asyncrun#quickfix_toggle(size, ...)$/;"	f
asyncrun#run	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! asyncrun#run(bang, opts, args)$/;"	f
asyncrun#status	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! asyncrun#status()$/;"	f
asyncrun#stop	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! asyncrun#stop(bang)$/;"	f
asyncrun#version	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^function! asyncrun#version()$/;"	f
atof	pack/plugins/start/junegunn-fzf/src/options.go	/^func atof(str string) float64 {$/;"	f
atoi	pack/plugins/start/junegunn-fzf/src/options.go	/^func atoi(str string) int {$/;"	f
attach_autocmds	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! s:attach_autocmds()$/;"	f
attrColored	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func attrColored(pair ColorPair, a Attr) (C.short, C.int) {$/;"	f
attrMono	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func attrMono(pair ColorPair, a Attr) (C.short, C.int) {$/;"	f
attribute_highlight	pack/plugins/start/sheerun-vim-polyglot/syntax/ansible.vim	/^fun! s:attribute_highlight(attributes)$/;"	f
attributes_value	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, event_attributes_value)$/;"	v
attributes_value	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, microdata_attributes_value)$/;"	v
attributes_value	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, rdfa_attributes_value)$/;"	v
attributes_value	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let attributes_value = {$/;"	v
auto_sameids	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:auto_sameids()$/;"	f
auto_type_info	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:auto_type_info()$/;"	f
awkBlack	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^	awkBlack$/;"	c
awkNil	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^	awkNil = iota$/;"	c
awkTokenizer	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^func awkTokenizer(input util.Chars) ([]util.Chars, int) {$/;"	f
awkWhite	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^	awkWhite$/;"	c
b:	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^      let b:{matchstr(s:type,'[^.]*')}_subtype = matchstr(s:type,'\\.\\zs.*')$/;"	v
b:LatexBox_FoldSections	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^let b:LatexBox_FoldSections = s:FoldSectionLevels()$/;"	v
b:LatexBox_loaded	pack/plugins/start/sheerun-vim-polyglot/ftplugin/tex_LatexBox.vim	/^	let b:LatexBox_loaded = 1$/;"	v
b:Xsl_SyntaxFold_by	pack/plugins/start/sheerun-vim-polyglot/syntax/xsl.vim	/^	let b:Xsl_SyntaxFold_by=''$/;"	v
b:bar	pack/plugins/start/tomtom-tlib-vim/spec/tlib/var.vim	/^let b:bar = 3$/;"	v
b:bar	pack/plugins/start/tomtom-tlib-vim/test/tlib.vim	/^let b:bar = 3$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^	let b:browsefilter = "Clojure Source Files (*.clj)\\t*.clj\\n" .$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let b:browsefilter="eRuby Files (*.erb, *.rhtml)\\t*.erb;*.rhtml\\n" . s:browsefilter$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^  let b:browsefilter="Haml Files (*.haml)\\t*.haml\\nSass Files (*.sass)\\t*.sass\\n" . s:browsefilter$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^  let b:browsefilter = "\\n".b:browsefilter$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^  let b:browsefilter = ''$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^  let b:browsefilter="Liquid Files (*.liquid)\\t*.liquid" . b:browsefilter$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/perl.vim	/^    let b:browsefilter = "Perl Source Files (*.pl)\\t*.pl\\n" .$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ps1.vim	/^	let b:browsefilter =$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ps1xml.vim	/^  let b:browsefilter = $/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/pug.vim	/^  let b:browsefilter="Pug Files (*.pug)\\t*.pug\\n" . s:browsefilter$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/qml.vim	/^   let b:browsefilter =$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  let b:browsefilter = "Ruby Source Files (*.rb)\\t*.rb\\n" .$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/stylus.vim	/^  let b:browsefilter="Stylus Files (*.styl)\\t*.styl\\n" . s:browsefilter$/;"	v
b:c_minlines	pack/plugins/start/sheerun-vim-polyglot/syntax/c.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	pack/plugins/start/sheerun-vim-polyglot/syntax/c.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	pack/plugins/start/sheerun-vim-polyglot/syntax/c.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:crystal_no_expensive	pack/plugins/start/sheerun-vim-polyglot/syntax/crystal.vim	/^  let b:crystal_no_expensive = 1$/;"	v
b:cucumber_root	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^let b:cucumber_root = expand('%:p:h:s?.*[\\\/]\\%(features\\|stories\\)\\zs[\\\/].*??')$/;"	v
b:cucumber_steps_glob	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^  let b:cucumber_steps_glob = b:cucumber_root.'\/**\/*.rb'$/;"	v
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^let b:current_syntax = "go"$/;"	v
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/godefstack.vim	/^let b:current_syntax = "godefstack"$/;"	v
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/gohtmltmpl.vim	/^let b:current_syntax = "gohtmltmpl"$/;"	v
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/gotexttmpl.vim	/^let b:current_syntax = "gotexttmpl"$/;"	v
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/vimgo.vim	/^let b:current_syntax = "vimgo"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/after/syntax/coffee.vim	/^  let b:current_syntax=s:current_syntax$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/after/syntax/haml.vim	/^  let b:current_syntax = s:current_syntax_save$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/after/syntax/html.vim	/^   let b:current_syntax = s:pre_less_cur_syn$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/after/syntax/html.vim	/^  let b:current_syntax = s:current_syntax_save$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/after/syntax/jsx.vim	/^  let b:current_syntax=s:current_syntax$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/after/syntax/rspec.vim	/^let b:current_syntax = 'rspec'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ansible.vim	/^let b:current_syntax = "ansible"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ansible.vim	/^let b:current_syntax = ''$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ansible_hosts.vim	/^let b:current_syntax = "ansible_hosts"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ansible_template.vim	/^    let b:current_syntax = ''$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ansible_template.vim	/^let b:current_syntax = "ansible_template"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ansible_template.vim	/^let b:current_syntax = ''$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/applescript.vim	/^let b:current_syntax = "applescript"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/blade.vim	/^let b:current_syntax = 'blade'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/c.vim	/^let b:current_syntax = "c"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/cabal.vim	/^let b:current_syntax = "cabal"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/clojure.vim	/^let b:current_syntax = "clojure"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/coffee.vim	/^  let b:current_syntax = 'coffee'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/cpp.vim	/^let b:current_syntax = "cpp"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/cql.vim	/^let b:current_syntax = "cql"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/cryptol.vim	/^let b:current_syntax = "cryptol"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/crystal.vim	/^let b:current_syntax = 'crystal'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/css.vim	/^let b:current_syntax = "css"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/cucumber.vim	/^let b:current_syntax = "cucumber"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/dart.vim	/^let b:current_syntax = "dart"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/dockerfile.vim	/^let b:current_syntax = "dockerfile"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^let b:current_syntax = 'eelixir'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/elixir.vim	/^let b:current_syntax = "elixir"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/elm.vim	/^let b:current_syntax = "elm"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ember-script.vim	/^let b:current_syntax = 'ember-script'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/emblem.vim	/^let b:current_syntax = 'emblem'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/erlang.vim	/^let b:current_syntax = "erlang"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^let b:current_syntax = 'eruby'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/fish.vim	/^let b:current_syntax = 'fish'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/git.vim	/^let b:current_syntax = "git"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/gitcommit.vim	/^let b:current_syntax = "gitcommit"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/gitconfig.vim	/^let b:current_syntax = "gitconfig"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/gitrebase.vim	/^let b:current_syntax = "gitrebase"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/gitsendemail.vim	/^let b:current_syntax = "gitsendemail"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/glsl.vim	/^  let b:current_syntax = "glsl"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^let b:current_syntax = "go"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/godefstack.vim	/^let b:current_syntax = "godefstack"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/gohtmltmpl.vim	/^let b:current_syntax = "gohtmltmpl"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/gotexttmpl.vim	/^let b:current_syntax = "gotexttmpl"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/groovy.vim	/^let b:current_syntax = "groovy"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/haml.vim	/^let b:current_syntax = "haml"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/haskell.vim	/^let b:current_syntax = "haskell"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/haxe.vim	/^let b:current_syntax = "haxe"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/jasmine.vim	/^let b:current_syntax = "jasmine"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/jinja2.vim	/^let b:current_syntax = "jinja"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/json.vim	/^let b:current_syntax = "json"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^let b:current_syntax = 'jst'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/julia.vim	/^let b:current_syntax = "julia"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/kotlin.vim	/^let b:current_syntax = "kotlin"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/less.vim	/^let b:current_syntax = "less"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^let b:current_syntax = 'liquid'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ls.vim	/^  let b:current_syntax = 'livescript'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ls.vim	/^let b:current_syntax = "ls"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/lua.vim	/^let b:current_syntax = "lua"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/mako.vim	/^let b:current_syntax = "html"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/markdown.vim	/^let b:current_syntax = "mkd"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/mason.vim	/^let b:current_syntax = "mason"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/mustache.vim	/^let b:current_syntax = "mustache"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/nginx.vim	/^let b:current_syntax = "nginx"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^let b:current_syntax = "nim"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/nix.vim	/^let b:current_syntax = 'nix'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ocaml.vim	/^let b:current_syntax = "ocaml"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/octave.vim	/^let b:current_syntax = "octave"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/opencl.vim	/^let b:current_syntax = "opencl"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/perl.vim	/^let b:current_syntax = "perl"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/pgsql.vim	/^let b:current_syntax = "pgsql"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^let b:current_syntax = "php"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/plantuml.vim	/^let b:current_syntax = "plantuml"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/pod.vim	/^let b:current_syntax = "pod"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/proto.vim	/^let b:current_syntax = "proto"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ps1.vim	/^let b:current_syntax = "ps1"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ps1xml.vim	/^let b:current_syntax = "ps1xml"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/pug.vim	/^let b:current_syntax = "pug"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/puppet.vim	/^let b:current_syntax = "puppet"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/purescript.vim	/^let b:current_syntax = "purescript"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/python.vim	/^let b:current_syntax = "python"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/qml.vim	/^let b:current_syntax = "qml"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ragel.vim	/^let b:current_syntax = "ragel"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/raml.vim	/^let b:current_syntax = "raml"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/rhelp.vim	/^let   b:current_syntax = "rhelp"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/rnoweb.vim	/^let   b:current_syntax = "rnoweb"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ruby.vim	/^let b:current_syntax = "ruby"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/rust.vim	/^let b:current_syntax = "rust"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/sass.vim	/^let b:current_syntax = "sass"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/scala.vim	/^let b:current_syntax = "scala"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/scala.vim	/^let b:current_syntax = 'scala'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/scss.vim	/^let b:current_syntax = "scss"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/slim.vim	/^let b:current_syntax = "slim"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/stylus.vim	/^let b:current_syntax = "stylus"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/swift.vim	/^let b:current_syntax = "swift"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/systemd.vim	/^let b:current_syntax = "systemd"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/tap.vim	/^let b:current_syntax="tapVerboseOutput"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/thrift.vim	/^let b:current_syntax = "thrift"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/tmux.vim	/^let b:current_syntax = "tmux"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/toml.vim	/^let b:current_syntax = "toml"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2.vim	/^let b:current_syntax = "tt2"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2html.vim	/^let b:current_syntax = "tt2html"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2js.vim	/^let b:current_syntax = "tt2js"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/typescript.vim	/^let b:current_syntax = "typescript"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/vala.vim	/^let b:current_syntax = "vala"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/vbnet.vim	/^let b:current_syntax = "vbnet"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/velocity.vim	/^let b:current_syntax = "velocity"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/vimgo.vim	/^let b:current_syntax = "vimgo"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/xs.vim	/^let b:current_syntax = "xs"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/xsl.vim	/^let b:current_syntax = "xsl"$/;"	v
b:did_ftplugin	pack/plugins/start/fatih-vim-go/ftplugin/asm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/fatih-vim-go/ftplugin/gohtmltmpl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ansible_hosts.vim	/^  let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/blade.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/dart.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elixir.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/git.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitcommit.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/less.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ls.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mako.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/nix.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/opencl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/perl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ps1.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ps1xml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/qml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/r.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rhelp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rnoweb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/sass.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/slim.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/toml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/typescript.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	pack/plugins/start/fatih-vim-go/indent/go.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^  let b:did_indent=s:did_indent$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/arduino.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/blade.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/cabal.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/cucumber.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/dart.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/eelixir.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/elm.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/ember-script.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^  let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/eruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/gitconfig.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/go.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/haml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/handlebars.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/json.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/jst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/kotlin.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/liquid.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/lua.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/nginx.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/nim.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/opencl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/perl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/plantuml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/proto.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/ps1.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/pug.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/puppet.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/purescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/python.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/qml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/rust.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/sass.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/slim.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/stylus.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/swift.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/tex.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/vala.vim	/^let b:did_indent = 1$/;"	v
b:did_indent_hbs	pack/plugins/start/sheerun-vim-polyglot/indent/handlebars.vim	/^let b:did_indent_hbs = 1$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'elixir'$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'javascript'$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'text'$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'yaml'$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = g:eelixir_default_subtype$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^eex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.eex\\|\\.eelixir\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let b:eelixir_subtype = matchstr(s:lines,'eelixir_subtype=\\zs\\w\\+')$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'elixir'$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'javascript'$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'text'$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'yaml'$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = g:eelixir_default_subtype$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^eex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.eex\\|\\.eelixir\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^  let b:eelixir_subtype = matchstr(s:lines,'eelixir_subtype=\\zs\\w\\+')$/;"	v
b:eelixir_subtype_indentexpr	pack/plugins/start/sheerun-vim-polyglot/indent/eelixir.vim	/^let b:eelixir_subtype_indentexpr = &l:indentexpr$/;"	v
b:endwise_addition	pack/plugins/start/sheerun-vim-polyglot/ftplugin/fish.vim	/^let b:endwise_addition = 'end'$/;"	v
b:endwise_addition	pack/plugins/start/sheerun-vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_addition = '\\=index(["note","legend"], submatch(0))!=-1 ? "end " . submatch(0) : "end"'$/;"	v
b:endwise_pattern	pack/plugins/start/sheerun-vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_pattern = '^\\s*\\zs\\<\\(loop\\|group\\|alt\\|note\\ze[^:]*$\\|legend\\)\\>.*$'$/;"	v
b:endwise_syngroups	pack/plugins/start/sheerun-vim-polyglot/ftplugin/fish.vim	/^let b:endwise_syngroups = 'fishKeyword,fishConditional,fishRepeat'$/;"	v
b:endwise_syngroups	pack/plugins/start/sheerun-vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_syngroups = 'plantumlKeyword'$/;"	v
b:endwise_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/fish.vim	/^let b:endwise_words = 'begin,function,if,switch,while,for'$/;"	v
b:endwise_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_words = 'loop,group,alt,note,legend'$/;"	v
b:erlang_syntax_synced	pack/plugins/start/sheerun-vim-polyglot/syntax/erlang.vim	/^let b:erlang_syntax_synced = 1$/;"	v
b:eruby_nest_level	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^  let b:eruby_nest_level = 1$/;"	v
b:eruby_nest_level	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^  let b:eruby_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\.\\%(erb\\|rhtml\\)\\>','@','g'),'[^@]','','g'))$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+\\%(\\ze+\\w\\+\\)\\=$')$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+\\%(\\ze+\\w\\+\\)\\=$')$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype_indentexpr	pack/plugins/start/sheerun-vim-polyglot/indent/eruby.vim	/^let b:eruby_subtype_indentexpr = &l:indentexpr$/;"	v
b:git_dir	pack/plugins/start/sheerun-vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = $GIT_DIR$/;"	v
b:git_dir	pack/plugins/start/sheerun-vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = matchstr(expand('%:p'),'.*\\.git[\\\/]worktrees[\\\/][^\\\/]\\+\\>')$/;"	v
b:git_dir	pack/plugins/start/sheerun-vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = matchstr(expand('%:p'),'.*\\.git\\>')$/;"	v
b:git_dir	pack/plugins/start/sheerun-vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = substitute(b:git_dir,'\\\\','\/','g')$/;"	v
b:git_dir	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitcommit.vim	/^  let b:git_dir = expand("%:p:h")$/;"	v
b:handlebars_subtype_indentexpr	pack/plugins/start/sheerun-vim-polyglot/indent/handlebars.vim	/^let b:handlebars_subtype_indentexpr = &l:indentexpr$/;"	v
b:html_indent_usestate	pack/plugins/start/sheerun-vim-polyglot/indent/eruby.vim	/^let b:html_indent_usestate = 0$/;"	v
b:html_indent_usestate	pack/plugins/start/sheerun-vim-polyglot/indent/handlebars.vim	/^let b:html_indent_usestate = 0$/;"	v
b:indent_use_syntax	pack/plugins/start/sheerun-vim-polyglot/indent/perl.vim	/^let b:indent_use_syntax = has("syntax")$/;"	v
b:isLoc	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^let b:isLoc = len(getloclist(0)) > 0 ? 1 : 0$/;"	v
b:jst_nest_level	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^  let b:jst_nest_level = 1$/;"	v
b:jst_nest_level	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^  let b:jst_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\.\\%(erb\\|rhtml\\)\\>','@','g'),'[^@]','','g'))$/;"	v
b:jst_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'haml'$/;"	v
b:jst_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'html'$/;"	v
b:jst_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'javascript'$/;"	v
b:jst_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'ruby'$/;"	v
b:jst_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'text'$/;"	v
b:jst_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'yaml'$/;"	v
b:jst_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = g:jst_default_subtype$/;"	v
b:jst_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.jst\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:jst_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^  let b:jst_subtype = matchstr(&filetype,'^jst\\.\\zs\\w\\+')$/;"	v
b:jst_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^  let b:jst_subtype = matchstr(s:lines,'jst_subtype=\\zs\\w\\+')$/;"	v
b:jst_subtype_indentexpr	pack/plugins/start/sheerun-vim-polyglot/indent/jst.vim	/^let b:jst_subtype_indentexpr = &l:indentexpr$/;"	v
b:jsx_js_indentexpr	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^let b:jsx_js_indentexpr = &indentexpr$/;"	v
b:jsx_pragma_found	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^  let b:jsx_pragma_found = search(s:jsx_pragma_pattern, 'npw')$/;"	v
b:liquid_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
b:liquid_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:liquid_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
b:liquid_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:liquid_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = s:subtype$/;"	v
b:liquid_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype_indentexpr	pack/plugins/start/sheerun-vim-polyglot/indent/liquid.vim	/^let b:liquid_subtype_indentexpr = &l:indentexpr$/;"	v
b:loaded_plantuml_plugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/plantuml.vim	/^let b:loaded_plantuml_plugin = 1$/;"	v
b:main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/twig.vim	/^  let b:main_syntax = 'twig'$/;"	v
b:main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/twig.vim	/^  let b:main_syntax = b:current_syntax$/;"	v
b:match_ignorecase	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/coffee.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/jsx.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	pack/plugins/start/sheerun-vim-polyglot/ftplugin/blade.vim	/^    let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elixir.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let b:match_ignorecase=0$/;"	v
b:match_ignorecase	pack/plugins/start/sheerun-vim-polyglot/ftplugin/plantuml.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_skip	pack/plugins/start/sheerun-vim-polyglot/ftplugin/blade.vim	/^    let b:match_skip = 'synIDattr(synID(line("."), col("."), 0), "name") !=# "bladeKeyword"'$/;"	v
b:match_skip	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^	let b:match_skip = 's:comment\\|string\\|regex\\|character'$/;"	v
b:match_skip	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^  let b:match_skip =$/;"	v
b:match_skip	pack/plugins/start/sheerun-vim-polyglot/ftplugin/perl.vim	/^let b:match_skip = 's:comment\\|string\\|perlQQ\\|perlShellCommand\\|perlHereDoc\\|perlSubstitution\\|perlTranslation\\|perlMatch\\|perlFormatField'$/;"	v
b:match_skip	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  let b:match_skip =$/;"	v
b:match_skip	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^let b:match_skip = 's:comment\\|string\\|rustArrow'$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/coffee.vim	/^  let b:match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/jsx.vim	/^  let b:match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/blade.vim	/^    let b:match_words .= ',' .$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^	let b:match_words = &matchpairs$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^  let b:match_words =$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elixir.vim	/^  let b:match_words = '\\:\\@<!\\<\\%(do\\|fn\\)\\:\\@!\\>' .$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/fish.vim	/^let b:match_words =$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^  let b:match_words .= ','$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^  let b:match_words .= '\\<\\%(if\\w*\\|unless\\|case\\)\\>:\\<\\%(elsif\\|else\\|when\\)\\>:\\<end\\%(if\\w*\\|unless\\|case\\)\\>,\\<\\%(for\\|tablerow\\)\\>:\\%({%\\s*\\)\\@<=empty\\>:\\<end\\%(for\\|tablerow\\)\\>,<\\(capture\\|comment\\|highlight\\)\\>:\\<end\\1\\>'$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^  let b:match_words = ''$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  let b:match_words = b:match_words$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let b:match_words = b:mw$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/perl.vim	/^let b:match_words = '\\<if\\>:\\<elsif\\>:\\<else\\>'$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/plantuml.vim	/^  let b:match_words =$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/pug.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  let b:match_words =$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/stylus.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^  let b:match_words = '<:>,' .$/;"	v
b:mw	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = ''$/;"	v
b:mw	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(for\\|while\\)\\>:\\<do\\>:\\<done\\>,'$/;"	v
b:mw	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(match\\|try\\)\\>:\\<with\\>'$/;"	v
b:mw	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(object\\|sig\\|struct\\|begin\\)\\>:\\<end\\>'$/;"	v
b:mw	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<if\\>:\\<then\\>:\\<else\\>'$/;"	v
b:mw	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<let\\>:\\<and\\>:\\(\\<in\\>\\|;;\\)'$/;"	v
b:ragel_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/ragel.vim	/^      let b:ragel_subtype = 'cpp'$/;"	v
b:ragel_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/ragel.vim	/^      let b:ragel_subtype = 'objc'$/;"	v
b:ragel_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/ragel.vim	/^      let b:ragel_subtype = 'ruby'$/;"	v
b:ragel_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/ragel.vim	/^    let b:ragel_subtype = g:ragel_default_subtype$/;"	v
b:ragel_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/ragel.vim	/^    let b:ragel_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.rl\\|\\.ragel\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:ragel_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/ragel.vim	/^  let b:ragel_subtype = matchstr(s:lines, 'ragel_subtype=\\zs\\w\\+')$/;"	v
b:ran_once	pack/plugins/start/sheerun-vim-polyglot/indent/twig.vim	/^let b:ran_once = 1$/;"	v
b:ruby_no_expensive	pack/plugins/start/sheerun-vim-polyglot/syntax/haml.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	pack/plugins/start/sheerun-vim-polyglot/syntax/ruby.vim	/^  let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	pack/plugins/start/sheerun-vim-polyglot/syntax/slim.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:ruby_version	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^    let b:ruby_version = get(readfile(s:version_file, '', 1), '')$/;"	v
b:rust_last_args	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^	let b:rust_last_args = []$/;"	v
b:rust_last_rustc_args	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^	let b:rust_last_rustc_args = []$/;"	v
b:rust_original_delimitMate_excluded_regions	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^		let b:rust_original_delimitMate_excluded_regions = b:delimitMate_excluded_regions$/;"	v
b:rust_set_conceallevel	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^	let b:rust_set_conceallevel=1$/;"	v
b:rust_set_foldmethod	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^	let b:rust_set_foldmethod=1$/;"	v
b:spell_options	pack/plugins/start/sheerun-vim-polyglot/syntax/dart.vim	/^let b:spell_options = "contained"$/;"	v
b:spell_options	pack/plugins/start/sheerun-vim-polyglot/syntax/groovy.vim	/^let b:spell_options="contained"$/;"	v
b:spell_options	pack/plugins/start/sheerun-vim-polyglot/syntax/haxe.vim	/^let b:spell_options="contained"$/;"	v
b:sql_type_override	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^    let b:sql_type_override='mysql'$/;"	v
b:tt2_syn_inc_perl	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2.vim	/^    let b:tt2_syn_inc_perl = 1$/;"	v
b:tt2_syn_tags	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2.vim	/^    let b:tt2_syn_tags = '\\[% %]'$/;"	v
b:undo_ftplugin	pack/plugins/start/fatih-vim-go/ftplugin/asm.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^let b:undo_ftplugin = "setl fo< com< ofu<"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/javascript.vim	/^  let b:undo_ftplugin .= ' | setlocal iskeyword< suffixesadd<'$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/javascript.vim	/^  let b:undo_ftplugin = 'setlocal iskeyword< suffixesadd<'$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ansible_hosts.vim	/^let b:undo_ftplugin = "setl comments< commentstring< formatoptions<"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^		let b:undo_ftplugin .= ' | setlocal ' . s:setting . '<'$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^	let b:undo_ftplugin .= ' | setlocal path<'$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^	let b:undo_ftplugin .= ' | unlet! b:browsefilter'$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^	let b:undo_ftplugin .= ' | unlet! b:match_words b:match_skip'$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^let b:undo_ftplugin = 'setlocal iskeyword< define< formatoptions< comments< commentstring< lispwords<'$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^  let b:undo_ftplugin .=$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^let b:undo_ftplugin = "setl fo< com< cms< ofu<"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/dart.vim	/^let b:undo_ftplugin = 'setl et< fo< sw< sts< com< cms<'$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^let b:undo_ftplugin = "setl cms< "$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^let b:undo_ftplugin = "setl cms< "$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/git.vim	/^let b:undo_ftplugin = "setl keywordprg< path< includeexpr<"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitcommit.vim	/^let b:undo_ftplugin = 'setl modeline< tabstop< formatoptions< tw< com< cms<'$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitcommit.vim	/^let b:undo_ftplugin = b:undo_ftplugin . "|delc DiffGitCached"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitconfig.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^  let b:undo_ftplugin = ""$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin . "|nunmap <buffer> K"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin."|setl com< cms< fo< ml<"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/less.vim	/^let b:undo_ftplugin = "setl cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^  let b:undo_ftplugin .= '|'$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^  let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^let b:undo_ftplugin .= 'setl cms< | unlet! b:browsefilter b:match_words'$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/perl.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isk< isf< kp< path<" .$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ps1.vim	/^let b:undo_ftplugin = "setlocal tw< cms< fo<" .$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ps1xml.vim	/^let b:undo_ftplugin = "setlocal tw< cms< fo<" .$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/pug.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/qml.vim	/^let b:undo_ftplugin =$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^let b:undo_ftplugin .= "| sil! cunmap <buffer> <Plug><cword>| sil! cunmap <buffer> <Plug><cfile>"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^let b:undo_ftplugin = "setl fo< inc< inex< sua< def< com< cms< path< tags< kp<"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^let b:undo_ftplugin = "$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/sass.vim	/^let b:undo_ftplugin = "setl com< cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/slim.vim	/^let b:undo_ftplugin = "setl isk<"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/stylus.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/toml.vim	/^let b:undo_ftplugin = ""$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/twig.vim	/^  let b:undo_ftplugin .= "|setlocal comments< formatoptions<"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/twig.vim	/^  let b:undo_ftplugin = "setlocal comments< formatoptions<"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/typescript.vim	/^let b:undo_ftplugin = "setl fo< ofu< com< cms<"$/;"	v
b:undo_indent	pack/plugins/start/sheerun-vim-polyglot/indent/arduino.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	let b:undo_indent .= '| setlocal lisp<'$/;"	v
b:undo_indent	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^let b:undo_indent = 'setlocal autoindent< smartindent< expandtab< softtabstop< shiftwidth< indentexpr< indentkeys<'$/;"	v
b:undo_indent	pack/plugins/start/sheerun-vim-polyglot/indent/cucumber.vim	/^let b:undo_indent = 'setl ai< inde< indk<'$/;"	v
b:undo_indent	pack/plugins/start/sheerun-vim-polyglot/indent/dart.vim	/^let b:undo_indent = 'setl cin< cino<'$/;"	v
b:undo_indent	pack/plugins/start/sheerun-vim-polyglot/indent/gitconfig.vim	/^let b:undo_indent = 'setl ai< inde< indk<'$/;"	v
b:undo_indent	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^let b:undo_indent = 'setlocal indentexpr< smartindent< autoindent< indentkeys< cinoptions<'$/;"	v
b:undo_indent	pack/plugins/start/sheerun-vim-polyglot/indent/proto.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	pack/plugins/start/sheerun-vim-polyglot/indent/ps1.vim	/^let b:undo_indent = "setl si<"$/;"	v
b:undo_indent	pack/plugins/start/sheerun-vim-polyglot/indent/vala.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:vala_minlines	pack/plugins/start/sheerun-vim-polyglot/syntax/vala.vim	/^  let b:vala_minlines = 50$/;"	v
b:vala_minlines	pack/plugins/start/sheerun-vim-polyglot/syntax/vala.vim	/^  let b:vala_minlines = vala_minlines$/;"	v
badgood	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:badgood(args)$/;"	f
bash	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^    def bash$/;"	f	class:Shell
basicMatch	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func (p *Pattern) basicMatch(item *Item, withPos bool, slab *util.Slab) (Offset, int, int, *[]int) {$/;"	f
beep	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:beep()$/;"	f
before	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/label.vim	/^func! s:before()$/;"	f
bestSeekTarget	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:bestSeekTarget(targets, oldpos, min, max, message)$/;"	f
bg	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (p ColorPair) bg() Color {$/;"	f
binary_search	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
body_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let body_attributes = {'onafterprint': [], 'onbeforeprint': [], 'onbeforeunload': [], 'onblur': [], 'onerror': [], 'onfocus': [], 'onhashchange': [], 'onload': [], 'onmessage': [], 'onoffline': [], 'ononline': [], 'onpopstate': [], 'onredo': [], 'onresize': [], 'onstorage': [], 'onundo': [], 'onunload': []}$/;"	v
body_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let body_attributes = {}$/;"	v
bonusAt	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func bonusAt(input util.Chars, idx int) int16 {$/;"	f
bonusBoundary	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	bonusBoundary = scoreMatch \/ 2$/;"	c
bonusCamel123	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	bonusCamel123 = bonusBoundary + scoreGapExtention$/;"	c
bonusConsecutive	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	bonusConsecutive = -(scoreGapStart + scoreGapExtention)$/;"	c
bonusFirstCharMultiplier	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	bonusFirstCharMultiplier = 2$/;"	c
bonusFor	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func bonusFor(prevClass charClass, class charClass) int16 {$/;"	f
bonusNonWord	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	bonusNonWord = scoreMatch \/ 2$/;"	c
bracket_type	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:bracket_type(char)$/;"	f
break	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
bsub	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^function! s:bsub(target,pattern,replacement)$/;"	f
btags_sink	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:btags_sink(lines)$/;"	f
btags_source	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:btags_source(tag_cmds)$/;"	f
buffer	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer_commit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_compare_age	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
buffer_containing_commit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_expand	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_getline	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getvar	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_line_handler	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:buffer_line_handler(lines)$/;"	f
buffer_lines	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:buffer_lines()$/;"	f
buffer_name	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_path	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_repo	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_rev	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_setvar	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_sha1	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_spec	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  function! s:buffer_spec() dict abort$/;"	f
buffer_type	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_up	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_up(...) dict abort$/;"	f
buflisted	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:buflisted()$/;"	f
bufopen	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:bufopen(lines)$/;"	f
buildLists	pack/plugins/start/junegunn-fzf/src/merger_test.go	/^func buildLists(partiallySorted bool) ([][]*Result, []*Result) {$/;"	f
buildResult	pack/plugins/start/junegunn-fzf/src/result.go	/^func buildResult(item *Item, offsets []Offset, score int, trimLen int) *Result {$/;"	f
build_delim_regex	pack/plugins/start/junegunn-fzf/fzf	/^  def FZF.build_delim_regex delim$/;"	F
build_path	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^function! s:build_path(path) abort$/;"	f
burp	pack/plugins/start/junegunn-fzf/fzf	/^  def burp string, orig = nil$/;"	f
byBegin	pack/plugins/start/junegunn-fzf/src/options.go	/^	byBegin$/;"	c
byEnd	pack/plugins/start/junegunn-fzf/src/options.go	/^	byEnd$/;"	c
byLength	pack/plugins/start/junegunn-fzf/src/options.go	/^	byLength$/;"	c
byScore	pack/plugins/start/junegunn-fzf/src/options.go	/^	byScore criterion = iota$/;"	c
byTimeOrder	pack/plugins/start/junegunn-fzf/src/terminal.go	/^type byTimeOrder []selectedItem$/;"	t
c	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:c()$/;"	f
cS	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap cS  <Plug>CSurround$/;"	m
cache_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! s:cache_project_root(path) abort$/;"	f
cacheable	pack/plugins/start/junegunn-fzf/src/merger.go	/^func (mg *Merger) cacheable() bool {$/;"	f
calc_size	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:calc_size(max, val, dict)$/;"	f
calculateScore	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func calculateScore(caseSensitive bool, text util.Chars, pattern []rune, sidx int, eidx int, withPos bool) (int, *[]int) {$/;"	f
calculateSize	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func calculateSize(base int, size sizeSpec, margin int, minSize int) int {$/;"	f
call	pack/plugins/start/junegunn-fzf/fzf	/^  def call(name, method, *args)$/;"	f	class:FZF
callback	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:callback(dict, lines) abort$/;"	f
callback_handlers_on_exit	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:callback_handlers_on_exit(job, exit_status, data) abort$/;"	f
callbacks	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let callbacks = go#job#Spawn(a:args)$/;"	v
callbacks	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let callbacks = go#job#Spawn(a:args)$/;"	v
callbacks	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^  let callbacks = go#job#Spawn(a:args)$/;"	v
camelcase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:camelcase(word)$/;"	f
can_complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:can_complete()$/;"	f
can_diffoff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
capture	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def capture pane = 0$/;"	f	class:Tmux
cargo	pack/plugins/start/sheerun-vim-polyglot/compiler/cargo.vim	/^    augroup cargo$/;"	a
cbs	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^    let cbs.callback = a:args.callback$/;"	v
cbs	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^    let cbs.close_cb = a:args.close_cb$/;"	v
cbs.close_cb	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^  function cbs.close_cb(chan) dict$/;"	f
cbs.show_errors	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^  function cbs.show_errors(listtype) dict$/;"	f
cd	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let cd = exists('*haslocaldir') && haslocaldir() ? 'lcd ' : 'cd '$/;"	v
cd	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let cd = exists('*haslocaldir') && haslocaldir() ? 'lcd ' : 'cd '$/;"	v
cexpr	pack/plugins/start/sheerun-vim-polyglot/autoload/dart.vim	/^function! s:cexpr(errorformat, joined_lines) abort$/;"	f
cfile	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:cfile() abort$/;"	f
cgc	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^  nmap cgc <Plug>ChangeCommentary$/;"	m
changesurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:changesurround(...) " {{{1$/;"	f
charClass	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^type charClass int$/;"	t
charClassOf	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func charClassOf(char rune) charClass {$/;"	f
charClassOfAscii	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func charClassOfAscii(char rune) charClass {$/;"	f
charClassOfNonAscii	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func charClassOfNonAscii(char rune) charClass {$/;"	f
charLetter	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	charLetter$/;"	c
charLower	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	charLower$/;"	c
charNonWord	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	charNonWord charClass = iota$/;"	c
charNumber	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	charNumber$/;"	c
charUpper	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	charUpper$/;"	c
char_range	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
charset	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let charset = [$/;"	v
check_binary	pack/plugins/start/junegunn-fzf/install	/^check_binary() {$/;"	f
check_for_string	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:check_for_string()$/;"	f
chomp	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:chomp(str)$/;"	f
chomp	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
choose	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^function! s:choose(word)$/;"	f
chop	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f
chunkSize	pack/plugins/start/junegunn-fzf/src/constants.go	/^	chunkSize int = 100$/;"	c
cleanUp	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:cleanUp()$/;"	f
clear	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:clear(list) abort$/;"	f
clearChunkCache	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func clearChunkCache() {$/;"	f
clearCommandLine	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:clearCommandLine()$/;"	f
clearPack	get-plugins.go	/^func clearPack() {$/;"	f
clearPatternCache	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func clearPatternCache() {$/;"	f
clojure_check_for_string_worker	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:clojure_check_for_string_worker()$/;"	f
clojure_indent_pos	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:clojure_indent_pos()$/;"	f
clojure_is_method_special_case_worker	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:clojure_is_method_special_case_worker(position)$/;"	f
clojurecomplete#Complete	pack/plugins/start/sheerun-vim-polyglot/autoload/clojurecomplete.vim	/^function! clojurecomplete#Complete(findstart, base)$/;"	f
close_cb	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  function! s:close_cb(chan) closure$/;"	f
close_cb	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  function! s:close_cb(chan) closure$/;"	f
closematch	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
cmd	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:cmd(bang, ...) abort$/;"	f
cmd_history_sink	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:cmd_history_sink(lines)$/;"	f
cmd_job	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function s:cmd_job(args) abort$/;"	f
coerce	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:coerce(transformation)$/;"	f
coffee#CoffeeSetUpErrorFormat	pack/plugins/start/sheerun-vim-polyglot/autoload/coffee.vim	/^function! coffee#CoffeeSetUpErrorFormat()$/;"	f
coffee#CoffeeSetUpVariables	pack/plugins/start/sheerun-vim-polyglot/autoload/coffee.vim	/^function! coffee#CoffeeSetUpVariables()$/;"	f
colBlack	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	colBlack Color = iota$/;"	c
colBlue	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	colBlue$/;"	c
colCyan	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	colCyan$/;"	c
colDefault	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	colDefault         = -1$/;"	c
colGreen	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	colGreen$/;"	c
colMagenta	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	colMagenta$/;"	c
colRed	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	colRed$/;"	c
colUndefined	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	colUndefined Color = -2$/;"	c
colWhite	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	colWhite$/;"	c
colYellow	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	colYellow$/;"	c
collect	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:collect(temps) abort$/;"	f
color	pack/plugins/start/junegunn-fzf/fzf	/^      def self.color sym, bold = false$/;"	F	class:init_screen
colorOffset	pack/plugins/start/junegunn-fzf/src/result.go	/^type colorOffset struct {$/;"	t
colorOffsets	pack/plugins/start/junegunn-fzf/src/result.go	/^func (result *Result) colorOffsets(matchOffsets []Offset, theme *tui.ColorTheme, color tui.ColorPair, attr tui.Attr, current bool) []colorOffset {$/;"	f
colored	pack/plugins/start/junegunn-fzf/src/ansi.go	/^func (s *ansiState) colored() bool {$/;"	f
colors_name	pack/colors/start/romainl-apprentice/colors/apprentice.vim	/^let colors_name = "apprentice"$/;"	v
colors_name	pack/colors/start/romainl-disciple/colors/disciple.vim	/^let colors_name = 'disciple'$/;"	v
colors_should_have_correct_format	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:colors_should_have_correct_format()$/;"	f
colour	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:colour(r, g, b)$/;"	f
combinations	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
command	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:command(definition) abort$/;"	f
command_sink	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:command_sink(lines)$/;"	f
commands.abbrev.process	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:commands.abbrev.process(bang,line1,line2,count,args)$/;"	f
commands.abstract.dispatch	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:commands.abstract.dispatch(bang,line1,line2,count,args)$/;"	f
commands.abstract.go	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:commands.abstract.go(bang,line1,line2,count,args)$/;"	f
commands.search.process	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:commands.search.process(bang,line1,line2,count,args)$/;"	f
commands.substitute.process	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:commands.substitute.process(bang,line1,line2,count,args)$/;"	f
commits	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:commits(buffer_local, args)$/;"	f
commits_sink	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:commits_sink(lines)$/;"	f
common_head	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f
common_sink	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:common_sink(action, lines) abort$/;"	f
compareRanks	pack/plugins/start/junegunn-fzf/src/result.go	/^func compareRanks(irank rank, jrank rank, tac bool) bool {$/;"	f
complete_descriptor	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! s:complete_descriptor(...) abort$/;"	f
complete_insert	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:complete_insert(lines)$/;"	f
complete_panes	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! s:complete_panes(...) abort$/;"	f
complete_sessions	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! s:complete_sessions(...) abort$/;"	f
complete_trigger	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:complete_trigger()$/;"	f
complete_windows	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! s:complete_windows(...) abort$/;"	f
concat	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:concat(list) abort$/;"	f
concat_ftdetect	pack/plugins/start/sheerun-vim-polyglot/build	/^concat_ftdetect() {$/;"	f
configured_tree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:configured_tree(git_dir) abort$/;"	f
confirm	pack/plugins/start/junegunn-fzf/uninstall	/^confirm() {$/;"	f
conj	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
cons	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
constrain	pack/plugins/start/junegunn-fzf/fzf	/^  def constrain offset, cursor, count, height$/;"	f	class:start_search
constrain	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) constrain() {$/;"	f
consume	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func consume(expects ...rune) bool {$/;"	f
contains_multibyte	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
coordinatorDelayMax	pack/plugins/start/junegunn-fzf/src/constants.go	/^	coordinatorDelayMax  time.Duration = 100 * time.Millisecond$/;"	c
coordinatorDelayStep	pack/plugins/start/junegunn-fzf/src/constants.go	/^	coordinatorDelayStep time.Duration = 10 * time.Millisecond$/;"	c
copySlice	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func copySlice(slice []rune) []rune {$/;"	f
copy_dir	pack/plugins/start/sheerun-vim-polyglot/build	/^copy_dir() {$/;"	f
core_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let core_attributes = {'accesskey': [], 'class': [], 'contenteditable': ['true', 'false', ''], 'contextmenu': [], 'dir': ['ltr', 'rtl'], 'draggable': ['true', 'false'], 'hidden': ['hidden', ''], 'id': [], 'is': [], 'lang': lang_tag, 'spellcheck': ['true', 'false', ''], 'style': [], 'tabindex': [], 'title': []}$/;"	v
count	pack/plugins/start/sheerun-vim-polyglot/indent/liquid.vim	/^function! s:count(string,pattern)$/;"	f
count_braces	pack/plugins/start/sheerun-vim-polyglot/indent/stylus.vim	/^function s:count_braces(lnum, count_open)$/;"	f
coverage_browser_callback	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! s:coverage_browser_callback(coverfile, job, exit_status, data)$/;"	f
coverage_browser_handler	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! s:coverage_browser_handler(job, exit_status, data) abort$/;"	f
coverage_callback	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! s:coverage_callback(coverfile, job, exit_status, data)$/;"	f
coverage_handler	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! s:coverage_handler(job, exit_status, data) abort$/;"	f
coverage_job	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function s:coverage_job(args)$/;"	f
cpath	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:cpath(path) abort$/;"	f
cprint	pack/plugins/start/junegunn-fzf/fzf	/^  def cprint str, col$/;"	f	class:usage
cr	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^  nmap cr  <Plug>Coerce$/;"	m
crc_vim_table	pack/plugins/start/tomtom-tlib-vim/scripts/create_crc_table.rb	/^def crc_vim_table$/;"	f
createArgTextObjects	pack/plugins/start/wellle-targets-vim/plugin/targets.vim	/^function! s:createArgTextObjects(mapType)$/;"	f
createPairTextObjects	pack/plugins/start/wellle-targets-vim/plugin/targets.vim	/^function! s:createPairTextObjects(mapType)$/;"	f
createQuoteTextObjects	pack/plugins/start/wellle-targets-vim/plugin/targets.vim	/^function! s:createQuoteTextObjects(mapType)$/;"	f
createSeparatorTextObjects	pack/plugins/start/wellle-targets-vim/plugin/targets.vim	/^function! s:createSeparatorTextObjects(mapType)$/;"	f
createTagTextObjects	pack/plugins/start/wellle-targets-vim/plugin/targets.vim	/^function! s:createTagTextObjects(mapType)$/;"	f
create_dictionary	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:create_dictionary(lhs,rhs,opts)$/;"	f
criterion	pack/plugins/start/junegunn-fzf/src/options.go	/^type criterion int$/;"	t
cry_minlines	pack/plugins/start/sheerun-vim-polyglot/syntax/cryptol.vim	/^  let cry_minlines = 50$/;"	v
crystal_lang#complete	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#complete(findstart, base) abort$/;"	f
crystal_lang#context	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#context(file, pos, option_str) abort$/;"	f
crystal_lang#entrypoint_for	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#entrypoint_for(file_path) abort$/;"	f
crystal_lang#format	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#format(option_str) abort$/;"	f
crystal_lang#format_string	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#format_string(code, ...) abort$/;"	f
crystal_lang#get_spec_switched_path	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#get_spec_switched_path(absolute_path) abort$/;"	f
crystal_lang#impl	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#impl(file, pos, option_str) abort$/;"	f
crystal_lang#jump_to_definition	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#jump_to_definition(file, pos) abort$/;"	f
crystal_lang#run_all_spec	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#run_all_spec(...) abort$/;"	f
crystal_lang#run_current_spec	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#run_current_spec(...) abort$/;"	f
crystal_lang#switch_spec_file	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#switch_spec_file(...) abort$/;"	f
crystal_lang#tool	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#tool(name, file, pos, option_str) abort$/;"	f
crystal_lang#type_hierarchy	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#type_hierarchy(file, option_str) abort$/;"	f
crystal_minlines	pack/plugins/start/sheerun-vim-polyglot/syntax/crystal.vim	/^    let crystal_minlines = 500$/;"	v
cs	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap cs  <Plug>Csurround$/;"	m
ctrl	pack/plugins/start/junegunn-fzf/fzf	/^  def ctrl char$/;"	f	class:usage
ctrlp#decls#accept	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#accept(mode, str) abort$/;"	f
ctrlp#decls#cmd	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#cmd(mode, ...) abort$/;"	f
ctrlp#decls#enter	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#enter() abort$/;"	f
ctrlp#decls#exit	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#exit() abort$/;"	f
ctrlp#decls#init	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#init() abort$/;"	f
current	pack/plugins/start/junegunn-fzf/src/history.go	/^func (h *History) current() string {$/;"	f
current	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) current() string {$/;"	f
currentItem	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) currentItem() *Item {$/;"	f
current_char	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:current_char()$/;"	f
current_compiler	pack/plugins/start/fatih-vim-go/compiler/go.vim	/^let current_compiler = "go"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/cake.vim	/^let current_compiler = 'cake'$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/cargo.vim	/^let current_compiler = "cargo"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/coffee.vim	/^let current_compiler = 'coffee'$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/cryptol.vim	/^let current_compiler = "cryptol"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/cucumber.vim	/^let current_compiler = "cucumber"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/eruby.vim	/^let current_compiler = "eruby"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/exunit.vim	/^let current_compiler = "exunit"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/fish.vim	/^let current_compiler = 'fish'$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/go.vim	/^let current_compiler = "go"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/haml.vim	/^let current_compiler = "haml"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/ls.vim	/^let current_compiler = 'ls'$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/nim.vim	/^let current_compiler = "nim"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/python.vim	/^let current_compiler = "python"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/rake.vim	/^let current_compiler = "rake"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/rspec.vim	/^let current_compiler = "rspec"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/ruby.vim	/^let current_compiler = "ruby"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/rubyunit.vim	/^let current_compiler = "rubyunit"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/rustc.vim	/^let current_compiler = "rustc"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/sass.vim	/^let current_compiler = "sass"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/sbt.vim	/^let current_compiler = 'sbt'$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/typescript.vim	/^let current_compiler = "typescript"$/;"	v
current_word	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:current_word()$/;"	f
cursor_y	pack/plugins/start/junegunn-fzf/fzf	/^  def cursor_y offset = 0$/;"	f	class:usage
cycle	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^function! s:cycle()$/;"	f
d	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^        let d = {'file': 'f',"startline": "1", "startcol": "2", "endline": "3", "endcol": "4", "numstmt": "5", "cnt": "0"}$/;"	v
d	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^        let d = {'file': 'f',"startline": "1", "startcol": "2", "endline": "3", "endcol": "4", "numstmt": "5", "cnt": "6"}$/;"	v
dart#analyzer	pack/plugins/start/sheerun-vim-polyglot/autoload/dart.vim	/^function! dart#analyzer(q_args) abort$/;"	f
dart#fmt	pack/plugins/start/sheerun-vim-polyglot/autoload/dart.vim	/^function! dart#fmt(q_args) abort$/;"	f
dart#tojs	pack/plugins/start/sheerun-vim-polyglot/autoload/dart.vim	/^function! dart#tojs(q_args) abort$/;"	f
dashcase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:dashcase(word)$/;"	f
dbgfeat	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/debug.vim	/^func! s:dbgfeat(featurename)$/;"	f
dbgflag	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/debug.vim	/^func! s:dbgflag(settingname)$/;"	f
dbgfunc	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/debug.vim	/^func! s:dbgfunc(funcname)$/;"	f
debug	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:debug(message)$/;"	f
decode	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:decode(json, ...) abort$/;"	f
def_job	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function s:def_job(args) abort$/;"	f
defaultCommand	pack/plugins/start/junegunn-fzf/src/constants_unix.go	/^	defaultCommand = `find . -path '*\/\\.*' -prune -o -type f -print -o -type l -print 2> \/dev\/null | sed s\/^..\/\/`$/;"	c
defaultCommand	pack/plugins/start/junegunn-fzf/src/constants_windows.go	/^	defaultCommand = `dir \/s\/b`$/;"	c
defaultHistoryMax	pack/plugins/start/junegunn-fzf/src/constants.go	/^	defaultHistoryMax int = 1000$/;"	c
defaultJumpLabels	pack/plugins/start/junegunn-fzf/src/constants.go	/^	defaultJumpLabels string = "asdfghjklqwertyuiopzxcvbnm1234567890ASDFGHJKLQWERTYUIOPZXCVBNM`~;:,<.>\/?'\\"!@#$%^&*()[{]}-_=+"$/;"	c
defaultKeymap	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func defaultKeymap() map[int]actionType {$/;"	f
defaultMargin	pack/plugins/start/junegunn-fzf/src/options.go	/^func defaultMargin() [4]sizeSpec {$/;"	f
defaultOptions	pack/plugins/start/junegunn-fzf/src/options.go	/^func defaultOptions() *Options {$/;"	f
default_color	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/hl.vim	/^func! s:default_color(hlgroup, what, mode) abort$/;"	f
default_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let default_role = {$/;"	v
default_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let default_role = {}$/;"	v
defaults	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:defaults()$/;"	f
defaults	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:defaults()$/;"	f
define_commands	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:define_commands() abort$/;"	f
defs	pack/plugins/start/junegunn-fzf-vim/plugin/fzf.vim	/^function! s:defs(commands)$/;"	f
deindent_keyword	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^function! s:deindent_keyword(ind)$/;"	f
delChar	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) delChar() bool {$/;"	f
delimiterRegexp	pack/plugins/start/junegunn-fzf/src/options.go	/^func delimiterRegexp(str string) Delimiter {$/;"	f
did_cpp_syntax_inits	pack/plugins/start/sheerun-vim-polyglot/after/syntax/cpp.vim	/^    let did_cpp_syntax_inits = 1$/;"	v
did_cpp_syntax_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/cpp.vim	/^    let did_cpp_syntax_inits = 1$/;"	v
did_cql_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/cql.vim	/^    let did_cql_syn_inits = 1$/;"	v
did_cry_syntax_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/cryptol.vim	/^    let did_cry_syntax_inits = 1$/;"	v
did_css_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/css.vim	/^    let did_css_syn_inits = 1$/;"	v
did_css_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/stylus.vim	/^    let did_css_syn_inits = 1$/;"	v
did_erlang_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/erlang.vim	/^    let did_erlang_inits = 1$/;"	v
did_groovy_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/groovy.vim	/^    let did_groovy_syn_inits = 1$/;"	v
did_haxe_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/haxe.vim	/^    let did_haxe_syn_inits = 1$/;"	v
did_javascript_syn_inits	pack/plugins/start/sheerun-vim-polyglot/extras/flow.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	pack/plugins/start/sheerun-vim-polyglot/extras/jsdoc.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_jinja_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/jinja2.vim	/^    let did_jinja_syn_inits = 1$/;"	v
did_lua_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/lua.vim	/^    let did_lua_syn_inits = 1$/;"	v
did_mako_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/mako.vim	/^    let did_mako_syn_inits = 1$/;"	v
did_mason_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/mason.vim	/^		let did_mason_syn_inits = 1$/;"	v
did_nim_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^    let did_nim_syn_inits = 1$/;"	v
did_ocaml_syntax_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/ocaml.vim	/^    let did_ocaml_syntax_inits = 1$/;"	v
did_octave_syntax_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/octave.vim	/^    let did_octave_syntax_inits = 1$/;"	v
did_pgsql_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/pgsql.vim	/^    let did_pgsql_syn_inits = 1$/;"	v
did_pod_syntax_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/pod.vim	/^    let did_pod_syntax_inits = 1$/;"	v
did_proto_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/proto.vim	/^    let did_proto_syn_inits = 1$/;"	v
did_ps1_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/ps1.vim	/^		let did_ps1_syn_inits = 1$/;"	v
did_puppet_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/puppet.vim	/^    let did_puppet_syn_inits = 1$/;"	v
did_python_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/python.vim	/^    let did_python_syn_inits = 1$/;"	v
did_qml_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/qml.vim	/^    let did_qml_syn_inits = 1$/;"	v
did_rhelp_syntax_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/rhelp.vim	/^    let did_rhelp_syntax_inits = 1$/;"	v
did_tapverboseoutput_syntax_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/tap.vim	/^  let did_tapverboseoutput_syntax_inits = 1$/;"	v
did_thrift_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/thrift.vim	/^    let did_thrift_syn_inits = 1$/;"	v
did_twig_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/twig.vim	/^    let did_twig_syn_inits = 1$/;"	v
did_txt_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/textile.vim	/^        let did_txt_syn_inits = 1$/;"	v
did_typescript_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/typescript.vim	/^    let did_typescript_syn_inits = 1$/;"	v
did_vbnet_syntax_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/vbnet.vim	/^        let did_vbnet_syntax_inits = 1$/;"	v
did_velocity_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/velocity.vim	/^    let did_velocity_syn_inits = 1$/;"	v
did_xs_syntax_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/xs.vim	/^    let did_xs_syntax_inits = 1$/;"	v
diff_modifier	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diff_modifier(count) abort$/;"	f
diff_restore	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diff_restore() abort$/;"	f
diff_window_count	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
diffcomplete	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitcommit.vim	/^function! s:diffcomplete(A,L,P)$/;"	f
diffidx	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f
diffoff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff() abort$/;"	f
diffoff_all	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
diffthis	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diffthis() abort$/;"	f
dir	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let dir = getcwd()$/;"	v
dir	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let dir = getcwd()$/;"	v
disable_conceal_in_other_windows	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/label.vim	/^func! s:disable_conceal_in_other_windows()$/;"	f
dispatcher	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:dispatcher(bang,line1,line2,count,args)$/;"	f
displayWidth	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func displayWidth(runes []rune) int {$/;"	f
displayWidthWithLimit	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func displayWidthWithLimit(runes []rune, prefixWidth int, limit int) int {$/;"	f
do_label	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/label.vim	/^func! s:do_label(s, v, reverse) "{{{$/;"	f
do_match	pack/plugins/start/junegunn-fzf/fzf	/^    def do_match str, pat$/;"	f	class:start_search.Matcher
document_structure	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let document_structure = ['article', 'columnheader', 'definition', 'directory', 'document', 'group', 'heading', 'img', 'list', 'listitem', 'math', 'note', 'presentation', 'region', 'row', 'rowheader', 'separator']$/;"	v
document_structure	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let document_structure = ['article', 'columnheader', 'definition', 'directory', 'document', 'group', 'heading', 'img', 'list', 'listitem', 'math', 'note', 'presentation', 'region', 'row', 'rowheader', 'separator']$/;"	v
dopopd	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:dopopd()$/;"	f
dosurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
dotcase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:dotcase(word)$/;"	f
double?	pack/plugins/start/junegunn-fzf/fzf	/^    def double? v$/;"	f	class:start_search.MouseEvent
doubleClickDuration	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	doubleClickDuration = 500 * time.Millisecond$/;"	c
download	pack/plugins/start/junegunn-fzf/install	/^download() {$/;"	f
download	pack/plugins/start/sheerun-vim-polyglot/build	/^download() {$/;"	f
dprint	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! s:dprint(msg)$/;"	f
drag_and_drop_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let drag_and_drop_attributes = {'aria-dropeffect': ['copy', 'move', 'link', 'execute', 'popup', 'none'], 'aria-grabbed': ['true', 'false', 'undefined']}$/;"	v
drop	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:drop(target)$/;"	f
dropa	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:dropa(target)$/;"	f
dropr	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:dropr(target)$/;"	f
ds	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap ds  <Plug>Dsurround$/;"	m
dstring	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f
dupe	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^func (c *Chunk) dupe() *Chunk {$/;"	f
dupeTheme	pack/plugins/start/junegunn-fzf/src/options.go	/^func dupeTheme(theme *tui.ColorTheme) *tui.ColorTheme {$/;"	f
echo	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:echo(str) abort$/;"	f
echo_error	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! s:echo_error(msg, ...) abort$/;"	f
echo_go_info	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:echo_go_info()$/;"	f
echorizer.eat	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function s:echorizer.eat() abort$/;"	f
echorizer.echo	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function s:echorizer.echo() abort$/;"	f
echorizer.echo_ansi	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function s:echorizer.echo_ansi(code) abort$/;"	f
egrep_pattern	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:egrep_pattern(dict,boundaries)$/;"	f
elm#io#system	pack/plugins/start/sheerun-vim-polyglot/autoload/elm/io.vim	/^function! elm#io#system(program, args)$/;"	f
emit	pack/plugins/start/junegunn-fzf/fzf	/^  def emit event$/;"	f	class:usage
empty?	pack/plugins/start/junegunn-fzf/fzf	/^    def empty? q$/;"	f	class:start_search.ExtendedFuzzyMatcher
empty?	pack/plugins/start/junegunn-fzf/fzf	/^    def empty? q$/;"	f	class:start_search.FuzzyMatcher
enable_syntax	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! s:enable_syntax() abort$/;"	f
encode	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:encode(val) abort$/;"	f
end_with?	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def end_with? str$/;"	f	class:NilClass
ends_with	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:ends_with(str, suffix) abort$/;"	f
equals	pack/plugins/start/junegunn-fzf/src/ansi.go	/^func (s *ansiState) equals(t *ansiState) bool {$/;"	f
error	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:error(msg)$/;"	f
error	pack/plugins/start/sheerun-vim-polyglot/autoload/dart.vim	/^function! s:error(text) abort$/;"	f
errorExit	pack/plugins/start/junegunn-fzf/src/options.go	/^func errorExit(msg string) {$/;"	f
escSequence	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func escSequence() Event {$/;"	f
escape	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:escape(path)$/;"	f
escape	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:escape(path)$/;"	f
escape_file_searching	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
escape_pattern	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
escaped	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^function! s:escaped(first, last) abort$/;"	f
escapedColon	pack/plugins/start/junegunn-fzf/src/options.go	/^	escapedColon = 0$/;"	c
escapedComma	pack/plugins/start/junegunn-fzf/src/options.go	/^	escapedComma = 1$/;"	c
eunuch	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^augroup eunuch$/;"	a
eval	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:eval(dict, key, arg)$/;"	f
event_attributes_value	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let event_attributes_value = {$/;"	v
event_handler_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let event_handler_attributes = {'onabort': [], 'onblur': [], 'oncanplay': [], 'oncanplaythrough': [], 'onchange': [], 'onclick': [], 'oncontextmenu': [], 'ondblclick': [], 'ondrag': [], 'ondragend': [], 'ondragenter': [], 'ondragleave': [], 'ondragover': [], 'ondragstart': [], 'ondrop': [], 'ondurationchange': [], 'onemptied': [], 'onended': [], 'onerror': [], 'onfocus': [], 'onformchange': [], 'onforminput': [], 'oninput': [], 'oninvalid': [], 'onkeydown': [], 'onkeypress': [], 'onkeyup': [], 'onload': [], 'onloadeddata': [], 'onloadedmetadata': [], 'onloadstart': [], 'onmousedown': [], 'onmousemove': [], 'onmouseout': [], 'onmouseover': [], 'onmouseup': [], 'onmousewheel': [], 'onpause': [], 'onplay': [], 'onplaying': [], 'onprogress': [], 'onratechange': [], 'onreadystatechange': [], 'onscroll': [], 'onseeked': [], 'onseeking': [], 'onselect': [], 'onshow': [], 'onstalled': [], 'onsubmit': [], 'onsuspend': [], 'ontimeupdate': [], 'onvolumechange': [], 'onwaiting': []}$/;"	v
exact_regex	pack/plugins/start/junegunn-fzf/fzf	/^    def exact_regex w$/;"	f	class:start_search.ExtendedFuzzyMatcher.parse
excmds	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:excmds()$/;"	f
execute	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:execute(dict, command, temps) abort$/;"	f
execute	pack/plugins/start/wellle-targets-vim/test/test.vim	/^function! s:execute(operation, motions)$/;"	f
executeCommand	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) executeCommand(template string, items []*Item) {$/;"	f
executeRegexp	pack/plugins/start/junegunn-fzf/src/options.go	/^var executeRegexp *regexp.Regexp$/;"	v
execute_term	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:execute_term(dict, command, temps) abort$/;"	f
execute_tmux	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:execute_tmux(dict, command, temps) abort$/;"	f
exists	get-plugins.go	/^func exists(path string) (bool, error) {$/;"	f
exists	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:exists(name) abort$/;"	f
exitError	pack/plugins/start/junegunn-fzf/src/constants.go	/^	exitError     = 2$/;"	c
exitInterrupt	pack/plugins/start/junegunn-fzf/src/constants.go	/^	exitInterrupt = 130$/;"	c
exitNoMatch	pack/plugins/start/junegunn-fzf/src/constants.go	/^	exitNoMatch   = 1$/;"	c
exitOk	pack/plugins/start/junegunn-fzf/src/constants.go	/^	exitOk        = 0$/;"	c
exit_handler	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:exit_handler(code, command, ...)$/;"	f
expand	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:expand(...)$/;"	f
expand_braces	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:expand_braces(dict)$/;"	f
expand_modules	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:expand_modules(entry, all) abort$/;"	f
expected_256_only_colors_should_be_consistent	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:expected_256_only_colors_should_be_consistent()$/;"	f
extend	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim/complete.vim	/^function! s:extend(base, extra)$/;"	f
extendedMatch	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func (p *Pattern) extendedMatch(item *Item, withPos bool, slab *util.Slab) ([]Offset, int, int, *[]int) {$/;"	f
extract	pack/plugins/start/sheerun-vim-polyglot/build	/^extract() {$/;"	f
extractColor	pack/plugins/start/junegunn-fzf/src/ansi.go	/^func extractColor(str string, state *ansiState, proc func(string, *ansiState) bool) (string, *[]ansiOffset, *ansiState) {$/;"	f
extractafter	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:extractafter(str)$/;"	f
extractbefore	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:extractbefore(str)$/;"	f
extractopts	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:extractopts(list,opts)$/;"	f
f	vimrc	/^nmap f <Plug>Sneak_f$/;"	m
f	vimrc	/^omap f <Plug>Sneak_f$/;"	m
fail	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:fail(...)$/;"	f
feed	pack/plugins/start/junegunn-fzf/src/reader.go	/^func (r *Reader) feed(src io.Reader) {$/;"	f
fg	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (p ColorPair) fg() Color {$/;"	f
file_options	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim/complete.vim	/^function! s:file_options(prefix)$/;"	f
file_source	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim/complete.vim	/^function! s:file_source(prefix)$/;"	f
file_split_prefix	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim/complete.vim	/^function! s:file_split_prefix(prefix)$/;"	f
filetypedetect	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^augroup filetypedetect$/;"	a
fill	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func fill(x, y, w, h int, r rune) {$/;"	f
filter_list	pack/plugins/start/junegunn-fzf/fzf	/^  def filter_list list$/;"	f
find	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
findArg	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:findArg(direction, flags1, flags2, flags3, opening, closing)$/;"	f
findArgBoundary	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:findArgBoundary(...)$/;"	f
findFirstMatch	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func findFirstMatch(pattern string, str string) int {$/;"	f
findLastMatch	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func findLastMatch(pattern string, str string) int {$/;"	f
findRawTarget	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:findRawTarget(kind, which, count)$/;"	f
findTarget	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:findTarget(delimiter, which, modifier, count)$/;"	f
find_command	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:find_command(cmd,flags,word)$/;"	f
find_completion_start	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! s:find_completion_start() abort$/;"	f
find_index	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
find_indices	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
find_last_index	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
find_open_window	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:find_open_window(b)$/;"	f
find_root_by_spec	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! s:find_root_by_spec(d) abort$/;"	f
firstKey	pack/plugins/start/junegunn-fzf/src/options.go	/^func firstKey(keymap map[int]string) int {$/;"	f
first_line	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:first_line(lines)$/;"	f
fish	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^    def fish$/;"	f	class:Shell
fish#Complete	pack/plugins/start/sheerun-vim-polyglot/autoload/fish.vim	/^function! fish#Complete(findstart, base)$/;"	f
fish#Fold	pack/plugins/start/sheerun-vim-polyglot/autoload/fish.vim	/^function! fish#Fold()$/;"	f
fish#Format	pack/plugins/start/sheerun-vim-polyglot/autoload/fish.vim	/^function! fish#Format()$/;"	f
fish#Indent	pack/plugins/start/sheerun-vim-polyglot/autoload/fish.vim	/^function! fish#Indent()$/;"	f
fish#errorformat	pack/plugins/start/sheerun-vim-polyglot/autoload/fish.vim	/^function! fish#errorformat()$/;"	f
fixindent	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
fixstr	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! s:fixstr(line)$/;"	f
flatten	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
flow_elements	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let flow_elements = phrasing_elements + ['p', 'hr', 'pre', 'ul', 'ol', 'dl', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hgroup', 'address', 'blockquote', 'ins', 'del', 'element', 'object', 'main', 'map', 'noscript', 'section', 'nav', 'article', 'aside', 'header', 'footer', 'video', 'audio', 'figure', 'table', 'template', 'form', 'fieldset', 'menu', 'canvas', 'details']$/;"	v
fmt_autosave	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:fmt_autosave()$/;"	f
fname_prefix	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim/complete.vim	/^function! s:fname_prefix(str)$/;"	f
fnameescape	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:fnameescape(string) abort$/;"	f
fnameescape	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
fnameescape	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^function! s:fnameescape(file) abort$/;"	f
foldable	pack/plugins/start/sheerun-vim-polyglot/syntax/ruby.vim	/^function! s:foldable(...) abort$/;"	f
foldl	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
foldl1	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
foldr	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
foldr1	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
force_encoding	pack/plugins/start/junegunn-fzf/fzf	/^    def force_encoding *arg$/;"	f	class:String
format	pack/plugins/start/junegunn-fzf/fzf	/^  def format line, limit, offsets$/;"	f	class:usage
format_buffer	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:format_buffer(b)$/;"	f
format_cmd	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:format_cmd(line)$/;"	f
format_excmd	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:format_excmd(ex)$/;"	f
format_mark	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:format_mark(line)$/;"	f
format_win	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:format_win(tab, win, buf)$/;"	f
ft_hook	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! s:ft_hook() "set up temporary mappings to 'hook' into f\/F\/t\/T$/;"	f
fugitive	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#buffer	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#can_diffoff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#can_diffoff(buf) abort$/;"	f
fugitive#cfile	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#cfile() abort$/;"	f
fugitive#cwindow	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#cwindow() abort$/;"	f
fugitive#detect	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#foldtext	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#git_commands	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_commands() abort$/;"	f
fugitive#git_version	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_version(...) abort$/;"	f
fugitive#head	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#reload_status	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#repo	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#statusline	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive_blame	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_foldtext	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_foldtext$/;"	a
fugitive_remove	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_status	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_statusline	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_statusline$/;"	a
fugitive_temp	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_temp$/;"	a
function	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^  function! s:function(name)$/;"	f
function	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim/complete.vim	/^  function! s:function(name)$/;"	f
function	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:function(name)$/;"	f
function	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:function(name) abort$/;"	f
fuzzy_regex	pack/plugins/start/junegunn-fzf/fzf	/^    def fuzzy_regex q$/;"	f	class:start_search.FuzzyMatcher
fzf	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:fzf(name, opts, extra)$/;"	f
fzf	pack/plugins/start/junegunn-fzf/src/ansi.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/ansi_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/cache.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/cache_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/chunklist_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/constants.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/constants_unix.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/constants_windows.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/core.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/history.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/history_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/item.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/item_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/matcher.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/merger.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/merger_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/options.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/options_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/pattern.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/pattern_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/reader.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/reader_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/result.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/result_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/terminal.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/terminal_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/terminal_unix.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/terminal_windows.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/tokenizer_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def fzf(*opts)$/;"	f	class:TestBase
fzf!	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def fzf!(*opts)$/;"	f	class:TestBase
fzf#complete	pack/plugins/start/junegunn-fzf-vim/plugin/fzf.vim	/^function! fzf#complete(...)$/;"	f
fzf#run	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! fzf#run(...) abort$/;"	f
fzf#vim#_lines	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#_lines(all)$/;"	f
fzf#vim#ag	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag(query, ...)$/;"	f
fzf#vim#ag_raw	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag_raw(command_suffix, ...)$/;"	f
fzf#vim#buffer_commits	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_commits(...)$/;"	f
fzf#vim#buffer_lines	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_lines(...)$/;"	f
fzf#vim#buffer_tags	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_tags(query, ...)$/;"	f
fzf#vim#buffers	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffers(...)$/;"	f
fzf#vim#colors	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#colors(...)$/;"	f
fzf#vim#command_history	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#command_history(...)$/;"	f
fzf#vim#commands	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#commands(...)$/;"	f
fzf#vim#commits	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#commits(...)$/;"	f
fzf#vim#complete	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#complete(...)$/;"	f
fzf#vim#complete#buffer_line	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#buffer_line(...)$/;"	f
fzf#vim#complete#line	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#line(...)$/;"	f
fzf#vim#complete#path	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#path(command, ...)$/;"	f
fzf#vim#complete#word	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#word(...)$/;"	f
fzf#vim#files	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#files(dir, ...)$/;"	f
fzf#vim#filetypes	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#filetypes(...)$/;"	f
fzf#vim#gitfiles	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#gitfiles(args, ...)$/;"	f
fzf#vim#grep	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#grep(grep_command, with_column, ...)$/;"	f
fzf#vim#helptags	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#helptags(...)$/;"	f
fzf#vim#history	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#history(...)$/;"	f
fzf#vim#layout	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#layout(...)$/;"	f
fzf#vim#lines	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#lines(...)$/;"	f
fzf#vim#locate	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#locate(query, ...)$/;"	f
fzf#vim#maps	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#maps(mode, ...)$/;"	f
fzf#vim#marks	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#marks(...)$/;"	f
fzf#vim#search_history	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#search_history(...)$/;"	f
fzf#vim#snippets	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#snippets(...)$/;"	f
fzf#vim#tags	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#tags(query, ...)$/;"	f
fzf#vim#windows	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#windows(...)$/;"	f
fzf#vim#with_preview	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#with_preview(...)$/;"	f
fzf#vim#wrap	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! fzf#vim#wrap(opts)$/;"	f
fzf#wrap	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! fzf#wrap(...)$/;"	f
fzf.on_exit	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^  function! fzf.on_exit(id, code)$/;"	f
fzf_buffers	pack/plugins/start/junegunn-fzf-vim/plugin/fzf.vim	/^augroup fzf_buffers$/;"	a
fzf_exec	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:fzf_exec()$/;"	f
fzf_nvim_term	pack/plugins/start/junegunn-fzf-vim/plugin/fzf.vim	/^  function! s:fzf_nvim_term()$/;"	f
fzf_popd	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^augroup fzf_popd$/;"	a
fzf_restore_colors	pack/plugins/start/junegunn-fzf-vim/plugin/fzf.vim	/^  function! s:fzf_restore_colors()$/;"	f
fzf_tmux	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:fzf_tmux(dict)$/;"	f
g:LatexBox_Folding	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^	let g:LatexBox_Folding=0$/;"	v
g:LatexBox_autojump	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_autojump = 0$/;"	v
g:LatexBox_bibtex_wild_spaces	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_bibtex_wild_spaces = 1$/;"	v
g:LatexBox_cite_pattern	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_cite_pattern = '\\C\\\\\\a*cite\\a*\\*\\?\\(\\[[^\\]]*\\]\\)*\\_\\s*{'$/;"	v
g:LatexBox_close_pats	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^	let g:LatexBox_close_pats = [ '\\\\}','}','\\\\)',')','\\\\\\]','\\]',$/;"	v
g:LatexBox_complete_inlineMath	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_complete_inlineMath = 0$/;"	v
g:LatexBox_completion_close_braces	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_completion_close_braces = 1$/;"	v
g:LatexBox_completion_commands	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_completion_commands = [$/;"	v
g:LatexBox_completion_environments	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_completion_environments = [$/;"	v
g:LatexBox_eq_env_patterns	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_eq_env_patterns = 'equation\\|gather\\|multiline\\|align\\|flalign\\|alignat\\|eqnarray'$/;"	v
g:LatexBox_fold_automatic	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^	let g:LatexBox_fold_automatic=1$/;"	v
g:LatexBox_fold_envs	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_envs=1$/;"	v
g:LatexBox_fold_envs_force	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_envs_force = []$/;"	v
g:LatexBox_fold_parts	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_parts=[$/;"	v
g:LatexBox_fold_preamble	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_preamble=1$/;"	v
g:LatexBox_fold_sections	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_sections=[$/;"	v
g:LatexBox_fold_text	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_text=1$/;"	v
g:LatexBox_fold_toc	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_toc=0$/;"	v
g:LatexBox_fold_toc_levels	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_toc_levels=1$/;"	v
g:LatexBox_ignore_warnings	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_ignore_warnings =$/;"	v
g:LatexBox_latexmk_async	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_latexmk_async = 0$/;"	v
g:LatexBox_latexmk_env	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_latexmk_env = ''$/;"	v
g:LatexBox_latexmk_options	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_latexmk_options = ''$/;"	v
g:LatexBox_latexmk_preview_continuously	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_latexmk_preview_continuously = 0$/;"	v
g:LatexBox_open_pats	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^	let g:LatexBox_open_pats  = [ '\\\\{','{','\\\\(','(','\\\\\\[','\\[',$/;"	v
g:LatexBox_output_type	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_output_type = 'pdf'$/;"	v
g:LatexBox_personal_latexmkrc	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_personal_latexmkrc = 0$/;"	v
g:LatexBox_quickfix	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_quickfix = 1$/;"	v
g:LatexBox_ref_pattern	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_ref_pattern = '\\C\\\\v\\?\\(eq\\|page\\|[cC]\\|labelc\\|name\\|auto\\)\\?ref\\*\\?\\_\\s*{'$/;"	v
g:LatexBox_show_warnings	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_show_warnings=1$/;"	v
g:LatexBox_split_length	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_split_length = 15$/;"	v
g:LatexBox_split_resize	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_split_resize = 0$/;"	v
g:LatexBox_split_side	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_split_side = "aboveleft"$/;"	v
g:LatexBox_split_type	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_split_type = "vnew"$/;"	v
g:LatexBox_split_width	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_split_width = 30$/;"	v
g:LatexBox_toc_hidehelp	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_toc_hidehelp = 0$/;"	v
g:LatexBox_viewer	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_viewer = s:viewer$/;"	v
g:NERDCustomDelimiters	pack/plugins/start/sheerun-vim-polyglot/ftplugin/toml.vim	/^        let g:NERDCustomDelimiters.toml = s:delims$/;"	v
g:NERDCustomDelimiters	pack/plugins/start/sheerun-vim-polyglot/ftplugin/toml.vim	/^    let g:NERDCustomDelimiters = { 'toml': s:delims }$/;"	v
g:NERDDelimiterMap	pack/plugins/start/sheerun-vim-polyglot/ftplugin/toml.vim	/^        let g:NERDDelimiterMap.toml = s:delims$/;"	v
g:abolish_save_file	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^    let g:abolish_save_file = expand("~\/.vim\/after\/plugin\/abolish.vim")$/;"	v
g:abolish_save_file	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^    let g:abolish_save_file = expand("~\/vimfiles\/after\/plugin\/abolish.vim")$/;"	v
g:airline#themes#PaperColor#palette	pack/colors/start/nlknguyen-papercolor-theme/autoload/airline/themes/PaperColor.vim	/^let g:airline#themes#PaperColor#palette = {}$/;"	v
g:aria_attributes_complete	pack/plugins/start/sheerun-vim-polyglot/autoload/htmlcomplete.vim	/^  let g:aria_attributes_complete = 1$/;"	v
g:asyncrun_auto	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let g:asyncrun_auto = ''$/;"	v
g:asyncrun_bell	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let g:asyncrun_bell = 0$/;"	v
g:asyncrun_code	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let g:asyncrun_code = ''$/;"	v
g:asyncrun_encs	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let g:asyncrun_encs = ''$/;"	v
g:asyncrun_exit	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let g:asyncrun_exit = ''$/;"	v
g:asyncrun_hook	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let g:asyncrun_hook = ''$/;"	v
g:asyncrun_last	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let g:asyncrun_last = 0$/;"	v
g:asyncrun_local	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let g:asyncrun_local = 1$/;"	v
g:asyncrun_mode	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let g:asyncrun_mode = 0$/;"	v
g:asyncrun_status	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let g:asyncrun_status = ''$/;"	v
g:asyncrun_stop	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let g:asyncrun_stop = ''$/;"	v
g:asyncrun_support	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^		let g:asyncrun_support = 1$/;"	v
g:asyncrun_support	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let g:asyncrun_support = 1$/;"	v
g:asyncrun_support	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^let g:asyncrun_support = 0$/;"	v
g:asyncrun_text	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let g:asyncrun_text = ''$/;"	v
g:asyncrun_timer	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let g:asyncrun_timer = 25$/;"	v
g:asyncrun_trim	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let g:asyncrun_trim = 0$/;"	v
g:asyncrun_windows	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let g:asyncrun_windows = 1$/;"	v
g:asyncrun_windows	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^let g:asyncrun_windows = 0$/;"	v
g:autoloaded_tmuxify	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^let g:autoloaded_tmuxify = 1$/;"	v
g:bar	pack/plugins/start/tomtom-tlib-vim/spec/tlib/var.vim	/^let g:bar = 2$/;"	v
g:bar	pack/plugins/start/tomtom-tlib-vim/test/tlib.vim	/^let g:bar = 2$/;"	v
g:cabal_indent_section	pack/plugins/start/sheerun-vim-polyglot/indent/cabal.vim	/^  let g:cabal_indent_section = 2$/;"	v
g:cabal_indent_section	pack/plugins/start/sheerun-vim-polyglot/indent/cabal.vim	/^  let g:cabal_indent_section = 4$/;"	v
g:clojure_align_multiline_strings	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^		let g:clojure_align_multiline_strings = 0$/;"	v
g:clojure_align_subforms	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^		let g:clojure_align_subforms = 0$/;"	v
g:clojure_fuzzy_indent	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^		let g:clojure_fuzzy_indent = 1$/;"	v
g:clojure_fuzzy_indent_blacklist	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^		let g:clojure_fuzzy_indent_blacklist = ['-fn$', '\\v^with-%(meta|out-str|loading-context)$']$/;"	v
g:clojure_fuzzy_indent_patterns	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^		let g:clojure_fuzzy_indent_patterns = ['^with', '^def', '^let']$/;"	v
g:clojure_maxlines	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^		let g:clojure_maxlines = 100$/;"	v
g:clojure_special_indent_words	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^		let g:clojure_special_indent_words = 'deftype,defrecord,reify,proxy,extend-type,extend-protocol,letfn'$/;"	v
g:colors_name	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let g:colors_name = "PaperColor"$/;"	v
g:colors_name	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^let g:colors_name = "nofrils-acme"$/;"	v
g:colors_name	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^let g:colors_name = "nofrils-dark"$/;"	v
g:colors_name	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^let g:colors_name = "nofrils-light"$/;"	v
g:colors_name	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^let g:colors_name = "nofrils-sepia"$/;"	v
g:colors_name	pack/colors/start/tomasr-molokai/colors/molokai.vim	/^let g:colors_name="molokai"$/;"	v
g:crystal_auto_format	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^let g:crystal_auto_format = get(g:, 'crystal_auto_format', 0)$/;"	v
g:crystal_compiler_command	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^let g:crystal_compiler_command = get(g:, 'crystal_compiler_command', 'crystal')$/;"	v
g:crystal_indent_access_modifier_style	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^  let g:crystal_indent_access_modifier_style = 'normal'$/;"	v
g:ctrlp_ext_vars	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^  let g:ctrlp_ext_vars = [s:go_decls_var]$/;"	v
g:ctrlp_ext_vars	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^  let g:ctrlp_ext_vars = add(g:ctrlp_ext_vars, s:go_decls_var)$/;"	v
g:cucumber_languages	pack/plugins/start/sheerun-vim-polyglot/syntax/cucumber.vim	/^let g:cucumber_languages = {$/;"	v
g:curdir	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:curdir = expand('<sfile>:p:h') . '\/'$/;"	v
g:did_ocaml_switch	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  let g:did_ocaml_switch = 1$/;"	v
g:did_ruby_ftplugin_functions	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^let g:did_ruby_ftplugin_functions = 1$/;"	v
g:eelixir_default_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let g:eelixir_default_subtype = "html"$/;"	v
g:eelixir_default_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^  let g:eelixir_default_subtype = "html"$/;"	v
g:erlang_indent_searchpair_timeout	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^let g:erlang_indent_searchpair_timeout = 2000$/;"	v
g:erlang_unexpected_token_indent	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^  let g:erlang_unexpected_token_indent = -1$/;"	v
g:eruby_default_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eruby_default_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eval_a	pack/plugins/start/tomtom-tlib-vim/spec/tlib/eval.vim	/^let g:eval_a = {'foo': range(0, 5), 'd': {'a': range(0, 5)}}$/;"	v
g:eval_a0	pack/plugins/start/tomtom-tlib-vim/spec/tlib/eval.vim	/^let g:eval_a0 = deepcopy(g:eval_a)$/;"	v
g:eval_b	pack/plugins/start/tomtom-tlib-vim/spec/tlib/eval.vim	/^let g:eval_b = {'foo': range(6, 10), 'd': {'a': range(6, 10), 'b': 2}, 'bar': range(5)}$/;"	v
g:eval_b0	pack/plugins/start/tomtom-tlib-vim/spec/tlib/eval.vim	/^let g:eval_b0 = deepcopy(g:eval_b)$/;"	v
g:eval_c	pack/plugins/start/tomtom-tlib-vim/spec/tlib/eval.vim	/^let g:eval_c = {'foo': range(0, 10), 'd': {'a': range(0, 10), 'b': 2}, 'bar': range(5)}$/;"	v
g:foo	pack/plugins/start/tomtom-tlib-vim/spec/tlib/var.vim	/^let g:foo = 1$/;"	v
g:foo	pack/plugins/start/tomtom-tlib-vim/test/tlib.vim	/^let g:foo = 1$/;"	v
g:fugitive_browse_handlers	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_browse_handlers = []$/;"	v
g:fugitive_git_executable	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:fullDefMatcher	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^let g:fullDefMatcher = '^\\s*' . s:defMatcher . '\\s\\+' . s:funcNameMatcher . '\\s*' . s:typeSpecMatcher . '\\?\\s*' . s:defArgMatcher . '\\?\\s*' . s:returnTypeMatcher . '\\?\\s*[={]'$/;"	v
g:fzf#vim#buffers	pack/plugins/start/junegunn-fzf-vim/plugin/fzf.vim	/^let g:fzf#vim#buffers = {}$/;"	v
g:fzf#vim#default_layout	pack/plugins/start/junegunn-fzf-vim/plugin/fzf.vim	/^let g:fzf#vim#default_layout = {'down': '~40%'}$/;"	v
g:go_alternate_mode	pack/plugins/start/fatih-vim-go/autoload/go/alternate.vim	/^  let g:go_alternate_mode = "edit"$/;"	v
g:go_bin_path	vimrc	/^let g:go_bin_path=$HOME."\/go\/bin"$/;"	v
g:go_doc_command	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^  let g:go_doc_command = "godoc"$/;"	v
g:go_doc_options	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^  let g:go_doc_options = ""$/;"	v
g:go_errcheck_bin	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_errcheck_bin = "errcheck"$/;"	v
g:go_fmt_autosave	vimrc	/^let g:go_fmt_autosave=1$/;"	v
g:go_fmt_command	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_fmt_command = "gofmt"$/;"	v
g:go_fmt_command	vimrc	/^let g:go_fmt_command="goimports"$/;"	v
g:go_fmt_experimental	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_fmt_experimental = 0$/;"	v
g:go_fmt_experimental	vimrc	/^let g:go_fmt_experimental=1$/;"	v
g:go_fmt_fail_silently	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_fmt_fail_silently = 0$/;"	v
g:go_fmt_options	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_fmt_options = ''$/;"	v
g:go_goimports_bin	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_goimports_bin = "goimports"$/;"	v
g:go_golint_bin	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_golint_bin = "golint"$/;"	v
g:go_gopath	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:go_gopath = g:curdir . 't\/fixtures'$/;"	v
g:go_gorename_bin	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let g:go_gorename_bin = "gorename"$/;"	v
g:go_gorename_prefill	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let g:go_gorename_prefill = 1$/;"	v
g:go_gotags_bin	pack/plugins/start/fatih-vim-go/ftplugin/go/tagbar.vim	/^  let g:go_gotags_bin = "gotags"$/;"	v
g:go_highlight_array_whitespace_error	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_array_whitespace_error = 1$/;"	v
g:go_highlight_array_whitespace_error	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_array_whitespace_error = 1$/;"	v
g:go_highlight_build_constraints	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_build_constraints = 0$/;"	v
g:go_highlight_build_constraints	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_build_constraints = 0$/;"	v
g:go_highlight_build_constraints	vimrc	/^let g:go_highlight_build_constraints=1$/;"	v
g:go_highlight_chan_whitespace_error	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_chan_whitespace_error = 1$/;"	v
g:go_highlight_chan_whitespace_error	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_chan_whitespace_error = 1$/;"	v
g:go_highlight_extra_types	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_extra_types = 1$/;"	v
g:go_highlight_extra_types	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_extra_types = 1$/;"	v
g:go_highlight_fields	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_fields = 0$/;"	v
g:go_highlight_fields	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_fields = 0$/;"	v
g:go_highlight_fields	vimrc	/^let g:go_highlight_fields=1$/;"	v
g:go_highlight_format_strings	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_format_strings = 1$/;"	v
g:go_highlight_format_strings	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_format_strings = 1$/;"	v
g:go_highlight_functions	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_functions = 0$/;"	v
g:go_highlight_functions	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_functions = 0$/;"	v
g:go_highlight_functions	vimrc	/^let g:go_highlight_functions=1$/;"	v
g:go_highlight_generate_tags	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_generate_tags = 0$/;"	v
g:go_highlight_generate_tags	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_generate_tags = 0$/;"	v
g:go_highlight_generate_tags	vimrc	/^let g:go_highlight_generate_tags=1$/;"	v
g:go_highlight_methods	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_methods = 0$/;"	v
g:go_highlight_methods	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_methods = 0$/;"	v
g:go_highlight_methods	vimrc	/^let g:go_highlight_methods=1$/;"	v
g:go_highlight_operators	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_operators = 0$/;"	v
g:go_highlight_operators	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_operators = 0$/;"	v
g:go_highlight_operators	vimrc	/^let g:go_highlight_operators=1$/;"	v
g:go_highlight_space_tab_error	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_space_tab_error = 1$/;"	v
g:go_highlight_space_tab_error	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_space_tab_error = 1$/;"	v
g:go_highlight_string_spellcheck	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_string_spellcheck = 1$/;"	v
g:go_highlight_string_spellcheck	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_string_spellcheck = 1$/;"	v
g:go_highlight_string_spellcheck	vimrc	/^let g:go_highlight_string_spellcheck=0$/;"	v
g:go_highlight_trailing_whitespace_error	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_trailing_whitespace_error = 1$/;"	v
g:go_highlight_trailing_whitespace_error	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_trailing_whitespace_error = 1$/;"	v
g:go_highlight_types	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_types = 0$/;"	v
g:go_highlight_types	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_types = 0$/;"	v
g:go_highlight_types	vimrc	/^let g:go_highlight_types=1$/;"	v
g:go_jump_to_error	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^  let g:go_jump_to_error = 1$/;"	v
g:go_jump_to_error	vimrc	/^let g:go_jump_to_error=0$/;"	v
g:go_list_type	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^  let g:go_list_type = ""$/;"	v
g:go_loaded_gosnippets	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^let g:go_loaded_gosnippets = 1$/;"	v
g:go_loaded_install	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^let g:go_loaded_install = 1$/;"	v
g:go_metalinter_autosave_enabled	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_metalinter_autosave_enabled = ['vet', 'golint']$/;"	v
g:go_metalinter_command	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_metalinter_command = ""$/;"	v
g:go_metalinter_deadline	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_metalinter_deadline = "5s"$/;"	v
g:go_metalinter_enabled	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_metalinter_enabled = ['vet', 'golint', 'errcheck']$/;"	v
g:go_play_open_browser	pack/plugins/start/fatih-vim-go/autoload/go/play.vim	/^  let g:go_play_open_browser = 1$/;"	v
g:go_snippet_engine	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^  let g:go_snippet_engine = "ultisnips"$/;"	v
g:go_term_mode	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^  let g:go_term_mode = 'vsplit'$/;"	v
g:go_textobj_enabled	pack/plugins/start/fatih-vim-go/autoload/go/textobj.vim	/^  let g:go_textobj_enabled = 1$/;"	v
g:go_textobj_include_function_doc	pack/plugins/start/fatih-vim-go/autoload/go/textobj.vim	/^  let g:go_textobj_include_function_doc = 1$/;"	v
g:gutentags_add_default_project_roots	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_default_project_roots = get(g:, 'gutentags_add_default_project_roots', 1)$/;"	v
g:gutentags_auto_add_cscope	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_auto_add_cscope = 1$/;"	v
g:gutentags_auto_set_tags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_auto_set_tags = get(g:, 'gutentags_auto_set_tags', 1)$/;"	v
g:gutentags_background_update	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_background_update = get(g:, 'gutentags_background_update', 1)$/;"	v
g:gutentags_cache_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = ''$/;"	v
g:gutentags_cache_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':p')$/;"	v
g:gutentags_cache_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':s?[\/\\\\]$??')$/;"	v
g:gutentags_cscope_executable	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_executable = 'cscope'$/;"	v
g:gutentags_ctags_check_tagfile	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_check_tagfile = get(g:, 'gutentags_ctags_check_tagfile', 0)$/;"	v
g:gutentags_ctags_executable	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_executable = get(g:, 'gutentags_ctags_executable', 'ctags')$/;"	v
g:gutentags_ctags_executable	vimrc	/^    let g:gutentags_ctags_executable="ctags-exuberant"$/;"	v
g:gutentags_ctags_options_file	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_options_file = get(g:, 'gutentags_ctags_options_file', '.gutctags')$/;"	v
g:gutentags_debug	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_debug = get(g:, 'gutentags_debug', 0)$/;"	v
g:gutentags_define_advanced_commands	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_define_advanced_commands = get(g:, 'gutentags_define_advanced_commands', 0)$/;"	v
g:gutentags_enabled	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_enabled = get(g:, 'gutentags_enabled', 1)$/;"	v
g:gutentags_exclude	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude = get(g:, 'gutentags_exclude', [])$/;"	v
g:gutentags_exclude_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_project_root = get(g:, 'gutentags_exclude_project_root', ['\/usr\/local'])$/;"	v
g:gutentags_fake	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_fake = get(g:, 'gutentags_fake', 0)$/;"	v
g:gutentags_file_list_command	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_file_list_command = get(g:, 'gutentags_file_list_command', '')$/;"	v
g:gutentags_generate_on_missing	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_missing = get(g:, 'gutentags_generate_on_missing', 1)$/;"	v
g:gutentags_generate_on_new	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_new = get(g:, 'gutentags_generate_on_new', 1)$/;"	v
g:gutentags_generate_on_write	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_write = get(g:, 'gutentags_generate_on_write', 1)$/;"	v
g:gutentags_init_user_func	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_init_user_func = get(g:, 'gutentags_init_user_func', $/;"	v
g:gutentags_modules	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_modules = get(g:, 'gutentags_modules', ['ctags'])$/;"	v
g:gutentags_pause_after_update	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_pause_after_update = get(g:, 'gutentags_pause_after_update', 0)$/;"	v
g:gutentags_plat_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . "\\\\plat\\\\win32\\\\"$/;"	v
g:gutentags_plat_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . '\/plat\/unix\/'$/;"	v
g:gutentags_project_info	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_info = get(g:, 'gutentags_project_info', [])$/;"	v
g:gutentags_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_project_root += ['.git', '.hg', '.svn', '.bzr', '_darcs', '_FOSSIL_', '.fslckout']$/;"	v
g:gutentags_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root = get(g:, 'gutentags_project_root', [])$/;"	v
g:gutentags_project_root_finder	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root_finder = get(g:, 'gutentags_project_root_finder', '')$/;"	v
g:gutentags_res_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . "\\\\res\\\\"$/;"	v
g:gutentags_res_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . '\/res\/'$/;"	v
g:gutentags_resolve_symlinks	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_resolve_symlinks = get(g:, 'gutentags_resolve_symlinks', 0)$/;"	v
g:gutentags_scopefile	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_scopefile = 'cscope.out'$/;"	v
g:gutentags_script_ext	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.cmd'$/;"	v
g:gutentags_script_ext	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.sh'$/;"	v
g:gutentags_tagfile	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_tagfile = get(g:, 'gutentags_tagfile', 'tags')$/;"	v
g:gutentags_trace	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_trace = get(g:, 'gutentags_trace', 0)$/;"	v
g:haml_self_closing_tags	pack/plugins/start/sheerun-vim-polyglot/indent/haml.vim	/^  let g:haml_self_closing_tags = 'base|link|meta|br|hr|img|input'$/;"	v
g:haml_self_closing_tags	pack/plugins/start/sheerun-vim-polyglot/indent/slim.vim	/^  let g:haml_self_closing_tags = 'meta|link|img|hr|br'$/;"	v
g:haskell_indent_case	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_case = 2$/;"	v
g:haskell_indent_do	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_do = 3$/;"	v
g:haskell_indent_guard	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_guard = 2$/;"	v
g:haskell_indent_if	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_if = 3$/;"	v
g:haskell_indent_in	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_in = 1$/;"	v
g:haskell_indent_let	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_let = 4$/;"	v
g:haskell_indent_where	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_where = 6$/;"	v
g:html5_aria_attributes_complete	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_aria_attributes_complete = 1$/;"	v
g:html5_event_handler_attributes_complete	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_event_handler_attributes_complete = 1$/;"	v
g:html5_microdata_attributes_complete	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_microdata_attributes_complete = 1$/;"	v
g:html5_rdfa_attributes_complete	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_rdfa_attributes_complete = 1$/;"	v
g:javascript_continuation	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^  let g:javascript_continuation = '\\%([<=,.?\/*:^%|&]\\|+\\@<!+\\|-\\@<!-\\|=\\@<!>\\|\\<in\\%(stanceof\\)\\=\\)'$/;"	v
g:javascript_continuation	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^let g:javascript_continuation .= s:line_term$/;"	v
g:javascript_opfirst	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^  let g:javascript_opfirst = '\\%([<>,:?^%|*&]\\|\\([-\/.+]\\)\\1\\@!\\|=>\\@!\\|in\\%(stanceof\\)\\=\\>\\)'$/;"	v
g:javascript_opfirst	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^let g:javascript_opfirst = s:line_pre . g:javascript_opfirst$/;"	v
g:jinja_syntax_html	pack/plugins/start/sheerun-vim-polyglot/syntax/jinja2.vim	/^   let g:jinja_syntax_html=1$/;"	v
g:jst_default_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^  let g:jst_default_subtype = "html"$/;"	v
g:jsx_ext_required	pack/plugins/start/sheerun-vim-polyglot/config.vim	/^  let g:jsx_ext_required = 0$/;"	v
g:jsx_ext_required	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^  let g:jsx_ext_required = 0$/;"	v
g:jsx_ext_required	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^  let g:jsx_ext_required = 1$/;"	v
g:jsx_pragma_required	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^  let g:jsx_pragma_required = 0$/;"	v
g:latexmk_running_pids	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:latexmk_running_pids = {}$/;"	v
g:less_html_style_tags	pack/plugins/start/sheerun-vim-polyglot/after/syntax/html.vim	/^  let g:less_html_style_tags = 1$/;"	v
g:liquid_default_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
g:liquid_default_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
g:liquid_highlight_types	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^  let g:liquid_highlight_types = []$/;"	v
g:loaded_abolish	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let g:loaded_abolish = 1$/;"	v
g:loaded_commentary	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^let g:loaded_commentary = 1$/;"	v
g:loaded_eunuch	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^let g:loaded_eunuch = 1$/;"	v
g:loaded_fugitive	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_fzf	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^let g:loaded_fzf = 1$/;"	v
g:loaded_gutentags	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:loaded_gutentags = 1$/;"	v
g:loaded_haskellvim_cabal	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cabal.vim	/^let g:loaded_haskellvim_cabal = 1$/;"	v
g:loaded_haskellvim_haskell	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haskell.vim	/^let g:loaded_haskellvim_haskell = 1$/;"	v
g:loaded_mucomplete	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^let g:loaded_mucomplete = 1$/;"	v
g:loaded_mustache_handlebars	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^let g:loaded_mustache_handlebars = 1$/;"	v
g:loaded_qf	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^let g:loaded_qf = 1$/;"	v
g:loaded_qlist	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^let g:loaded_qlist = 1$/;"	v
g:loaded_repeat	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^let g:loaded_repeat = 1$/;"	v
g:loaded_sneak_plugin	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^let g:loaded_sneak_plugin = 1$/;"	v
g:loaded_surround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_targets	pack/plugins/start/wellle-targets-vim/plugin/targets.vim	/^let g:loaded_targets = '0.4.5' " version number$/;"	v
g:loaded_tlib	pack/plugins/start/tomtom-tlib-vim/plugin/02tlib.vim	/^let g:loaded_tlib = 122$/;"	v
g:loaded_tmuxify	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^let g:loaded_tmuxify = 1$/;"	v
g:loaded_vinegar	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^let g:loaded_vinegar = 1$/;"	v
g:main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/dart.vim	/^  let g:main_syntax = 'dart'$/;"	v
g:mucomplete#can_complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  let g:mucomplete#can_complete = extend({$/;"	v
g:mucomplete#can_complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  let g:mucomplete#can_complete = mucomplete#compat#can_complete()$/;"	v
g:mucomplete#chains	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let g:mucomplete#chains = extend({$/;"	v
g:mucomplete#enable_auto_at_startup	vimrc	/^let g:mucomplete#enable_auto_at_startup=0$/;"	v
g:mucomplete#trigger_auto_pattern	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let g:mucomplete#trigger_auto_pattern = extend({$/;"	v
g:mustache_operators	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  let g:mustache_operators = 1$/;"	v
g:netrw_altfile	vimrc	/^let g:netrw_altfile=1$/;"	v
g:netrw_banner	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^  let g:netrw_banner = 0$/;"	v
g:netrw_list_hide	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^let g:netrw_list_hide =$/;"	v
g:netrw_sort_sequence	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^let g:netrw_sort_sequence = '[\\\/]$,*,\\%(' . join(map(split(&suffixes, ','), 'escape(v:val, ".*$~")'), '\\|') . '\\)[*@]\\=$'$/;"	v
g:nofrils_heavycomments	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^    let g:nofrils_heavycomments = 0$/;"	v
g:nofrils_heavycomments	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^    let g:nofrils_heavycomments = 0$/;"	v
g:nofrils_heavycomments	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^    let g:nofrils_heavycomments = 0$/;"	v
g:nofrils_heavycomments	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^    let g:nofrils_heavycomments = 0$/;"	v
g:nofrils_heavycomments	vimrc	/^let g:nofrils_heavycomments=0 " bright comments off$/;"	v
g:nofrils_heavylinenumbers	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^    let g:nofrils_heavylinenumbers = 0$/;"	v
g:nofrils_heavylinenumbers	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^    let g:nofrils_heavylinenumbers = 0$/;"	v
g:nofrils_heavylinenumbers	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^    let g:nofrils_heavylinenumbers = 0$/;"	v
g:nofrils_heavylinenumbers	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^    let g:nofrils_heavylinenumbers = 0$/;"	v
g:nofrils_heavylinenumbers	vimrc	/^let g:nofrils_heavylinenumbers=0 " heavy line numbers off$/;"	v
g:nofrils_strbackgrounds	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^    let g:nofrils_strbackgrounds = 0$/;"	v
g:nofrils_strbackgrounds	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^    let g:nofrils_strbackgrounds = 0$/;"	v
g:nofrils_strbackgrounds	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^    let g:nofrils_strbackgrounds = 0$/;"	v
g:nofrils_strbackgrounds	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^    let g:nofrils_strbackgrounds = 0$/;"	v
g:nofrils_strbackgrounds	vimrc	/^let g:nofrils_strbackgrounds=0 " to turn off highlighted string backgrounds$/;"	v
g:php_syntax_extensions_disabled	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^    let g:php_syntax_extensions_disabled = []$/;"	v
g:php_syntax_extensions_enabled	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^    let g:php_syntax_extensions_enabled = ["bcmath", "bz2", "core", "curl", "date", "dom", "ereg", "gd", "gettext", "hash", "iconv", "json", "libxml", "mbstring", "mcrypt", "mhash", "mysql", "mysqli", "openssl", "pcre", "pdo", "pgsql", "phar", "reflection", "session", "simplexml", "soap", "sockets", "spl", "sqlite3", "standard", "tokenizer", "wddx", "xml", "xmlreader", "xmlwriter", "zip", "zlib"]$/;"	v
g:plantuml_executable_script	pack/plugins/start/sheerun-vim-polyglot/ftplugin/plantuml.vim	/^  let g:plantuml_executable_script="plantuml"$/;"	v
g:pug_self_closing_tags	pack/plugins/start/sheerun-vim-polyglot/indent/pug.vim	/^  let g:pug_self_closing_tags = 'meta|link|img|hr|br|input'$/;"	v
g:puppet_align_hashes	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/puppet.vim	/^    let g:puppet_align_hashes = 1$/;"	v
g:purescript_indent_case	pack/plugins/start/sheerun-vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_case = 5$/;"	v
g:purescript_indent_do	pack/plugins/start/sheerun-vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_do = 3$/;"	v
g:purescript_indent_if	pack/plugins/start/sheerun-vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_if = 3$/;"	v
g:purescript_indent_let	pack/plugins/start/sheerun-vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_let = 4$/;"	v
g:purescript_indent_where	pack/plugins/start/sheerun-vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_where = 6$/;"	v
g:ragel_default_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/ragel.vim	/^  let g:ragel_default_subtype = 'c'$/;"	v
g:repeat_reg	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^let g:repeat_reg = ['', '']$/;"	v
g:repeat_tick	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^let g:repeat_tick = -1$/;"	v
g:ruby_default_path	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^      let g:ruby_default_path = map(split($RUBYLIB,':'), 'v:val ==# "." ? "" : v:val')$/;"	v
g:ruby_default_path	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^      let g:ruby_default_path = s:query_path($HOME)$/;"	v
g:ruby_indent_access_modifier_style	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_access_modifier_style = 'normal'$/;"	v
g:ruby_indent_block_style	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_block_style = 'expression'$/;"	v
g:ruby_version_paths	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^      let g:ruby_version_paths[b:ruby_version] = s:query_path(fnamemodify(s:version_file, ':p:h'))$/;"	v
g:ruby_version_paths	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  let g:ruby_version_paths = {}$/;"	v
g:rubycomplete_buffer_loading	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_buffer_loading = 0$/;"	v
g:rubycomplete_classes_in_global	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_classes_in_global = 0$/;"	v
g:rubycomplete_include_object	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_object = 0$/;"	v
g:rubycomplete_include_objectspace	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_objectspace = 0$/;"	v
g:rubycomplete_rails	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_rails = 0$/;"	v
g:rustfmt_autosave	pack/plugins/start/sheerun-vim-polyglot/autoload/rustfmt.vim	/^  let g:rustfmt_autosave = 0$/;"	v
g:rustfmt_command	pack/plugins/start/sheerun-vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_command = "rustfmt"$/;"	v
g:rustfmt_fail_silently	pack/plugins/start/sheerun-vim-polyglot/autoload/rustfmt.vim	/^  let g:rustfmt_fail_silently = 0$/;"	v
g:rustfmt_options	pack/plugins/start/sheerun-vim-polyglot/autoload/rustfmt.vim	/^  let g:rustfmt_options = ""$/;"	v
g:sample	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:sample = 'buildfail\/sample.go'$/;"	v
g:sample	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:sample = 'buildtestfail\/sample.go'$/;"	v
g:sample	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:sample = 'failtest\/sample.go'$/;"	v
g:sample	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:sample = 'pkg1\/sample.go'$/;"	v
g:sample2	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:sample2 = 'pkg2\/sample.go'$/;"	v
g:sampleabs	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:sampleabs = g:curdir . g:srcpath . 'buildfail\/sample.go'$/;"	v
g:sampleabs	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:sampleabs = g:curdir . g:srcpath . 'buildtestfail\/sample.go'$/;"	v
g:sampleabs	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:sampleabs = g:curdir . g:srcpath . 'failtest\/sample.go'$/;"	v
g:sampleabs	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:sampleabs = g:curdir . g:srcpath . 'pkg1\/sample.go'$/;"	v
g:sampleabs2	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:sampleabs2 = g:curdir . g:srcpath . 'pkg2\/sample.go'$/;"	v
g:samplecover	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:samplecover = g:curdir . g:srcpath . 'pkg1\/sample.out'$/;"	v
g:sampletest	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:sampletest = 'failtest\/sample_test.go'$/;"	v
g:skip_loading_mswin	vimrc	/^let g:skip_loading_mswin=1 " Just in case :)$/;"	v
g:sneak#label	vimrc	/^let g:sneak#label=1$/;"	v
g:sneak#search#instance	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/search.vim	/^let g:sneak#search#instance = sneak#search#new()$/;"	v
g:sneak#target_labels	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/label.vim	/^let g:sneak#target_labels = get(g:, 'sneak#target_labels', "asdfghjkl;qwertyuiopzxcvbnm\/ASDFGHJKL:QWERTYUIOPZXCVBNM?")$/;"	v
g:spec_tlib_list	pack/plugins/start/tomtom-tlib-vim/spec/tlib/input.vim	/^let g:spec_tlib_list = [10, 20, 30, 40, 'a50', 'aa60', 'b70', 'ba80', 90]$/;"	v
g:srcpath	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:srcpath = 't\/fixtures\/src\/'$/;"	v
g:tagbar_type_scala	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala/tagbar.vim	/^  let g:tagbar_type_scala.deffile = expand('<sfile>:p:h:h:h') . '\/ctags\/scala.ctags'$/;"	v
g:tagbar_type_scala	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala/tagbar.vim	/^let g:tagbar_type_scala = {$/;"	v
g:targets_aiAI	pack/plugins/start/wellle-targets-vim/README.md	/^### g:targets_aiAI$/;"	k
g:targets_argOpening and g:targets_argClosing	pack/plugins/start/wellle-targets-vim/README.md	/^### g:targets_argOpening and g:targets_argClosing$/;"	k
g:targets_argSeparator	pack/plugins/start/wellle-targets-vim/README.md	/^### g:targets_argSeparator$/;"	k
g:targets_argTrigger	pack/plugins/start/wellle-targets-vim/README.md	/^### g:targets_argTrigger$/;"	k
g:targets_jumpRanges	pack/plugins/start/wellle-targets-vim/README.md	/^### g:targets_jumpRanges$/;"	k
g:targets_nlNL	pack/plugins/start/wellle-targets-vim/README.md	/^### g:targets_nlNL$/;"	k
g:targets_pairs	pack/plugins/start/wellle-targets-vim/README.md	/^### g:targets_pairs$/;"	k
g:targets_quotes	pack/plugins/start/wellle-targets-vim/README.md	/^### g:targets_quotes$/;"	k
g:targets_seekRanges	pack/plugins/start/wellle-targets-vim/README.md	/^### g:targets_seekRanges$/;"	k
g:targets_separators	pack/plugins/start/wellle-targets-vim/README.md	/^### g:targets_separators$/;"	k
g:targets_tagTrigger	pack/plugins/start/wellle-targets-vim/README.md	/^### g:targets_tagTrigger$/;"	k
g:tlib#cmd#last_output	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cmd.vim	/^let g:tlib#cmd#last_output = []$/;"	v
g:tlib#date#date_format	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/date.vim	/^let g:tlib#date#date_format = '%Y-%m-%d'$/;"	v
g:tlib#date#date_rx	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/date.vim	/^let g:tlib#date#date_rx = '\\<\\(\\d\\{4}\\)-\\(\\d\\d\\)-\\(\\d\\d\\)\\>'$/;"	v
g:tlib#date#dayshift	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/date.vim	/^let g:tlib#date#dayshift = 60 * 60 * 24$/;"	v
g:tlib#file#absolute_filename_rx	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/file.vim	/^    let g:tlib#file#absolute_filename_rx = '^\\~\\?[\\\/]'   "{{{2$/;"	v
g:tlib#file#drop	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/file.vim	/^    let g:tlib#file#drop = has('gui')   "{{{2$/;"	v
g:tlib#file#edit_cmds	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/file.vim	/^    let g:tlib#file#edit_cmds = g:tlib#file#use_tabs ? {'buffer': 'tab split | buffer', 'edit': 'tabedit'} : {}  "{{{2$/;"	v
g:tlib#file#use_tabs	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/file.vim	/^    let g:tlib#file#use_tabs = 0   "{{{2$/;"	v
g:tlib#hash#use_adler32	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/hash.vim	/^    let g:tlib#hash#use_adler32 = ''   "{{{2$/;"	v
g:tlib#hash#use_crc32	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/hash.vim	/^    let g:tlib#hash#use_crc32 = ''   "{{{2$/;"	v
g:tlib#hash#use_crc32	pack/plugins/start/tomtom-tlib-vim/spec/tlib/hash.vim	/^let g:tlib#hash#use_crc32 = 'ruby'$/;"	v
g:tlib#hash#use_crc32	pack/plugins/start/tomtom-tlib-vim/spec/tlib/hash.vim	/^let g:tlib#hash#use_crc32 = 'vim'$/;"	v
g:tlib#hash#use_crc32	pack/plugins/start/tomtom-tlib-vim/spec/tlib/hash.vim	/^let g:tlib#hash#use_crc32 = g:tlib_hash_use_crc32$/;"	v
g:tlib#input#keyagents_InputList_m	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/input.vim	/^    let g:tlib#input#keyagents_InputList_m = extend(g:tlib#input#keyagents_InputList_m, g:tlib_extend_keyagents_InputList_m)$/;"	v
g:tlib#input#keyagents_InputList_s	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/input.vim	/^    let g:tlib#input#keyagents_InputList_s = extend(g:tlib#input#keyagents_InputList_s, g:tlib_extend_keyagents_InputList_s)$/;"	v
g:tlib#sys#check_cygpath	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^    let g:tlib#sys#check_cygpath = g:tlib#sys#windows && tlib#sys#IsExecutable('cygpath', 1)   "{{{2$/;"	v
g:tlib#sys#cygwin_expr	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^    let g:tlib#sys#cygwin_expr = '"bash -c ''". escape(%s, "''\\\\") ."''"'   "{{{2$/;"	v
g:tlib#sys#cygwin_path_rx	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^    let g:tlib#sys#cygwin_path_rx = '\/cygwin\/'   "{{{2$/;"	v
g:tlib#sys#null	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^    let g:tlib#sys#null = g:tlib#sys#windows ? 'NUL' : (filereadable('\/dev\/null') ? '\/dev\/null' : '')    "{{{2$/;"	v
g:tlib#sys#special_protocols	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^    let g:tlib#sys#special_protocols = ['https\\?', 'nntp', 'mailto']   "{{{2$/;"	v
g:tlib#sys#special_suffixes	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^    let g:tlib#sys#special_suffixes = ['xlsx\\?', 'docx\\?', 'pptx\\?', 'accdb', 'mdb', 'sqlite', 'pdf', 'jpg', 'png', 'gif', 'od\\[tspg]']    "{{{2$/;"	v
g:tlib#sys#system_browser	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^        let g:tlib#sys#system_browser = "exec 'silent ! RunDll32.EXE URL.DLL,FileProtocolHandler' shellescape('%s')"$/;"	v
g:tlib#sys#system_browser	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^        let g:tlib#sys#system_browser = "exec 'silent !'. g:netrw_browsex_viewer shellescape('%s')"$/;"	v
g:tlib#sys#system_browser	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^        let g:tlib#sys#system_browser = "exec 'silent !gnome-open' shellescape('%s')"$/;"	v
g:tlib#sys#system_browser	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^        let g:tlib#sys#system_browser = "exec 'silent !kfmclient exec' shellescape('%s')"$/;"	v
g:tlib#sys#system_browser	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^        let g:tlib#sys#system_browser = "exec 'silent !open' shellescape('%s')"$/;"	v
g:tlib#sys#system_browser	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^        let g:tlib#sys#system_browser = "exec 'silent !xdg-open' shellescape('%s') '&'"$/;"	v
g:tlib#sys#system_browser	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^        let g:tlib#sys#system_browser = ''$/;"	v
g:tlib#sys#system_rx	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^    let g:tlib#sys#system_rx = printf('\\V\\%(\\^\\%(%s\\):\\|.\\%(%s\\)\\$\\)', join(g:tlib#sys#special_protocols, '\\|'), join(g:tlib#sys#special_suffixes, '\\|'))   "{{{2$/;"	v
g:tlib#sys#windows	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^    let g:tlib#sys#windows = &shell !~ 'sh' && (has('win16') || has('win32') || has('win64'))   "{{{2$/;"	v
g:tlib#trace#backtrace	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/trace.vim	/^    let g:tlib#trace#backtrace = 2   "{{{2$/;"	v
g:tlib#trace#hl	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/trace.vim	/^    let g:tlib#trace#hl = {'error': 'ErrorMsg', 'fatal': 'ErrorMsg', 'warn': 'WarningMsg'}   "{{{2$/;"	v
g:tlib#trace#printer	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/trace.vim	/^    let g:tlib#trace#printer = 'echom'   "{{{2$/;"	v
g:tlib#type#nil	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/type.vim	/^let g:tlib#type#nil = []$/;"	v
g:tlib#vcs#executables	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/vcs.vim	/^            let g:tlib#vcs#executables[s:cmd] = executable(s:cmd1) ? s:cmd1 : ''$/;"	v
g:tlib#vim#simalt_maximize	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/vim.vim	/^        let g:tlib#vim#simalt_maximize = 'x'   "{{{2$/;"	v
g:tlib#vim#simalt_restore	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/vim.vim	/^        let g:tlib#vim#simalt_restore = 'r'   "{{{2$/;"	v
g:tlib#vim#use_vimtweak	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/vim.vim	/^        let g:tlib#vim#use_vimtweak = 0   "{{{2$/;"	v
g:tlib#vim#use_wmctrl	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/vim.vim	/^        let g:tlib#vim#use_wmctrl = executable('wmctrl')  "{{{2$/;"	v
g:tlib_hash_use_crc32	pack/plugins/start/tomtom-tlib-vim/spec/tlib/hash.vim	/^let g:tlib_hash_use_crc32 = g:tlib#hash#use_crc32$/;"	v
g:tmuxcomplete#loaded	pack/plugins/start/wellle-tmux-complete-vim/plugin/tmuxcomplete.vim	/^let g:tmuxcomplete#loaded = '0.1.1' " version number$/;"	v
g:tmuxify_custom_command	vimrc	/^let g:tmuxify_custom_command='tmux split-window -d -l 10'$/;"	v
g:typescript_compiler_binary	pack/plugins/start/sheerun-vim-polyglot/compiler/typescript.vim	/^  let g:typescript_compiler_binary = "tsc"$/;"	v
g:typescript_compiler_options	pack/plugins/start/sheerun-vim-polyglot/compiler/typescript.vim	/^  let g:typescript_compiler_options = ""$/;"	v
g:vim_ember_script	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^  let g:vim_ember_script = 1$/;"	v
g:vim_emblem	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^  let g:vim_emblem = 1$/;"	v
g:vim_json_syntax_conceal	pack/plugins/start/sheerun-vim-polyglot/config.vim	/^  let g:vim_json_syntax_conceal = 0$/;"	v
g:vim_json_syntax_conceal	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^  let g:vim_json_syntax_conceal = 0$/;"	v
g:vim_json_syntax_conceal	pack/plugins/start/sheerun-vim-polyglot/ftplugin/json.vim	/^	let g:vim_json_syntax_conceal = 1$/;"	v
g:vim_json_syntax_concealcursor	pack/plugins/start/sheerun-vim-polyglot/ftplugin/json.vim	/^	let g:vim_json_syntax_concealcursor = ""$/;"	v
g:vim_json_warnings	pack/plugins/start/sheerun-vim-polyglot/ftplugin/json.vim	/^	let g:vim_json_warnings = 1$/;"	v
g:vim_markdown_folding_disabled	vimrc	/^let g:vim_markdown_folding_disabled=0$/;"	v
g:vim_markdown_frontmatter	vimrc	/^let g:vim_markdown_frontmatter=1$/;"	v
g:xmldata_aria	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let g:xmldata_aria = {$/;"	v
g:xmldata_html5	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let g:xmldata_html5 = {$/;"	v
gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/rplugin/python3/deoplete/sources/tmuxcomplete.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gc	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gc <Plug>(crystal-show-context)$/;"	m
gc	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^  nmap gc  <Plug>Commentary$/;"	m
gc	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^  omap gc  <Plug>Commentary$/;"	m
gcc	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^  nmap gcc <Plug>CommentaryLine$/;"	m
gcu	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^  nmap gcu <Plug>Commentary<Plug>Commentary$/;"	m
gd	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> gd :GoDef<cr>$/;"	m
gd	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gd <Plug>(crystal-jump-to-definition)$/;"	m
general	vimrc	/^    augroup general$/;"	a
generate_color_palettes	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:generate_color_palettes()$/;"	f
generate_vim_highlightings	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:generate_vim_highlightings()$/;"	f
get	pack/plugins/start/junegunn-fzf/fzf	/^  def get name$/;"	f	class:FZF
getDelimiters	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:getDelimiters(trigger)$/;"	f
getHLStack	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^function! s:getHLStack(line, col)$/;"	f
getNesting	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^function! s:getNesting(hlstack)$/;"	f
getRawDelimiters	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:getRawDelimiters(trigger)$/;"	f
get_browser_command	pack/plugins/start/fatih-vim-go/autoload/go/play.vim	/^function! s:get_browser_command() abort$/;"	f
get_browser_command	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! s:get_browser_command() abort$/;"	f
get_color	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:get_color(attr, ...)$/;"	f
get_color	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:get_color(attr, ...)$/;"	f
get_ctags_executable	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:get_ctags_executable(proj_dir) abort$/;"	f
get_echorizer	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:get_echorizer(str) abort$/;"	f
get_git_root	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:get_git_root()$/;"	f
get_input	pack/plugins/start/junegunn-fzf/fzf	/^  def get_input actions$/;"	f	class:start_search
get_last_status	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:get_last_status() abort$/;"	f
get_line_trimmed	pack/plugins/start/sheerun-vim-polyglot/indent/rust.vim	/^function! s:get_line_trimmed(lnum)$/;"	f
get_mouse	pack/plugins/start/junegunn-fzf/fzf	/^  def get_mouse$/;"	f	class:start_search
get_pane_descriptor_from_id	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! s:get_pane_descriptor_from_id(pane_id) abort$/;"	f
get_saved_states	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! s:get_saved_states() abort$/;"	f
get_visual_content	pack/plugins/start/fatih-vim-go/autoload/go/play.vim	/^function! s:get_visual_content() abort$/;"	f
get_visual_selection	pack/plugins/start/fatih-vim-go/autoload/go/play.vim	/^function! s:get_visual_selection() abort$/;"	f
geta	pack/plugins/start/junegunn-fzf/fzf	/^  def geta(*names)$/;"	f	class:FZF
getchar	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
getchar	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:getchar()$/;"	f
getchar	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:getchar()$/;"	f
getchar_safe	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
getnchars	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! s:getnchars(n, mode)$/;"	f
getpos	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:getpos()$/;"	f
getword	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/spel.vim	/^  fun! s:getword()$/;"	f
gitdiffcached	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitcommit.vim	/^function! s:gitdiffcached(bang,gitdir,...)$/;"	f
github_url	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:github_url(opts, ...) abort$/;"	f
gj	vimrc	/^nnoremap gj j$/;"	m
gk	vimrc	/^nnoremap gk k$/;"	m
glob	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
global	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^let global = get(g:, 'tmuxify_global_maps', 0) ? '!' : ''$/;"	v
global_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, event_handler_attributes)$/;"	v
global_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, microdata_attributes)$/;"	v
global_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, rdfa_attributes)$/;"	v
global_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, {'role': role})$/;"	v
global_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let global_attributes = extend(core_attributes, xml_attributes)$/;"	v
globpath	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:globpath(path, expr) abort$/;"	f
go	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def go *args$/;"	f
go	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^function! s:go(type,...) abort$/;"	f
go#alternate#Switch	pack/plugins/start/fatih-vim-go/autoload/go/alternate.vim	/^function! go#alternate#Switch(bang, cmd) abort$/;"	f
go#asmfmt#Format	pack/plugins/start/fatih-vim-go/autoload/go/asmfmt.vim	/^function! go#asmfmt#Format() abort$/;"	f
go#asmfmt#ToggleAsmFmtAutoSave	pack/plugins/start/fatih-vim-go/autoload/go/asmfmt.vim	/^function! go#asmfmt#ToggleAsmFmtAutoSave() abort$/;"	f
go#cmd#Build	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#Build(bang, ...) abort$/;"	f
go#cmd#Generate	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#Generate(bang, ...) abort$/;"	f
go#cmd#Install	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#Install(bang, ...) abort$/;"	f
go#cmd#Run	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#Run(bang, ...) abort$/;"	f
go#cmd#RunTerm	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#RunTerm(bang, mode, files) abort$/;"	f
go#cmd#Test	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#Test(bang, compile, ...) abort$/;"	f
go#cmd#TestFunc	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#TestFunc(bang, ...) abort$/;"	f
go#cmd#autowrite	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#autowrite() abort$/;"	f
go#complete#Complete	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! go#complete#Complete(findstart, base) abort$/;"	f
go#complete#GetInfo	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! go#complete#GetInfo() abort$/;"	f
go#complete#Info	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! go#complete#Info(auto) abort$/;"	f
go#complete#ToggleAutoTypeInfo	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! go#complete#ToggleAutoTypeInfo() abort$/;"	f
go#coverage#Browser	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#Browser(bang, ...) abort$/;"	f
go#coverage#Buffer	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#Buffer(bang, ...) abort$/;"	f
go#coverage#BufferToggle	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#BufferToggle(bang, ...) abort$/;"	f
go#coverage#Clear	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#Clear() abort$/;"	f
go#coverage#genmatch	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#genmatch(cov) abort$/;"	f
go#coverage#overlay	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#overlay(file) abort$/;"	f
go#coverage#parsegocoverline	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#parsegocoverline(line) abort$/;"	f
go#def#Jump	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#Jump(mode) abort$/;"	f
go#def#SelectStackEntry	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#SelectStackEntry() abort$/;"	f
go#def#Stack	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#Stack(...) abort$/;"	f
go#def#StackClear	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#StackClear(...) abort$/;"	f
go#def#StackPop	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#StackPop(...) abort$/;"	f
go#def#StackUI	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#StackUI() abort$/;"	f
go#doc#Open	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! go#doc#Open(newmode, mode, ...) abort$/;"	f
go#doc#OpenBrowser	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! go#doc#OpenBrowser(...) abort$/;"	f
go#fmt#Format	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! go#fmt#Format(withGoimport) abort$/;"	f
go#fmt#ToggleFmtAutoSave	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! go#fmt#ToggleFmtAutoSave() abort$/;"	f
go#guru#AutoToogleSameIds	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#AutoToogleSameIds() abort$/;"	f
go#guru#Callees	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Callees(selected) abort$/;"	f
go#guru#Callers	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Callers(selected) abort$/;"	f
go#guru#Callstack	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Callstack(selected) abort$/;"	f
go#guru#ChannelPeers	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#ChannelPeers(selected) abort$/;"	f
go#guru#ClearSameIds	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#ClearSameIds() abort$/;"	f
go#guru#Describe	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Describe(selected) abort$/;"	f
go#guru#DescribeInfo	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#DescribeInfo() abort$/;"	f
go#guru#Freevars	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Freevars(selected) abort$/;"	f
go#guru#Implements	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Implements(selected) abort$/;"	f
go#guru#Referrers	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Referrers(selected) abort$/;"	f
go#guru#SameIds	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#SameIds() abort$/;"	f
go#guru#SameIdsTimer	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#SameIdsTimer() abort$/;"	f
go#guru#Scope	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Scope(...) abort$/;"	f
go#guru#Tags	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Tags(...) abort$/;"	f
go#guru#ToggleSameIds	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#ToggleSameIds() abort$/;"	f
go#guru#Whicherrs	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Whicherrs(selected) abort$/;"	f
go#impl#Complete	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! go#impl#Complete(arglead, cmdline, cursorpos) abort$/;"	f
go#impl#Impl	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! go#impl#Impl(...) abort$/;"	f
go#import#SwitchImport	pack/plugins/start/fatih-vim-go/autoload/go/import.vim	/^function! go#import#SwitchImport(enabled, localname, path, bang) abort$/;"	f
go#job#Spawn	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^function go#job#Spawn(args)$/;"	f
go#jobcontrol#AddHandler	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! go#jobcontrol#AddHandler(handler) abort$/;"	f
go#jobcontrol#RemoveHandler	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! go#jobcontrol#RemoveHandler(id) abort$/;"	f
go#jobcontrol#Spawn	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! go#jobcontrol#Spawn(bang, desc, args) abort$/;"	f
go#lint#Errcheck	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#Errcheck(...) abort$/;"	f
go#lint#Golint	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#Golint(...) abort$/;"	f
go#lint#Gometa	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#Gometa(autosave, ...) abort$/;"	f
go#lint#ToggleMetaLinterAutoSave	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#ToggleMetaLinterAutoSave() abort$/;"	f
go#lint#Vet	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#Vet(bang, ...) abort$/;"	f
go#list#Clean	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Clean(listtype) abort$/;"	f
go#list#Get	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Get(listtype) abort$/;"	f
go#list#JumpToFirst	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#JumpToFirst(listtype) abort$/;"	f
go#list#Parse	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Parse(listtype, items) abort$/;"	f
go#list#ParseFormat	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#ParseFormat(listtype, errformat, items, title) abort$/;"	f
go#list#Populate	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Populate(listtype, items, title) abort$/;"	f
go#list#PopulateWin	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#PopulateWin(winnr, items) abort$/;"	f
go#list#Type	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Type(listtype) abort$/;"	f
go#list#Window	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Window(listtype, ...) abort$/;"	f
go#package#Complete	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#Complete(ArgLead, CmdLine, CursorPos) abort$/;"	f
go#package#CompleteMembers	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#CompleteMembers(package, member) abort$/;"	f
go#package#FromPath	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#FromPath(arg) abort$/;"	f
go#package#ImportPath	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#ImportPath(arg) abort$/;"	f
go#package#Paths	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#Paths() abort$/;"	f
go#path#BinPath	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#BinPath() abort$/;"	f
go#path#CheckBinPath	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#CheckBinPath(binpath) abort$/;"	f
go#path#Default	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#Default() abort$/;"	f
go#path#Detect	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#Detect() abort$/;"	f
go#path#GoPath	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#GoPath(...) abort$/;"	f
go#path#HasPath	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#HasPath(path) abort$/;"	f
go#play#Share	pack/plugins/start/fatih-vim-go/autoload/go/play.vim	/^function! go#play#Share(count, line1, line2) abort$/;"	f
go#rename#Rename	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^function! go#rename#Rename(bang, ...) abort$/;"	f
go#statusline#Clear	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^function! go#statusline#Clear(timer_id) abort$/;"	f
go#statusline#Show	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^function! go#statusline#Show() abort$/;"	f
go#statusline#Update	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^function! go#statusline#Update(status_dir, status) abort$/;"	f
go#template#ToggleAutoCreate	pack/plugins/start/fatih-vim-go/autoload/go/template.vim	/^function! go#template#ToggleAutoCreate() abort$/;"	f
go#template#create	pack/plugins/start/fatih-vim-go/autoload/go/template.vim	/^function! go#template#create() abort$/;"	f
go#term#new	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! go#term#new(bang, cmd) abort$/;"	f
go#term#newmode	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! go#term#newmode(bang, cmd, mode) abort$/;"	f
go#textobj#Function	pack/plugins/start/fatih-vim-go/autoload/go/textobj.vim	/^function! go#textobj#Function(mode) abort$/;"	f
go#textobj#FunctionJump	pack/plugins/start/fatih-vim-go/autoload/go/textobj.vim	/^function! go#textobj#FunctionJump(mode, direction) abort$/;"	f
go#tool#Deps	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Deps() abort$/;"	f
go#tool#ExecuteInDir	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#ExecuteInDir(cmd) abort$/;"	f
go#tool#Exists	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Exists(importpath) abort$/;"	f
go#tool#Files	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Files() abort$/;"	f
go#tool#FilterValids	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#FilterValids(items) abort$/;"	f
go#tool#Imports	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Imports() abort$/;"	f
go#tool#Info	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Info(auto) abort$/;"	f
go#tool#OpenBrowser	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#OpenBrowser(url) abort$/;"	f
go#tool#PackageName	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#PackageName() abort$/;"	f
go#tool#ParseErrors	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#ParseErrors(lines) abort$/;"	f
go#ui#CloseWindow	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^function! go#ui#CloseWindow() abort$/;"	f
go#ui#GetReturnWindow	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^function! go#ui#GetReturnWindow() abort$/;"	f
go#ui#OpenDefinition	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^function! go#ui#OpenDefinition(filter) abort$/;"	f
go#ui#OpenWindow	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^function! go#ui#OpenWindow(title, content, filetype) abort$/;"	f
go#util#AddTags	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#AddTags(line1, line2, ...) abort$/;"	f
go#util#EchoError	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoError(msg)$/;"	f
go#util#EchoInfo	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoInfo(msg)$/;"	f
go#util#EchoProgress	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoProgress(msg)$/;"	f
go#util#EchoSuccess	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoSuccess(msg)$/;"	f
go#util#EchoWarning	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoWarning(msg)$/;"	f
go#util#IsWin	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#IsWin() abort$/;"	f
go#util#Join	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Join(...) abort$/;"	f
go#util#LineEnding	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#LineEnding() abort$/;"	f
go#util#Offset	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Offset(line, col) abort$/;"	f
go#util#OffsetCursor	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#OffsetCursor() abort$/;"	f
go#util#PathListSep	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#PathListSep() abort$/;"	f
go#util#PathSep	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#PathSep() abort$/;"	f
go#util#ShellError	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#ShellError() abort$/;"	f
go#util#Shellescape	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^fu! go#util#Shellescape(arg)$/;"	f
go#util#Shelljoin	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Shelljoin(arglist, ...) abort$/;"	f
go#util#Shelllist	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Shelllist(arglist, ...) abort$/;"	f
go#util#StripPathSep	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#StripPathSep(path) abort$/;"	f
go#util#StripTrailingSlash	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#StripTrailingSlash(paths) abort$/;"	f
go#util#System	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#System(str, ...) abort$/;"	f
go#util#Windo	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Windo(command) abort$/;"	f
go#util#camelcase	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#camelcase(word) abort$/;"	f
go#util#env	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#env(key) abort$/;"	f
go#util#goarch	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#goarch() abort$/;"	f
go#util#goos	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#goos() abort$/;"	f
go#util#gopath	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#gopath() abort$/;"	f
go#util#goroot	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#goroot() abort$/;"	f
go#util#has_job	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#has_job() abort$/;"	f
go#util#osarch	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#osarch() abort$/;"	f
go#util#snakecase	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#snakecase(word) abort$/;"	f
go#util#snippetcase	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#snippetcase(word) abort$/;"	f
go_packages	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! s:go_packages(dirs) abort$/;"	f
gocodeAutocomplete	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeAutocomplete() abort$/;"	f
gocodeCommand	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeCommand(cmd, preargs, args) abort$/;"	f
gocodeCurrentBuffer	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeCurrentBuffer() abort$/;"	f
gocodeCurrentBufferOpt	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeCurrentBufferOpt(filename) abort$/;"	f
gocodeEnableOptions	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeEnableOptions() abort$/;"	f
godocNotFound	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! s:godocNotFound(content) abort$/;"	f
godocWord	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! s:godocWord(args) abort$/;"	f
gofiletype_post	pack/plugins/start/fatih-vim-go/ftdetect/gofiletype.vim	/^function! s:gofiletype_post()$/;"	f
gofiletype_post	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^function! s:gofiletype_post()$/;"	f
gofiletype_pre	pack/plugins/start/fatih-vim-go/ftdetect/gofiletype.vim	/^function! s:gofiletype_pre(type)$/;"	f
gofiletype_pre	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^function! s:gofiletype_pre(type)$/;"	f
gogetdoc	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! s:gogetdoc(json) abort$/;"	f
grep_command	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:grep_command(args,bang,flags,word)$/;"	f
grey_colour	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:grey_colour(n)$/;"	f
grey_level	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:grey_level(n)$/;"	f
grey_number	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:grey_number(x)$/;"	f
groovy_minlines	pack/plugins/start/sheerun-vim-polyglot/syntax/groovy.vim	/^  let groovy_minlines = 10$/;"	v
group_by	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
grow	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:grow()$/;"	f
gsa	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gsa <Plug>(crystal-spec-run-all)$/;"	m
gsc	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gsc <Plug>(crystal-spec-run-current)$/;"	m
gss	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gss <Plug>(crystal-spec-switch)$/;"	m
gsub	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
guru_cmd	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:guru_cmd(args) range abort$/;"	f
gutentags#add_progress	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#add_progress(module, file) abort$/;"	f
gutentags#cscope#command_terminated	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#command_terminated(job_id, data, event) abort$/;"	f
gutentags#cscope#generate	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#generate(proj_dir, tags_file, write_mode) abort$/;"	f
gutentags#cscope#init	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#init(project_root) abort$/;"	f
gutentags#ctags#generate	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#generate(proj_dir, tags_file, write_mode) abort$/;"	f
gutentags#ctags#init	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#init(project_root) abort$/;"	f
gutentags#delete_lock_files	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#delete_lock_files() abort$/;"	f
gutentags#fake	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#fake(...)$/;"	f
gutentags#get_cachefile	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_cachefile(root_dir, filename) abort$/;"	f
gutentags#get_execute_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_execute_cmd() abort$/;"	f
gutentags#get_execute_cmd_suffix	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_execute_cmd_suffix() abort$/;"	f
gutentags#get_plat_file	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_plat_file(filename) abort$/;"	f
gutentags#get_project_file_list_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_file_list_cmd(path) abort$/;"	f
gutentags#get_project_info	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_info(path) abort$/;"	f
gutentags#get_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_root(path) abort$/;"	f
gutentags#get_res_file	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_res_file(filename) abort$/;"	f
gutentags#inprogress	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#inprogress()$/;"	f
gutentags#normalizepath	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#normalizepath(path)$/;"	f
gutentags#rescan	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#rescan(...)$/;"	f
gutentags#setup_gutentags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#setup_gutentags() abort$/;"	f
gutentags#shellslash	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#shellslash(path)$/;"	f
gutentags#statusline	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline(...) abort$/;"	f
gutentags#stripslash	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#stripslash(path)$/;"	f
gutentags#throw	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#throw(message)$/;"	f
gutentags#throwerr	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#throwerr(message)$/;"	f
gutentags#toggletrace	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#toggletrace(...)$/;"	f
gutentags#trace	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#trace(message, ...)$/;"	f
gutentags#validate_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#validate_cmd(cmd) abort$/;"	f
gutentags_detect	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^augroup gutentags_detect$/;"	a
handleEmptyMatch	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:handleEmptyMatch(target)$/;"	f
handleTarget	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:handleTarget(target, rawTarget)$/;"	f
has	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
hasPreviewWindow	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) hasPreviewWindow() bool {$/;"	f
has_any	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:has_any(dict, keys)$/;"	f
has_common_items	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
has_index	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
has_vimproc	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:has_vimproc() abort$/;"	f
has_webapi	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! s:has_webapi()$/;"	f
hash	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:hash(str) abort$/;"	f
haskell#formatImport	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haskell.vim	/^function! haskell#formatImport(line1, line2)$/;"	f
haskell#sortImports	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haskell.vim	/^function! haskell#sortImports(line1, line2)$/;"	f
haxe_minlines	pack/plugins/start/sheerun-vim-polyglot/syntax/haxe.vim	/^  let haxe_minlines = 5000$/;"	v
help	pack/plugins/start/junegunn-fzf/install	/^help() {$/;"	f
help	pack/plugins/start/junegunn-fzf/src/options.go	/^func help(code int) {$/;"	f
helptag_sink	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:helptag_sink(line)$/;"	f
hi	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^function! s:hi()$/;"	f
hi	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^function! s:hi()$/;"	f
highlight_keys	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:highlight_keys(str)$/;"	f
history	pack/plugins/start/junegunn-fzf-vim/plugin/fzf.vim	/^function! s:history(arg, bang)$/;"	f
history_sink	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:history_sink(type, lines)$/;"	f
history_source	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:history_source(type)$/;"	f
htmlcomplete#CheckDoctype	pack/plugins/start/sheerun-vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#CheckDoctype() " {{{$/;"	f
htmlcomplete#CompleteTags	pack/plugins/start/sheerun-vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#CompleteTags(findstart, base)$/;"	f
htmlcomplete#DetectOmniFlavor	pack/plugins/start/sheerun-vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#DetectOmniFlavor()$/;"	f
htmlcomplete#LoadAria	pack/plugins/start/sheerun-vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadAria() " {{{$/;"	f
htmlcomplete#LoadData	pack/plugins/start/sheerun-vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadData() " {{{$/;"	f
i$	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^onoremap <buffer> i$ :normal vi$<CR>$/;"	m
i$	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^vmap <buffer> i$ <Plug>LatexBox_SelectInlineMathInner$/;"	m
i%	vimrc	/^omap i% :<C-u>normal vi%<CR>$/;"	m
iM	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> iM :<C-U>call <SID>wrap_i('[[','][')<CR>$/;"	m
iconv	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
ie	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^onoremap <buffer> ie :normal vie<CR>$/;"	m
ie	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^vmap <buffer> ie <Plug>LatexBox_SelectCurrentEnvInner$/;"	m
ie	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  onoremap <silent> <buffer> ie :<C-U>call <SID>wrap_inside()<CR>$/;"	m
if	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> if :<c-u>call go#textobj#Function('i')<cr>$/;"	m
ignored_region	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:ignored_region()$/;"	f
il	vimrc	/^omap il :<C-u>normal vil<CR>$/;"	m
im	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> im :<C-U>call <SID>wrap_i('[m',']M')<CR>$/;"	m
import	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:import(name, ...) abort$/;"	f
include?	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def include? str$/;"	f	class:NilClass
indentGuard	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^function! s:indentGuard(pos, prevline)$/;"	f
indentMatching	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^function! s:indentMatching(char)$/;"	f
indent_after_pipeline	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^function! s:indent_after_pipeline(ind)$/;"	f
indent_arrow	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^function! s:indent_arrow(ind)$/;"	f
indent_assignment	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^function! s:indent_assignment(ind)$/;"	f
indent_last_line_end_symbol_or_indent_keyword	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^function! s:indent_last_line_end_symbol_or_indent_keyword(ind)$/;"	f
indent_opened_symbol	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^function! s:indent_opened_symbol(ind)$/;"	f
indent_pipeline	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^function! s:indent_pipeline(ind)$/;"	f
indent_symbols_ending	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^function! s:indent_symbols_ending(ind)$/;"	f
indexAt	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func indexAt(index int, max int, forward bool) int {$/;"	f
init	pack/plugins/start/junegunn-fzf/src/ansi.go	/^func init() {$/;"	f
init	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func init() {$/;"	f
init	pack/plugins/start/junegunn-fzf/src/pattern_test.go	/^func init() {$/;"	f
init	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func init() {$/;"	f
init	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func init() {$/;"	f
init	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^func init() {$/;"	f
init	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/hl.vim	/^func! s:init() abort$/;"	f
init	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:init(mapmode)$/;"	f
init	pack/plugins/start/wellle-tmux-complete-vim/plugin/tmuxcomplete.vim	/^function! s:init()$/;"	f
initPairs	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func initPairs(theme *ColorTheme) {$/;"	f
initScreen	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func initScreen() {$/;"	f
initX	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:initX(trigger)$/;"	f
init_screen	pack/plugins/start/junegunn-fzf/fzf	/^  def init_screen$/;"	f
initialDelay	pack/plugins/start/junegunn-fzf/src/constants.go	/^	initialDelay     = 20 * time.Millisecond$/;"	c
initialDelayTac	pack/plugins/start/junegunn-fzf/src/constants.go	/^	initialDelayTac  = 100 * time.Millisecond$/;"	c
initialize	pack/plugins/start/junegunn-fzf/fzf	/^      def initialize n$/;"	f	class:start_search.Matcher.MatchData
initialize	pack/plugins/start/junegunn-fzf/fzf	/^    def initialize nth, delim$/;"	f	class:start_search.Matcher
initialize	pack/plugins/start/junegunn-fzf/fzf	/^    def initialize rxflag, mode = :fuzzy, nth = nil, delim = nil$/;"	f	class:start_search.ExtendedFuzzyMatcher
initialize	pack/plugins/start/junegunn-fzf/fzf	/^    def initialize rxflag, nth = nil, delim = nil$/;"	f	class:start_search.FuzzyMatcher
initialize	pack/plugins/start/junegunn-fzf/fzf	/^    def initialize v = nil$/;"	f	class:start_search.MouseEvent
initialize	pack/plugins/start/junegunn-fzf/fzf	/^  def initialize argv, source = $stdin$/;"	f	class:FZF
initialize	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def initialize shell = :bash$/;"	f	class:Tmux
inject_snippet	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:inject_snippet(line)$/;"	f
innert	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:innert(target)$/;"	f
input_helper	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
input_safe	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
inputreplacement	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:inputreplacement()$/;"	f
inputtarget	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:inputtarget()$/;"	f
insert	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
insidePlantUMLTags	pack/plugins/start/sheerun-vim-polyglot/indent/plantuml.vim	/^function! s:insidePlantUMLTags(lnum) abort$/;"	f
install_ruby_fzf	pack/plugins/start/junegunn-fzf/install	/^install_ruby_fzf() {$/;"	f
instaweb_url	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:instaweb_url(opts) abort$/;"	f
interface_list	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! s:interface_list(pkg) abort$/;"	f
interpretCode	pack/plugins/start/junegunn-fzf/src/ansi.go	/^func interpretCode(ansiCode string, prevState *ansiState) *ansiState {$/;"	f
intersect	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
is24	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^func (c Color) is24() bool {$/;"	f
isAlphabet	pack/plugins/start/junegunn-fzf/src/options.go	/^func isAlphabet(char uint8) bool {$/;"	f
isAnsible	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^function! s:isAnsible()$/;"	f
isExecuteAction	pack/plugins/start/junegunn-fzf/src/options.go	/^func isExecuteAction(str string) bool {$/;"	f
isInBlock	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^function! s:isInBlock(hlstack)$/;"	f
isNewSelection	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:isNewSelection()$/;"	f
isNumeric	pack/plugins/start/junegunn-fzf/src/options.go	/^func isNumeric(char uint8) bool {$/;"	f
isPreviewEnabled	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) isPreviewEnabled() bool {$/;"	f
isSYN	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^function! s:isSYN(grp, line, col)$/;"	f
is_absolute	pack/plugins/start/sheerun-vim-polyglot/compiler/cargo.vim	/^function! s:is_absolute(path)$/;"	f
is_available	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:is_available() abort$/;"	f
is_cygwin	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
is_dict	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
is_float	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
is_funcref	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
is_indentable_syntax	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^function! s:is_indentable_syntax()$/;"	f
is_list	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
is_mac	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:is_mac() abort$/;"	f
is_method_special_case	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:is_method_special_case(position)$/;"	f
is_number	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
is_numeric	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
is_paren	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:is_paren()$/;"	f
is_reader_conditional_special_case	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:is_reader_conditional_special_case(position)$/;"	f
is_special_key	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/label.vim	/^func! s:is_special_key(key)$/;"	f
is_string	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
is_string_comment	pack/plugins/start/sheerun-vim-polyglot/indent/rust.vim	/^function! s:is_string_comment(lnum, col)$/;"	f
is_unix	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:is_unix() abort$/;"	f
is_windows	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:is_windows() abort$/;"	f
item_count	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^          def item_count$/;"	f	class:Tmux.until
iter	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func (p *Pattern) iter(pfun algo.Algo, tokens []Token, caseSensitive bool, forward bool, pattern []rune, withPos bool, slab *util.Slab) (Offset, int, int, *[]int) {$/;"	f
j	vimrc	/^nnoremap j gj$/;"	m
jobdir	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let jobdir = fnameescape(expand("%:p:h"))$/;"	v
jobdir	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let jobdir = fnameescape(expand("%:p:h"))$/;"	v
joinTokens	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^func joinTokens(tokens []Token) []rune {$/;"	f
jump	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:jump(t, w)$/;"	f
jump	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^function! s:jump(command,count)$/;"	f
jumpAcceptEnabled	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	jumpAcceptEnabled$/;"	c
jumpDisabled	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	jumpDisabled jumpMode = iota$/;"	c
jumpEnabled	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	jumpEnabled$/;"	c
jumpMode	pack/plugins/start/junegunn-fzf/src/terminal.go	/^type jumpMode int$/;"	t
jump_to_declaration	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! s:jump_to_declaration(out, mode, bin_name) abort$/;"	f
jump_to_declaration_cb	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! s:jump_to_declaration_cb(mode, bin_name, job, exit_status, data) abort$/;"	f
jump_to_impl	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! s:jump_to_impl(impl) abort$/;"	f
justify_equal_spacing	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
k	vimrc	/^nnoremap k gk$/;"	m
keyMatch	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func keyMatch(key int, event tui.Event) bool {$/;"	f
key_sink	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:key_sink(line)$/;"	f
kill	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def kill$/;"	f	class:Tmux
kill_all_latexmk_processes	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:kill_all_latexmk_processes()$/;"	f
kill_latexmk_process	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:kill_latexmk_process(pid)$/;"	f
l:start_options	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^    let l:start_options.in_io = "file"$/;"	v
l:start_options	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^    let l:start_options.in_name = l:tmpname$/;"	v
l:start_options	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^    let l:start_options.in_io = "file"$/;"	v
l:start_options	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^    let l:start_options.in_name = l:tmpname$/;"	v
l:tmpname	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^    let l:tmpname = tempname()$/;"	v
l:tmpname	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^    let l:tmpname = tempname()$/;"	v
l:winnr	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let l:winnr = winnr()			$/;"	v
landmark_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let landmark_role = ['application', 'banner', 'complementary', 'contentinfo', 'form', 'main', 'navigation', 'search']$/;"	v
landmark_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let landmark_role = ['application', 'banner', 'complementary', 'contentinfo', 'form', 'main', 'navigation', 'search']$/;"	v
lang_tag	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let lang_tag = [$/;"	v
lastChunk	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^func (cl *ChunkList) lastChunk() *Chunk {$/;"	f
lastselect	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:lastselect(count)$/;"	f
lastselecta	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:lastselecta(...)$/;"	f
levenshtein_distance	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
line_handler	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:line_handler(lines)$/;"	f
linechars	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
lines	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:lines(str) abort$/;"	f
lines.gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^function! s:lines.gather_candidates(args, context)$/;"	f
link_fzf_in_path	pack/plugins/start/junegunn-fzf/install	/^link_fzf_in_path() {$/;"	f
linkreltypes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linktypes + ['canonical', 'import']$/;"	v
linktypes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let linktypes = ['alternate', 'author', 'bookmark', 'external', 'help', 'icon', 'license', 'next', 'nofollow', 'noreferrer', 'pingback', 'prefetch', 'prev', 'search', 'stylesheet', 'sidebar', 'tag']$/;"	v
lint_job	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function s:lint_job(args)$/;"	f
live_region_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let live_region_attributes = {'aria-atomic': ['true', 'false'], 'aria-busy': ['true', 'false'], 'aria-live': ['off', 'polite', 'assertive'], 'aria-relevant': ['additions', 'removals', 'text', 'all', 'additions text']}$/;"	v
livescript_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/ls.vim	/^  let livescript_compiler = 'lsc'$/;"	v
livescript_compiler	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ls.vim	/^  let livescript_compiler = 'lsc'$/;"	v
livescript_make_options	pack/plugins/start/sheerun-vim-polyglot/compiler/ls.vim	/^  let livescript_make_options = ''$/;"	v
load	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:load(...) dict abort$/;"	f
loadSettings	pack/plugins/start/wellle-targets-vim/plugin/targets.vim	/^function! s:loadSettings()$/;"	f
loaded_multiplesearch	pack/plugins/start/vim-scripts-multiplesearch/plugin/MultipleSearch.vim	/^let loaded_multiplesearch = 1$/;"	v
loaded_tlib_macros	pack/plugins/start/tomtom-tlib-vim/macros/tlib.vim	/^let loaded_tlib_macros = 1$/;"	v
loaded_ttags	pack/plugins/start/tomtom-ttags-vim/plugin/ttags.vim	/^let loaded_ttags = 6$/;"	v
log_contains_error	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:log_contains_error(file)$/;"	f
main	get-plugins.go	/^func main() {$/;"	f
main	get-plugins.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/templates/hello_world.go	/^func main() {$/;"	f
main	pack/plugins/start/fatih-vim-go/templates/hello_world.go	/^package main$/;"	p
main	pack/plugins/start/junegunn-fzf/src/fzf/main.go	/^func main() {$/;"	f
main	pack/plugins/start/junegunn-fzf/src/fzf/main.go	/^package main$/;"	p
main_syntax	pack/plugins/start/fatih-vim-go/syntax/gohtmltmpl.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ansible.vim	/^  let main_syntax = 'yaml'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ansible_template.vim	/^  let main_syntax = 'jinja2'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/blade.vim	/^    let main_syntax = 'blade'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/css.vim	/^  let main_syntax = 'css'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^  let main_syntax = 'eelixir'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/emblem.vim	/^  let main_syntax = 'emblem'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^  let main_syntax = 'eruby'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/gohtmltmpl.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/groovy.vim	/^  let main_syntax='groovy'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/haml.vim	/^  let main_syntax = 'haml'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/haxe.vim	/^  let main_syntax='haxe'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/jinja2.vim	/^  let main_syntax = 'jinja'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/json.vim	/^  let main_syntax = 'json'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^  let main_syntax = 'jst'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^  let main_syntax = 'liquid'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/lua.vim	/^  let main_syntax = 'lua'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/mako.vim	/^  let main_syntax = "html"$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/mason.vim	/^	let main_syntax = 'mason'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^  let main_syntax = 'php'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/pug.vim	/^  let main_syntax = 'pug'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/qml.vim	/^  let main_syntax = 'qml'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/scala.vim	/^  let main_syntax = 'scala'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/slim.vim	/^  let main_syntax = 'slim'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/stylus.vim	/^  let main_syntax = 'css'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/typescript.vim	/^  let main_syntax = "typescript"$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/velocity.vim	/^  let main_syntax = 'html'$/;"	v
manual_update_tags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! s:manual_update_tags(bang) abort$/;"	f
map	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^function! s:map(mode, flags, map) abort$/;"	f
map_accum	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
map_netrw_key	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^  func! s:map_netrw_key(key)$/;"	f
map_reset_key	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! s:map_reset_key(key, mode)$/;"	f
mapleader	vimrc	/^let mapleader="\\<space>"$/;"	v
mark_sink	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:mark_sink(lines)$/;"	f
match	pack/plugins/start/junegunn-fzf/fzf	/^    def match list, q, prefix, suffix$/;"	f	class:start_search.ExtendedFuzzyMatcher.parse
match	pack/plugins/start/junegunn-fzf/fzf	/^    def match list, q, prefix, suffix$/;"	f	class:start_search.FuzzyMatcher
matchChunk	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func (p *Pattern) matchChunk(chunk *Chunk, space []*Result, slab *util.Slab) []*Result {$/;"	f
match_one	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:match_one(patterns, string)$/;"	f
match_pairs	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:match_pairs(open, close, stopat)$/;"	f
matcher	pack/plugins/start/junegunn-fzf/fzf	/^  def matcher$/;"	f
maxDisplayWidthCalc	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	maxDisplayWidthCalc = 1024$/;"	c
maxItems	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) maxItems() int {$/;"	f
maxPartitions	pack/plugins/start/junegunn-fzf/src/constants.go	/^	maxPartitions           = 32$/;"	c
maxPatternLength	pack/plugins/start/junegunn-fzf/src/constants.go	/^	maxPatternLength = 100$/;"	c
max_by	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
max_items	pack/plugins/start/junegunn-fzf/fzf	/^  def max_items; C.lines - 2; end$/;"	f	class:usage
mergedGet	pack/plugins/start/junegunn-fzf/src/merger.go	/^func (mg *Merger) mergedGet(idx int) *Result {$/;"	f
mergerCacheMax	pack/plugins/start/junegunn-fzf/src/constants.go	/^	mergerCacheMax int = 100000$/;"	c
metadata_elements	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let metadata_elements = ['link', 'style', 'meta', 'script', 'noscript', 'command']$/;"	v
metalinter_autosave	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:metalinter_autosave()$/;"	f
microdata_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let microdata_attributes = {'itemid': [], 'itemscope': ['itemscope', ''], 'itemtype': [], 'itemprop': [], 'itemref': []}$/;"	v
microdata_attributes_value	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let microdata_attributes_value = {$/;"	v
minHeight	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	minHeight = 4$/;"	c
minRank	pack/plugins/start/junegunn-fzf/src/result.go	/^func minRank() rank {$/;"	f
minWidth	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	minWidth  = 16$/;"	c
min_by	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
mixedcase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:mixedcase(word)$/;"	f
modifyDelimiter	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:modifyDelimiter(kind, delimiter)$/;"	f
modifyTarget	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:modifyTarget(target, kind, modifier)$/;"	f
move	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) move(y int, x int, clear bool) {$/;"	f
mucomplete#compat#can_complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#can_complete()$/;"	f
mucomplete#compat#dict	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#dict(t)$/;"	f
mucomplete#compat#file	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#file(t)$/;"	f
mucomplete#compat#omni	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#omni(t)$/;"	f
mucomplete#compat#path	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#path(t)$/;"	f
mucomplete#compat#spel	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#spel(t)$/;"	f
mucomplete#compat#tags	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#tags(t)$/;"	f
mucomplete#compat#thes	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#thes(t)$/;"	f
mucomplete#compat#ulti	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#ulti(t)$/;"	f
mucomplete#compat#user	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#user(t)$/;"	f
mucomplete#compat#uspl	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#uspl(t)$/;"	f
mucomplete#compat#yes_you_can	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#yes_you_can(t)$/;"	f
mucomplete#complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#complete(dir)$/;"	f
mucomplete#cycle	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#cycle(dir)$/;"	f
mucomplete#cycle_or_select	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#cycle_or_select(dir)$/;"	f
mucomplete#disable_auto	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  fun! mucomplete#disable_auto()$/;"	f
mucomplete#enable_auto	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  fun! mucomplete#enable_auto()$/;"	f
mucomplete#path#complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/path.vim	/^  fun! mucomplete#path#complete() abort$/;"	f
mucomplete#spel#complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/spel.vim	/^fun! mucomplete#spel#complete() abort$/;"	f
mucomplete#tab_complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#tab_complete(dir)$/;"	f
mucomplete#toggle_auto	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  fun! mucomplete#toggle_auto()$/;"	f
mucomplete#ultisnips#complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/ultisnips.vim	/^fun! mucomplete#ultisnips#complete() abort$/;"	f
mucomplete#verify_completion	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#verify_completion()$/;"	f
mucomplete#yup	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#yup()$/;"	f
mustNotError	get-plugins.go	/^func mustNotError(err error) {$/;"	f
neocomplcache#sources#tmuxcomplete#define	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplcache/sources/tmuxcomplete.vim	/^function! neocomplcache#sources#tmuxcomplete#define()$/;"	f
neocomplete#sources#tmuxcomplete#define	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplete/sources/tmuxcomplete.vim	/^function! neocomplete#sources#tmuxcomplete#define()$/;"	f
newItem	pack/plugins/start/junegunn-fzf/src/terminal_test.go	/^func newItem(str string) *Item {$/;"	f
newRange	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^func newRange(begin int, end int) Range {$/;"	f
new_shell	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestBash
new_shell	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestFish
new_shell	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestZsh
next	pack/plugins/start/junegunn-fzf/src/history.go	/^func (h *History) next() string {$/;"	f
nextInt	pack/plugins/start/junegunn-fzf/src/options.go	/^func nextInt(args []string, i *int, message string) int {$/;"	f
nextString	pack/plugins/start/junegunn-fzf/src/options.go	/^func nextString(args []string, i *int, message string) string {$/;"	f
next_completion	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:next_completion()$/;"	f
next_method	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:next_method()$/;"	f
next_method_cyclic	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:next_method_cyclic()$/;"	f
nextselect	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:nextselect(count)$/;"	f
nextselecta	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:nextselecta(...)$/;"	f
nim_highlight_builtins	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^  let nim_highlight_builtins     = 1$/;"	v
nim_highlight_builtins	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^  let nim_highlight_builtins = 1$/;"	v
nim_highlight_exceptions	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^  let nim_highlight_exceptions   = 1$/;"	v
nim_highlight_exceptions	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^  let nim_highlight_exceptions = 1$/;"	v
nim_highlight_numbers	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^  let nim_highlight_numbers      = 1$/;"	v
nim_highlight_numbers	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^  let nim_highlight_numbers = 1$/;"	v
nim_highlight_space_errors	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^  let nim_highlight_space_errors = 1$/;"	v
nim_highlight_special_vars	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^  let nim_highlight_special_vars = 1$/;"	v
normalize_options	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:normalize_options(flags)$/;"	f
notifyOnResize	pack/plugins/start/junegunn-fzf/src/terminal_unix.go	/^func notifyOnResize(resizeChan chan<- os.Signal) {$/;"	f
notifyOnResize	pack/plugins/start/junegunn-fzf/src/terminal_windows.go	/^func notifyOnResize(resizeChan chan<- os.Signal) {$/;"	f
nr2byte	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f
nr2enc_char	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
nr2hex	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f
nsplit	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
numLinesMax	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func numLinesMax(str string, max int) int {$/;"	f
numPartitionsMultiplier	pack/plugins/start/junegunn-fzf/src/constants.go	/^	numPartitionsMultiplier = 8$/;"	c
num_unicode_bytes	pack/plugins/start/junegunn-fzf/fzf	/^  def num_unicode_bytes chr$/;"	f	class:start_search
o	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^    nnoremap <buffer> o <CR><C-w>p$/;"	m
object.clone	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:object.clone(...)$/;"	f
offset	pack/plugins/start/junegunn-fzf/fzf	/^      def offset _$/;"	f	class:start_search.Matcher.MatchData
old_gopath	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let old_gopath = $GOPATH$/;"	v
old_gopath	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let old_gopath = $GOPATH$/;"	v
old_gopath	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let old_gopath = $GOPATH$/;"	v
on_exit	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:on_exit(job_id, exit_status) abort$/;"	f
on_exit	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! s:on_exit(job_id, exit_status) abort$/;"	f
on_stderr	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:on_stderr(job_id, data) abort$/;"	f
on_stderr	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! s:on_stderr(job_id, data) abort$/;"	f
on_stdout	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:on_stdout(job_id, data) abort$/;"	f
on_stdout	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! s:on_stdout(job_id, data) abort$/;"	f
open	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:open(cmd, target)$/;"	f
open	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:open(cmd, target)$/;"	f
opendir	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^function! s:opendir(cmd) abort$/;"	f
opfunc	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:opfunc(type,...) " {{{1$/;"	f
opfunc2	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:opfunc2(arg)$/;"	f
optString	pack/plugins/start/junegunn-fzf/src/options.go	/^func optString(arg string, prefixes ...string) (bool, string) {$/;"	f
optionalNextString	pack/plugins/start/junegunn-fzf/src/options.go	/^func optionalNextString(args []string, i *int) string {$/;"	f
optionalNumeric	pack/plugins/start/junegunn-fzf/src/options.go	/^func optionalNumeric(args []string, i *int) int {$/;"	f
opts	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^  let opts['sink*'] = remove(opts, 'sink')$/;"	v
opts	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^    let opts['sink*'] = remove(opts, 'sink')$/;"	v
optsFor	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func optsFor(words ...string) *Options {$/;"	f
or	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:or(xs) abort$/;"	f
ord	pack/plugins/start/junegunn-fzf/fzf	/^      def ord$/;"	f	class:usage
os	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^import os$/;"	m
os.path	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^import os.path$/;"	m
output	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) output() bool {$/;"	f
output	pack/plugins/start/sheerun-vim-polyglot/build	/^output() {$/;"	f
overflow	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func overflow(runes []rune, max int) bool {$/;"	f
override	pack/plugins/start/junegunn-fzf/src/history.go	/^func (h *History) override(str string) {$/;"	f
p	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^    nnoremap <buffer> p :call qf#PreviewFileUnderCursor()<CR>$/;"	m
pad_between_letters	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
pad_both_sides	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
pad_left	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
pad_right	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
padding_by_displaywidth	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
palettes_should_have_color00_to_color15	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:palettes_should_have_color00_to_color15()$/;"	f
parse	pack/plugins/start/junegunn-fzf/fzf	/^    def parse q$/;"	f	class:start_search.ExtendedFuzzyMatcher
parseAlgo	pack/plugins/start/junegunn-fzf/src/options.go	/^func parseAlgo(str string) algo.Algo {$/;"	f
parseKeyChords	pack/plugins/start/junegunn-fzf/src/options.go	/^func parseKeyChords(str string, message string) map[int]string {$/;"	f
parseKeymap	pack/plugins/start/junegunn-fzf/src/options.go	/^func parseKeymap(keymap map[int]actionType, execmap map[int]string, str string) {$/;"	f
parseMargin	pack/plugins/start/junegunn-fzf/src/options.go	/^func parseMargin(margin string) [4]sizeSpec {$/;"	f
parseOptions	pack/plugins/start/junegunn-fzf/src/options.go	/^func parseOptions(opts *Options, allArgs []string) {$/;"	f
parsePreviewWindow	pack/plugins/start/junegunn-fzf/src/options.go	/^func parsePreviewWindow(opts *previewOpts, input string) {$/;"	f
parseSize	pack/plugins/start/junegunn-fzf/src/options.go	/^func parseSize(str string, maxPercent float64, label string) sizeSpec {$/;"	f
parseTerms	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func parseTerms(fuzzy bool, caseMode Case, str string) []termSet {$/;"	f
parseTheme	pack/plugins/start/junegunn-fzf/src/options.go	/^func parseTheme(defaultTheme *tui.ColorTheme, str string) *tui.ColorTheme {$/;"	f
parseTiebreak	pack/plugins/start/junegunn-fzf/src/options.go	/^func parseTiebreak(str string) []criterion {$/;"	f
parseToggleSort	pack/plugins/start/junegunn-fzf/src/options.go	/^func parseToggleSort(keymap map[int]actionType, str string) {$/;"	f
parse_errors	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^function s:parse_errors(exit_val, bang, out)$/;"	f
parse_guru_output	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:parse_guru_output(exit_val, output, title) abort$/;"	f
parse_nth	pack/plugins/start/junegunn-fzf/fzf	/^  def parse_nth nth$/;"	f	class:FZF
parse_substitute	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:parse_substitute(bang,line1,line2,count,args)$/;"	f
parse_subvert	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:parse_subvert(bang,line1,line2,count,args)$/;"	f
partialResult	pack/plugins/start/junegunn-fzf/src/matcher.go	/^type partialResult struct {$/;"	t
partition	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
paste	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def paste str$/;"	f	class:Tmux
path2directory	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
path2project_directory	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
pattern	pack/plugins/start/sheerun-vim-polyglot/syntax/cucumber.vim	/^function! s:pattern(key)$/;"	f
pattern	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:pattern(dict,boundaries)$/;"	f
perlpath	pack/plugins/start/sheerun-vim-polyglot/ftplugin/perl.vim	/^	    let perlpath = system("perl -e 'print join(q\/,\/,@INC)'")$/;"	v
perlpath	pack/plugins/start/sheerun-vim-polyglot/ftplugin/perl.vim	/^	    let perlpath = system('perl -e "print join(q\/,\/,@INC)"')$/;"	v
perlpath	pack/plugins/start/sheerun-vim-polyglot/ftplugin/perl.vim	/^	let perlpath = ".,,"$/;"	v
perlpath	pack/plugins/start/sheerun-vim-polyglot/ftplugin/perl.vim	/^	let perlpath = substitute(perlpath,',.$',',,','')$/;"	v
permutations	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
php_folding	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^  let php_folding = 0$/;"	v
php_html_in_heredoc	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^    let php_html_in_heredoc=1$/;"	v
php_html_in_heredoc	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^  let php_html_in_heredoc=0$/;"	v
php_html_in_strings	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^  let php_html_in_strings=0$/;"	v
php_html_load	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^  let php_html_load=1$/;"	v
php_phpdoc_folding	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^  let php_phpdoc_folding = 0$/;"	v
php_sql_heredoc	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^  let php_sql_heredoc=1$/;"	v
php_sync_method	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^    let php_sync_method=-1$/;"	v
php_sync_method	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^    let php_sync_method=php_minlines$/;"	v
phrasing_elements	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let phrasing_elements = ['a', 'em', 'strong', 'small', 'mark', 'abbr', 'dfn', 'i', 'b', 'u', 'code', 'var', 'samp', 'kbd', 'sup', 'sub', 'q', 'cite', 'span', 'bdo', 'bdi', 'br', 'wbr', 'ins', 'del', 'img', 'picture', 'embed', 'object', 'iframe', 'map', 'area', 'script', 'noscript', 'ruby', 'video', 'audio', 'input', 'textarea', 'select', 'button', 'label', 'output', 'datalist', 'keygen', 'progress', 'command', 'canvas', 'time', 'meter', 'data', 'content', 'shadow']$/;"	v
pick	pack/plugins/start/junegunn-fzf/fzf	/^  def pick$/;"	f	class:start_search
pkg	pack/plugins/start/fatih-vim-go/t/fixtures/src/buildfail/sample.go	/^package pkg$/;"	p
pkg	pack/plugins/start/fatih-vim-go/t/fixtures/src/buildfail/sample_test.go	/^package pkg$/;"	p
pkg	pack/plugins/start/fatih-vim-go/t/fixtures/src/buildtestfail/sample.go	/^package pkg$/;"	p
pkg	pack/plugins/start/fatih-vim-go/t/fixtures/src/buildtestfail/sample_test.go	/^package pkg$/;"	p
pkg	pack/plugins/start/fatih-vim-go/t/fixtures/src/failtest/sample.go	/^package pkg$/;"	p
pkg	pack/plugins/start/fatih-vim-go/t/fixtures/src/failtest/sample_test.go	/^package pkg$/;"	p
pkg	pack/plugins/start/fatih-vim-go/t/fixtures/src/parsefail/sample.go	/^package pkg$/;"	p
pkg	pack/plugins/start/fatih-vim-go/t/fixtures/src/parsefail/sample_test.go	/^package pkg$/;"	p
pkg1	pack/plugins/start/fatih-vim-go/t/fixtures/src/pkg1/sample.go	/^package pkg1$/;"	p
pkg1	pack/plugins/start/fatih-vim-go/t/fixtures/src/pkg1/sample_test.go	/^package pkg1$/;"	p
placeCursor	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) placeCursor() {$/;"	f
placeholder	pack/plugins/start/junegunn-fzf/src/terminal.go	/^var placeholder *regexp.Regexp$/;"	v
placematch	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/label.vim	/^func! s:placematch(c, pos)$/;"	f
pluck	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:pluck(dict, key, default)$/;"	f
plugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^augroup plugin-ft-crystal$/;"	a
pop	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:pop(list) abort$/;"	f
posArray	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func posArray(withPos bool, len int) *[]int {$/;"	f
posDown	pack/plugins/start/junegunn-fzf/src/options.go	/^	posDown$/;"	c
posLeft	pack/plugins/start/junegunn-fzf/src/options.go	/^	posLeft$/;"	c
posRight	pack/plugins/start/junegunn-fzf/src/options.go	/^	posRight$/;"	c
posUp	pack/plugins/start/junegunn-fzf/src/options.go	/^	posUp windowPosition = iota$/;"	c
position	pack/plugins/start/wellle-targets-vim/autoload/targets/target.vim	/^function! s:position(line, column, cursor, min, max, tie)$/;"	f
postProcessOptions	pack/plugins/start/junegunn-fzf/src/options.go	/^func postProcessOptions(opts *Options) {$/;"	f
prefix	pack/plugins/start/sheerun-vim-polyglot/ftplugin/tex_LatexBox.vim	/^	let prefix = expand('<sfile>:p:h') . '\/latex-box\/'$/;"	v
prepare	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def prepare$/;"	f
prepareInput	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func (p *Pattern) prepareInput(item *Item) []Token {$/;"	f
prepareRepeat	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:prepareRepeat(delimiter, which, modifier)$/;"	f
prepareReselect	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:prepareReselect()$/;"	f
present	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:present(dict, ...)$/;"	f
previewOpts	pack/plugins/start/junegunn-fzf/src/options.go	/^type previewOpts struct {$/;"	t
previewer	pack/plugins/start/junegunn-fzf/src/terminal.go	/^type previewer struct {$/;"	t
previous	pack/plugins/start/junegunn-fzf/src/history.go	/^func (h *History) previous() string {$/;"	f
prevnonblanknoncomment	pack/plugins/start/sheerun-vim-polyglot/indent/stylus.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
printAll	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) printAll() {$/;"	f
printHeader	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) printHeader() {$/;"	f
printHighlighted	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) printHighlighted(result *Result, attr tui.Attr, col1 tui.ColorPair, col2 tui.ColorPair, current bool) {$/;"	f
printInfo	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) printInfo() {$/;"	f
printItem	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) printItem(result *Result, i int, current bool) {$/;"	f
printList	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) printList() {$/;"	f
printPreview	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) printPreview() {$/;"	f
printPrompt	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) printPrompt() {$/;"	f
print_info	pack/plugins/start/junegunn-fzf/fzf	/^  def print_info msg = nil$/;"	f	class:usage
print_input	pack/plugins/start/junegunn-fzf/fzf	/^  def print_input$/;"	f	class:usage
print_item	pack/plugins/start/junegunn-fzf/fzf	/^  def print_item row, tokens, chosen, selected$/;"	f	class:usage
process	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:process(string)$/;"	f
processTabs	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func processTabs(runes []rune, prefixWidth int) (string, int) {$/;"	f
process_options_file	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:process_options_file(proj_dir, path) abort$/;"	f
product	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:product(lists) abort$/;"	f
progressMinDuration	pack/plugins/start/junegunn-fzf/src/constants.go	/^	progressMinDuration     = 200 * time.Millisecond$/;"	c
prototype.AssessName	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.AssessName(world, name) dict "{{{3$/;"	f
prototype.BuildTableList	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.BuildTableList() dict "{{{3$/;"	f
prototype.CleanFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.CleanFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.CleanFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.CleanFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_glob.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.CleanFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.ClearAllMarks	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.ClearAllMarks() dict "{{{3$/;"	f
prototype.CloseScratch	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.CloseScratch(...) dict "{{{3$/;"	f
prototype.CurrentItem	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.CurrentItem() dict "{{{3$/;"	f
prototype.DisplayFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.DisplayFilter(filter) dict "{{{3$/;"	f
prototype.DisplayFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.DisplayFilter(filter) dict "{{{3$/;"	f
prototype.DisplayFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.DisplayFilter() dict "{{{3$/;"	f
prototype.DisplayFormat	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.DisplayFormat(list) dict "{{{3$/;"	f
prototype.DisplayHelp	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.DisplayHelp() dict "{{{3$/;"	f
prototype.DisplayList	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.DisplayList(...) dict "{{{3$/;"	f
prototype.DisplayListMark	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.DisplayListMark(x, y, mark) dict "{{{3$/;"	f
prototype.Dummy	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Test.vim	/^function! s:prototype.Dummy() dict "{{{3$/;"	f
prototype.Dummy	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/TestChild.vim	/^function! s:prototype.Dummy() dict "{{{3$/;"	f
prototype.Extend	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Object.vim	/^function! s:prototype.Extend(dictionary) dict "{{{3$/;"	f
prototype.FilterIsEmpty	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.FilterIsEmpty() dict "{{{3$/;"	f
prototype.FilterRxPrefix	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.FilterRxPrefix() dict "{{{3$/;"	f
prototype.FilterRxPrefix	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.FilterRxPrefix() dict "{{{3$/;"	f
prototype.FollowCursor	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.FollowCursor() dict "{{{3$/;"	f
prototype.FormatArgs	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.FormatArgs(format_string, arg) dict "{{{3$/;"	f
prototype.FormatBaseFromData	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.FormatBaseFromData() abort dict "{{{3$/;"	f
prototype.FormatFilename	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^    function! s:prototype.FormatFilename(file) dict "{{{3$/;"	f
prototype.FormatName	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.FormatName(cache, format, value) dict "{{{3$/;"	f
prototype.GetBaseIdx	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.GetBaseIdx(idx) dict "{{{3$/;"	f
prototype.GetBaseIdx0	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.GetBaseIdx0(idx) dict "{{{3$/;"	f
prototype.GetBaseItem	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.GetBaseItem(idx) dict "{{{3$/;"	f
prototype.GetItem	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.GetItem(idx) dict "{{{3$/;"	f
prototype.GetLineIdx	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.GetLineIdx(lnum) dict "{{{3$/;"	f
prototype.GetListIdx	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.GetListIdx(baseidx) dict "{{{3$/;"	f
prototype.GetResize	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.GetResize(size) dict "{{{3$/;"	f
prototype.GetRx	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.GetRx(filter) dict "{{{3$/;"	f
prototype.GetRx0	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.GetRx0(...) dict "{{{3$/;"	f
prototype.GetSelectedItems	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.GetSelectedItems(current) dict "{{{3$/;"	f
prototype.Help	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.Help(world) dict "{{{3$/;"	f
prototype.Help	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.Help(world) dict "{{{3$/;"	f
prototype.Help	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.Help(world) dict "{{{3$/;"	f
prototype.Help	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_glob.vim	/^function! s:prototype.Help(world) dict "{{{3$/;"	f
prototype.Highlight_filename	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^    function! s:prototype.Highlight_filename() dict "{{{3$/;"	f
prototype.Inherit	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Object.vim	/^function! s:prototype.Inherit(object) dict "{{{3$/;"	f
prototype.Init	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.Init(world) dict "{{{3$/;"	f
prototype.Init	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.Init(world) dict "{{{3$/;"	f
prototype.Init	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.Init(world) dict "{{{3$/;"	f
prototype.InitFormatName	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^    function! s:prototype.InitFormatName() dict "{{{3 $/;"	f
prototype.InitHelp	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.InitHelp() dict "{{{3$/;"	f
prototype.Initialize	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.Initialize() dict "{{{3$/;"	f
prototype.IsA	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Object.vim	/^function! s:prototype.IsA(class) dict "{{{3$/;"	f
prototype.IsRelated	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Object.vim	/^function! s:prototype.IsRelated(object) dict "{{{3$/;"	f
prototype.IsValidFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.IsValidFilter() dict "{{{3$/;"	f
prototype.Leave	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.Leave() dict "{{{3$/;"	f
prototype.MarkCurrent	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.MarkCurrent(y) dict "{{{3$/;"	f
prototype.Match	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.Match(world, text) dict "{{{3$/;"	f
prototype.MatchBaseIdx	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.MatchBaseIdx(idx) dict "{{{3$/;"	f
prototype.New	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Object.vim	/^function! s:prototype.New(...) dict "{{{3$/;"	f
prototype.PopFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.PopFilter() dict "{{{3$/;"	f
prototype.Pretty	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.Pretty(filter) dict "{{{3$/;"	f
prototype.PrintLines	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.PrintLines() dict "{{{3$/;"	f
prototype.PushFrontFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.PushFrontFilter(world, char) dict "{{{3$/;"	f
prototype.PushFrontFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.PushFrontFilter(world, char) dict "{{{3$/;"	f
prototype.PushFrontFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.PushFrontFilter(world, char) dict "{{{3$/;"	f
prototype.PushFrontFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_glob.vim	/^function! s:prototype.PushFrontFilter(world, char) dict "{{{3$/;"	f
prototype.PushFrontFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.PushFrontFilter(char) dict "{{{3$/;"	f
prototype.PushHelp	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.PushHelp(...) dict "{{{3$/;"	f
prototype.Query	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.Query() dict "{{{3$/;"	f
prototype.ReduceFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.ReduceFilter() dict "{{{3$/;"	f
prototype.ReduceFrontFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.ReduceFrontFilter(world) dict "{{{3$/;"	f
prototype.ReduceFrontFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.ReduceFrontFilter(world) dict "{{{3$/;"	f
prototype.Reset	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.Reset(...) dict "{{{3$/;"	f
prototype.ResetSelected	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.ResetSelected() dict "{{{3$/;"	f
prototype.Resize	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.Resize(hsize, vsize) dict "{{{3$/;"	f
prototype.RespondTo	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Object.vim	/^function! s:prototype.RespondTo(name) dict "{{{3$/;"	f
prototype.RestoreOrigin	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.RestoreOrigin(...) dict "{{{3$/;"	f
prototype.Retrieve	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.Retrieve(anyway) dict "{{{3$/;"	f
prototype.ScrollToOffset	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.ScrollToOffset() dict "{{{3$/;"	f
prototype.SelectItem	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.SelectItem(mode, index) dict "{{{3$/;"	f
prototype.SelectItemsByNames	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.SelectItemsByNames(mode, items) dict "{{{3$/;"	f
prototype.SetBaseItem	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.SetBaseItem(idx, item) dict "{{{3$/;"	f
prototype.SetFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.SetFilter() dict "{{{3$/;"	f
prototype.SetFrontFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.SetFrontFilter(world, pattern) dict "{{{3$/;"	f
prototype.SetFrontFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.SetFrontFilter(world, pattern) dict "{{{3$/;"	f
prototype.SetFrontFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.SetFrontFilter(world, pattern) dict "{{{3$/;"	f
prototype.SetFrontFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_glob.vim	/^function! s:prototype.SetFrontFilter(world, pattern) dict "{{{3$/;"	f
prototype.SetFrontFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.SetFrontFilter(pattern) dict "{{{3$/;"	f
prototype.SetInitialFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.SetInitialFilter(filter) dict "{{{3$/;"	f
prototype.SetMatchMode	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.SetMatchMode(match_mode) dict "{{{3$/;"	f
prototype.SetOffset	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.SetOffset() dict "{{{3$/;"	f
prototype.SetOrigin	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.SetOrigin(...) dict "{{{3$/;"	f
prototype.SetPrefIdx	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.SetPrefIdx() dict "{{{3$/;"	f
prototype.SetStatusline	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.SetStatusline(query) dict "{{{3$/;"	f
prototype.Set_display_format	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.Set_display_format(value) dict "{{{3$/;"	f
prototype.Set_highlight_filename	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.Set_highlight_filename() dict "{{{3$/;"	f
prototype.Super	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Object.vim	/^function! s:prototype.Super(method, arglist) dict "{{{3$/;"	f
prototype.Suspend	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.Suspend() dict "{{{3$/;"	f
prototype.SwitchWindow	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.SwitchWindow(where) dict "{{{3$/;"	f
prototype.UseFilenameIndicators	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^    function! s:prototype.UseFilenameIndicators() dict "{{{3$/;"	f
prototype.UseInputListScratch	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.UseInputListScratch() dict "{{{3$/;"	f
prototype.UseScratch	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! s:prototype.UseScratch() dict "{{{3$/;"	f
puppetalign	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/puppet.vim	/^    function! s:puppetalign()$/;"	f
push	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^func (c *Chunk) push(trans ItemBuilder, data []byte, index int) bool {$/;"	f
push	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
pushd	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:pushd(dict)$/;"	f
python#utils#fix_qflist	pack/plugins/start/sheerun-vim-polyglot/autoload/python/utils.vim	/^function! python#utils#fix_qflist() " {{{$/;"	f
python_highlight_builtins	pack/plugins/start/sheerun-vim-polyglot/syntax/python.vim	/^    let python_highlight_builtins = 1$/;"	v
python_highlight_doctests	pack/plugins/start/sheerun-vim-polyglot/syntax/python.vim	/^    let python_highlight_doctests = 1$/;"	v
python_highlight_exceptions	pack/plugins/start/sheerun-vim-polyglot/syntax/python.vim	/^    let python_highlight_exceptions = 1$/;"	v
python_highlight_indent_errors	pack/plugins/start/sheerun-vim-polyglot/syntax/python.vim	/^    let python_highlight_indent_errors = 1$/;"	v
python_highlight_space_errors	pack/plugins/start/sheerun-vim-polyglot/syntax/python.vim	/^    let python_highlight_space_errors = 1$/;"	v
python_highlight_string_formatting	pack/plugins/start/sheerun-vim-polyglot/syntax/python.vim	/^    let python_highlight_string_formatting = 1$/;"	v
q	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:q(query)$/;"	f
q	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> q :call <SID>TOCClose()<CR>$/;"	m
q1	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:q1(str)$/;"	f
qf	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^augroup qf$/;"	a
qf#AddList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#AddList()$/;"	f
qf#AddTitle	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#AddTitle(title)$/;"	f
qf#CompleteList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#CompleteList(ArgLead, CmdLine, CursorPos)$/;"	f
qf#DoList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#DoList(line, cmd)$/;"	f
qf#FilterList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#FilterList(pat, reject)$/;"	f
qf#FunctionName	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#FunctionName(argument)$/;"	f
qf#GetFilePath	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#GetFilePath(line) abort$/;"	f
qf#IsLocWindow	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#IsLocWindow(nmbr)$/;"	f
qf#IsQfWindow	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#IsQfWindow(nmbr)$/;"	f
qf#JumpFileChunk	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#JumpFileChunk(down) abort$/;"	f
qf#JumpToFirstItemOfFileChunk	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#JumpToFirstItemOfFileChunk() abort$/;"	f
qf#ListLists	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#ListLists()$/;"	f
qf#LoadList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#LoadList(add, ...)$/;"	f
qf#NextFile	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#NextFile() abort$/;"	f
qf#OpenLoclist	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#OpenLoclist()$/;"	f
qf#OpenQuickfix	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#OpenQuickfix()$/;"	f
qf#PreviewFileUnderCursor	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#PreviewFileUnderCursor()$/;"	f
qf#PreviousFile	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#PreviousFile() abort$/;"	f
qf#RemoveList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#RemoveList(bang, ...)$/;"	f
qf#ResetLists	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#ResetLists()$/;"	f
qf#RestoreList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#RestoreList()$/;"	f
qf#ReuseTitle	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#ReuseTitle()$/;"	f
qf#SaveList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#SaveList(add, name) abort$/;"	f
qf#SetList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#SetList(pat, reject)$/;"	f
qf#SetStatusline	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#SetStatusline()$/;"	f
qf#SetTitle	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#SetTitle(pat, reject)$/;"	f
qf#ToggleLocWindow	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#ToggleLocWindow()$/;"	f
qf#ToggleQfWindow	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#ToggleQfWindow()$/;"	f
qf#WrapCommand	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#WrapCommand(direction, prefix)$/;"	f
queryCache	pack/plugins/start/junegunn-fzf/src/cache.go	/^type queryCache map[string][]*Result$/;"	t
queryCacheMax	pack/plugins/start/junegunn-fzf/src/constants.go	/^	queryCacheMax int = chunkSize \/ 5$/;"	c
query_path	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^function! s:query_path(root) abort$/;"	f
quoteDir	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:quoteDir()$/;"	f
quoteDirInternal	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:quoteDirInternal(oldcolumn)$/;"	f
quoteEntry	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func quoteEntry(entry string) string {$/;"	f
r	pack/plugins/start/sheerun-vim-polyglot/ftplugin/r.vim	/^vnoremap <buffer> r :w >> ~\/.r-pipe<CR>$/;"	m
r	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rhelp.vim	/^vnoremap <buffer> r :w >> ~\/.r-pipe<CR>$/;"	m
r	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rnoweb.vim	/^vnoremap <buffer> r :w >> ~\/.r-pipe<CR>$/;"	m
randResult	pack/plugins/start/junegunn-fzf/src/merger_test.go	/^func randResult() *Result {$/;"	f
rangeEllipsis	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^const rangeEllipsis = 0$/;"	c
rank	pack/plugins/start/junegunn-fzf/fzf	/^    def rank tuple$/;"	f
rank	pack/plugins/start/junegunn-fzf/src/result.go	/^type rank struct {$/;"	t
rdfa_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let rdfa_attributes = {'about': [], 'content': [], 'datatype': [], 'prefix': [], 'profile': [], 'property': [], 'resource': [], 'rel': relrev, 'rev': relrev, 'typeof': [], 'vocab': []}$/;"	v
rdfa_attributes_value	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let rdfa_attributes_value = {$/;"	v
re	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^import re$/;"	m
readFromCommand	pack/plugins/start/junegunn-fzf/src/reader.go	/^func (r *Reader) readFromCommand(cmd string) {$/;"	f
readFromStdin	pack/plugins/start/junegunn-fzf/src/reader.go	/^func (r *Reader) readFromStdin() {$/;"	f
read_nb	pack/plugins/start/junegunn-fzf/fzf	/^  def read_nb chars = 1, default = nil, tries = 10$/;"	f	class:start_search
read_nbs	pack/plugins/start/junegunn-fzf/fzf	/^  def read_nbs$/;"	f	class:start_search
readerBufferSize	pack/plugins/start/junegunn-fzf/src/constants.go	/^	readerBufferSize = 64 * 1024$/;"	c
readonce	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def readonce$/;"	f	class:TestBase
recall	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:recall() abort$/;"	f
redraw	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:redraw()$/;"	f
reduce_line	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim/complete.vim	/^function! s:reduce_line(lines)$/;"	f
refresh	pack/plugins/start/junegunn-fzf/fzf	/^  def refresh$/;"	f	class:usage
refresh	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) refresh() {$/;"	f
reindent	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:reindent() " {{{1$/;"	f
relationship_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let relationship_attributes = {'aria-activedescendant': [], 'aria-controls': [], 'aria-describedby': [], 'aria-flowto': [], 'aria-labelledby': [], 'aria-owns': [], 'aria-posinset': [], 'aria-setsize': []}$/;"	v
relrev	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let relrev = ['chapter', 'contents', 'copyright', 'first', 'glossary', 'help', 'icon', 'index', 'last', 'license', 'meta', 'next', 'p3pv1', 'prev', 'role', 'section', 'stylesheet', 'subsection', 'start', 'top', 'up']$/;"	v
remove	pack/plugins/start/junegunn-fzf/uninstall	/^remove() {$/;"	f
remove_layout	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:remove_layout(opts)$/;"	f
remove_line	pack/plugins/start/junegunn-fzf/uninstall	/^remove_line() {$/;"	f
rename_job	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^function s:rename_job(args)$/;"	f
render	pack/plugins/start/junegunn-fzf/fzf	/^  def render &blk$/;"	f	class:start_search
repeat#invalidate	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^function! repeat#invalidate()$/;"	f
repeat#run	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^function! repeat#run(count)$/;"	f
repeat#set	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^function! repeat#set(sequence,...)$/;"	f
repeat#setreg	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^function! repeat#setreg(sequence,register)$/;"	f
repeat#wrap	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^function! repeat#wrap(command,count)$/;"	f
repeatPlugin	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^augroup repeatPlugin$/;"	a
replace	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f
replacePlaceholder	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func replacePlaceholder(template string, stripAnsi bool, delimiter Delimiter, query string, items []*Item) string {$/;"	f
replace_first	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
repo	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo_aliases	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_aliases() dict abort$/;"	f
repo_bare	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_config(conf) dict abort$/;"	f
repo_dir	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dirglob	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_git_chomp	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
repo_head_ref	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
repo_keywordprg	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_rev_parse	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_tree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
reqClose	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqClose$/;"	c
reqHeader	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqHeader$/;"	c
reqInfo	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqInfo$/;"	c
reqJump	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqJump$/;"	c
reqList	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqList$/;"	c
reqPreviewDisplay	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqPreviewDisplay$/;"	c
reqPreviewEnqueue	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqPreviewEnqueue$/;"	c
reqPreviewRefresh	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqPreviewRefresh$/;"	c
reqPrintQuery	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqPrintQuery$/;"	c
reqPrompt	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqPrompt util.EventType = iota$/;"	c
reqQuit	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqQuit$/;"	c
reqRedraw	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqRedraw$/;"	c
reqRefresh	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqRefresh$/;"	c
reqReset	pack/plugins/start/junegunn-fzf/src/matcher.go	/^	reqReset$/;"	c
reqRetry	pack/plugins/start/junegunn-fzf/src/matcher.go	/^	reqRetry util.EventType = iota$/;"	c
resizeWindows	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) resizeWindows() {$/;"	f
restore_conceal_in_other_windows	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/label.vim	/^func! s:restore_conceal_in_other_windows()$/;"	f
reverse	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:reverse(str) abort$/;"	f
reverseStringArray	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func reverseStringArray(input []string) []string {$/;"	f
rgb_colour	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:rgb_colour(x, y, z)$/;"	f
rgb_level	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:rgb_level(n)$/;"	f
rgb_number	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:rgb_number(x)$/;"	f
robertmeta's vimrc	README.md	/^# robertmeta's vimrc$/;"	h
role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role = extend(role, landmark_role)$/;"	v
role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role = extend(widget_role, document_structure)$/;"	v
role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let role = extend(role, landmark_role)$/;"	v
role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let role = extend(widget_role, document_structure)$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes = {}$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['alert'] = role_attributes['region']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['alertdialog'] = role_attributes['alert'] + role_attributes['dialog']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['application'] = abstract_role['landmark'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['article'] = role_attributes['document'] + role_attributes['region'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['banner'] = abstract_role['landmark'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['button'] = role_attributes['region'] + role_attributes['menuitemcheckbox']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['checkbox'] = abstract_role['input'] + ['aria-checked'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['columnheader'] = role_attributes['gridcell'] + abstract_role['sectionhead'] + ['aria-sort']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['combobox'] = abstract_role['select'] + ['aria-expanded', 'aria-required'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['complementary'] = abstract_role['landmark'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['contentinfo'] = abstract_role['landmark'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['default'] = abstract_role['roletype']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['definition'] = abstract_role['section'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['dialog'] = abstract_role['window']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['directory'] = role_attributes['list'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['document'] = abstract_role['structure'] + ['aria-expanded'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['form'] = abstract_role['landmark'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['grid'] = abstract_role['composite'] + role_attributes['region'] + ['aria-level', 'aria-multiselectable', 'aria-readonly']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['gridcell'] = abstract_role['section'] + abstract_role['widget']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['group'] = abstract_role['section']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['heading'] = abstract_role['sectionhead'] + ['aria-level'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['img'] = abstract_role['section'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['link'] = abstract_role['widget'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['list'] = role_attributes['region'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['listbox'] = role_attributes['list'] + abstract_role['select'] + ['aria-multiselectable', 'aria-required']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['listitem'] = abstract_role['section']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['log'] = role_attributes['region'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['main'] = abstract_role['landmark'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['marquee'] = role_attributes['region'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['math'] = abstract_role['section'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menu'] =  role_attributes['list'] + abstract_role['select'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menubar'] = role_attributes['menu'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menuitem'] = abstract_role['input'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menuitemcheckbox'] = role_attributes['menuitem'] + role_attributes['checkbox']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menuitemradio'] = role_attributes['menuitemcheckbox'] + role_attributes['radio']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['navigation'] = abstract_role['landmark'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['note'] = abstract_role['section'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['option'] = abstract_role['input'] + ['aria-checked', 'aria-posinset', 'aria-selected', 'aria-setsize']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['presentation'] = abstract_role['structure']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['progressbar'] = abstract_role['widget'] + ['aria-valuemax', 'aria-valuemin', 'aria-valuenow', 'aria-valuetext']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['radio'] = role_attributes['checkbox'] + role_attributes['option']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['radiogroup'] = abstract_role['select'] + ['aria-required']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['region'] = abstract_role['section']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['row'] = role_attributes['group'] + ['aria-level', 'aria-selected']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['rowheader'] = role_attributes['gridcell'] + abstract_role['sectionhead']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['scrollbar'] = abstract_role['range'] + ['aria-controls', 'aria-orientation', 'aria-valuemax', 'aria-valuemin', 'aria-valuenow']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['search'] = abstract_role['landmark']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['separator'] = abstract_role['structure'] + ['aria-expanded'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['slider'] = abstract_role['range'] + ['aria-valuemax', 'aria-valuemin', 'aria-valuenow']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['spinbutton'] = abstract_role['composite'] + abstract_role['range'] + ['aria-required'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['status'] = abstract_role['composite'] + role_attributes['region']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tab'] = abstract_role['sectionhead'] + abstract_role['widget'] + ['aria-selected']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tablist'] = abstract_role['composite'] + role_attributes['directory']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tabpanel'] = role_attributes['region']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['textbox'] = abstract_role['input'] + ['aria-autocomplete', 'aria-multiline', 'aria-readonly', 'aria-required']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['timer'] = role_attributes['status'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['toolbar'] = role_attributes['group'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tooltip'] = abstract_role['section'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tree'] = abstract_role['select'] + ['aria-multiselectable', 'aria-required']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['treegrid'] = role_attributes['grid'] + role_attributes['tree']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['treeitem'] = role_attributes['listitem'] + role_attributes['option']$/;"	v
root_dirs	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! s:root_dirs() abort$/;"	f
rubout	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) rubout(pattern string) {$/;"	f
ruby_minlines	pack/plugins/start/sheerun-vim-polyglot/syntax/ruby.vim	/^    let ruby_minlines = 500$/;"	v
rubycomplete#Complete	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! rubycomplete#Complete(findstart, base)$/;"	f
rubycomplete#Init	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! rubycomplete#Init()$/;"	f
run_cmd	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! s:run_cmd(cmd) abort$/;"	f
run_guru	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:run_guru(args) abort$/;"	f
run_spec	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! s:run_spec(root, path, ...) abort$/;"	f
runeWidth	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func runeWidth(r rune, prefixWidth int) int {$/;"	f
rust	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^augroup rust.vim$/;"	a
rust#AppendCmdLine	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! rust#AppendCmdLine(text)$/;"	f
rust#CompleteExpand	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! rust#CompleteExpand(lead, line, pos)$/;"	f
rust#Emit	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! rust#Emit(type, args)$/;"	f
rust#Expand	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! rust#Expand(bang, args)$/;"	f
rust#Jump	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! rust#Jump(mode, function) range$/;"	f
rust#Play	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! rust#Play(count, line1, line2, ...) abort$/;"	f
rust#Run	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! rust#Run(bang, args)$/;"	f
rustfmt#Format	pack/plugins/start/sheerun-vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#Format()$/;"	f
rxflag_for	pack/plugins/start/junegunn-fzf/fzf	/^    def rxflag_for q$/;"	f	class:start_search.FuzzyMatcher
s	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^  nmap s <Plug>Sneak_s$/;"	m
s	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^    nnoremap <buffer> s <C-w><CR>$/;"	m
s	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> s :call <SID>TOCToggleNumbers()<CR>$/;"	m
s	pack/plugins/start/tomtom-tlib-vim/spec/tlib/rx.vim	/^    let s = printf('%sfoo%sbar%s', c, c, c)$/;"	v
s	pack/plugins/start/tomtom-tlib-vim/test/tlib.vim	/^    let s = printf('%sfoo%sbar%s', c, c, c)$/;"	v
s.dosearch	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/search.vim	/^  func! s.dosearch(...) " a:1 : extra search options$/;"	f
s.get_onscreen_searchpattern	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/search.vim	/^  func! s.get_onscreen_searchpattern(w)$/;"	f
s.get_stopline	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/search.vim	/^  func! s.get_stopline()$/;"	f
s.hasmatches	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/search.vim	/^  func! s.hasmatches(n)$/;"	f
s.initpattern	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/search.vim	/^  func! s.initpattern()$/;"	f
s:BEGIN_BLOCK	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:BEGIN_BLOCK = s:BEGIN_BLOCK_KEYWORD . '\\|' . s:COMPOUND_EXPRESSION$/;"	v
s:BEGIN_BLOCK_KEYWORD	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:BEGIN_BLOCK_KEYWORD = '\\C^\\%(if\\|unless\\|else\\|for\\|while\\|until\\|'$/;"	v
s:BEGIN_BLOCK_OP	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:BEGIN_BLOCK_OP = '[([{:=]$'$/;"	v
s:BRACKET_CONTINUATION	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:BRACKET_CONTINUATION = '^\\s*[}\\])]\\s*' . s:CONTINUATION_OP$/;"	v
s:BRACKET_PAIRS	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:BRACKET_PAIRS = {']': '\\[', '}': '{', ')': '('}$/;"	v
s:BREAK_BLOCK_OP	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:BREAK_BLOCK_OP = '\\C^\\%(return\\|break\\|continue\\|throw\\)\\>'$/;"	v
s:C	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^let s:C = s:V.import('ColorEcho')$/;"	v
s:COLORS	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^let s:COLORS = {$/;"	v
s:COMPOUND_ASSIGNMENT	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^let s:COMPOUND_ASSIGNMENT = '[:=]\\s*\\%(if\\|unless\\|for\\|while\\|until\\|'$/;"	v
s:COMPOUND_EXPRESSION	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:COMPOUND_EXPRESSION = '\\C\\%([^-]-\\|[^+]+\\|[^\/]\/\\|[:=*%&|^<>]\\)\\s*'$/;"	v
s:CONTAINED_THEN	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:CONTAINED_THEN = '\\C[(\\[].\\{-}\\<then\\>.\\{-\\}[)\\]]'$/;"	v
s:CONTINUATION	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:CONTINUATION = s:CONTINUATION_OP . '\\|' . s:BEGIN_BLOCK_OP$/;"	v
s:CONTINUATION	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^let s:CONTINUATION = '\\<\\%(is\\|isnt\\|and\\|or\\|do\\)\\>$'$/;"	v
s:CONTINUATION_BLOCK	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^let s:CONTINUATION_BLOCK = '[([{:=]$'$/;"	v
s:CONTINUATION_OP	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:CONTINUATION_OP = '\\C\\%(\\<\\%(is\\|isnt\\|and\\|or\\)\\>\\|'$/;"	v
s:ConvBackPats	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^let s:ConvBackPats = map([$/;"	v
s:DEFAULT_LEVEL	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = '-1'$/;"	v
s:DEFAULT_LEVEL	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = 'indent(prevnlnum)'$/;"	v
s:DOT_ACCESS	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:DOT_ACCESS	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:ELSE_COND	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:ELSE_COND = '\\C^\\s*else\\s\\+\\<\\%(if\\|unless\\)\\>'$/;"	v
s:FUNCTION	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:FUNCTION = '[-=]>$'$/;"	v
s:Help	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_cnfd.vim	/^let s:Help = s:prototype.Help$/;"	v
s:Help	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_fuzzy.vim	/^let s:Help = s:prototype.Help$/;"	v
s:Help	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_glob.vim	/^let s:Help = s:prototype.Help$/;"	v
s:INDENT_AFTER_KEYWORD	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^let s:INDENT_AFTER_KEYWORD = '^\\%(if\\|unless\\|else\\|for\\|while\\|until\\|'$/;"	v
s:INDENT_AFTER_OPERATOR	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^let s:INDENT_AFTER_OPERATOR = '\\%([([{:=]\\|[-=]>\\)$'$/;"	v
s:J	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^let s:J = s:V.import('Web.JSON')$/;"	v
s:KEYWORD_PAIRS	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:KEYWORD_PAIRS = [$/;"	v
s:LabelCache	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^let s:LabelCache = {}$/;"	v
s:MAX_LOOKBACK	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:MAX_LOOKBACK	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:MODE_16_COLOR	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:MODE_16_COLOR = 0$/;"	v
s:MODE_256_COLOR	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:MODE_256_COLOR = 1$/;"	v
s:MODE_TRUE_COLOR	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:MODE_TRUE_COLOR = 2$/;"	v
s:MODE_TRUE_OR_256_COLOR	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:MODE_TRUE_OR_256_COLOR = 3 " for code generation purpose, not for theme usage$/;"	v
s:N	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:N = 0              " Length of the current completion chain$/;"	v
s:OUTDENT_AFTER	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^let s:OUTDENT_AFTER = '^\\%(return\\|break\\|continue\\|throw\\)\\>'$/;"	v
s:P	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^let s:P = s:V.import('Process')$/;"	v
s:POSTFIX_CONDITION	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:POSTFIX_CONDITION = '\\C\\S\\s\\+\\zs\\<\\%(if\\|unless\\|when\\|while\\|until\\)\\>'$/;"	v
s:POSTFIX_CONDITION	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^let s:POSTFIX_CONDITION = '\\S\\s\\+\\zs\\<\\%(if\\|unless\\)\\>'$/;"	v
s:SID	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^let s:SID = s:GetSID()$/;"	v
s:SINGLE_LINE_ELSE	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:SINGLE_LINE_ELSE = '\\C^else\\s\\+\\%(\\<\\%(if\\|unless\\)\\>\\)\\@!'$/;"	v
s:SINGLE_LINE_ELSE	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^let s:SINGLE_LINE_ELSE = '^else\\s\\+\\%(\\<\\%(if\\|unless\\)\\>\\)\\@!'$/;"	v
s:SYNTAX_COMMENT	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:SYNTAX_COMMENT = 'coffee\\%(Comment\\|BlockComment\\|HeregexComment\\)'$/;"	v
s:SYNTAX_STRING	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:SYNTAX_STRING = 'coffee\\%(String\\|AssignString\\|Embed\\|Regex\\|Heregex\\|'$/;"	v
s:SYNTAX_STRING_COMMENT	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:SYNTAX_STRING_COMMENT = s:SYNTAX_STRING . '\\|' . s:SYNTAX_COMMENT$/;"	v
s:ShiftWidth	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^  let s:ShiftWidth = function('shiftwidth')$/;"	v
s:TYPE	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^let s:TYPE = {'dict': type({}), 'funcref': type(function('call')), 'string': type('')}$/;"	v
s:TYPE_DICT	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_LIST	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_STRING	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:TYPE_STRING = type("")$/;"	v
s:V	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^let s:V = vital#of('crystal')$/;"	v
s:_unify_path_cache	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^let s:_unify_path_cache = {}$/;"	v
s:_vital_files_cache	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^let s:_vital_files_cache = []$/;"	v
s:_vital_files_cache_runtimepath	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^let s:_vital_files_cache_runtimepath = ''$/;"	v
s:abstract_prototype	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:access_modifier_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:access_modifier_regex = '\\C^\\s*\\%(public\\|protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:access_modifier_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:access_modifier_regex = '\\C^\\s*\\%(public\\|protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:added_dbs	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^let s:added_dbs = []$/;"	v
s:align_map	pack/plugins/start/sheerun-vim-polyglot/indent/elm.vim	/^let s:align_map = {$/;"	v
s:all_tokens	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^let s:all_tokens = {}$/;"	v
s:anon_func_end	pack/plugins/start/sheerun-vim-polyglot/indent/lua.vim	/^let s:anon_func_end = '\\<end\\%(\\s*[)}]\\)\\+'$/;"	v
s:anon_func_start	pack/plugins/start/sheerun-vim-polyglot/indent/lua.vim	/^let s:anon_func_start = '\\S\\+\\s*[({].*\\<function\\s*(.*)\\s*$'$/;"	v
s:ansi	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^let s:ansi = {'black': 30, 'red': 31, 'green': 32, 'yellow': 33, 'blue': 34, 'magenta': 35, 'cyan': 36}$/;"	v
s:array_entry	pack/plugins/start/sheerun-vim-polyglot/indent/ansible.vim	/^let s:array_entry = '\\v^\\s*-\\s' " - foo$/;"	v
s:arrow	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^let s:arrow = '^.*->$'$/;"	v
s:async_code	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^let s:async_code = 0$/;"	v
s:async_debug	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^let s:async_debug = 0$/;"	v
s:async_efm	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^let s:async_efm = &errorformat$/;"	v
s:async_head	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^let s:async_head = 0$/;"	v
s:async_hold	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let s:async_hold = (v:version >= 800 || has('patch-7.4.2100'))? 0 : 1$/;"	v
s:async_hold	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let s:async_hold = 1$/;"	v
s:async_hold	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^let s:async_hold = 0$/;"	v
s:async_info	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^let s:async_info = { 'text':"", 'post':'', 'postsave':'' }$/;"	v
s:async_nvim	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^let s:async_nvim = has('nvim')? 1 : 0$/;"	v
s:async_output	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^let s:async_output = {}$/;"	v
s:async_quick	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let s:async_quick = (v:version >= 800 || has('patch-7.4.1997'))? 1 : 0$/;"	v
s:async_quick	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let s:async_quick = 0$/;"	v
s:async_quick	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^let s:async_quick = 0$/;"	v
s:async_scroll	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^let s:async_scroll = 0$/;"	v
s:async_start	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^let s:async_start = 0.0$/;"	v
s:async_state	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^let s:async_state = 0$/;"	v
s:async_tail	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^let s:async_tail = 0$/;"	v
s:asyncrun_support	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^		let s:asyncrun_support = 1$/;"	v
s:asyncrun_support	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let s:asyncrun_support = 1$/;"	v
s:asyncrun_support	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^let s:asyncrun_support = 0$/;"	v
s:asyncrun_windows	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let s:asyncrun_windows = 1$/;"	v
s:asyncrun_windows	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^let s:asyncrun_windows = 0$/;"	v
s:attributes	pack/plugins/start/sheerun-vim-polyglot/indent/haml.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:attributes	pack/plugins/start/sheerun-vim-polyglot/indent/pug.vim	/^let s:attributes = '\\%((.\\{-\\})\\)'$/;"	v
s:attributes	pack/plugins/start/sheerun-vim-polyglot/indent/slim.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:auto	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:auto = 0           " Is autocompletion enabled?$/;"	v
s:backslash_continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:backslash_continuation_regex = '%\\@<!\\\\\\s*$'$/;"	v
s:bar	pack/plugins/start/tomtom-tlib-vim/spec/tlib/var.vim	/^let s:bar = 4$/;"	v
s:bar	pack/plugins/start/tomtom-tlib-vim/test/tlib.vim	/^let s:bar = 4$/;"	v
s:base	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/signs.vim	/^let s:base = 2327$/;"	v
s:baseIndentExpr	pack/plugins/start/sheerun-vim-polyglot/indent/twig.vim	/^let s:baseIndentExpr=&indentexpr$/;"	v
s:beflet	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^let s:beflet = '^\\s*\\(initializer\\|method\\|try\\)\\|\\(\\<\\(begin\\|do\\|else\\|in\\|then\\|try\\)\\|->\\|<-\\|=\\|;\\|(\\)\\s*$'$/;"	v
s:bin	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^let s:bin = { 'preview': expand('<sfile>:h:h:h') . s:which_bin }$/;"	v
s:block_continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:block_continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:block_end	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^let s:block_end = 'end'$/;"	v
s:block_middle	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^let s:block_middle = 'else\\|match\\|elsif\\|catch\\|after\\|rescue'$/;"	v
s:block_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:block_regex =$/;"	v
s:block_regex	pack/plugins/start/sheerun-vim-polyglot/indent/json.vim	/^let s:block_regex = '\\%({\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)*|\\)\\=' . s:line_term$/;"	v
s:block_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:block_regex =$/;"	v
s:block_regex	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:block_regex = '\\%([{[]\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)*|\\)\\=' . s:line_term$/;"	v
s:block_regex	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:block_regex = '\\%([{[]\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)*|\\)\\=' . s:line_term$/;"	v
s:block_skip	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^let s:block_skip = "synIDattr(synID(line('.'),col('.'),1),'name') =~? '".s:skip_syntax."'"$/;"	v
s:block_start	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^let s:block_start = '\\<\\%(do\\|fn\\)\\>'$/;"	v
s:bmru	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/buffer.vim	/^let s:bmru = []$/;"	v
s:bracket_continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:bracket_continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:bracket_switch_continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:bracket_switch_continuation_regex = '^\\([^(]\\+\\zs).\\+\\)\\+'.s:continuation_regex$/;"	v
s:bracket_switch_continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:bracket_switch_continuation_regex = '^\\([^(]\\+\\zs).\\+\\)\\+'.s:continuation_regex$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/pug.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/pug.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/stylus.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/stylus.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:bstfile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^let s:bstfile = expand('<sfile>:p:h') . '\/vimcomplete'$/;"	v
s:buf_nr	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^let s:buf_nr = -1$/;"	v
s:buf_nr	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^let s:buf_nr = -1$/;"	v
s:buffer_prototype	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:cache	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cache.vim	/^let s:cache = {}$/;"	v
s:cache_module_path	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^let s:cache_module_path = {}$/;"	v
s:cache_sid	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^let s:cache_sid = {}$/;"	v
s:cargo_manifest_name	pack/plugins/start/sheerun-vim-polyglot/compiler/cargo.vim	/^let s:cargo_manifest_name = get(g:, 'cargo_manifest_name', 'Cargo.toml')$/;"	v
s:clojure_syntax_keywords	pack/plugins/start/sheerun-vim-polyglot/syntax/clojure.vim	/^let s:clojure_syntax_keywords = {$/;"	v
s:close_pat	pack/plugins/start/sheerun-vim-polyglot/indent/tex.vim	/^let s:close_pat = '\\\\\\@<!\\%(\\\\end\\|\\\\right\\a\\@!\\|\\\\)\\|\\\\\\]\\|}\\)'$/;"	v
s:close_patt	pack/plugins/start/sheerun-vim-polyglot/indent/lua.vim	/^let s:close_patt = '\\%(\\<\\%(end\\|until\\)\\>\\|)\\|}\\)'$/;"	v
s:cmd1	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/vcs.vim	/^            let s:cmd1 = printf(g:tlib#vcs#check, s:cmd)$/;"	v
s:cmp	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/ultisnips.vim	/^let s:cmp = 'stridx(v:val, l:pat)' . (get(g:, 'mucomplete#ultisnips#match_at_start', 1) ? '==0' : '>=0')$/;"	v
s:cnp	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:cnp = get(g:, 'mucomplete#ctrlx_mode_out', "\\<c-g>\\<c-g>")$/;"	v
s:coffeeIndentExpr	pack/plugins/start/sheerun-vim-polyglot/after/indent/html.vim	/^let s:coffeeIndentExpr = &l:indentexpr$/;"	v
s:colorful_term	vimrc	/^let s:colorful_term=(&term=~"xterm") || (&term=~"screen")$/;"	v
s:comma_first	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:comma_first = '^\\s*,'$/;"	v
s:comma_first	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:comma_first = '^\\s*,'$/;"	v
s:comma_last	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:comma_last = ',\\s*$'$/;"	v
s:comma_last	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:comma_last = ',\\s*$'$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands = {}$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.abbrev     = s:commands.abstract.clone()$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.abbrev.options = {"buffer":0,"cmdline":0,"delete":0}$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.abstract = s:object.clone()$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.delete   = s:commands.abbrev.clone()$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.delete.options.delete = 1$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.search = s:commands.abstract.clone()$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.search.options = {"word": 0, "variable": 0, "flags": ""}$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.substitute = s:commands.abstract.clone()$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.substitute.options = {"word": 0, "variable": 0, "flags": "g"}$/;"	v
s:commands	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:commands = []$/;"	v
s:comment	pack/plugins/start/sheerun-vim-polyglot/indent/ansible.vim	/^let s:comment = '\\v^\\s*#' " # comment$/;"	v
s:common_efm	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:common_efm = ''$/;"	v
s:compl_mappings	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:compl_mappings = extend({$/;"	v
s:compl_methods	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:compl_methods = [] " Current completion chain$/;"	v
s:compl_text	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:compl_text = ''    " Text to be completed$/;"	v
s:completion_type	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^let s:completion_type = ''$/;"	v
s:conceal	pack/plugins/start/sheerun-vim-polyglot/syntax/markdown.vim	/^  let s:conceal = ' conceal'$/;"	v
s:conceal	pack/plugins/start/sheerun-vim-polyglot/syntax/markdown.vim	/^let s:conceal = ''$/;"	v
s:concealends	pack/plugins/start/sheerun-vim-polyglot/syntax/markdown.vim	/^  let s:concealends = ' concealends'$/;"	v
s:concealends	pack/plugins/start/sheerun-vim-polyglot/syntax/markdown.vim	/^let s:concealends = ''$/;"	v
s:const	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^let s:const = {}$/;"	v
s:const	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^let s:const.false = function('s:_false')$/;"	v
s:const	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^let s:const.null = function('s:_null')$/;"	v
s:const	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^let s:const.true = function('s:_true')$/;"	v
s:continuable_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:continuable_regex =$/;"	v
s:continuable_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:continuable_regex =$/;"	v
s:continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:continuation_regex =$/;"	v
s:continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:continuation_regex =$/;"	v
s:continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)' . s:line_term$/;"	v
s:continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\|[^=]=[^=].*,\\)' . s:line_term$/;"	v
s:coverage_browser_handler_jobs	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^let s:coverage_browser_handler_jobs = {}$/;"	v
s:coverage_handler_jobs	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^let s:coverage_handler_jobs = {}$/;"	v
s:cpo_orig	pack/plugins/start/sheerun-vim-polyglot/syntax/plantuml.vim	/^let s:cpo_orig=&cpo$/;"	v
s:cpo_sav	pack/plugins/start/sheerun-vim-polyglot/indent/eruby.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	pack/plugins/start/sheerun-vim-polyglot/syntax/clojure.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	pack/plugins/start/sheerun-vim-polyglot/syntax/ruby.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_save	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim/complete.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/junegunn-fzf-vim/plugin/fzf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/compiler/cucumber.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/compiler/eruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/compiler/exunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/compiler/haml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/compiler/nim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/compiler/rake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/compiler/rspec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/compiler/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/compiler/rubyunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/compiler/rustc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/compiler/sass.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/compiler/sbt.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/ftplugin/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/indent/eelixir.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/indent/json.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/indent/perl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/indent/swift.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/syntax/c.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/syntax/css.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/syntax/elixir.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/syntax/erlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/syntax/perl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/syntax/pod.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/syntax/raml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpoptions_save	pack/plugins/start/sheerun-vim-polyglot/ftplugin/qml.vim	/^let s:cpoptions_save = &cpoptions$/;"	v
s:cposet	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let s:cposet=&cpoptions$/;"	v
s:crystal_deindent_keywords	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:crystal_deindent_keywords =$/;"	v
s:crystal_indent_keywords	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:crystal_indent_keywords =$/;"	v
s:cssindent	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^let s:cssindent = &indentexpr$/;"	v
s:current_file	pack/plugins/start/fatih-vim-go/autoload/go/template.vim	/^let s:current_file = expand("<sfile>")$/;"	v
s:current_fileencodings	pack/plugins/start/fatih-vim-go/ftdetect/gofiletype.vim	/^let s:current_fileencodings = ''$/;"	v
s:current_fileencodings	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^let s:current_fileencodings = ''$/;"	v
s:current_fileformats	pack/plugins/start/fatih-vim-go/ftdetect/gofiletype.vim	/^let s:current_fileformats = ''$/;"	v
s:current_fileformats	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^let s:current_fileformats = ''$/;"	v
s:current_syntax	pack/plugins/start/sheerun-vim-polyglot/after/syntax/coffee.vim	/^  let s:current_syntax=b:current_syntax$/;"	v
s:current_syntax	pack/plugins/start/sheerun-vim-polyglot/after/syntax/jsx.vim	/^  let s:current_syntax=b:current_syntax$/;"	v
s:current_syntax_save	pack/plugins/start/sheerun-vim-polyglot/after/syntax/haml.vim	/^  let s:current_syntax_save = b:current_syntax$/;"	v
s:current_syntax_save	pack/plugins/start/sheerun-vim-polyglot/after/syntax/html.vim	/^  let s:current_syntax_save = b:current_syntax$/;"	v
s:cycle	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:cycle = 0          " Should µcomplete treat the completion chain as cyclic?$/;"	v
s:cygwin	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^let s:cygwin = {}$/;"	v
s:decIndent	pack/plugins/start/sheerun-vim-polyglot/indent/plantuml.vim	/^let s:decIndent = '^\\s*\\(end\\|else\\|}\\)'$/;"	v
s:defArgMatcher	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^let s:defArgMatcher = '\\%((\\_.\\{-})\\)'$/;"	v
s:defMatcher	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^let s:defMatcher = '\\%(\\%(private\\|protected\\)\\%(\\[[^\\]]*\\]\\)\\?\\s\\+\\|abstract\\s\\+\\|override\\s\\+\\)*\\<def\\>'$/;"	v
s:default_action	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^let s:default_action = {$/;"	v
s:default_action	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^let s:default_action = {$/;"	v
s:default_layout	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^let s:default_layout = { 'down': '~40%' }$/;"	v
s:deindent_keywords	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^let s:deindent_keywords = '^\\s*\\<\\%('.s:block_end.'\\|'.s:block_middle.'\\)\\>'.'\\|'.s:arrow$/;"	v
s:delimitMate_extra_excluded_regions	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^	let s:delimitMate_extra_excluded_regions = ',rustLifetimeCandidate,rustGenericLifetimeCandidate'$/;"	v
s:delims	pack/plugins/start/sheerun-vim-polyglot/ftplugin/toml.vim	/^let s:delims = { 'left': '#' }$/;"	v
s:dictionary_entry	pack/plugins/start/sheerun-vim-polyglot/indent/ansible.vim	/^let s:dictionary_entry = '\\v^\\s*[^:-]+:\\s*$' " with_items:$/;"	v
s:did_indent	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^  let s:did_indent=b:did_indent$/;"	v
s:dir	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:dir = 1            " Direction to search for the next completion method (1=fwd, -1=bwd)$/;"	v
s:dir	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^		let s:dir = fnameescape(s:dir)$/;"	v
s:dir	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^		let s:dir = substitute(s:dir, '\\ ', '\\\\ ', 'g')$/;"	v
s:dir	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^		let s:dir = substitute(s:dir, '\\', '\\\\\\\\', 'g')$/;"	v
s:dir_for_worktree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:dir_for_worktree = {}$/;"	v
s:dir_stack	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/dir.vim	/^let s:dir_stack = []$/;"	v
s:directives_end	pack/plugins/start/sheerun-vim-polyglot/indent/blade.vim	/^    let s:directives_end .= '\\|' . join(values(g:blade_custom_directives_pairs), '\\|')$/;"	v
s:directives_end	pack/plugins/start/sheerun-vim-polyglot/indent/blade.vim	/^let s:directives_end = 'else\\|end\\|empty\\|show\\|stop\\|append\\|overwrite'$/;"	v
s:directives_start	pack/plugins/start/sheerun-vim-polyglot/indent/blade.vim	/^    let s:directives_start .= '\\|' . join(keys(g:blade_custom_directives_pairs), '\\|')$/;"	v
s:directives_start	pack/plugins/start/sheerun-vim-polyglot/indent/blade.vim	/^let s:directives_start = 'if\\|else\\|unless\\|for\\|while\\|empty\\|push\\|section\\|can\\|hasSection\\|verbatim'$/;"	v
s:dot_continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:dot_continuation_regex = '%\\@<!\\.\\s*\\%(#.*\\)\\=$'$/;"	v
s:dotfiles	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^let s:dotfiles = '\\(^\\|\\s\\s\\)\\zs\\.\\S\\+'$/;"	v
s:echorizer	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^let s:echorizer = {$/;"	v
s:ed	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2.vim	/^        let s:ed = strpart(s:str,0,stridx(s:str,' '))$/;"	v
s:empty	pack/plugins/start/wellle-targets-vim/autoload/targets/state.vim	/^let s:empty = 1$/;"	v
s:end_end_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>\\|{%\\s*\\<\\%(end\\)\\>'$/;"	v
s:end_end_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_middle_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:end_middle_regex =$/;"	v
s:end_middle_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\|when\\|elsif\\):\\@!\\>'$/;"	v
s:end_skip_expr	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:end_skip_expr	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:end_start_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:end_start_regex =$/;"	v
s:end_start_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:end_start_regex =$/;"	v
s:ending_with_assignment	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^let s:ending_with_assignment = '=\\s*$'$/;"	v
s:endtag	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^let s:endtag = '^\\s*\\\/\\?>\\s*;\\='$/;"	v
s:env_cache	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^let s:env_cache = {}$/;"	v
s:envbeginpattern	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^let s:envbeginpattern = s:notcomment . s:notbslash . '\\\\begin\\s*{.\\{-}}'$/;"	v
s:envendpattern	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^let s:envendpattern = s:notcomment . s:notbslash . '\\\\end\\s*{.\\{-}}'$/;"	v
s:escape	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^let s:escape = 'substitute(escape(v:val, ".$~"), "*", ".*", "g")'$/;"	v
s:executables	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^let s:executables = {}$/;"	v
s:expr_case	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^let s:expr_case = s:line_pre . '\\%(\\%(case\\>.\\+\\)\\|default\\)\\s*:'$/;"	v
s:extend	pack/plugins/start/sheerun-vim-polyglot/indent/sass.vim	/^let s:extend = '^\\s*\\%(@extend\\|@include\\|+\\)'$/;"	v
s:extra_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ansible_template.vim	/^  let s:extra_syntax = split(g:ansible_extra_syntaxes)$/;"	v
s:file_name	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^let s:file_name = ''$/;"	v
s:foldable_groups	pack/plugins/start/sheerun-vim-polyglot/syntax/ruby.vim	/^let s:foldable_groups = split($/;"	v
s:folded	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^let s:folded = '\\(% Fake\\|\\\\\\(document\\|begin\\|end\\|paragraph\\|'$/;"	v
s:foldparts	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^let s:foldparts = '^\\s*\\\\\\%(' . join(g:LatexBox_fold_parts, '\\|') . '\\)'$/;"	v
s:format	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/progressbar.vim	/^let s:format = []$/;"	v
s:ft	pack/plugins/start/sheerun-vim-polyglot/syntax/c.vim	/^let s:ft = matchstr(&ft, '^\\([^.]\\)\\+')$/;"	v
s:fullscreen	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/vim.vim	/^let s:fullscreen = 0$/;"	v
s:funcNameMatcher	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^let s:funcNameMatcher = '\\w\\+'$/;"	v
s:fzf_go	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^let s:fzf_go = expand('<sfile>:h:h').'\/bin\/fzf'$/;"	v
s:fzf_tmux	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^let s:fzf_tmux = expand('<sfile>:h:h').'\/bin\/fzf-tmux'$/;"	v
s:git_versions	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:globpath_third_arg	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^let s:globpath_third_arg = v:version > 702 || v:version == 702 && has('patch51')$/;"	v
s:go_decls_var	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^let s:go_decls_var = {$/;"	v
s:go_stack	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^let s:go_stack = []$/;"	v
s:go_stack_level	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^let s:go_stack_level = 0$/;"	v
s:goarch	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goarch = '*'$/;"	v
s:goarch	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goarch = g:golang_goarch$/;"	v
s:goarch	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^let s:goarch = $GOARCH$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goos = '*'$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goos = 'darwin'$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goos = 'windows'$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goos = g:golang_goos$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^let s:goos = $GOOS$/;"	v
s:got_fmt_error	pack/plugins/start/fatih-vim-go/autoload/go/asmfmt.vim	/^let s:got_fmt_error = 0$/;"	v
s:got_fmt_error	pack/plugins/start/sheerun-vim-polyglot/autoload/rustfmt.vim	/^let s:got_fmt_error = 0$/;"	v
s:handlers	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^let s:handlers = {}$/;"	v
s:hash_colors	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:htmlIndentExpr	pack/plugins/start/sheerun-vim-polyglot/after/indent/html.vim	/^let s:htmlIndentExpr = &l:indentexpr$/;"	v
s:html_indent_tags	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^let s:html_indent_tags = '[a-z_][a-z0-9_.-]*'$/;"	v
s:html_noindent_tags	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^    let s:html_noindent_tags = s:html_noindent_tags.'\\|'.join(g:html_exclude_tags, '\\|')$/;"	v
s:html_noindent_tags	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^let s:html_noindent_tags = join(s:no_tags, '\\|')$/;"	v
s:htmlindent	pack/plugins/start/sheerun-vim-polyglot/indent/blade.vim	/^let s:htmlindent = &indentexpr$/;"	v
s:i	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:i = 0              " Index of the current completion method in the completion chain$/;"	v
s:i	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  let s:i = g:omlet_indent_struct$/;"	v
s:i	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  let s:i = matchstr(s:m,'\\d\\+')$/;"	v
s:i	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  let s:i = s:idef$/;"	v
s:i_history	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:i_history = []     " To detect loops when using <c-h>\/<c-l>$/;"	v
s:id	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id_counter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Object.vim	/^let s:id_counter = 0$/;"	v
s:idef	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  let s:idef = 2$/;"	v
s:idef	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  let s:idef = g:omlet_indent$/;"	v
s:idef	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  let s:idef = matchstr(s:m,'\\d\\+')$/;"	v
s:incIndent	pack/plugins/start/sheerun-vim-polyglot/indent/plantuml.vim	/^let s:incIndent =$/;"	v
s:indent_access_modifier_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:indent_access_modifier_regex = '\\C^\\s*\\%(protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:indent_if_final	pack/plugins/start/sheerun-vim-polyglot/indent/elm.vim	/^let s:indent_if_final = ['=', 'do', '->', 'of', 'where']$/;"	v
s:indent_keywords	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^let s:indent_keywords = '\\<'.s:no_colon_before.'\\%('.s:block_start.'\\|'.s:block_middle.'\\)$'.'\\|'.s:arrow$/;"	v
s:indent_next	pack/plugins/start/sheerun-vim-polyglot/indent/elm.vim	/^let s:indent_next = ['let', 'in', 'where', 'do', 'if']$/;"	v
s:indent_self	pack/plugins/start/sheerun-vim-polyglot/indent/elm.vim	/^let s:indent_self = ['=']$/;"	v
s:initial_go_path	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^let s:initial_go_path = ""$/;"	v
s:install	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^let s:install = expand('<sfile>:h:h').'\/install'$/;"	v
s:installed	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^let s:installed = 0$/;"	v
s:invalid	pack/plugins/start/wellle-targets-vim/autoload/targets/state.vim	/^let s:invalid = 0$/;"	v
s:is_cygwin	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_dark	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:is_dark=(&background == 'dark')$/;"	v
s:is_mac	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_unix	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_windows	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:iskeyword_save	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^let s:iskeyword_save = &iskeyword$/;"	v
s:jobs	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^let s:jobs = {}$/;"	v
s:jobs	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^let s:jobs = {}$/;"	v
s:js_keywords	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:js_keywords = '^\\s*\\(break\\|case\\|catch\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|finally\\|for\\|function\\|if\\|in\\|instanceof\\|new\\|return\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\)'$/;"	v
s:jsindent	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^let s:jsindent = &indentexpr$/;"	v
s:jsx_pragma_pattern	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^  let s:jsx_pragma_pattern = '\\%^\\_s*\\\/\\*\\*\\%(\\_.\\%(\\*\\\/\\)\\@!\\)*@jsx\\_.\\{-}\\*\\\/'$/;"	v
s:keepcpo	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	pack/plugins/start/sheerun-vim-polyglot/syntax/cucumber.vim	/^let s:keepcpo= &cpo$/;"	v
s:key_value	pack/plugins/start/sheerun-vim-polyglot/indent/ansible.vim	/^let s:key_value = '\\v^\\s*[^:-]+:\\s*\\S' " apt: name=package$/;"	v
s:known_files	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^let s:known_files = []$/;"	v
s:known_projects	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^let s:known_projects = {}$/;"	v
s:last_changedtick	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^let s:last_changedtick = -1$/;"	v
s:last_saved_list	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^let s:last_saved_list = ''$/;"	v
s:last_status	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^let s:last_status = ""$/;"	v
s:laststatus	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/progressbar.vim	/^let s:laststatus = []$/;"	v
s:launcher	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^let s:launcher = function('s:xterm_launcher')$/;"	v
s:layout_keys	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^let s:layout_keys = ['window', 'up', 'down', 'left', 'right']$/;"	v
s:layout_keys	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^let s:layout_keys = ['window', 'up', 'down', 'left', 'right']$/;"	v
s:leading_operator_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:leading_operator_regex = '^\\s*[.]'$/;"	v
s:leading_operator_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:leading_operator_regex = '^\\s*[.]'$/;"	v
s:letlim	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^let s:letlim = '\\(\\<\\(sig\\|struct\\)\\|;;\\)\\s*$'$/;"	v
s:letpat	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^let s:letpat = '^\\s*\\(let\\|type\\|module\\|class\\|open\\|exception\\|val\\|include\\|external\\)\\>'$/;"	v
s:lim	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^let s:lim = '^\\s*\\(exception\\|external\\|include\\|let\\|module\\|open\\|type\\|val\\)\\>'$/;"	v
s:line_pre	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^let s:line_pre = '^\\s*\\%(\\%(\\%(\\\/\\*.\\{-}\\)\\=\\*\\+\\\/\\s*\\)\\=\\)\\@>'$/;"	v
s:line_term	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\%(\\%(\\*.\\{-}\\*\\\/\\)\\|\\%(\\*\\+\\)\\)\\)\\s*\\)\\=$'$/;"	v
s:line_term	pack/plugins/start/sheerun-vim-polyglot/indent/json.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:line_term	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:line_term	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:lines	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	pack/plugins/start/sheerun-vim-polyglot/syntax/ragel.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:lines = deepcopy(s:words)$/;"	v
s:lines	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:lines.description = 'lines in the current tmux session'$/;"	v
s:lines	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:lines.name = 'tmuxcomplete\/lines'$/;"	v
s:list_close_pat	pack/plugins/start/sheerun-vim-polyglot/indent/tex.vim	/^let s:list_close_pat	= '\\\\\\@<!\\\\end{\\%(' . join(s:list_envs, '\\|') . '\\)}'$/;"	v
s:list_envs	pack/plugins/start/sheerun-vim-polyglot/indent/tex.vim	/^let s:list_envs = ['itemize', 'enumerate', 'description']$/;"	v
s:list_open_pat	pack/plugins/start/sheerun-vim-polyglot/indent/tex.vim	/^let s:list_open_pat = '\\\\\\@<!\\\\begin{\\%(' . join(s:list_envs, '\\|') . '\\)}'$/;"	v
s:loaded	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^let s:loaded = {}$/;"	v
s:local_manifest	pack/plugins/start/sheerun-vim-polyglot/compiler/cargo.vim	/^    let s:local_manifest = fnamemodify(s:local_manifest, ':p:h').'\/'$/;"	v
s:local_manifest	pack/plugins/start/sheerun-vim-polyglot/compiler/cargo.vim	/^let s:local_manifest = findfile(s:cargo_manifest_name, '.;')$/;"	v
s:m	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let s:m = matchstr(s:modeline,'default\\s*=\\s*\\d\\+')$/;"	v
s:m	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let s:m = matchstr(s:modeline,'struct\\s*=\\s*\\d\\+')$/;"	v
s:map_prefix	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^let s:map_prefix = get(g:, 'tmuxify_map_prefix', '<leader>m')$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^let s:match_words = ""$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^let s:match_words = ""$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^let s:match_words = ""$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/pug.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/pug.vim	/^let s:match_words = ""$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/stylus.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/stylus.vim	/^let s:match_words = ""$/;"	v
s:max	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/progressbar.vim	/^let s:max = []$/;"	v
s:maxmarks	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/label.vim	/^let s:maxmarks = sneak#util#strlen(g:sneak#target_labels)$/;"	v
s:maxoff	pack/plugins/start/sheerun-vim-polyglot/indent/python.vim	/^let s:maxoff = 50$/;"	v
s:maybe_in_progress	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^    let s:maybe_in_progress[module] = {}$/;"	v
s:maybe_in_progress	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^let s:maybe_in_progress = {}$/;"	v
s:middle_patt	pack/plugins/start/sheerun-vim-polyglot/indent/lua.vim	/^let s:middle_patt = '\\<\\%(else\\|elseif\\)\\>'$/;"	v
s:mode	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let s:mode = s:MODE_16_COLOR$/;"	v
s:mode	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let s:mode = s:MODE_256_COLOR$/;"	v
s:mode	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let s:mode = s:MODE_TRUE_COLOR$/;"	v
s:modeline	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  let s:modeline = ""$/;"	v
s:modeline	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  let s:modeline = getline(".")$/;"	v
s:module	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^let s:module = '\\<\\%(begin\\|sig\\|struct\\|object\\)\\>'$/;"	v
s:molokai_original	pack/colors/start/tomasr-molokai/colors/molokai.vim	/^    let s:molokai_original = 0$/;"	v
s:molokai_original	pack/colors/start/tomasr-molokai/colors/molokai.vim	/^    let s:molokai_original = g:molokai_original$/;"	v
s:msl_regex	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:msl_regex = '\\%([\\\\*+\/.:([]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)' . s:line_term$/;"	v
s:msl_regex	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:msl_regex = s:continuation_regex$/;"	v
s:named_lists	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^let s:named_lists = {}$/;"	v
s:named_module_entry	pack/plugins/start/sheerun-vim-polyglot/indent/ansible.vim	/^let s:named_module_entry = '\\v^\\s*-\\s*(name|hosts|role):\\s*\\S' " - name: 'do stuff'$/;"	v
s:native_filenames	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^let s:native_filenames = {}$/;"	v
s:nbs	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^let s:nbs = nr2char(0x2007)$/;"	v
s:need_trans	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:netrw_up	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^let s:netrw_up = ''$/;"	v
s:no_colon_after	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^let s:no_colon_after = ':\\@!'$/;"	v
s:no_colon_before	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^let s:no_colon_before = ':\\@<!'$/;"	v
s:no_tags	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^let s:no_tags = []$/;"	v
s:non_bracket_continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:non_bracket_continuation_regex = '\\%([\\\\.,:*\/%+]\\|\\<and\\|\\<or\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:non_bracket_continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:non_bracket_continuation_regex =$/;"	v
s:nonempty	pack/plugins/start/wellle-targets-vim/autoload/targets/state.vim	/^let s:nonempty = 2$/;"	v
s:notbslash	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^let s:notbslash = '\\%(\\\\\\@<!\\%(\\\\\\\\\\)*\\)\\@<='$/;"	v
s:notcomment	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^let s:notcomment = '\\%(\\%(\\\\\\@<!\\%(\\\\\\\\\\)*\\)\\@<=%.*\\)\\@<!'$/;"	v
s:obj	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^let s:obj = '^\\s*\\(constraint\\|inherit\\|initializer\\|method\\|val\\)\\>\\|\\<\\(object\\|object\\s*(.*)\\)\\s*$'$/;"	v
s:object	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:object = {}$/;"	v
s:old_style	pack/plugins/start/sheerun-vim-polyglot/syntax/erlang.vim	/^let s:old_style = (exists("g:erlang_old_style_highlight") &&$/;"	v
s:omittable	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^let s:omittable = [ $/;"	v
s:one_line_scope_regex	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:one_line_scope_regex = '\\<\\%(if\\|else\\|for\\|while\\)\\>[^{;]*' . s:line_term$/;"	v
s:one_line_scope_regex	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:one_line_scope_regex = '\\<\\%(if\\|else\\|for\\|while\\)\\>[^{;]*' . s:line_term$/;"	v
s:oneline	pack/plugins/start/sheerun-vim-polyglot/syntax/markdown.vim	/^    let s:oneline = ' oneline'$/;"	v
s:oneline	pack/plugins/start/sheerun-vim-polyglot/syntax/markdown.vim	/^    let s:oneline = ''$/;"	v
s:open_pat	pack/plugins/start/sheerun-vim-polyglot/indent/tex.vim	/^let s:open_pat = '\\\\\\@<!\\%(\\\\begin\\|\\\\left\\a\\@!\\|\\\\(\\|\\\\\\[\\|{\\)'$/;"	v
s:open_patt	pack/plugins/start/sheerun-vim-polyglot/indent/lua.vim	/^let s:open_patt = '\\%(\\<\\%(function\\|if\\|repeat\\|do\\)\\>\\|(\\|{\\)'$/;"	v
s:optionsEnabled	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^let s:optionsEnabled = 0$/;"	v
s:packages	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^let s:packages = [$/;"	v
s:pair_end	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^let s:pair_end = '\\<\\%('.s:no_colon_before.s:block_end.'\\)\\>\\zs'$/;"	v
s:pair_middle	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^let s:pair_middle = '^\\s*\\%('.s:block_middle.'\\)\\>'.s:no_colon_after.'\\zs'$/;"	v
s:pair_start	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^let s:pair_start = '\\<\\%('.s:no_colon_before.s:block_start.'\\)\\>'.s:no_colon_after$/;"	v
s:palette	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^    let s:palette = s:selected_theme['dark'].palette$/;"	v
s:palette	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^    let s:palette = s:selected_theme['light'].palette$/;"	v
s:pat	pack/plugins/start/sheerun-vim-polyglot/compiler/coffee.vim	/^let s:pat = '^' . current_compiler$/;"	v
s:pat	pack/plugins/start/sheerun-vim-polyglot/compiler/ls.vim	/^let s:pat = '^' . current_compiler$/;"	v
s:pathsep	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:pathsep = exists('+shellslash') && !&shellslash ? '\\\\' : '\/'$/;"	v
s:pathsep	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^let s:pathsep = exists('+shellslash') && !&shellslash ? '\\\\' : '\/'$/;"	v
s:phpindent	pack/plugins/start/sheerun-vim-polyglot/indent/blade.vim	/^let s:phpindent = &indentexpr$/;"	v
s:pre_less_cur_syn	pack/plugins/start/sheerun-vim-polyglot/after/syntax/html.vim	/^   let s:pre_less_cur_syn = b:current_syntax$/;"	v
s:property	pack/plugins/start/sheerun-vim-polyglot/indent/sass.vim	/^let s:property = '^\\s*:\\|^\\s*[[:alnum:]#{}-]\\+\\%(:\\|\\s*=\\)'$/;"	v
s:prototype	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_cnf.vim	/^let s:prototype = tlib#Object#New({'_class': ['Filter_cnf'], 'name': 'cnf'}) "{{{2$/;"	v
s:prototype	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_cnf.vim	/^let s:prototype.highlight = g:tlib#input#higroup$/;"	v
s:prototype	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_cnfd.vim	/^let s:prototype = tlib#Filter_cnf#New({'_class': ['Filter_cnfd'], 'name': 'cnfd'}) "{{{2$/;"	v
s:prototype	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_cnfd.vim	/^let s:prototype.highlight = g:tlib#input#higroup$/;"	v
s:prototype	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_fuzzy.vim	/^let s:prototype = tlib#Filter_cnf#New({'_class': ['Filter_fuzzy'], 'name': 'fuzzy'}) "{{{2$/;"	v
s:prototype	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_fuzzy.vim	/^let s:prototype.highlight = g:tlib#input#higroup$/;"	v
s:prototype	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_glob.vim	/^let s:prototype = tlib#Filter_cnf#New({'_class': ['Filter_glob'], 'name': 'glob'}) "{{{2$/;"	v
s:prototype	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_glob.vim	/^let s:prototype.highlight = g:tlib#input#higroup$/;"	v
s:prototype	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Object.vim	/^let s:prototype  = {'_class': ['object'], '_super': [], '_id': 0} "{{{2$/;"	v
s:prototype	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Test.vim	/^let s:prototype = tlib#Object#New({'_class': ['Test']}) "{{{2$/;"	v
s:prototype	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/TestChild.vim	/^let s:prototype = tlib#Test#New({'_class': ['TestChild']}) "{{{2$/;"	v
s:prototype	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^let s:prototype = tlib#Object#New({$/;"	v
s:ps1xml_cpo_save	pack/plugins/start/sheerun-vim-polyglot/syntax/ps1xml.vim	/^let s:ps1xml_cpo_save = &cpo$/;"	v
s:pumvisible	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:pumvisible = 0     " Has the pop-up menu become visible?$/;"	v
s:quickfix_open	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	let s:quickfix_open = 0$/;"	v
s:radix_chars	pack/plugins/start/sheerun-vim-polyglot/syntax/clojure.vim	/^let s:radix_chars = "0123456789abcdefghijklmnopqrstuvwxyz"$/;"	v
s:register	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/signs.vim	/^let s:register = {}$/;"	v
s:repo_prototype	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:repos = {}$/;"	v
s:restoreframecmd	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/vim.vim	/^let s:restoreframecmd = ''$/;"	v
s:returnTypeMatcher	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^let s:returnTypeMatcher = '\\%(:\\s*\\w\\+' . s:typeSpecMatcher . '\\?\\)'$/;"	v
s:ruby_deindent_keywords	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:ruby_deindent_keywords =$/;"	v
s:ruby_indent_keywords	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:ruby_indent_keywords =$/;"	v
s:ruby_path	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_path = s:build_path(s:ruby_paths)$/;"	v
s:ruby_path	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_path = type(g:ruby_path) == type([]) ? join(g:ruby_path, ',') : g:ruby_path$/;"	v
s:ruby_paths	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_default_path$/;"	v
s:ruby_paths	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_version_paths[b:ruby_version]$/;"	v
s:rubycomplete_debug	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^let s:rubycomplete_debug = 0$/;"	v
s:rubycomplete_rails_loaded	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^let s:rubycomplete_rails_loaded = 0$/;"	v
s:runner_exe	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^let s:runner_exe = gutentags#get_plat_file('update_scopedb')$/;"	v
s:runner_exe	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let s:runner_exe = gutentags#get_plat_file('update_tags')$/;"	v
s:running_windows	vimrc	/^let s:running_windows=has("win16") || has("win32") || has("win64")$/;"	v
s:s	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let s:s = line2byte(line('.'))+col('.')-1$/;"	v
s:save_cpo	pack/plugins/start/fatih-vim-go/compiler/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/path.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/spel.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/after/indent/objc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/compiler/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/ftplugin/perl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/ftplugin/pug.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/ftplugin/stylus.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/ftplugin/toml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/indent/ansible.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/map.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/normal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/notify.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/paragraph.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/signs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/textobjects.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/tomtom-tlib-vim/macros/tlib.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/tomtom-tlib-vim/plugin/02tlib.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/tomtom-tlib-vim/spec/tlib/arg.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/tomtom-tlib-vim/spec/tlib/dictionary.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/tomtom-tlib-vim/spec/tlib/eval.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/tomtom-tlib-vim/spec/tlib/file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/tomtom-tlib-vim/spec/tlib/input.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/tomtom-tlib-vim/spec/tlib/list.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/tomtom-tlib-vim/spec/tlib/rx.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/tomtom-tlib-vim/spec/tlib/string.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/tomtom-tlib-vim/spec/tlib/url.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/tomtom-tlib-vim/spec/tlib/var.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/tomtom-ttags-vim/plugin/ttags.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplcache/sources/tmuxcomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplete/sources/tmuxcomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpoptions	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^let s:save_cpoptions = &cpoptions$/;"	v
s:save_cpoptions	pack/plugins/start/wellle-targets-vim/plugin/targets.vim	/^let s:save_cpoptions = &cpoptions$/;"	v
s:scalar_value	pack/plugins/start/sheerun-vim-polyglot/indent/ansible.vim	/^let s:scalar_value = '\\v:\\s*[>|\\|]\\s*$' " shell: >$/;"	v
s:schemas	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/type.vim	/^let s:schemas = {}$/;"	v
s:script	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^let s:script = expand('<sfile>:h:h') . "\/sh\/tmuxcomplete"$/;"	v
s:script_path	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:script_path = fnamemodify(resolve(expand('<sfile>:p')), ':h')$/;"	v
s:scriptfile	pack/plugins/start/tomtom-tlib-vim/spec/tlib/hash.vim	/^    let s:scriptfile = matchstr(s:script, '^\\s*\\d\\+:\\s\\+\\zs.*$')$/;"	v
s:scriptlines	pack/plugins/start/tomtom-tlib-vim/spec/tlib/hash.vim	/^        let s:scriptlines = readfile(s:scriptfile)$/;"	v
s:select_entry	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:select_entry = { 'c-p' : "\\<c-p>", 'keyp': "\\<c-p>" }$/;"	v
s:selected_theme	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let s:selected_theme = s:themes[g:PaperColor_Theme]$/;"	v
s:selected_theme	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:selected_theme = s:themes['default'] " default$/;"	v
s:self_file	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^let s:self_file = expand('<sfile>')$/;"	v
s:self_version	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:skipPatterns	pack/plugins/start/sheerun-vim-polyglot/indent/julia.vim	/^let s:skipPatterns = '\\<julia\\%(Comment\\)\\>'$/;"	v
s:skip_expr	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:skip_expr =$/;"	v
s:skip_expr	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),0),'name') =~? '".s:syng_strcom."'"$/;"	v
s:skip_expr	pack/plugins/start/sheerun-vim-polyglot/indent/lua.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ 'luaComment\\\\|luaString'"$/;"	v
s:skip_expr	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:skip_expr =$/;"	v
s:skip_expr	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ '".s:syng_strcom."'"$/;"	v
s:skip_expr	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ '".s:syng_strcom."'"$/;"	v
s:skip_syntax	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^let s:skip_syntax = '\\%(Comment\\|String\\)$'$/;"	v
s:sock_type	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^let s:sock_type = (has('win32') || has('win64')) ? 'tcp' : 'unix'$/;"	v
s:source	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplcache/sources/tmuxcomplete.vim	/^let s:source = {$/;"	v
s:source	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplete/sources/tmuxcomplete.vim	/^let s:source = {$/;"	v
s:spell_cluster	pack/plugins/start/sheerun-vim-polyglot/syntax/ruby.vim	/^let s:spell_cluster = exists('ruby_spellcheck_strings') ? ',@Spell' : ''$/;"	v
s:splat_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:splat_regex = '[[,(]\\s*\\*\\s*\\%(#.*\\)\\=$'$/;"	v
s:splat_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:splat_regex = '[[,(]\\s*\\*\\s*\\%(#.*\\)\\=$'$/;"	v
s:st	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^let s:st = { 'rst':1, 'input':'', 'inputlen':0, 'reverse':0, 'bounds':[0,0], 'inclusive':0 }$/;"	v
s:st	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2.vim	/^        let s:st = strpart(s:str,0,stridx(s:str,' '))$/;"	v
s:starts_with_pipeline	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^let s:starts_with_pipeline = '^\\s*|>.*$'$/;"	v
s:state	pack/plugins/start/tomtom-tlib-vim/samples/tlib/input/tlib_input_list.vim	/^let s:state = {$/;"	v
s:statuses	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^let s:statuses = {}$/;"	v
s:statusline	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/progressbar.vim	/^let s:statusline = []$/;"	v
s:str	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2.vim	/^        let s:str = substitute(s:str,'[^ ]* ','',"")$/;"	v
s:str	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2.vim	/^    let s:str = b:tt2_syn_tags . ' '$/;"	v
s:str	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2.vim	/^    let s:str = substitute(s:str,' \\+',' ','g')$/;"	v
s:str	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2.vim	/^    let s:str = substitute(s:str,'^ \\+','','g')$/;"	v
s:subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^  let s:subtype = exists('b:liquid_subtype') ? b:liquid_subtype : ''$/;"	v
s:symbols_end	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^let s:symbols_end = '\\]\\|}\\|)'$/;"	v
s:symbols_start	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^let s:symbols_start = '\\[\\|{\\|('$/;"	v
s:syng_comment	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^let s:syng_comment = '\\%(comment\\|doc\\)'$/;"	v
s:syng_linecom	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:syng_linecom = 'linecomment\\c'$/;"	v
s:syng_linecom	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:syng_linecom = 'linecomment\\c'$/;"	v
s:syng_multiline	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:syng_multiline = 'comment\\c'$/;"	v
s:syng_multiline	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:syng_multiline = 'comment\\c'$/;"	v
s:syng_strcom	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:syng_strcom = '\\<crystal\\%(Regexp\\|RegexpDelimiter\\|RegexpEscape' .$/;"	v
s:syng_strcom	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^let s:syng_strcom = '\\%(s\\%(tring\\|pecial\\)\\|comment\\|regex\\|doc\\|template\\)'$/;"	v
s:syng_strcom	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:syng_strcom = '\\<ruby\\%(Regexp\\|RegexpDelimiter\\|RegexpEscape' .$/;"	v
s:syng_strcom	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:syng_strcom = 'string\\|regex\\|comment\\c'$/;"	v
s:syng_strcom	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:syng_strcom = 'string\\|regex\\|comment\\c'$/;"	v
s:syng_string	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:syng_string =$/;"	v
s:syng_string	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:syng_string =$/;"	v
s:syng_string	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:syng_string = 'regex\\c'$/;"	v
s:syng_string	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:syng_string = 'regex\\c'$/;"	v
s:syng_stringdoc	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:syng_stringdoc =$/;"	v
s:syng_stringdoc	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:syng_stringdoc =$/;"	v
s:tag	pack/plugins/start/sheerun-vim-polyglot/indent/haml.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag	pack/plugins/start/sheerun-vim-polyglot/indent/pug.vim	/^let s:tag = '\\([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag	pack/plugins/start/sheerun-vim-polyglot/indent/slim.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tags	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^let s:tags = []$/;"	v
s:tags	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^let s:tags = {}$/;"	v
s:temp_files	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:ternary	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:ternary = '^\\s\\+[?|:]'$/;"	v
s:ternary	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:ternary = '^\\s\\+[?|:]'$/;"	v
s:ternary_q	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:ternary_q = '^\\s\\+?'$/;"	v
s:ternary_q	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:ternary_q = '^\\s\\+?'$/;"	v
s:test_compile_handlers	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^let s:test_compile_handlers = {}$/;"	v
s:themes	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:themes = {}$/;"	v
s:themes	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:themes['default'] = {$/;"	v
s:themes	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:themes['default'].dark = {$/;"	v
s:themes	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:themes['default'].light = {$/;"	v
s:timer_id	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^let s:timer_id = 0$/;"	v
s:timestamp	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/progressbar.vim	/^let s:timestamp = -1$/;"	v
s:timestamps	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cache.vim	/^let s:timestamps = {}$/;"	v
s:to_HEX	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:to_HEX = { $/;"	v
s:toggle	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^let s:toggle = 0$/;"	v
s:topLev	pack/plugins/start/sheerun-vim-polyglot/after/indent/objc.vim	/^let s:topLev = '^\\s*@\\%(class\\|end\\|implementation\\|interface\\|protocol\\|\\)\\>'$/;"	v
s:ts_keywords	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:ts_keywords = '^\\s*\\(break\\|case\\|catch\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|finally\\|for\\|function\\|if\\|in\\|instanceof\\|new\\|return\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\)'$/;"	v
s:type	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^let s:type = '^\\s*\\%(class\\|let\\|type\\)\\>.*='$/;"	v
s:typeSpecMatcher	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^let s:typeSpecMatcher = '\\%(\\s*\\[\\_[^\\]]*\\]\\)'$/;"	v
s:type_length	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^let s:type_length=0$/;"	v
s:uname	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^      let s:uname = system('echo -n $(uname -s)')$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/pug.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/pug.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/stylus.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/stylus.vim	/^let s:undo_ftplugin = ""$/;"	v
s:unix_redir	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:update_queue	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^    let s:update_queue[module] = []$/;"	v
s:update_queue	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^let s:update_queue = {}$/;"	v
s:vala_cpo_save	pack/plugins/start/sheerun-vim-polyglot/syntax/vala.vim	/^let s:vala_cpo_save = &cpo$/;"	v
s:value	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/progressbar.vim	/^let s:value = []$/;"	v
s:var_stmt	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:var_stmt = '^\\s*var'$/;"	v
s:var_stmt	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:var_stmt = '^\\s*var'$/;"	v
s:version_file	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  let s:version_file = findfile('.ruby-version', '.;')$/;"	v
s:viewer	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^		  let s:viewer = 'open'$/;"	v
s:viewer	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^		  let s:viewer = 'xdg-open'$/;"	v
s:viewer	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^	let s:viewer = ''$/;"	v
s:which_bin	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^let s:which_bin = executable('ruby') ? '\/bin\/preview.rb' : '\/bin\/preview.sh'$/;"	v
s:width	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/progressbar.vim	/^let s:width = []$/;"	v
s:win_sep	pack/plugins/start/sheerun-vim-polyglot/ftplugin/dart.vim	/^let s:win_sep = (has('win32') || has('win64')) ? '\/' : ''$/;"	v
s:words	pack/plugins/start/sheerun-vim-polyglot/autoload/clojurecomplete.vim	/^let s:words = ["*","*'","*1","*2","*3","*agent*","*allow-unresolved-vars*","*assert*","*clojure-version*","*command-line-args*","*compile-files*","*compile-path*","*compiler-options*","*data-readers*","*default-data-reader-fn*","*e","*err*","*file*","*flush-on-newline*","*fn-loader*","*in*","*math-context*","*ns*","*out*","*print-dup*","*print-length*","*print-level*","*print-meta*","*print-readably*","*read-eval*","*source-path*","*suppress-read*","*unchecked-math*","*use-context-classloader*","*verbose-defrecords*","*warn-on-reflection*","+","+'","-","-'","->","->>","->ArrayChunk","->Eduction","->Vec","->VecNode","->VecSeq","-cache-protocol-fn","-reset-methods",".","..","\/","<","<=","=","==",">",">=","EMPTY-NODE","Throwable->map","accessor","aclone","add-classpath","add-watch","agent","agent-error","agent-errors","aget","alength","alias","all-ns","alter","alter-meta!","alter-var-root","amap","ancestors","and","apply","areduce","array-map","as->","aset","aset-boolean","aset-byte","aset-char","aset-double","aset-float","aset-int","aset-long","aset-short","assert","assoc!","assoc","assoc-in","associative?","atom","await","await-for","await1","bases","bean","bigdec","bigint","biginteger","binding","bit-and","bit-and-not","bit-clear","bit-flip","bit-not","bit-or","bit-set","bit-shift-left","bit-shift-right","bit-test","bit-xor","boolean","boolean-array","booleans","bound-fn","bound-fn*","bound?","butlast","byte","byte-array","bytes","case","cast","cat","catch","char","char-array","char-escape-string","char-name-string","char?","chars","chunk","chunk-append","chunk-buffer","chunk-cons","chunk-first","chunk-next","chunk-rest","chunked-seq?","class","class?","clear-agent-errors","clojure-version","coll?","comment","commute","comp","comparator","compare","compare-and-set!","compile","complement","completing","concat","cond","cond->","cond->>","condp","conj!","conj","cons","constantly","construct-proxy","contains?","count","counted?","create-ns","create-struct","cycle","dec","dec'","decimal?","declare","dedupe","def","default-data-readers","definline","definterface","defmacro","defmethod","defmulti","defn","defn-","defonce","defprotocol","defrecord","defstruct","deftype","delay","delay?","deliver","denominator","deref","derive","descendants","destructure","disj!","disj","dissoc!","dissoc","distinct","distinct?","do","doall","dorun","doseq","dosync","dotimes","doto","double","double-array","doubles","drop","drop-last","drop-while","eduction","empty","empty?","ensure","ensure-reduced","enumeration-seq","error-handler","error-mode","eval","even?","every-pred","every?","ex-data","ex-info","extend","extend-protocol","extend-type","extenders","extends?","false?","ffirst","file-seq","filter","filterv","finally","find","find-keyword","find-ns","find-protocol-impl","find-protocol-method","find-var","first","flatten","float","float-array","float?","floats","flush","fn","fn","fn?","fnext","fnil","for","force","format","frequencies","future","future-call","future-cancel","future-cancelled?","future-done?","future?","gen-class","gen-interface","gensym","get","get-in","get-method","get-proxy-class","get-thread-bindings","get-validator","group-by","hash","hash-combine","hash-map","hash-ordered-coll","hash-set","hash-unordered-coll","identical?","identity","if","if-let","if-not","if-some","ifn?","import","in-ns","inc","inc'","init-proxy","instance?","int","int-array","integer?","interleave","intern","interpose","into","into-array","ints","io!","isa?","iterate","iterator-seq","juxt","keep","keep-indexed","key","keys","keyword","keyword?","last","lazy-cat","lazy-seq","let","let","letfn","line-seq","list","list*","list?","load","load-file","load-reader","load-string","loaded-libs","locking","long","long-array","longs","loop","loop","macroexpand","macroexpand-1","make-array","make-hierarchy","map","map-entry?","map-indexed","map?","mapcat","mapv","max","max-key","memfn","memoize","merge","merge-with","meta","method-sig","methods","min","min-key","mix-collection-hash","mod","monitor-enter","monitor-exit","munge","name","namespace","namespace-munge","neg?","new","newline","next","nfirst","nil?","nnext","not","not-any?","not-empty","not-every?","not=","ns","ns-aliases","ns-imports","ns-interns","ns-map","ns-name","ns-publics","ns-refers","ns-resolve","ns-unalias","ns-unmap","nth","nthnext","nthrest","num","number?","numerator","object-array","odd?","or","parents","partial","partition","partition-all","partition-by","pcalls","peek","persistent!","pmap","pop!","pop","pop-thread-bindings","pos?","pr","pr-str","prefer-method","prefers","primitives-classnames","print","print-ctor","print-dup","print-method","print-simple","print-str","printf","println","println-str","prn","prn-str","promise","proxy","proxy-call-with-super","proxy-mappings","proxy-name","proxy-super","push-thread-bindings","pvalues","quot","quote","rand","rand-int","rand-nth","random-sample","range","ratio?","rational?","rationalize","re-find","re-groups","re-matcher","re-matches","re-pattern","re-seq","read","read-line","read-string","reader-conditional","reader-conditional?","realized?","record?","recur","reduce","reduce-kv","reduced","reduced?","reductions","ref","ref-history-count","ref-max-history","ref-min-history","ref-set","refer","refer-clojure","reify","release-pending-sends","rem","remove","remove-all-methods","remove-method","remove-ns","remove-watch","repeat","repeatedly","replace","replicate","require","reset!","reset-meta!","resolve","rest","restart-agent","resultset-seq","reverse","reversible?","rseq","rsubseq","run!","satisfies?","second","select-keys","send","send-off","send-via","seq","seq?","seque","sequence","sequential?","set!","set","set-agent-send-executor!","set-agent-send-off-executor!","set-error-handler!","set-error-mode!","set-validator!","set?","short","short-array","shorts","shuffle","shutdown-agents","slurp","some","some->","some->>","some-fn","some?","sort","sort-by","sorted-map","sorted-map-by","sorted-set","sorted-set-by","sorted?","special-symbol?","spit","split-at","split-with","str","string?","struct","struct-map","subs","subseq","subvec","supers","swap!","symbol","symbol?","sync","tagged-literal","tagged-literal?","take","take-last","take-nth","take-while","test","the-ns","thread-bound?","throw","time","to-array","to-array-2d","trampoline","transduce","transient","tree-seq","true?","try","type","unchecked-add","unchecked-add-int","unchecked-byte","unchecked-char","unchecked-dec","unchecked-dec-int","unchecked-divide-int","unchecked-double","unchecked-float","unchecked-inc","unchecked-inc-int","unchecked-int","unchecked-long","unchecked-multiply","unchecked-multiply-int","unchecked-negate","unchecked-negate-int","unchecked-remainder-int","unchecked-short","unchecked-subtract","unchecked-subtract-int","underive","unquote","unquote-splicing","unreduced","unsigned-bit-shift-right","update","update-in","update-proxy","use","val","vals","var","var-get","var-set","var?","vary-meta","vec","vector","vector-of","vector?","volatile!","volatile?","vreset!","vswap!","when","when-first","when-let","when-not","when-some","while","with-bindings","with-bindings*","with-in-str","with-loading-context","with-local-vars","with-meta","with-open","with-out-str","with-precision","with-redefs","with-redefs-fn","xml-seq","zero?","zipmap"]$/;"	v
s:words	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:words = {$/;"	v
s:worktree_for_dir	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:worktree_for_dir = {}$/;"	v
s:yes_you_can	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  let s:yes_you_can = function('mucomplete#compat#yes_you_can')$/;"	v
s:yes_you_can	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  let s:yes_you_can = { _ -> 1 } " Try always$/;"	v
same_ids_highlight	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:same_ids_highlight(exit_val, output) abort$/;"	f
scala#ConditionalConfirm	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#ConditionalConfirm(msg)$/;"	f
scala#CountBrackets	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#CountBrackets(line, openBracket, closedBracket)$/;"	f
scala#CountCurlies	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#CountCurlies(line)$/;"	f
scala#CountParens	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#CountParens(line)$/;"	f
scala#CurlyMatcher	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#CurlyMatcher()$/;"	f
scala#GetDirForFuzzyFinder	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetDirForFuzzyFinder(from, addon)$/;"	f
scala#GetLine	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#GetLine(lnum)$/;"	f
scala#GetLineAndColumnThatMatchesBracket	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesBracket(openBracket, closedBracket)$/;"	f
scala#GetLineAndColumnThatMatchesCurly	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesCurly()$/;"	f
scala#GetLineAndColumnThatMatchesParen	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesParen()$/;"	f
scala#GetLineThatMatchesBracket	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#GetLineThatMatchesBracket(openBracket, closedBracket)$/;"	f
scala#GetLineThatMatchesCurly	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#GetLineThatMatchesCurly()$/;"	f
scala#GetLineThatMatchesParen	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#GetLineThatMatchesParen()$/;"	f
scala#GetMainDirForFuzzyFinder	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetMainDirForFuzzyFinder(from)$/;"	f
scala#GetPrevCodeLine	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#GetPrevCodeLine(lnum)$/;"	f
scala#GetRootDirForFuzzyFinder	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetRootDirForFuzzyFinder(from)$/;"	f
scala#GetTestDirForFuzzyFinder	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetTestDirForFuzzyFinder(from)$/;"	f
scala#InvertBracketType	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#InvertBracketType(openBracket, closedBracket)$/;"	f
scala#IsParentCase	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#IsParentCase()$/;"	f
scala#LineCompletesBrackets	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesBrackets(openBracket, closedBracket)$/;"	f
scala#LineCompletesDefValr	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesDefValr(lnum, line)$/;"	f
scala#LineCompletesIfElse	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesIfElse(lnum, line)$/;"	f
scala#LineCompletesXML	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesXML(lnum, line)$/;"	f
scala#LineEndsInIncomplete	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#LineEndsInIncomplete(line)$/;"	f
scala#LineIsAClosingXML	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#LineIsAClosingXML(line)$/;"	f
scala#LineIsCompleteIf	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#LineIsCompleteIf(line)$/;"	f
scala#MatchesIncompleteDefValr	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#MatchesIncompleteDefValr(line)$/;"	f
scala#NumberOfBraceGroups	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#NumberOfBraceGroups(line)$/;"	f
scala#SanitizeDirForFuzzyFinder	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^    function! scala#SanitizeDirForFuzzyFinder(dir)$/;"	f
scala#SpecificLineCompletesBrackets	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#SpecificLineCompletesBrackets(lnum, openBracket, closedBracket)$/;"	f
scala#Test	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#Test(lnum, line, openBracket, closedBracket)$/;"	f
scala#Testhelper	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#Testhelper(lnum, line, openBracket, closedBracket, iteration)$/;"	f
scan	pack/plugins/start/junegunn-fzf/src/matcher.go	/^func (m *Matcher) scan(request MatchRequest) (*Merger, bool) {$/;"	f
scan	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f
scoreGapExtention	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	scoreGapExtention = -1$/;"	c
scoreGapStart	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	scoreGapStart     = -3$/;"	c
scoreMatch	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	scoreMatch        = 16$/;"	c
search	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:search(pattern) abort$/;"	f
search	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:search(...)$/;"	f
search_history_sink	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:search_history_sink(lines)$/;"	f
searchsyn	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^function! s:searchsyn(pattern, syn, flags, mode) abort$/;"	f
sectionmovement	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^function! s:sectionmovement(pattern,flags,mode,count)$/;"	f
seek	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^function! s:seek(file) abort$/;"	f
seekselect	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:seekselect(dir, countL, countR)$/;"	f
seekselecta	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:seekselecta(count)$/;"	f
seekselectp	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:seekselectp(...)$/;"	f
select	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:select(direction)$/;"	f
select git branches in horizontal split below (15 lines)	pack/plugins/start/junegunn-fzf/README.md	/^# select git branches in horizontal split below (15 lines)$/;"	h
select multiple words in vertical split on the left (20% of screen width)	pack/plugins/start/junegunn-fzf/README.md	/^# select multiple words in vertical split on the left (20% of screen width)$/;"	h
selectRegion	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:selectRegion(target)$/;"	f
selectTarget	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:selectTarget(target, rawTarget)$/;"	f
selecta	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:selecta(direction)$/;"	f
selectedItem	pack/plugins/start/junegunn-fzf/src/terminal.go	/^type selectedItem struct {$/;"	t
selectp	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:selectp(...)$/;"	f
send	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:send(self,func,...)$/;"	f
send_keys	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def send_keys *args$/;"	f	class:Tmux
separator	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:separator()$/;"	f
set	pack/plugins/start/junegunn-fzf/fzf	/^  def set name, value = nil$/;"	f	class:FZF
set_color_variables	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:set_color_variables()$/;"	f
set_default	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
set_highlightings_variable	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:set_highlightings_variable()$/;"	f
set_var	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def set_var name, val$/;"	f	class:TestFish
set_var	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def set_var name, val$/;"	f	class:TestShell
setf	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^function! s:setf(filetype) abort$/;"	f
setup	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def setup$/;"	f	class:TestBash
setup	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def setup$/;"	f	class:TestFish
setup	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def setup$/;"	f	class:TestGoFZF
setup	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def setup$/;"	f	class:TestShell
setup	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def setup$/;"	f	class:TestZsh
setup	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:setup()$/;"	f
setup_vim_server	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:setup_vim_server()$/;"	f
setup_vinegar	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^function! s:setup_vinegar() abort$/;"	f
shellesc	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:shellesc(arg)$/;"	f
shellesc	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellescape	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^  function! s:shellescape(...) abort$/;"	f
shellescape	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^  function! s:shellescape(command) abort$/;"	f
shellslash	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:shellslash(path) abort$/;"	f
shift	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:shift(list) abort$/;"	f
shortpath	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:shortpath()$/;"	f
shortpath	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:shortpath()$/;"	f
shouldGrow	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:shouldGrow(trigger)$/;"	f
shrink	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:shrink(target)$/;"	f
silent!	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	noautocmd silent! exec ''.l:winnr.'wincmd w'$/;"	m
sizeSpec	pack/plugins/start/junegunn-fzf/src/options.go	/^type sizeSpec struct {$/;"	t
slab	pack/plugins/start/junegunn-fzf/src/pattern_test.go	/^var slab *util.Slab$/;"	v
slab16Size	pack/plugins/start/junegunn-fzf/src/constants.go	/^	slab16Size int = 100 * 1024 \/\/ 200KB * 32 = 12.8MB$/;"	c
slab32Size	pack/plugins/start/junegunn-fzf/src/constants.go	/^	slab32Size int = 2048       \/\/ 8KB * 32 = 256KB$/;"	c
sliceChunks	pack/plugins/start/junegunn-fzf/src/matcher.go	/^func (m *Matcher) sliceChunks(chunks []*Chunk) [][]*Chunk {$/;"	f
smart_execute_command	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
snakecase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:snakecase(word)$/;"	f
sneak#cancel	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! sneak#cancel()$/;"	f
sneak#debug#profile	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/debug.vim	/^func! sneak#debug#profile()$/;"	f
sneak#debug#report	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/debug.vim	/^func! sneak#debug#report()$/;"	f
sneak#hl#get	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/hl.vim	/^func! sneak#hl#get(hlgroup) abort "gets the definition of the specified highlight$/;"	f
sneak#hl#links_to	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/hl.vim	/^func! sneak#hl#links_to(hlgroup) abort$/;"	f
sneak#hl#removehl	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/hl.vim	/^func! sneak#hl#removehl() abort "remove highlighting$/;"	f
sneak#init	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! sneak#init()$/;"	f
sneak#is_sneaking	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! sneak#is_sneaking()$/;"	f
sneak#label#sanitize_target_labels	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/label.vim	/^func! sneak#label#sanitize_target_labels()$/;"	f
sneak#label#to	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/label.vim	/^func! sneak#label#to(s, v, reverse)$/;"	f
sneak#reset	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! sneak#reset(key)$/;"	f
sneak#rpt	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! sneak#rpt(op, reverse) abort$/;"	f
sneak#search#get_cs	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/search.vim	/^func! sneak#search#get_cs(input, use_ic_scs)$/;"	f
sneak#search#new	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/search.vim	/^func! sneak#search#new()$/;"	f
sneak#state	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! sneak#state()$/;"	f
sneak#to	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! sneak#to(op, input, inputlen, count, repeatmotion, reverse, inclusive, label) abort "{{{$/;"	f
sneak#util#echo	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#echo(msg)$/;"	f
sneak#util#getc	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#getc()$/;"	f
sneak#util#getchar	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#getchar()$/;"	f
sneak#util#has_upper	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#has_upper(s)$/;"	f
sneak#util#isvisualop	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#isvisualop(op)$/;"	f
sneak#util#nudge	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#nudge(right)$/;"	f
sneak#util#skipfold	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#skipfold(current_line, reverse)$/;"	f
sneak#util#strlen	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/util.vim	/^  func! sneak#util#strlen(s)$/;"	f
sneak#util#wincol1	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#wincol1()$/;"	f
sneak#wrap	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! sneak#wrap(op, inputlen, reverse, inclusive, label) abort$/;"	f
sneak_colorscheme	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/hl.vim	/^augroup sneak_colorscheme " re-init if :colorscheme is changed at runtime. #108$/;"	a
sort	pack/plugins/start/junegunn-fzf/fzf	/^    def sort list$/;"	f
sort	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
sort	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:sort(a,b)$/;"	f
sortCriteria	pack/plugins/start/junegunn-fzf/src/result.go	/^var sortCriteria []criterion$/;"	v
sortSelected	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) sortSelected() []selectedItem {$/;"	f
sort_buffers	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:sort_buffers(...)$/;"	f
sort_by	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
source.gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplcache/sources/tmuxcomplete.vim	/^function! s:source.gather_candidates(context)$/;"	f
source.gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplete/sources/tmuxcomplete.vim	/^function! s:source.gather_candidates(context)$/;"	f
spacecase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:spacecase(word)$/;"	f
span	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
spawn	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:spawn(bang, desc, args) abort$/;"	f
spawn	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
spinnerDuration	pack/plugins/start/junegunn-fzf/src/constants.go	/^	spinnerDuration  = 200 * time.Millisecond$/;"	c
split	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:split(dict)$/;"	f
split3	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
splitNth	pack/plugins/start/junegunn-fzf/src/options.go	/^func splitNth(str string) []Range {$/;"	f
split_by_displaywidth	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
split_leftright	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
splittable	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:splittable(dict)$/;"	f
stage_info	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:stage_info(lnum) abort$/;"	f
start	pack/plugins/start/junegunn-fzf/fzf	/^  def start$/;"	f
start_loop	pack/plugins/start/junegunn-fzf/fzf	/^  def start_loop$/;"	f	class:start_search
start_options	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let start_options = {$/;"	v
start_options	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let start_options = {$/;"	v
start_options	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^  let start_options = {$/;"	v
start_options	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^  let start_options = {$/;"	v
start_options	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let start_options = {$/;"	v
start_options	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let start_options = {$/;"	v
start_reader	pack/plugins/start/junegunn-fzf/fzf	/^  def start_reader$/;"	f
start_renderer	pack/plugins/start/junegunn-fzf/fzf	/^  def start_renderer$/;"	f	class:start_search
start_search	pack/plugins/start/junegunn-fzf/fzf	/^  def start_search &callback$/;"	f
start_with?	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def start_with? str$/;"	f	class:NilClass
starts_with	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:starts_with(str, prefix) abort$/;"	f
status_dir	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let status_dir =  expand('%:p:h')$/;"	v
stepmatch	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^function! s:stepmatch(receiver,target)$/;"	f
steps	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^function! s:steps(lnum)$/;"	f
strLines	pack/plugins/start/junegunn-fzf/src/options.go	/^func strLines(str string) []string {$/;"	f
strchars	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  function! s:strchars(str) abort$/;"	f
string	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^import string$/;"	m
strip	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:strip(str)$/;"	f
stripTrailingComment	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^function! s:stripTrailingComment(line)$/;"	f
strip_namespace_and_macro_chars	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:strip_namespace_and_macro_chars(word)$/;"	f
strip_white_space	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^function! s:strip_white_space(l,r,line) abort$/;"	f
strwidthpart	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart_reverse	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
style	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (p ColorPair) style() tcell.Style {$/;"	f
sub	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
subesc	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:subesc(pattern)$/;"	f
substitute_command	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:substitute_command(cmd,bad,good,flags)$/;"	f
substitute_last	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
substitute_path_separator	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
subvert_dispatcher	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:subvert_dispatcher(bang,line1,line2,count,args)$/;"	f
surroundings	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^function! s:surroundings() abort$/;"	f
sw	pack/plugins/start/fatih-vim-go/indent/go.vim	/^  func s:sw()$/;"	f
sw	pack/plugins/start/sheerun-vim-polyglot/indent/go.vim	/^  func s:sw()$/;"	f
sw	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^  function s:sw()$/;"	f
sw	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^let sw=2    " default shiftwidth of 2 spaces$/;"	v
symlink	pack/plugins/start/junegunn-fzf/install	/^symlink() {$/;"	f
syn	pack/plugins/start/sheerun-vim-polyglot/indent/cucumber.vim	/^function! s:syn(lnum)$/;"	f
syn_id_name	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:syn_id_name()$/;"	f
sync	pack/plugins/start/junegunn-fzf/fzf	/^  def sync$/;"	f	class:FZF
sync_guru	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:sync_guru(args) abort$/;"	f
synname	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^function! s:synname() abort$/;"	f
syntax_keyword	pack/plugins/start/sheerun-vim-polyglot/syntax/clojure.vim	/^function! s:syntax_keyword(dict)$/;"	f
system	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! s:system(pwd, cmd)$/;"	f
system	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:system(str, ...) abort$/;"	f
t	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^    nnoremap <buffer> t <C-w><CR><C-w>T$/;"	m
t	vimrc	/^nmap t <Plug>Sneak_t$/;"	m
t	vimrc	/^omap t <Plug>Sneak_t$/;"	m
tags_sink	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:tags_sink(lines)$/;"	f
take_while	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
targets#e	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! targets#e(modifier)$/;"	f
targets#o	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! targets#o(trigger, count)$/;"	f
targets#state#empty	pack/plugins/start/wellle-targets-vim/autoload/targets/state.vim	/^function! targets#state#empty()$/;"	f
targets#state#invalid	pack/plugins/start/wellle-targets-vim/autoload/targets/state.vim	/^function! targets#state#invalid()$/;"	f
targets#state#isEmpty	pack/plugins/start/wellle-targets-vim/autoload/targets/state.vim	/^function! targets#state#isEmpty() dict$/;"	f
targets#state#isInvalid	pack/plugins/start/wellle-targets-vim/autoload/targets/state.vim	/^function! targets#state#isInvalid() dict$/;"	f
targets#state#isInvalidOrEmpty	pack/plugins/start/wellle-targets-vim/autoload/targets/state.vim	/^function! targets#state#isInvalidOrEmpty() dict$/;"	f
targets#state#isNonempty	pack/plugins/start/wellle-targets-vim/autoload/targets/state.vim	/^function! targets#state#isNonempty() dict$/;"	f
targets#state#isValid	pack/plugins/start/wellle-targets-vim/autoload/targets/state.vim	/^function! targets#state#isValid() dict$/;"	f
targets#state#new	pack/plugins/start/wellle-targets-vim/autoload/targets/state.vim	/^function! targets#state#new(state)$/;"	f
targets#state#nonempty	pack/plugins/start/wellle-targets-vim/autoload/targets/state.vim	/^function! targets#state#nonempty()$/;"	f
targets#target#copy	pack/plugins/start/wellle-targets-vim/autoload/targets/target.vim	/^function! targets#target#copy() dict$/;"	f
targets#target#cursorE	pack/plugins/start/wellle-targets-vim/autoload/targets/target.vim	/^function! targets#target#cursorE() dict$/;"	f
targets#target#cursorS	pack/plugins/start/wellle-targets-vim/autoload/targets/target.vim	/^function! targets#target#cursorS() dict$/;"	f
targets#target#e	pack/plugins/start/wellle-targets-vim/autoload/targets/target.vim	/^function! targets#target#e() dict$/;"	f
targets#target#fromValues	pack/plugins/start/wellle-targets-vim/autoload/targets/target.vim	/^function! targets#target#fromValues(sl, sc, el, ec)$/;"	f
targets#target#fromVisualSelection	pack/plugins/start/wellle-targets-vim/autoload/targets/target.vim	/^function! targets#target#fromVisualSelection()$/;"	f
targets#target#getcharE	pack/plugins/start/wellle-targets-vim/autoload/targets/target.vim	/^function! targets#target#getcharE() dict$/;"	f
targets#target#getcharS	pack/plugins/start/wellle-targets-vim/autoload/targets/target.vim	/^function! targets#target#getcharS() dict$/;"	f
targets#target#getposE	pack/plugins/start/wellle-targets-vim/autoload/targets/target.vim	/^function! targets#target#getposE(...) dict$/;"	f
targets#target#getposS	pack/plugins/start/wellle-targets-vim/autoload/targets/target.vim	/^function! targets#target#getposS(...) dict$/;"	f
targets#target#new	pack/plugins/start/wellle-targets-vim/autoload/targets/target.vim	/^function! targets#target#new(sl, sc, el, ec, error)$/;"	f
targets#target#range	pack/plugins/start/wellle-targets-vim/autoload/targets/target.vim	/^function! targets#target#range(cursor, min, max) dict$/;"	f
targets#target#s	pack/plugins/start/wellle-targets-vim/autoload/targets/target.vim	/^function! targets#target#s() dict$/;"	f
targets#target#searchposE	pack/plugins/start/wellle-targets-vim/autoload/targets/target.vim	/^function! targets#target#searchposE(...) dict$/;"	f
targets#target#searchposS	pack/plugins/start/wellle-targets-vim/autoload/targets/target.vim	/^function! targets#target#searchposS(...) dict$/;"	f
targets#target#select	pack/plugins/start/wellle-targets-vim/autoload/targets/target.vim	/^function! targets#target#select() dict$/;"	f
targets#target#setE	pack/plugins/start/wellle-targets-vim/autoload/targets/target.vim	/^function! targets#target#setE(line, column) dict$/;"	f
targets#target#setS	pack/plugins/start/wellle-targets-vim/autoload/targets/target.vim	/^function! targets#target#setS(line, column) dict$/;"	f
targets#target#state	pack/plugins/start/wellle-targets-vim/autoload/targets/target.vim	/^function! targets#target#state() dict$/;"	f
targets#target#string	pack/plugins/start/wellle-targets-vim/autoload/targets/target.vim	/^function! targets#target#string() dict$/;"	f
targets#target#withError	pack/plugins/start/wellle-targets-vim/autoload/targets/target.vim	/^function! targets#target#withError(error)$/;"	f
targets#undo	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! targets#undo(lastseq)$/;"	f
targets#x	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! targets#x(trigger, count)$/;"	f
teardown	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def teardown$/;"	f	class:TestGoFZF
teardown	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def teardown$/;"	f	class:TestShell
template_autocreate	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:template_autocreate()$/;"	f
tempname	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def tempname$/;"	f	class:TestBase
term	pack/plugins/start/junegunn-fzf/src/pattern.go	/^type term struct {$/;"	t
termEqual	pack/plugins/start/junegunn-fzf/src/pattern.go	/^	termEqual$/;"	c
termExact	pack/plugins/start/junegunn-fzf/src/pattern.go	/^	termExact$/;"	c
termFuzzy	pack/plugins/start/junegunn-fzf/src/pattern.go	/^	termFuzzy termType = iota$/;"	c
termPrefix	pack/plugins/start/junegunn-fzf/src/pattern.go	/^	termPrefix$/;"	c
termSet	pack/plugins/start/junegunn-fzf/src/pattern.go	/^type termSet []term$/;"	t
termSuffix	pack/plugins/start/junegunn-fzf/src/pattern.go	/^	termSuffix$/;"	c
termType	pack/plugins/start/junegunn-fzf/src/pattern.go	/^type termType int$/;"	t
test	pack/plugins/start/tomtom-tlib-vim/test/tlib.vim	/^let test = tlib#Test#New()$/;"	v
test1	pack/plugins/start/tomtom-tlib-vim/test/tlib.vim	/^let test1 = tlib#Test#New()$/;"	v
testBasic	pack/plugins/start/wellle-targets-vim/test/test.vim	/^function! s:testBasic()$/;"	f
testEmpty	pack/plugins/start/wellle-targets-vim/test/test.vim	/^function s:testEmpty()$/;"	f
testModifiers	pack/plugins/start/wellle-targets-vim/test/test.vim	/^function s:testModifiers()$/;"	f
testMultiline	pack/plugins/start/wellle-targets-vim/test/test.vim	/^function! s:testMultiline()$/;"	f
testQuotes	pack/plugins/start/wellle-targets-vim/test/test.vim	/^function s:testQuotes()$/;"	f
testSeeking	pack/plugins/start/wellle-targets-vim/test/test.vim	/^function s:testSeeking()$/;"	f
testVisual	pack/plugins/start/wellle-targets-vim/test/test.vim	/^function s:testVisual()$/;"	f
test_alt_c	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_alt_c$/;"	f	class:TestShell
test_alt_c_command	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_alt_c_command$/;"	f	class:TestShell
test_bind	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_bind$/;"	f	class:TestGoFZF
test_bind_print_query	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_bind_print_query$/;"	f	class:TestGoFZF
test_cancel	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_cancel$/;"	f	class:TestGoFZF
test_compile	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! s:test_compile(test_file, job, exit_status, data) abort$/;"	f
test_compile_handler	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! s:test_compile_handler(job, exit_status, data) abort$/;"	f
test_ctrl_r	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_ctrl_r$/;"	f	class:TestShell
test_ctrl_t	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_ctrl_t$/;"	f	class:TestShell
test_ctrl_t_command	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_ctrl_t_command$/;"	f	class:TestShell
test_ctrl_t_unicode	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_ctrl_t_unicode$/;"	f	class:TestShell
test_custom_completion	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_custom_completion$/;"	f	class:CompletionTest
test_cycle	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_cycle$/;"	f	class:TestGoFZF
test_default_extended	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_default_extended$/;"	f
test_dir_completion	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_dir_completion$/;"	f	class:CompletionTest
test_exact	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_exact$/;"	f
test_execute	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_execute$/;"	f	class:TestGoFZF
test_execute_multi	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_execute_multi$/;"	f	class:TestGoFZF
test_execute_shell	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_execute_shell$/;"	f	class:TestGoFZF
test_exit_0	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_exit_0$/;"	f	class:TestGoFZF
test_exit_0_exit_code	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_exit_0_exit_code$/;"	f	class:TestGoFZF
test_exitstatus_empty	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_exitstatus_empty$/;"	f
test_expect	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_expect$/;"	f	class:TestGoFZF
test_expect_print_query	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_expect_print_query$/;"	f	class:TestGoFZF
test_expect_print_query_select_1	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_expect_print_query_select_1$/;"	f	class:TestGoFZF
test_expect_printable_character_print_query	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_expect_printable_character_print_query$/;"	f	class:TestGoFZF
test_file_completion	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_file_completion$/;"	f	class:CompletionTest
test_file_completion_root	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_file_completion_root$/;"	f	class:CompletionTest
test_file_completion_unicode	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_file_completion_unicode$/;"	f	class:CompletionTest
test_filter_exitstatus	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_filter_exitstatus$/;"	f	class:TestGoFZF
test_fzf_default_command	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_fzf_default_command$/;"	f	class:TestGoFZF
test_header	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_header$/;"	f	class:TestGoFZF
test_header_and_header_lines	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_header_and_header_lines$/;"	f	class:TestGoFZF
test_header_and_header_lines_reverse	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_header_and_header_lines_reverse$/;"	f	class:TestGoFZF
test_header_lines	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_header_lines$/;"	f	class:TestGoFZF
test_header_lines_overflow	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_header_lines_overflow$/;"	f	class:TestGoFZF
test_header_lines_reverse	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_header_lines_reverse$/;"	f	class:TestGoFZF
test_header_lines_with_nth	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_header_lines_with_nth$/;"	f	class:TestGoFZF
test_header_reverse	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_header_reverse$/;"	f	class:TestGoFZF
test_history	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_history$/;"	f	class:TestGoFZF
test_hscroll_off	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_hscroll_off$/;"	f
test_invalid_cache	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_invalid_cache$/;"	f	class:TestGoFZF
test_invalid_option	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_invalid_option$/;"	f	class:TestGoFZF
test_invalid_term	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_invalid_term$/;"	f	class:TestGoFZF
test_jump	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_jump$/;"	f
test_jump_accept	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_jump_accept$/;"	f
test_key_bindings	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_key_bindings$/;"	f	class:TestGoFZF
test_long_line	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_long_line$/;"	f	class:TestGoFZF
test_margin	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_margin$/;"	f	class:TestGoFZF
test_margin_reverse	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_margin_reverse$/;"	f	class:TestGoFZF
test_multi_order	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_multi_order$/;"	f	class:TestGoFZF
test_one	pack/plugins/start/fatih-vim-go/scripts/test.sh	/^test_one() {$/;"	f
test_or_operator	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_or_operator$/;"	f
test_partial_caching	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_partial_caching$/;"	f
test_preview	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_preview$/;"	f
test_preview_hidden	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_preview_hidden$/;"	f
test_process_completion	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_process_completion$/;"	f	class:CompletionTest
test_query_unicode	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_query_unicode$/;"	f	class:TestGoFZF
test_read0	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_read0$/;"	f	class:TestGoFZF
test_report	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:test_report(test, verbose)$/;"	f
test_scroll	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_scroll$/;"	f	class:TestGoFZF
test_select_1	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_select_1$/;"	f	class:TestGoFZF
test_select_1_exit_0_fail	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_select_1_exit_0_fail$/;"	f	class:TestGoFZF
test_select_all_deselect_all_toggle_all	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_select_all_deselect_all_toggle_all$/;"	f	class:TestGoFZF
test_smart_case_for_each_term	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_smart_case_for_each_term$/;"	f	class:TestGoFZF
test_sync	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_sync$/;"	f	class:TestGoFZF
test_tabstop	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_tabstop$/;"	f	class:TestGoFZF
test_tac	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_tac$/;"	f	class:TestGoFZF
test_tac_nosort	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_tac_nosort$/;"	f	class:TestGoFZF
test_tac_sort	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_tac_sort$/;"	f	class:TestGoFZF
test_tiebreak	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_tiebreak$/;"	f	class:TestGoFZF
test_tiebreak_end	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_tiebreak_end$/;"	f	class:TestGoFZF
test_tiebreak_index_begin	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_tiebreak_index_begin$/;"	f	class:TestGoFZF
test_tiebreak_length_with_nth	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_tiebreak_length_with_nth$/;"	f	class:TestGoFZF
test_tiebreak_length_with_nth_trim_length	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_tiebreak_length_with_nth_trim_length$/;"	f	class:TestGoFZF
test_toggle_sort	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_toggle_sort$/;"	f	class:TestGoFZF
test_unicode_case	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_unicode_case$/;"	f	class:TestGoFZF
test_unset_completion	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_unset_completion$/;"	f	class:CompletionTest
test_vanilla	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_vanilla$/;"	f	class:TestGoFZF
test_with_nth	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_with_nth$/;"	f	class:TestGoFZF
test_with_nth_ansi	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_with_nth_ansi$/;"	f	class:TestGoFZF
test_with_nth_no_ansi	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_with_nth_no_ansi$/;"	f	class:TestGoFZF
testc	pack/plugins/start/tomtom-tlib-vim/test/tlib.vim	/^let testc = tlib#TestChild#New()$/;"	v
testworld	pack/plugins/start/tomtom-tlib-vim/test/tlib.vim	/^let testworld = tlib#World#New()$/;"	v
textobject	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^function! s:textobject(inner) abort$/;"	f
throw	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:throw(msg)$/;"	f
throw	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:throw(string) abort$/;"	f
time	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^import time$/;"	m
tlib#Filter_cnf#New	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_cnf.vim	/^function! tlib#Filter_cnf#New(...) "{{{3$/;"	f
tlib#Filter_cnfd#New	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_cnfd.vim	/^function! tlib#Filter_cnfd#New(...) "{{{3$/;"	f
tlib#Filter_fuzzy#New	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_fuzzy.vim	/^function! tlib#Filter_fuzzy#New(...) "{{{3$/;"	f
tlib#Filter_glob#New	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Filter_glob.vim	/^function! tlib#Filter_glob#New(...) "{{{3$/;"	f
tlib#Object#Methods	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Object.vim	/^function! tlib#Object#Methods(object, ...) "{{{3$/;"	f
tlib#Object#New	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Object.vim	/^function! tlib#Object#New(...) "{{{3$/;"	f
tlib#Test#New	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/Test.vim	/^function! tlib#Test#New(...) "{{{3$/;"	f
tlib#TestChild#New	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/TestChild.vim	/^function! tlib#TestChild#New(...) "{{{3$/;"	f
tlib#World#New	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/World.vim	/^function! tlib#World#New(...)$/;"	f
tlib#agent#AND	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#AND(world, selected) "{{{3$/;"	f
tlib#agent#Complete	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#Complete(world, selected) abort "{{{3$/;"	f
tlib#agent#CompleteAgentNames	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#CompleteAgentNames(ArgLead, CmdLine, CursorPos)$/;"	f
tlib#agent#Copy	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#Copy(world, selected) "{{{3$/;"	f
tlib#agent#CopyItems	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#CopyItems(world, selected) "{{{3$/;"	f
tlib#agent#Cut	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#Cut(world, selected) "{{{3$/;"	f
tlib#agent#Debug	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#Debug(world, selected) "{{{3$/;"	f
tlib#agent#DeleteItems	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#DeleteItems(world, selected) "{{{3$/;"	f
tlib#agent#DoAtLine	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#DoAtLine(world, selected) "{{{3$/;"	f
tlib#agent#Down	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#Down(world, selected, ...) "{{{3$/;"	f
tlib#agent#DownN	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#DownN(world, selected) "{{{3$/;"	f
tlib#agent#EditFile	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#EditFile(world, selected) "{{{3$/;"	f
tlib#agent#EditFileInSplit	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#EditFileInSplit(world, selected) "{{{3$/;"	f
tlib#agent#EditFileInTab	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#EditFileInTab(world, selected) "{{{3$/;"	f
tlib#agent#EditFileInVSplit	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#EditFileInVSplit(world, selected) "{{{3$/;"	f
tlib#agent#EditItem	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#EditItem(world, selected) "{{{3$/;"	f
tlib#agent#EditReturnValue	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#EditReturnValue(world, rv) "{{{3$/;"	f
tlib#agent#End	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#End(world, selected) "{{{3$/;"	f
tlib#agent#ExecAgentByName	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#ExecAgentByName(world, selected) "{{{3$/;"	f
tlib#agent#Exit	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#Exit(world, selected) "{{{3$/;"	f
tlib#agent#GotoLine	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#GotoLine(world, selected) "{{{3$/;"	f
tlib#agent#Help	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#Help(world, selected) "{{{3$/;"	f
tlib#agent#Home	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#Home(world, selected) "{{{3$/;"	f
tlib#agent#Input	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#Input(world, selected) "{{{3$/;"	f
tlib#agent#NewItem	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#NewItem(world, selected) "{{{3$/;"	f
tlib#agent#Null	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#Null(world, selected) "{{{3$/;"	f
tlib#agent#OR	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#OR(world, selected) "{{{3$/;"	f
tlib#agent#PageDown	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#PageDown(world, selected) "{{{3$/;"	f
tlib#agent#PageUp	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#PageUp(world, selected) "{{{3$/;"	f
tlib#agent#Paste	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#Paste(world, selected) "{{{3$/;"	f
tlib#agent#PopFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#PopFilter(world, selected) "{{{3$/;"	f
tlib#agent#PreviewLine	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#PreviewLine(world, selected) "{{{3$/;"	f
tlib#agent#ReduceFilter	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#ReduceFilter(world, selected) "{{{3$/;"	f
tlib#agent#Reset	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#Reset(world, selected) "{{{3$/;"	f
tlib#agent#RestrictView	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#RestrictView(world, selected) "{{{3$/;"	f
tlib#agent#Select	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#Select(world, selected) "{{{3$/;"	f
tlib#agent#SelectAll	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#SelectAll(world, selected) "{{{3$/;"	f
tlib#agent#SelectDown	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#SelectDown(world, selected) "{{{3$/;"	f
tlib#agent#SelectUp	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#SelectUp(world, selected) "{{{3$/;"	f
tlib#agent#ShiftLeft	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#ShiftLeft(world, selected) "{{{3$/;"	f
tlib#agent#ShiftRight	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#ShiftRight(world, selected) "{{{3$/;"	f
tlib#agent#ShowInfo	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#ShowInfo(world, selected)$/;"	f
tlib#agent#Suspend	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#Suspend(world, selected) "{{{3$/;"	f
tlib#agent#SuspendToParentWindow	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#SuspendToParentWindow(world, selected) "{{{3$/;"	f
tlib#agent#ToggleRestrictView	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#ToggleRestrictView(world, selected) "{{{3$/;"	f
tlib#agent#ToggleScrollbind	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#ToggleScrollbind(world, selected) "{{{3$/;"	f
tlib#agent#ToggleStickyList	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#ToggleStickyList(world, selected) "{{{3$/;"	f
tlib#agent#UnrestrictView	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#UnrestrictView(world, selected) "{{{3$/;"	f
tlib#agent#Up	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#Up(world, selected, ...) "{{{3$/;"	f
tlib#agent#UpN	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#UpN(world, selected) "{{{3$/;"	f
tlib#agent#ViewFile	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#ViewFile(world, selected) "{{{3$/;"	f
tlib#agent#Wildcard	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/agent.vim	/^function! tlib#agent#Wildcard(world, selected) "{{{3$/;"	f
tlib#arg#CComplete	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/arg.vim	/^function! tlib#arg#CComplete(def, ArgLead) abort "{{{3$/;"	f
tlib#arg#Ex	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/arg.vim	/^function! tlib#arg#Ex(arg, ...) "{{{3$/;"	f
tlib#arg#Get	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/arg.vim	/^function! tlib#arg#Get(n, var, ...) "{{{3$/;"	f
tlib#arg#GetOpts	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/arg.vim	/^function! tlib#arg#GetOpts(args, ...) abort "{{{3$/;"	f
tlib#arg#Let	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/arg.vim	/^function! tlib#arg#Let(list, ...) "{{{3$/;"	f
tlib#arg#StringAsKeyArgs	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/arg.vim	/^function! tlib#arg#StringAsKeyArgs(string, ...) "{{{1$/;"	f
tlib#arg#StringAsKeyArgsEqual	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/arg.vim	/^function! tlib#arg#StringAsKeyArgsEqual(string) "{{{1$/;"	f
tlib#assert#All	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/assert.vim	/^function! tlib#assert#All(vals) abort "{{{3$/;"	f
tlib#assert#Assert	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/assert.vim	/^function! tlib#assert#Assert(caller, check, vals) abort "{{{3$/;"	f
tlib#assert#Disable	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/assert.vim	/^function! tlib#assert#Disable() abort "{{{3$/;"	f
tlib#assert#Enable	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/assert.vim	/^function! tlib#assert#Enable() abort "{{{3$/;"	f
tlib#assert#Map	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/assert.vim	/^function! tlib#assert#Map(vals, expr) abort "{{{3$/;"	f
tlib#autocmdgroup#Init	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/autocmdgroup.vim	/^function! tlib#autocmdgroup#Init() "{{{3$/;"	f
tlib#balloon#Expand	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/balloon.vim	/^function! tlib#balloon#Expand(expr) abort "{{{3$/;"	f
tlib#balloon#Expr	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/balloon.vim	/^function! tlib#balloon#Expr() "{{{3$/;"	f
tlib#balloon#Register	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/balloon.vim	/^function! tlib#balloon#Register(expr) "{{{3$/;"	f
tlib#balloon#Remove	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/balloon.vim	/^function! tlib#balloon#Remove(expr) "{{{3$/;"	f
tlib#bitwise#AND	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#AND(num1, num2, ...) "{{{3$/;"	f
tlib#bitwise#Add	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#Add(num1, num2, ...) "{{{3$/;"	f
tlib#bitwise#Bits2Num	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#Bits2Num(bits, ...) "{{{3$/;"	f
tlib#bitwise#Num2Bits	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#Num2Bits(num) "{{{3$/;"	f
tlib#bitwise#OR	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#OR(num1, num2, ...) "{{{3$/;"	f
tlib#bitwise#ShiftLeft	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#ShiftLeft(bits, n) "{{{3$/;"	f
tlib#bitwise#ShiftRight	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#ShiftRight(bits, n) "{{{3$/;"	f
tlib#bitwise#Sub	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#Sub(num1, num2, ...) "{{{3$/;"	f
tlib#bitwise#XOR	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#XOR(num1, num2, ...) "{{{3$/;"	f
tlib#buffer#BufDo	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#BufDo(exec) "{{{3$/;"	f
tlib#buffer#CurrentByte	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#CurrentByte() "{{{3$/;"	f
tlib#buffer#DeleteRange	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#DeleteRange(line1, line2) "{{{3$/;"	f
tlib#buffer#DisableMRU	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#DisableMRU() "{{{3$/;"	f
tlib#buffer#EnableMRU	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#EnableMRU() "{{{3$/;"	f
tlib#buffer#Eval	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#Eval(buffer, code) "{{{3$/;"	f
tlib#buffer#GetList	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#GetList(...)$/;"	f
tlib#buffer#HighlightLine	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#HighlightLine(...) "{{{3$/;"	f
tlib#buffer#InsertText	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#InsertText(text, ...) "{{{3$/;"	f
tlib#buffer#InsertText0	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#InsertText0(text, ...) "{{{3$/;"	f
tlib#buffer#KeepCursorPosition	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#KeepCursorPosition(cmd) "{{{3$/;"	f
tlib#buffer#ReplaceRange	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#ReplaceRange(line1, line2, lines)$/;"	f
tlib#buffer#ScratchEnd	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#ScratchEnd() "{{{3$/;"	f
tlib#buffer#ScratchStart	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#ScratchStart() "{{{3$/;"	f
tlib#buffer#Set	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#Set(buffer) "{{{3$/;"	f
tlib#buffer#ViewLine	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#ViewLine(line, ...) "{{{3$/;"	f
tlib#cache#Dir	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cache.vim	/^function! tlib#cache#Dir(...) "{{{3$/;"	f
tlib#cache#Filename	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cache.vim	/^function! tlib#cache#Filename(type, ...) "{{{3$/;"	f
tlib#cache#Get	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cache.vim	/^function! tlib#cache#Get(cfile, ...) "{{{3$/;"	f
tlib#cache#ListFilesInCache	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cache.vim	/^function! tlib#cache#ListFilesInCache(...) "{{{3$/;"	f
tlib#cache#MTime	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cache.vim	/^function! tlib#cache#MTime(cfile) "{{{3$/;"	f
tlib#cache#MaybePurge	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cache.vim	/^function! tlib#cache#MaybePurge() "{{{3$/;"	f
tlib#cache#Purge	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cache.vim	/^function! tlib#cache#Purge() "{{{3$/;"	f
tlib#cache#Save	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cache.vim	/^function! tlib#cache#Save(cfile, dictionary, ...) "{{{3$/;"	f
tlib#cache#Value	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cache.vim	/^function! tlib#cache#Value(cfile, generator, ftime, ...) "{{{3$/;"	f
tlib#char#Get	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/char.vim	/^function! tlib#char#Get(...) "{{{3$/;"	f
tlib#char#GetWithTimeout	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/char.vim	/^function! tlib#char#GetWithTimeout(timeout, ...) "{{{3$/;"	f
tlib#char#IsAvailable	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/char.vim	/^function! tlib#char#IsAvailable() "{{{3$/;"	f
tlib#cmd#BrowseOutput	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#BrowseOutput(command) "{{{3$/;"	f
tlib#cmd#BrowseOutputWithCallback	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#BrowseOutputWithCallback(callback, command) "{{{3$/;"	f
tlib#cmd#Capture	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#Capture(cmd) "{{{3$/;"	f
tlib#cmd#DefaultBrowseOutput	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#DefaultBrowseOutput(cmd) "{{{3$/;"	f
tlib#cmd#OutputAsList	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#OutputAsList(command) "{{{3$/;"	f
tlib#cmd#ParseScriptname	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#ParseScriptname(line) "{{{3$/;"	f
tlib#cmd#TBrowseScriptnames	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#TBrowseScriptnames() abort "{{{3$/;"	f
tlib#cmd#Time	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#Time(cmd) "{{{3$/;"	f
tlib#cmd#UseVertical	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#UseVertical(...) "{{{3$/;"	f
tlib#comments#Comments	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/comments.vim	/^function! tlib#comments#Comments(...)$/;"	f
tlib#date#AddDays	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/date.vim	/^function! tlib#date#AddDays(date, n) abort "{{{3$/;"	f
tlib#date#DiffInDays	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/date.vim	/^function! tlib#date#DiffInDays(date, ...)$/;"	f
tlib#date#Format	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/date.vim	/^function! tlib#date#Format(...) abort "{{{3$/;"	f
tlib#date#IsDate	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/date.vim	/^function! tlib#date#IsDate(text) abort "{{{3$/;"	f
tlib#date#Parse	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/date.vim	/^function! tlib#date#Parse(date, ...) "{{{3$/;"	f
tlib#date#SecondsSince1970	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/date.vim	/^function! tlib#date#SecondsSince1970(date, ...) "{{{3$/;"	f
tlib#date#Shift	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/date.vim	/^function! tlib#date#Shift(date, shift) abort "{{{3$/;"	f
tlib#dictionary#Rev	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/dictionary.vim	/^function! tlib#dictionary#Rev(dict, ...) abort "{{{3$/;"	f
tlib#dir#CD	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/dir.vim	/^function! tlib#dir#CD(dir, ...) "{{{3$/;"	f
tlib#dir#CanonicName	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/dir.vim	/^function! tlib#dir#CanonicName(dirname) "{{{3$/;"	f
tlib#dir#Ensure	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/dir.vim	/^function! tlib#dir#Ensure(dir) "{{{3$/;"	f
tlib#dir#MyRuntime	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/dir.vim	/^function! tlib#dir#MyRuntime() "{{{3$/;"	f
tlib#dir#NativeName	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/dir.vim	/^function! tlib#dir#NativeName(dirname) "{{{3$/;"	f
tlib#dir#PlainName	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/dir.vim	/^function! tlib#dir#PlainName(dirname) "{{{3$/;"	f
tlib#dir#Pop	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/dir.vim	/^function! tlib#dir#Pop() "{{{3$/;"	f
tlib#dir#Push	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/dir.vim	/^function! tlib#dir#Push(dir, ...) "{{{3$/;"	f
tlib#eval#Extend	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/eval.vim	/^function! tlib#eval#Extend(a, b, ...) abort "{{{3$/;"	f
tlib#eval#FormatValue	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/eval.vim	/^function! tlib#eval#FormatValue(value, ...) "{{{3$/;"	f
tlib#file#Absolute	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/file.vim	/^function! tlib#file#Absolute(filename, ...) "{{{3$/;"	f
tlib#file#Canonic	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/file.vim	/^function! tlib#file#Canonic(filename, ...) "{{{3$/;"	f
tlib#file#Edit	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/file.vim	/^function! tlib#file#Edit(fileid) "{{{3$/;"	f
tlib#file#Glob	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/file.vim	/^    function! tlib#file#Glob(pattern) abort "{{{3$/;"	f
tlib#file#Globpath	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/file.vim	/^    function! tlib#file#Globpath(path, pattern) abort "{{{3$/;"	f
tlib#file#IsAbsolute	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/file.vim	/^function! tlib#file#IsAbsolute(filename) "{{{3$/;"	f
tlib#file#Join	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/file.vim	/^function! tlib#file#Join(filename_parts, ...) "{{{3$/;"	f
tlib#file#Relative	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/file.vim	/^function! tlib#file#Relative(filename, basedir) "{{{3$/;"	f
tlib#file#Split	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/file.vim	/^function! tlib#file#Split(filename) "{{{3$/;"	f
tlib#file#With	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/file.vim	/^function! tlib#file#With(fcmd, bcmd, files, ...) "{{{3$/;"	f
tlib#fixes#Winpos	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/fixes.vim	/^function! tlib#fixes#Winpos() "{{{3$/;"	f
tlib#grep#Do	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/grep.vim	/^function! tlib#grep#Do(cmd, rx, files) "{{{3$/;"	f
tlib#grep#List	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/grep.vim	/^function! tlib#grep#List(rx, files) "{{{3$/;"	f
tlib#grep#LocList	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/grep.vim	/^function! tlib#grep#LocList(rx, files) "{{{3$/;"	f
tlib#grep#QuickFixList	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/grep.vim	/^function! tlib#grep#QuickFixList(rx, files) "{{{3$/;"	f
tlib#hash#Adler32	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/hash.vim	/^function! tlib#hash#Adler32(chars) "{{{3$/;"	f
tlib#hash#Adler32_tlib	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/hash.vim	/^function! tlib#hash#Adler32_tlib(chars) "{{{3$/;"	f
tlib#hash#Adler32_vim	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/hash.vim	/^function! tlib#hash#Adler32_vim(chars) "{{{3$/;"	f
tlib#hash#CRC32B	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/hash.vim	/^function! tlib#hash#CRC32B(chars) "{{{3$/;"	f
tlib#hash#CRC32B_ruby	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/hash.vim	/^function! tlib#hash#CRC32B_ruby(chars) "{{{3$/;"	f
tlib#hash#CRC32B_vim	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/hash.vim	/^function! tlib#hash#CRC32B_vim(chars) "{{{3$/;"	f
tlib#hash#CreateCrcTable	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/hash.vim	/^function! tlib#hash#CreateCrcTable() "{{{3$/;"	f
tlib#hook#Run	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/hook.vim	/^function! tlib#hook#Run(hook, ...) "{{{3$/;"	f
tlib#input#CommandSelect	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/input.vim	/^function! tlib#input#CommandSelect(command, ...) "{{{3$/;"	f
tlib#input#Dialog	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/input.vim	/^function! tlib#input#Dialog(text, options, default) "{{{3$/;"	f
tlib#input#Edit	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/input.vim	/^function! tlib#input#Edit(name, value, callback, ...) "{{{3$/;"	f
tlib#input#EditList	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/input.vim	/^function! tlib#input#EditList(query, list, ...) "{{{3$/;"	f
tlib#input#List	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/input.vim	/^function! tlib#input#List(type, ...) "{{{3$/;"	f
tlib#input#ListD	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/input.vim	/^function! tlib#input#ListD(dict) "{{{3$/;"	f
tlib#input#ListW	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/input.vim	/^function! tlib#input#ListW(world, ...) "{{{3$/;"	f
tlib#input#Resume	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/input.vim	/^function! tlib#input#Resume(name, pick, bufnr) "{{{3$/;"	f
tlib#list#All	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/list.vim	/^function! tlib#list#All(list, expr) "{{{3$/;"	f
tlib#list#Any	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/list.vim	/^function! tlib#list#Any(list, expr) "{{{3$/;"	f
tlib#list#Compact	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/list.vim	/^function! tlib#list#Compact(list) "{{{3$/;"	f
tlib#list#Find	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/list.vim	/^function! tlib#list#Find(list, filter, ...) "{{{3$/;"	f
tlib#list#FindAll	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/list.vim	/^function! tlib#list#FindAll(list, filter, ...) "{{{3$/;"	f
tlib#list#Flatten	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/list.vim	/^function! tlib#list#Flatten(list) "{{{3$/;"	f
tlib#list#Inject	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/list.vim	/^function! tlib#list#Inject(list, value, Function) "{{{3$/;"	f
tlib#list#Remove	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/list.vim	/^function! tlib#list#Remove(list, element) "{{{3$/;"	f
tlib#list#RemoveAll	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/list.vim	/^function! tlib#list#RemoveAll(list, element) "{{{3$/;"	f
tlib#list#ToDictionary	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/list.vim	/^function! tlib#list#ToDictionary(list, default, ...) "{{{3$/;"	f
tlib#list#Uniq	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/list.vim	/^function! tlib#list#Uniq(list, ...) "{{{3$/;"	f
tlib#list#Zip	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/list.vim	/^function! tlib#list#Zip(lists, ...) "{{{3$/;"	f
tlib#loclist#Browse	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/loclist.vim	/^function! tlib#loclist#Browse(...) abort "{{{3$/;"	f
tlib#map#PumAccept	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/map.vim	/^function! tlib#map#PumAccept(key) "{{{3$/;"	f
tlib#normal#WithRegister	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/normal.vim	/^function! tlib#normal#WithRegister(cmd, ...) "{{{3$/;"	f
tlib#notify#Echo	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/notify.vim	/^function! tlib#notify#Echo(text, ...)$/;"	f
tlib#notify#PrintError	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/notify.vim	/^function! tlib#notify#PrintError() abort "{{{3$/;"	f
tlib#notify#TrimMessage	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/notify.vim	/^function! tlib#notify#TrimMessage(message) "{{{3$/;"	f
tlib#number#ConvertBase	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/number.vim	/^function! tlib#number#ConvertBase(num, base, ...) "{{{3$/;"	f
tlib#paragraph#GetMetric	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/paragraph.vim	/^function! tlib#paragraph#GetMetric() "{{{3$/;"	f
tlib#paragraph#Move	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/paragraph.vim	/^function! tlib#paragraph#Move(direction, count)$/;"	f
tlib#persistent#Dir	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/persistent.vim	/^function! tlib#persistent#Dir() "{{{3$/;"	f
tlib#persistent#Filename	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/persistent.vim	/^function! tlib#persistent#Filename(type, ...) "{{{3$/;"	f
tlib#persistent#Get	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/persistent.vim	/^function! tlib#persistent#Get(...) "{{{3$/;"	f
tlib#persistent#MTime	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/persistent.vim	/^function! tlib#persistent#MTime(cfile) "{{{3$/;"	f
tlib#persistent#Save	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/persistent.vim	/^function! tlib#persistent#Save(cfile, dictionary) "{{{3$/;"	f
tlib#persistent#Value	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/persistent.vim	/^function! tlib#persistent#Value(...) "{{{3$/;"	f
tlib#progressbar#Display	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/progressbar.vim	/^function! tlib#progressbar#Display(value, ...) "{{{3$/;"	f
tlib#progressbar#Init	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/progressbar.vim	/^function! tlib#progressbar#Init(max, ...) "{{{3$/;"	f
tlib#progressbar#Restore	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/progressbar.vim	/^function! tlib#progressbar#Restore() "{{{3$/;"	f
tlib#qfl#AgentEditLine	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/qfl.vim	/^function! tlib#qfl#AgentEditLine(world, selected) "{{{3$/;"	f
tlib#qfl#AgentEditQFE	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/qfl.vim	/^function! tlib#qfl#AgentEditQFE(world, selected, ...) "{{{3$/;"	f
tlib#qfl#AgentGotoQFE	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/qfl.vim	/^function! tlib#qfl#AgentGotoQFE(world, selected) "{{{3$/;"	f
tlib#qfl#AgentPreviewQFE	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/qfl.vim	/^function! tlib#qfl#AgentPreviewQFE(world, selected) "{{{3$/;"	f
tlib#qfl#AgentSplitBuffer	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/qfl.vim	/^function! tlib#qfl#AgentSplitBuffer(world, selected) "{{{3$/;"	f
tlib#qfl#AgentTabBuffer	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/qfl.vim	/^function! tlib#qfl#AgentTabBuffer(world, selected) "{{{3$/;"	f
tlib#qfl#AgentVSplitBuffer	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/qfl.vim	/^function! tlib#qfl#AgentVSplitBuffer(world, selected) "{{{3$/;"	f
tlib#qfl#AgentWithSelected	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/qfl.vim	/^function! tlib#qfl#AgentWithSelected(world, selected, ...) "{{{3$/;"	f
tlib#qfl#Balloon	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/qfl.vim	/^function! tlib#qfl#Balloon() "{{{3$/;"	f
tlib#qfl#Browse	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/qfl.vim	/^function! tlib#qfl#Browse(...) abort "{{{3$/;"	f
tlib#qfl#EditLine	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/qfl.vim	/^function! tlib#qfl#EditLine(lnum) "{{{3$/;"	f
tlib#qfl#FormatQFLE	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/qfl.vim	/^function! tlib#qfl#FormatQFLE(qfe) dict abort "{{{3$/;"	f
tlib#qfl#InitListBuffer	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/qfl.vim	/^function! tlib#qfl#InitListBuffer(world) "{{{3$/;"	f
tlib#qfl#QfeFilename	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/qfl.vim	/^function! tlib#qfl#QfeFilename(qfe) abort "{{{3$/;"	f
tlib#qfl#QflList	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/qfl.vim	/^function! tlib#qfl#QflList(list, ...) abort "{{{3$/;"	f
tlib#qfl#RunCmdOnSelected	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/qfl.vim	/^function! tlib#qfl#RunCmdOnSelected(world, selected, cmd, ...) "{{{3$/;"	f
tlib#qfl#SetFollowCursor	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/qfl.vim	/^function! tlib#qfl#SetFollowCursor(world, selected) "{{{3$/;"	f
tlib#qfl#SetSyntax	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/qfl.vim	/^function! tlib#qfl#SetSyntax() dict abort "{{{3$/;"	f
tlib#rx#Escape	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/rx.vim	/^function! tlib#rx#Escape(text, ...) "{{{3$/;"	f
tlib#rx#EscapeReplace	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/rx.vim	/^function! tlib#rx#EscapeReplace(text, ...) "{{{3$/;"	f
tlib#rx#LooksLikeRegexp	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/rx.vim	/^function! tlib#rx#LooksLikeRegexp(text) abort "{{{3$/;"	f
tlib#rx#Suffixes	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/rx.vim	/^function! tlib#rx#Suffixes(...) "{{{3$/;"	f
tlib#scratch#CloseScratch	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/scratch.vim	/^function! tlib#scratch#CloseScratch(keyargs, ...) "{{{3$/;"	f
tlib#scratch#UseScratch	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/scratch.vim	/^function! tlib#scratch#UseScratch(...) "{{{3$/;"	f
tlib#selection#GetSelection	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/selection.vim	/^function! tlib#selection#GetSelection(mode, ...) range "{{{3$/;"	f
tlib#signs#ClearAll	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/signs.vim	/^function! tlib#signs#ClearAll(sign) "{{{3$/;"	f
tlib#signs#ClearBuffer	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/signs.vim	/^function! tlib#signs#ClearBuffer(sign, bufnr) "{{{3$/;"	f
tlib#signs#Mark	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/signs.vim	/^function! tlib#signs#Mark(sign, list) "{{{3$/;"	f
tlib#string#Chomp	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/string.vim	/^function! tlib#string#Chomp(string, ...) "{{{3$/;"	f
tlib#string#Count	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/string.vim	/^function! tlib#string#Count(string, rx) "{{{3$/;"	f
tlib#string#Format	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/string.vim	/^function! tlib#string#Format(template, dict) "{{{3$/;"	f
tlib#string#Input	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/string.vim	/^function! tlib#string#Input(...) abort "{{{3$/;"	f
tlib#string#MatchAll	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/string.vim	/^function! tlib#string#MatchAll(string, regexp, ...) abort "{{{3$/;"	f
tlib#string#Printf1	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/string.vim	/^function! tlib#string#Printf1(format, string) "{{{3$/;"	f
tlib#string#RemoveBackslashes	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/string.vim	/^function! tlib#string#RemoveBackslashes(text, ...) "{{{3$/;"	f
tlib#string#SplitCommaList	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/string.vim	/^function! tlib#string#SplitCommaList(text, ...) abort "{{{3$/;"	f
tlib#string#Strip	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/string.vim	/^function! tlib#string#Strip(string) "{{{3$/;"	f
tlib#string#TrimLeft	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/string.vim	/^function! tlib#string#TrimLeft(string) "{{{3$/;"	f
tlib#string#TrimRight	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/string.vim	/^function! tlib#string#TrimRight(string) "{{{3$/;"	f
tlib#syntax#Collect	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/syntax.vim	/^function! tlib#syntax#Collect() "{{{3$/;"	f
tlib#syntax#Names	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/syntax.vim	/^function! tlib#syntax#Names(...) "{{{3$/;"	f
tlib#sys#ConvertPath	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^function! tlib#sys#ConvertPath(converter, filename) "{{{3$/;"	f
tlib#sys#FileArgs	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^function! tlib#sys#FileArgs(cmd, files) "{{{3$/;"	f
tlib#sys#GetCmd	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^function! tlib#sys#GetCmd(cmd) "{{{3$/;"	f
tlib#sys#IsCygwinBin	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^function! tlib#sys#IsCygwinBin(cmd) "{{{3$/;"	f
tlib#sys#IsExecutable	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^function! tlib#sys#IsExecutable(cmd, ...) "{{{3$/;"	f
tlib#sys#IsSpecial	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^function! tlib#sys#IsSpecial(filename) abort "{{{3$/;"	f
tlib#sys#MaybeUseCygpath	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^function! tlib#sys#MaybeUseCygpath(cmd) "{{{3$/;"	f
tlib#sys#Open	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^function! tlib#sys#Open(filename) abort "{{{3$/;"	f
tlib#sys#SystemInDir	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/sys.vim	/^function! tlib#sys#SystemInDir(dir, ...) abort "{{{3$/;"	f
tlib#tab#BufMap	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/tab.vim	/^function! tlib#tab#BufMap() "{{{3$/;"	f
tlib#tab#Set	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/tab.vim	/^function! tlib#tab#Set(tabnr) "{{{3$/;"	f
tlib#tab#TabWinNr	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/tab.vim	/^function! tlib#tab#TabWinNr(buffer) "{{{3$/;"	f
tlib#tag#Collect	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/tag.vim	/^function! tlib#tag#Collect(constraints, ...) "{{{3$/;"	f
tlib#tag#Format	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/tag.vim	/^function! tlib#tag#Format(tag) "{{{3$/;"	f
tlib#tag#Retrieve	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/tag.vim	/^function! tlib#tag#Retrieve(rx, ...) "{{{3$/;"	f
tlib#textobjects#Init	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/textobjects.vim	/^function! tlib#textobjects#Init() "{{{3$/;"	f
tlib#textobjects#StandardParagraph	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/textobjects.vim	/^function! tlib#textobjects#StandardParagraph() "{{{3$/;"	f
tlib#time#Diff	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/time.vim	/^function! tlib#time#Diff(a, b, ...) "{{{3$/;"	f
tlib#time#DiffMSecs	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/time.vim	/^function! tlib#time#DiffMSecs(a, b, ...) "{{{3$/;"	f
tlib#time#FormatNow	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/time.vim	/^function! tlib#time#FormatNow() "{{{3$/;"	f
tlib#time#MSecs	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/time.vim	/^function! tlib#time#MSecs() "{{{3$/;"	f
tlib#time#Now	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/time.vim	/^function! tlib#time#Now() "{{{3$/;"	f
tlib#trace#Backtrace	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/trace.vim	/^function! tlib#trace#Backtrace(caller) abort "{{{3$/;"	f
tlib#trace#Disable	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/trace.vim	/^function! tlib#trace#Disable() abort "{{{3$/;"	f
tlib#trace#Enable	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/trace.vim	/^function! tlib#trace#Enable() abort "{{{3$/;"	f
tlib#trace#Print	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/trace.vim	/^function! tlib#trace#Print(caller, vars, values) abort "{{{3$/;"	f
tlib#trace#Printer_echom	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/trace.vim	/^function! tlib#trace#Printer_echom(type, text, args) abort "{{{3$/;"	f
tlib#trace#Printer_file	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/trace.vim	/^function! tlib#trace#Printer_file(type, text, args) abort "{{{3$/;"	f
tlib#trace#Set	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/trace.vim	/^function! tlib#trace#Set(vars) abort "{{{3$/;"	f
tlib#type#Are	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/type.vim	/^function! tlib#type#Are(vals, type) abort "{{{3$/;"	f
tlib#type#Check	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/type.vim	/^function! tlib#type#Check(caller, names, vals) abort "{{{3$/;"	f
tlib#type#Define	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/type.vim	/^function! tlib#type#Define(name, schema) abort "{{{3$/;"	f
tlib#type#Disable	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/type.vim	/^function! tlib#type#Disable() abort "{{{3$/;"	f
tlib#type#Enable	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/type.vim	/^function! tlib#type#Enable() abort "{{{3$/;"	f
tlib#type#Has	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/type.vim	/^function! tlib#type#Has(val, schema) abort "{{{3$/;"	f
tlib#type#Have	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/type.vim	/^function! tlib#type#Have(vals, schema) abort "{{{3$/;"	f
tlib#type#Is	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/type.vim	/^function! tlib#type#Is(val, type) abort "{{{3$/;"	f
tlib#type#IsDictionary	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/type.vim	/^function! tlib#type#IsDictionary(expr)$/;"	f
tlib#type#IsFuncref	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/type.vim	/^function! tlib#type#IsFuncref(expr)$/;"	f
tlib#type#IsList	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/type.vim	/^function! tlib#type#IsList(expr)$/;"	f
tlib#type#IsNil	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/type.vim	/^function! tlib#type#IsNil(expr) abort "{{{3$/;"	f
tlib#type#IsNumber	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/type.vim	/^function! tlib#type#IsNumber(expr)$/;"	f
tlib#type#IsString	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/type.vim	/^function! tlib#type#IsString(expr)$/;"	f
tlib#url#Decode	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/url.vim	/^function! tlib#url#Decode(url) "{{{3$/;"	f
tlib#url#DecodeChar	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/url.vim	/^function! tlib#url#DecodeChar(char) "{{{3$/;"	f
tlib#url#Encode	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/url.vim	/^function! tlib#url#Encode(url, ...) "{{{3$/;"	f
tlib#url#EncodeChar	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/url.vim	/^function! tlib#url#EncodeChar(char) "{{{3$/;"	f
tlib#var#EGet	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/var.vim	/^function! tlib#var#EGet(var, namespace, ...) "{{{3$/;"	f
tlib#var#Get	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/var.vim	/^function! tlib#var#Get(var, namespace, ...) "{{{3$/;"	f
tlib#var#Let	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/var.vim	/^function! tlib#var#Let(name, val) "{{{3$/;"	f
tlib#var#List	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/var.vim	/^function! tlib#var#List(rx, ...) "{{{3$/;"	f
tlib#vcs#Diff	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/vcs.vim	/^function! tlib#vcs#Diff(filename, ...) "{{{3$/;"	f
tlib#vcs#Executable	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/vcs.vim	/^function! tlib#vcs#Executable(type) "{{{3$/;"	f
tlib#vcs#FindVCS	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/vcs.vim	/^function! tlib#vcs#FindVCS(filename) "{{{3$/;"	f
tlib#vcs#GitLsPostprocess	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/vcs.vim	/^function! tlib#vcs#GitLsPostprocess(filename) abort "{{{3$/;"	f
tlib#vcs#Ls	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/vcs.vim	/^function! tlib#vcs#Ls(...) "{{{3$/;"	f
tlib#vim#CopyFunction	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/vim.vim	/^function! tlib#vim#CopyFunction(old, new, ...) "{{{3$/;"	f
tlib#vim#Maximize	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/vim.vim	/^    fun! tlib#vim#Maximize(fullscreen) "{{{3$/;"	f
tlib#vim#RestoreWindow	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/vim.vim	/^    function! tlib#vim#RestoreWindow() "{{{3$/;"	f
tlib#win#GetLayout	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/win.vim	/^function! tlib#win#GetLayout(...) "{{{3$/;"	f
tlib#win#List	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/win.vim	/^function! tlib#win#List() "{{{3$/;"	f
tlib#win#Set	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/win.vim	/^function! tlib#win#Set(winnr) "{{{3$/;"	f
tlib#win#SetLayout	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/win.vim	/^function! tlib#win#SetLayout(layout) "{{{3$/;"	f
tlib#win#Width	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/win.vim	/^function! tlib#win#Width(wnr) "{{{3$/;"	f
tlib#win#WinDo	pack/plugins/start/tomtom-tlib-vim/autoload/tlib/win.vim	/^function! tlib#win#WinDo(ex) "{{{3$/;"	f
tmux-complete.vim	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^# tmux-complete.vim$/;"	h
tmux_enabled	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:tmux_enabled()$/;"	f
tmuxcomplete#complete	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#complete(findstart, base)$/;"	f
tmuxcomplete#completions	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#completions(base, capture_args, splitmode)$/;"	f
tmuxcomplete#findstartWORD	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#findstartWORD(line, max)$/;"	f
tmuxcomplete#findstartword	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#findstartword(line, max)$/;"	f
tmuxcomplete#gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#gather_candidates()$/;"	f
tmuxcomplete#grepargs	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#grepargs(base)$/;"	f
tmuxcomplete#init	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#init()$/;"	f
tmuxcomplete#list	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#list(splitmode, scrollback)$/;"	f
tmuxify#get_associated_pane	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#get_associated_pane(...) abort$/;"	f
tmuxify#pane_command	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#pane_command(bang, ...) abort$/;"	f
tmuxify#pane_create	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#pane_create(bang, ...) abort$/;"	f
tmuxify#pane_kill	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#pane_kill(bang) abort$/;"	f
tmuxify#pane_run	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#pane_run(bang, ...) abort$/;"	f
tmuxify#pane_send	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#pane_send(bang, ...) abort$/;"	f
tmuxify#pane_send_raw	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#pane_send_raw(cmd, bang) abort$/;"	f
tmuxify#pane_set	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#pane_set(bang, ...) abort$/;"	f
tmuxify#set_run_command_for_filetype	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#set_run_command_for_filetype(...) abort$/;"	f
toBool	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:toBool(val) abort$/;"	f
to_256	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:to_256(rgb)$/;"	f
tokenize	pack/plugins/start/junegunn-fzf/fzf	/^    def tokenize str$/;"	f	class:start_search.Matcher
tokenize	pack/plugins/start/junegunn-fzf/fzf	/^  def tokenize delim, nth$/;"	f	class:String
topindent	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^function s:topindent(lnum)$/;"	f
transform	pack/plugins/start/junegunn-fzf/fzf	/^  def transform line$/;"	f
triggerReselect	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:triggerReselect()$/;"	f
triggerUndo	pack/plugins/start/wellle-targets-vim/autoload/targets.vim	/^function! s:triggerUndo()$/;"	f
trim	pack/plugins/start/junegunn-fzf/fzf	/^    def trim str, len, left$/;"	f	class:usage
trim	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:trim(str) abort$/;"	f
trimLeft	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func trimLeft(runes []rune, width int) ([]rune, int32) {$/;"	f
trimRight	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func trimRight(runes []rune, width int) ([]rune, int) {$/;"	f
trim_bracket	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:trim_bracket(val) abort$/;"	f
trim_end	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:trim_end(str) abort$/;"	f
trim_start	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:trim_start(str) abort$/;"	f
truncate	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate_skipping	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
try_curl	pack/plugins/start/junegunn-fzf/install	/^try_curl() {$/;"	f
try_wget	pack/plugins/start/junegunn-fzf/install	/^try_wget() {$/;"	f
ttags#GotoTag	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! ttags#GotoTag(world, selected) "{{{3$/;"	f
ttags#Highlight	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! ttags#Highlight(tags) "{{{3$/;"	f
ttags#InsertTemplate	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! ttags#InsertTemplate(world, selected) "{{{3$/;"	f
ttags#Kinds	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! ttags#Kinds(...) "{{{3$/;"	f
ttags#List	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! ttags#List(use_extra, ...) "{{{3$/;"	f
ttags#PreviewTag	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! ttags#PreviewTag(world, selected) "{{{3$/;"	f
ttags#RewriteCygwinTag	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! ttags#RewriteCygwinTag(filename) "{{{3$/;"	f
ttags#Select	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! ttags#Select(use_extra, keyargs_as_string) "{{{3$/;"	f
ttags#SelectTags	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! ttags#SelectTags(use_extra, constraints) "{{{3$/;"	f
tui	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^package tui$/;"	p
tui	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^package tui$/;"	p
tui	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^package tui$/;"	p
tui	pack/plugins/start/junegunn-fzf/src/tui/tui_test.go	/^package tui$/;"	p
u	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^    nmap u <Plug>(RepeatUndo)$/;"	m
uniq	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^  function! s:uniq(list)$/;"	f
uniq	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:uniq(list)$/;"	f
uniq	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
uniq	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:uniq(list)$/;"	f
uniq_by	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
unite#sources#tmuxcomplete#define	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^function! unite#sources#tmuxcomplete#define()$/;"	f
unknown_coercion	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:unknown_coercion(letter,word)$/;"	f
unload	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:unload() abort$/;"	f
unsets	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^    def unsets$/;"	f	class:Shell
unshift	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
until	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def until pane = 0$/;"	f	class:Tmux
updatePlugin	get-plugins.go	/^func updatePlugin(wg *sync.WaitGroup, org, plugin string) {$/;"	f
update_list	pack/plugins/start/junegunn-fzf/fzf	/^  def update_list wipe$/;"	f	class:start_search
update_readme	pack/plugins/start/sheerun-vim-polyglot/build	/^update_readme() {$/;"	f
update_tags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! s:update_tags(bufno, module, write_mode, queue_mode) abort$/;"	f
upgrade	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:upgrade(dict)$/;"	f
uppercase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:uppercase(word)$/;"	f
usage	pack/plugins/start/junegunn-fzf/fzf	/^  def usage x, message = nil$/;"	f
usage	pack/plugins/start/junegunn-fzf/src/options.go	/^const usage = `usage: fzf [options]$/;"	c
usage: fzf-tmux [-u|-d [HEIGHT[%]]] [-l|-r [WIDTH[%]]] [--] [FZF OPTIONS]	pack/plugins/start/junegunn-fzf/README.md	/^# usage: fzf-tmux [-u|-d [HEIGHT[%]]] [-l|-r [WIDTH[%]]] [--] [FZF OPTIONS]$/;"	h
util	pack/plugins/start/junegunn-fzf/src/util/atomicbool.go	/^package util$/;"	p
util	pack/plugins/start/junegunn-fzf/src/util/atomicbool_test.go	/^package util$/;"	p
util	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^package util$/;"	p
util	pack/plugins/start/junegunn-fzf/src/util/chars_test.go	/^package util$/;"	p
util	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^package util$/;"	p
util	pack/plugins/start/junegunn-fzf/src/util/eventbox_test.go	/^package util$/;"	p
util	pack/plugins/start/junegunn-fzf/src/util/slab.go	/^package util$/;"	p
util	pack/plugins/start/junegunn-fzf/src/util/util.go	/^package util$/;"	p
util	pack/plugins/start/junegunn-fzf/src/util/util_test.go	/^package util$/;"	p
util	pack/plugins/start/junegunn-fzf/src/util/util_unix.go	/^package util$/;"	p
util	pack/plugins/start/junegunn-fzf/src/util/util_windows.go	/^package util$/;"	p
v	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^    nnoremap <expr> <buffer> v &splitright ? "\\<C-w>\\<CR>\\<C-w>L\\<C-w>p\\<C-w>J\\<C-w>p" : "\\<C-w>\\<CR>\\<C-w>H\\<C-w>p\\<C-w>J\\<C-w>p"$/;"	m
v=	pack/plugins/start/junegunn-fzf/fzf	/^    def v= v$/;"	f	class:start_search.MouseEvent
version	pack/plugins/start/junegunn-fzf/fzf	/^    def version$/;"	f
version	pack/plugins/start/junegunn-fzf/src/constants.go	/^	version = "0.15.9"$/;"	c
vim	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^augroup vim-go$/;"	a
vim	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^augroup vim-go-hi$/;"	a
vim	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^import vim$/;"	m
vim	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^augroup vim-go-hi$/;"	a
vim-go	pack/plugins/start/fatih-vim-go/README.md	/^# vim-go$/;"	h
vim-polyglot [![Build Status][travis-img-url]][travis-url] [![Maintenance](https://img.shields.io/maintenance/yes/2016.svg?maxAge=2592000)]()	pack/plugins/start/sheerun-vim-polyglot/README.md	/^# vim-polyglot [![Build Status][travis-img-url]][travis-url] [![Maintenance](https:\/\/img.shields.io\/maintenance\/yes\/2016.svg?maxAge=2592000)]()$/;"	h
vim-qf	pack/plugins/start/romainl-vim-qf/README.md	/^# vim-qf$/;"	h
vim-qlist	pack/plugins/start/romainl-vim-qlist/README.md	/^# vim-qlist$/;"	h
vim-tmuxify	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^# vim-tmuxify$/;"	h
vinegar	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^augroup vinegar$/;"	a
vital#	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! vital#{s:self_version}#new() abort$/;"	f
vital#of	pack/plugins/start/sheerun-vim-polyglot/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
vmove	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) vmove(o int) {$/;"	f
vselect	pack/plugins/start/junegunn-fzf/fzf	/^  def vselect &prc$/;"	f	class:start_search
vset	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) vset(o int) bool {$/;"	f
wait	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^def wait$/;"	f
warn	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:warn(message)$/;"	f
warn	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:warn(msg)$/;"	f
warn	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:warn(str) abort$/;"	f
warning	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^		let warning = escape(substitute(w, '[\\,]', '%\\\\\\\\&', 'g'), ' ')$/;"	v
wcswidth	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
widget_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let widget_attributes = {'aria-autocomplete': ['inline', 'list', 'both', 'none'], 'aria-checked': ['true', 'false', 'mixed', 'undefined'], 'aria-disabled': ['true', 'false'], 'aria-expanded': ['true', 'false', 'undefined'], 'aria-haspopup': ['true', 'false'], 'aria-hidden': ['true', 'false'], 'aria-invalid': ['grammar', 'spelling', 'true', 'false'], 'aria-label': [], 'aria-level': [], 'aria-multiline': ['true', 'false'], 'aria-multiselectable': ['true', 'false'], 'aria-orientation': ['horizontal', 'vertical'], 'aria-pressed': ['true', 'false', 'mixed', 'undefined'], 'aria-readonly': ['true', 'false'], 'aria-required': ['true', 'false'], 'aria-selected': ['true', 'false', 'undefined'], 'aria-sort': ['ascending', 'descending', 'none', 'other'], 'aria-valuemax': [], 'aria-valuemin': [], 'aria-valuenow': [], 'aria-valuetext': []}$/;"	v
widget_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let widget_role = ['alert', 'alertdialog', 'button', 'checkbox', 'combobox', 'dialog', 'gridcell', 'link', 'log', 'marquee', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'option', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'slider', 'spinbutton', 'status', 'tab', 'tabpanel', 'textbox', 'timer', 'tooltip', 'treeitem', 'combobox', 'grid', 'listbox', 'menu', 'menubar', 'radiogroup', 'tablist', 'tree', 'treegrid']$/;"	v
widget_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let widget_role = ['alert', 'alertdialog', 'button', 'checkbox', 'combobox', 'dialog', 'gridcell', 'link', 'log', 'marquee', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'option', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'slider', 'spinbutton', 'status', 'tab', 'tabpanel', 'textbox', 'timer', 'tooltip', 'treeitem', 'combobox', 'grid', 'listbox', 'menu', 'menubar', 'radiogroup', 'tablist', 'tree', 'treegrid']$/;"	v
width	pack/plugins/start/junegunn-fzf/fzf	/^    def width str$/;"	f	class:usage
win	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (w *Window) win() *C.WINDOW {$/;"	f
win	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) win() *WindowTcell {$/;"	f
windo	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	noautocmd windo call s:WindowCheck(0)$/;"	m
windo	pack/plugins/start/skywind3000-asyncrun-vim/plugin/asyncrun.vim	/^	noautocmd windo call s:WindowCheck(1)$/;"	m
windowPosition	pack/plugins/start/junegunn-fzf/src/options.go	/^type windowPosition int$/;"	t
windows_sink	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:windows_sink(line)$/;"	f
winshell	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:winshell() abort$/;"	f
withPrefixLengths	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^func withPrefixLengths(tokens []util.Chars, begin int) []Token {$/;"	f
with_index	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
within?	pack/plugins/start/junegunn-fzf/fzf	/^    def within?$/;"	f	class:start_search.MouseEvent
words	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:words()$/;"	f
words.gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^function! s:words.gather_candidates(args, context)$/;"	f
wrap	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^function! s:wrap(name, opts, bang)$/;"	f
wrap	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f
wrap	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:wrap(string,char,type,removed,special)$/;"	f
wrap_a	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^function! s:wrap_a(back,forward) abort$/;"	f
wrap_around	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^function! s:wrap_around()$/;"	f
wrap_i	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^function! s:wrap_i(back,forward) abort$/;"	f
wrap_inside	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^function! s:wrap_inside()$/;"	f
wrapped	pack/plugins/start/junegunn-fzf-vim/autoload/fzf/vim.vim	/^  let wrapped['sink*'] = remove(wrapped, 'newsink')$/;"	v
wrapreg	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:wrapreg(reg,char,removed,special)$/;"	f
writeToFile	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:writeToFile(message, file)$/;"	f
write_triggered_update_tags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! s:write_triggered_update_tags(bufno) abort$/;"	f
writelines	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def writelines path, lines$/;"	f
xml_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let xml_attributes = {'xml:lang': lang_tag, 'xml:space': ['preserve'], 'xml:base': [], 'xmlns': ['http:\/\/www.w3.org\/1999\/xhtml', 'http:\/\/www.w3.org\/1998\/Math\/MathML', 'http:\/\/www.w3.org\/2000\/svg', 'http:\/\/www.w3.org\/1999\/xlink']}$/;"	v
xterm_launcher	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:xterm_launcher()$/;"	f
yS	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap yS  <Plug>YSurround$/;"	m
ySS	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap ySS <Plug>YSsurround$/;"	m
ySs	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap ySs <Plug>YSsurround$/;"	m
ys	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap ys  <Plug>Ysurround$/;"	m
yss	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap yss <Plug>Yssurround$/;"	m
z	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^  omap z <Plug>Sneak_s$/;"	m
zip	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:zip(...) abort$/;"	f
zip_fill	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
zsh	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^    def zsh$/;"	f	class:Shell
{	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^nnoremap <silent> <buffer> { :call qf#PreviousFile()<CR>$/;"	m
{{	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{ {{}}<left><left>$/;"	m
{{!	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{! {{!}}<left><left>$/;"	m
{{#	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{# {{#}}<cr>{{\/}}<up><left><left>$/;"	m
{{<	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{< {{<}}<left><left>$/;"	m
{{>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{> {{>}}<left><left>$/;"	m
{{if	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{if {{#if }}<cr>{{\/if}}<up><left>$/;"	m
{{ife	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{ife {{#if }}<cr>{{else}}<cr>{{\/if}}<up><up><left>$/;"	m
{{{	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{{ {{{}}}<left><left><left>$/;"	m
}	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^nnoremap <silent> <buffer> } :call qf#NextFile()<CR>$/;"	m

!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
%%	vimrc	/^cnoremap %% <c-r>=fnameescape(expand('%'))<cr>$/;"	m
::	vimrc	/^cnoremap :: <c-r>=fnameescape(expand('%:p:h'))<cr>\/$/;"	m
;f	vimrc	/^inoremap <silent> ;f <C-x><C-f>$/;"	m
;i	vimrc	/^inoremap <silent> ;i <C-x><C-i>$/;"	m
;l	vimrc	/^inoremap <silent> ;l <C-x><C-l>$/;"	m
;n	vimrc	/^inoremap <silent> ;n <C-x><C-n>$/;"	m
;o	vimrc	/^inoremap <silent> ;o <C-x><C-o>$/;"	m
;p	vimrc	/^inoremap <silent> ;p <C-x><C-p>$/;"	m
;t	vimrc	/^inoremap <silent> ;t <C-x><C-]>$/;"	m
;u	vimrc	/^inoremap <silent> ;u <C-x><C-u>$/;"	m
<A-h>	vimrc	/^nnoremap <A-h> <C-w>h$/;"	m
<A-j>	vimrc	/^nnoremap <A-j> <C-w>j$/;"	m
<A-k>	vimrc	/^nnoremap <A-k> <C-w>k$/;"	m
<A-l>	vimrc	/^nnoremap <A-l> <C-w>l$/;"	m
<C-r><C-l>	vimrc	/^cnoremap <C-r><C-l> <C-r>=getline('.')<cr>$/;"	m
<F5>	vimrc	/^inoremap <F5> <C-R>=strftime("%c")<CR>$/;"	m
<F5>	vimrc	/^nnoremap <F5> "=strftime("%c")<CR>P$/;"	m
<backspace>	vimrc	/^nnoremap <silent> <backspace> :noh<CR>:QuickhlManualReset<CR>$/;"	m
<down>	vimrc	/^nmap <silent> <down>  <esc>:cnext<cr>$/;"	m
<leader>"	vimrc	/^nnoremap <silent> <leader>" :split<cr>$/;"	m
<leader>%	vimrc	/^nnoremap <silent> <leader>% :vsplit<cr>$/;"	m
<leader>.	vimrc	/^vnoremap <leader>. :norm! .<cr>$/;"	m
<leader>@	vimrc	/^vnoremap <leader>@ :norm! @<cr>$/;"	m
<leader>A	vimrc	/^nnoremap <leader>A :argadd **\/*$/;"	m
<leader>B	vimrc	/^    nnoremap <leader>B :Buffers<cr>$/;"	m
<leader>B	vimrc	/^nnoremap <leader>B :ls<cr>:b<space>$/;"	m
<leader>C	vimrc	/^    nnoremap <leader>C :BCommits<cr>$/;"	m
<leader>E	vimrc	/^    nnoremap <leader>E :terminal<space>$/;"	m
<leader>F	vimrc	/^    nnoremap <leader>F :GFiles<cr>$/;"	m
<leader>F	vimrc	/^nnoremap <leader>F :find <c-r>=fnameescape(expand('%:p:h'))<cr>\/*<C-d>$/;"	m
<leader>G	vimrc	/^nnoremap <leader>G :vimgrep<space>$/;"	m
<leader>H	vimrc	/^    nnoremap <leader>H :History:<cr>$/;"	m
<leader>M	vimrc	/^nnoremap <leader>M :make<cr>$/;"	m
<leader>S	vimrc	/^nnoremap <leader>S :QuickhlManualAdd<space>$/;"	m
<leader>T	vimrc	/^    nnoremap <leader>T :BTags<cr>$/;"	m
<leader>T	vimrc	/^nnoremap <leader>T :TTags<cr>$/;"	m
<leader>W	vimrc	/^nnoremap <leader>W <C-w>W$/;"	m
<leader>a	vimrc	/^nnoremap <leader>a :argadd <c-r>=fnameescape(expand('%:p:h'))<cr>\/*<C-d>$/;"	m
<leader>b	vimrc	/^nnoremap <leader>b :b <C-d>$/;"	m
<leader>c	vimrc	/^    nnoremap <leader>c :Commits<cr>$/;"	m
<leader>c	vimrc	/^nnoremap <silent> <leader>c <esc>:close<cr>$/;"	m
<leader>e	vimrc	/^    nnoremap <leader>e :terminal<cr>$/;"	m
<leader>f	vimrc	/^    nnoremap <leader>f :Files<cr>$/;"	m
<leader>f	vimrc	/^nnoremap <leader>f :find *$/;"	m
<leader>g	vimrc	/^        nnoremap <leader>g :Ag<space>$/;"	m
<leader>g	vimrc	/^nnoremap <leader>g :grep<space>$/;"	m
<leader>h	vimrc	/^    nnoremap <leader>h :History\/<cr>$/;"	m
<leader>i	vimrc	/^nnoremap <leader>i :Ilist<space>$/;"	m
<leader>j	vimrc	/^nnoremap <leader>j :QuickhlCwordToggle<cr>$/;"	m
<leader>o	vimrc	/^nnoremap <leader>o <C-w>o$/;"	m
<leader>q	vimrc	/^nnoremap <leader>q :b#<cr>$/;"	m
<leader>s	vimrc	/^nmap <leader>s <Plug>(quickhl-manual-this)$/;"	m
<leader>t	vimrc	/^    nnoremap <leader>t :Tags<cr>$/;"	m
<leader>t	vimrc	/^nnoremap <leader>t :TTags<space>*<space>*<space>.<cr>$/;"	m
<leader>w	vimrc	/^nnoremap <leader>w <C-w>w$/;"	m
<leader>z	vimrc	/^nnoremap <leader>z :call ToggleFolds()<cr>$/;"	m
<left>	vimrc	/^nmap <silent> <left> <esc>:lprev<cr>$/;"	m
<right>	vimrc	/^nmap <silent> <right> <esc>:lnext<cr>$/;"	m
<up>	vimrc	/^nmap <silent> <up> <esc>:cprev<cr>$/;"	m
AutoMkdir	vimrc	/^augroup AutoMkdir$/;"	a
AutoMkdir	vimrc	/^function! <SID>AutoMkdir() abort$/;"	f
F	vimrc	/^nmap F <Plug>Sneak_F$/;"	m
F	vimrc	/^omap F <Plug>Sneak_F$/;"	m
StripTrailingWhitespace	vimrc	/^function! StripTrailingWhitespace()$/;"	f
T	vimrc	/^nmap T <Plug>Sneak_T$/;"	m
T	vimrc	/^omap T <Plug>Sneak_T$/;"	m
ToggleFolds	vimrc	/^function! ToggleFolds()$/;"	f
Y	vimrc	/^nnoremap Y y\$$/;"	m
al	vimrc	/^omap al :<C-u>normal val<CR>$/;"	m
clearPack	get-plugins.go	/^func clearPack() {$/;"	f
exists	get-plugins.go	/^func exists(path string) (bool, error) {$/;"	f
f	vimrc	/^nmap f <Plug>Sneak_f$/;"	m
f	vimrc	/^omap f <Plug>Sneak_f$/;"	m
g:go_bin_path	vimrc	/^let g:go_bin_path=$HOME."\/go\/bin"$/;"	v
g:go_fmt_autosave	vimrc	/^let g:go_fmt_autosave=1$/;"	v
g:go_fmt_command	vimrc	/^let g:go_fmt_command="goimports"$/;"	v
g:go_fmt_experimental	vimrc	/^let g:go_fmt_experimental=1$/;"	v
g:go_highlight_build_constraints	vimrc	/^let g:go_highlight_build_constraints=1$/;"	v
g:go_highlight_fields	vimrc	/^let g:go_highlight_fields=1$/;"	v
g:go_highlight_functions	vimrc	/^let g:go_highlight_functions=1$/;"	v
g:go_highlight_generate_tags	vimrc	/^let g:go_highlight_generate_tags=1$/;"	v
g:go_highlight_methods	vimrc	/^let g:go_highlight_methods=1$/;"	v
g:go_highlight_operators	vimrc	/^let g:go_highlight_operators=1$/;"	v
g:go_highlight_string_spellcheck	vimrc	/^let g:go_highlight_string_spellcheck=0$/;"	v
g:go_highlight_types	vimrc	/^let g:go_highlight_types=1$/;"	v
g:go_jump_to_error	vimrc	/^let g:go_jump_to_error=0$/;"	v
g:gutentags_ctags_executable	vimrc	/^    let g:gutentags_ctags_executable="ctags-exuberant"$/;"	v
g:mucomplete#enable_auto_at_startup	vimrc	/^let g:mucomplete#enable_auto_at_startup=0$/;"	v
g:netrw_altfile	vimrc	/^let g:netrw_altfile=1$/;"	v
g:nofrils_heavycomments	vimrc	/^let g:nofrils_heavycomments=0 " bright comments off$/;"	v
g:nofrils_heavylinenumbers	vimrc	/^let g:nofrils_heavylinenumbers=0 " heavy line numbers off$/;"	v
g:nofrils_strbackgrounds	vimrc	/^let g:nofrils_strbackgrounds=0 " to turn off highlighted string backgrounds$/;"	v
g:quickhl_manual_colors	vimrc	/^let g:quickhl_manual_colors = ['gui=bold ctermfg=16 ctermbg=153 guifg=#ffffff guibg=#0a7383', 'gui=bold ctermfg=black ctermbg=1 guibg=#a07040 guifg=#ffffff', 'gui=bold ctermfg=7 ctermbg=2 guibg=#4070a0 guifg=#ffffff', 'gui=bold ctermfg=black ctermbg=3 guibg=#40a070 guifg=#ffffff', 'gui=bold ctermfg=7 ctermbg=4 guibg=#70a040 guifg=#ffffff', 'gui=bold ctermfg=black ctermbg=5 guibg=#0070e0 guifg=#ffffff', 'gui=bold ctermfg=7 ctermbg=6 guibg=#007020 guifg=#ffffff', 'gui=bold ctermfg=7 ctermbg=21 guibg=#d4a00d guifg=#ffffff', 'gui=bold ctermfg=7 ctermbg=22 guibg=#06287e guifg=#ffffff', 'gui=bold ctermfg=black ctermbg=45 guibg=#5b3674 guifg=#ffffff', 'gui=bold ctermfg=7 ctermbg=16 guibg=#4c8f2f guifg=#ffffff', 'gui=bold ctermfg=black ctermbg=50 guibg=#1060a0 guifg=#ffffff', 'gui=bold ctermfg=7 ctermbg=56 guibg=#a0b0c0 guifg=black' ] $/;"	v
g:skip_loading_mswin	vimrc	/^let g:skip_loading_mswin=1 " Just in case :)$/;"	v
g:sneak#label	vimrc	/^let g:sneak#label=1$/;"	v
g:tmuxify_custom_command	vimrc	/^let g:tmuxify_custom_command='tmux split-window -d -l 10'$/;"	v
g:vim_markdown_folding_disabled	vimrc	/^let g:vim_markdown_folding_disabled=0$/;"	v
g:vim_markdown_frontmatter	vimrc	/^let g:vim_markdown_frontmatter=1$/;"	v
general	vimrc	/^    augroup general$/;"	a
gj	vimrc	/^nnoremap gj j$/;"	m
gk	vimrc	/^nnoremap gk k$/;"	m
i%	vimrc	/^omap i% :<C-u>normal vi%<CR>$/;"	m
il	vimrc	/^omap il :<C-u>normal vil<CR>$/;"	m
j	vimrc	/^nnoremap j gj$/;"	m
k	vimrc	/^nnoremap k gk$/;"	m
main	get-plugins.go	/^func main() {$/;"	f
main	get-plugins.go	/^package main$/;"	p
mapleader	vimrc	/^let mapleader="\\<space>"$/;"	v
mustNotError	get-plugins.go	/^func mustNotError(err error) {$/;"	f
robertmeta's vimrc	README.md	/^# robertmeta's vimrc$/;"	h
s:colorful_term	vimrc	/^let s:colorful_term=(&term=~"xterm") || (&term=~"screen")$/;"	v
s:running_windows	vimrc	/^let s:running_windows=has("win16") || has("win32") || has("win64")$/;"	v
t	vimrc	/^nmap t <Plug>Sneak_t$/;"	m
t	vimrc	/^omap t <Plug>Sneak_t$/;"	m
updatePlugin	get-plugins.go	/^func updatePlugin(wg *sync.WaitGroup, org, plugin string) {$/;"	f

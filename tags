![Apprentice](http://romainl.github.io/Apprentice/images/logo.png)	pack/colors/start/romainl-apprentice/README.md	/^# ![Apprentice](http:\/\/romainl.github.io\/Apprentice\/images\/logo.png)$/;"	h
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
$GOPATH	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let $GOPATH = go#path#Detect()$/;"	v
$GOPATH	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let $GOPATH = old_gopath$/;"	v
$GOPATH	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let $GOPATH = go#path#Detect()$/;"	v
$GOPATH	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let $GOPATH = old_gopath$/;"	v
$GOPATH	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let $GOPATH = go#path#Detect()$/;"	v
$GOPATH	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let $GOPATH = old_gopath$/;"	v
%%	vimrc	/^cnoremap %% <c-r>=fnameescape(expand('%'))<cr>$/;"	m
(-[udlr]: up/down/left/right)	pack/plugins/start/junegunn-fzf/README.md	/^#        (-[udlr]: up\/down\/left\/right)$/;"	h
*Backward incompatible changes*	pack/plugins/start/junegunn-fzf/CHANGELOG.md	/^### *Backward incompatible changes*$/;"	k
,	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^    nmap , <Plug>Sneak_,$/;"	m
,	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^    omap , <Plug>Sneak_,$/;"	m
- Note that ag only lists files not directories	pack/plugins/start/junegunn-fzf/README.md	/^# - Note that ag only lists files not directories$/;"	h
- See the source code (completion.{bash,zsh}) for the details.	pack/plugins/start/junegunn-fzf/README.md	/^# - See the source code (completion.{bash,zsh}) for the details.$/;"	h
- The first argument to the function is the base path to start traversal	pack/plugins/start/junegunn-fzf/README.md	/^# - The first argument to the function is the base path to start traversal$/;"	h
- You can select multiple items with TAB key	pack/plugins/start/junegunn-fzf/README.md	/^# - You can select multiple items with TAB key$/;"	h
.	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^    nmap . <Plug>(RepeatDot)$/;"	m
1.0 Release Candidate	pack/colors/start/nlknguyen-papercolor-theme/ROADMAP.md	/^# 1.0 Release Candidate$/;"	h
1.10 (November 24, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.10 (November 24, 2016)$/;"	i
1.11 - Unplanned	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.11 - Unplanned$/;"	i
1.6 (April 25, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.6 (April 25, 2016)$/;"	i
1.7 (June 7, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.7 (June 7, 2016)$/;"	i
1.7.1 (June 7, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.7.1 (June 7, 2016)$/;"	i
1.8 (July 31, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.8 (July 31, 2016)$/;"	i
1.9 (September 13, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.9 (September 13, 2016)$/;"	i
256color-ready Terminal emulators	pack/colors/start/romainl-apprentice/README.md	/^### 256color-ready Terminal emulators$/;"	k
::	vimrc	/^cnoremap :: <c-r>=fnameescape(expand('%:p:h'))<cr>\/$/;"	m
;	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^  nmap ; <Plug>Sneak_;$/;"	m
;	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^  omap ; <Plug>Sneak_;$/;"	m
;f	vimrc	/^inoremap <silent> ;f <C-x><C-f>$/;"	m
;i	vimrc	/^inoremap <silent> ;i <C-x><C-i>$/;"	m
;l	vimrc	/^inoremap <silent> ;l <C-x><C-l>$/;"	m
;n	vimrc	/^inoremap <silent> ;n <C-x><C-n>$/;"	m
;o	vimrc	/^inoremap <silent> ;o <C-x><C-o>$/;"	m
;p	vimrc	/^inoremap <silent> ;p <C-x><C-p>$/;"	m
;t	vimrc	/^inoremap <silent> ;t <C-x><C-]>$/;"	m
;u	vimrc	/^inoremap <silent> ;u <C-x><C-u>$/;"	m
<C-R>	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^    nmap <C-R> <Plug>(RepeatRedo)$/;"	m
<C-]>	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-]> :GoDef<cr>$/;"	m
<C-r><C-l>	vimrc	/^cnoremap <C-r><C-l> <C-r>=getline('.')<cr>$/;"	m
<C-t>	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-t> :<C-U>call go#def#StackPop(v:count1)<cr>$/;"	m
<C-w><C-]>	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-w><C-]> :<C-u>call go#def#Jump("split")<CR>$/;"	m
<C-w>]	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-w>] :<C-u>call go#def#Jump("split")<CR>$/;"	m
<F5>	vimrc	/^inoremap <F5> <C-R>=strftime("%c")<CR>$/;"	m
<F5>	vimrc	/^nnoremap <F5> "=strftime("%c")<CR>P$/;"	m
<Leader>*	pack/plugins/start/vim-scripts-multiplesearch/plugin/MultipleSearch.vim	/^    vnoremap <silent> <Leader>* y:call MultipleSearch#MultipleSearch(0,'\\V'.substitute(escape(@@,"\\\\\/\\"'"),"\\n",'\\\\n','ge'))<CR>$/;"	m
<Leader>*	pack/plugins/start/vim-scripts-multiplesearch/plugin/MultipleSearch.vim	/^    vnoremap <silent> <Leader>* y:call MultipleSearch(0,'\\V'.substitute(escape(@@,"\\\\\/\\"'"),"\\n",'\\\\n','ge'))<CR>$/;"	m
<Leader>*	pack/plugins/start/vim-scripts-multiplesearch/plugin/MultipleSearch.vim	/^nnoremap <silent> <Leader>* :execute ':Search \\<' . expand('<cword>') . '\\>'<cr>$/;"	m
<Leader>N	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^nnoremap <silent> <Leader>N :call <SID>SearchNext(1)<CR>$/;"	m
<Leader>n	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^nnoremap <silent> <Leader>n :call <SID>SearchNext(0)<CR>$/;"	m
<Plug>(RepeatDot)	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatDot)      :<C-U>exe repeat#run(v:count)<CR>$/;"	m
<Plug>(RepeatRedo)	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatRedo)     :<C-U>call repeat#wrap("\\<Lt>C-R>",v:count)<CR>$/;"	m
<Plug>(RepeatUndo)	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatUndo)     :<C-U>call repeat#wrap('u',v:count)<CR>$/;"	m
<Plug>(RepeatUndoLine)	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatUndoLine) :<C-U>call repeat#wrap('U',v:count)<CR>$/;"	m
<Plug>(SneakStreak)	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nmap <Plug>(SneakStreak)         <Plug>SneakLabel_s$/;"	m
<Plug>(SneakStreak)	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^omap <Plug>(SneakStreak)         <Plug>SneakLabel_s$/;"	m
<Plug>(SneakStreakBackward)	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nmap <Plug>(SneakStreakBackward) <Plug>SneakLabel_S$/;"	m
<Plug>(SneakStreakBackward)	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^omap <Plug>(SneakStreakBackward) <Plug>SneakLabel_S$/;"	m
<Plug>(go-alternate-edit)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-alternate-edit) :<C-u>call go#alternate#Switch(0, "edit")<CR>$/;"	m
<Plug>(go-alternate-split)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-alternate-split) :<C-u>call go#alternate#Switch(0, "split")<CR>$/;"	m
<Plug>(go-alternate-vertical)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-alternate-vertical) :<C-u>call go#alternate#Switch(0, "vsplit")<CR>$/;"	m
<Plug>(go-build)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-build) :<C-u>call go#cmd#Build(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-callees)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-callees) :<C-u>call go#guru#Callees(-1)<CR>$/;"	m
<Plug>(go-callers)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-callers) :<C-u>call go#guru#Callers(-1)<CR>$/;"	m
<Plug>(go-callstack)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-callstack) :<C-u>call go#guru#Callstack(-1)<CR>$/;"	m
<Plug>(go-channelpeers)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-channelpeers) :<C-u>call go#guru#ChannelPeers(-1)<CR>$/;"	m
<Plug>(go-coverage)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage) :<C-u>call go#coverage#Buffer(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-coverage-browser)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage-browser) :<C-u>call go#coverage#Browser(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-coverage-clear)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage-clear) :<C-u>call go#coverage#Clear()<CR>$/;"	m
<Plug>(go-coverage-toggle)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage-toggle) :<C-u>call go#coverage#BufferToggle(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-def)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def) :<C-u>call go#def#Jump('')<CR>$/;"	m
<Plug>(go-def-pop)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-pop) :<C-u>call go#def#StackPop()<CR>$/;"	m
<Plug>(go-def-split)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-split) :<C-u>call go#def#Jump("split")<CR>$/;"	m
<Plug>(go-def-stack)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-stack) :<C-u>call go#def#Stack()<CR>$/;"	m
<Plug>(go-def-stack-clear)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-stack-clear) :<C-u>call go#def#StackClear()<CR>$/;"	m
<Plug>(go-def-tab)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-tab) :<C-u>call go#def#Jump("tab")<CR>$/;"	m
<Plug>(go-def-vertical)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-vertical) :<C-u>call go#def#Jump("vsplit")<CR>$/;"	m
<Plug>(go-deps)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-deps) :<C-u>call go#tool#Deps()<CR>$/;"	m
<Plug>(go-describe)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-describe) :<C-u>call go#guru#Describe(-1)<CR>$/;"	m
<Plug>(go-doc)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc) :<C-u>call go#doc#Open("new", "split")<CR>$/;"	m
<Plug>(go-doc-browser)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-browser) :<C-u>call go#doc#OpenBrowser()<CR>$/;"	m
<Plug>(go-doc-split)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-split) :<C-u>call go#doc#Open("new", "split")<CR>$/;"	m
<Plug>(go-doc-tab)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-tab) :<C-u>call go#doc#Open("tabnew", "tabe")<CR>$/;"	m
<Plug>(go-doc-vertical)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-vertical) :<C-u>call go#doc#Open("vnew", "vsplit")<CR>$/;"	m
<Plug>(go-files)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-files) :<C-u>call go#tool#Files()<CR>$/;"	m
<Plug>(go-generate)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-generate) :<C-u>call go#cmd#Generate(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-implements)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-implements) :<C-u>call go#guru#Implements(-1)<CR>$/;"	m
<Plug>(go-import)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-import) :<C-u>call go#import#SwitchImport(1, '', expand('<cword>'), '')<CR>$/;"	m
<Plug>(go-imports)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-imports) :<C-u>call go#fmt#Format(1)<CR>$/;"	m
<Plug>(go-info)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-info) :<C-u>call go#tool#Info(0)<CR>$/;"	m
<Plug>(go-install)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-install) :<C-u>call go#cmd#Install(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-lint)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-lint) :<C-u>call go#lint#Golint()<CR>$/;"	m
<Plug>(go-metalinter)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-metalinter) :<C-u>call go#lint#Gometa(0)<CR>$/;"	m
<Plug>(go-referrers)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-referrers) :<C-u>call go#guru#Referrers(-1)<CR>$/;"	m
<Plug>(go-rename)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-rename) :<C-u>call go#rename#Rename(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-run)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-run) :<C-u>call go#cmd#Run(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-run-split)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^  nnoremap <silent> <Plug>(go-run-split) :<C-u>call go#cmd#RunTerm(!g:go_jump_to_error, 'split', [])<CR>$/;"	m
<Plug>(go-run-tab)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^  nnoremap <silent> <Plug>(go-run-tab) :<C-u>call go#cmd#RunTerm(!g:go_jump_to_error, 'tabe', [])<CR>$/;"	m
<Plug>(go-run-vertical)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^  nnoremap <silent> <Plug>(go-run-vertical) :<C-u>call go#cmd#RunTerm(!g:go_jump_to_error, 'vsplit', [])<CR>$/;"	m
<Plug>(go-sameids)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-sameids) :<C-u>call go#guru#SameIds()<CR>$/;"	m
<Plug>(go-sameids-toggle)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-sameids-toggle) :<C-u>call go#guru#ToggleSameIds()<CR>$/;"	m
<Plug>(go-test)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test) :<C-u>call go#cmd#Test(!g:go_jump_to_error, 0)<CR>$/;"	m
<Plug>(go-test-compile)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test-compile) :<C-u>call go#cmd#Test(!g:go_jump_to_error, 1)<CR>$/;"	m
<Plug>(go-test-func)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test-func) :<C-u>call go#cmd#TestFunc(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-vet)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-vet) :<C-u>call go#lint#Vet(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-whicherrs)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-whicherrs) :<C-u>call go#guru#Whicherrs(-1)<CR>$/;"	m
<Plug>QfCnext	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>QfCnext     :call qf#WrapCommand('down', 'c')<CR>$/;"	m
<Plug>QfCprevious	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>QfCprevious :call qf#WrapCommand('up', 'c')<CR>$/;"	m
<Plug>QfCtoggle	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>QfCtoggle   :call qf#ToggleQfWindow()<CR>$/;"	m
<Plug>QfLnext	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>QfLnext     :call qf#WrapCommand('down', 'l')<CR>$/;"	m
<Plug>QfLprevious	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>QfLprevious :call qf#WrapCommand('up', 'l')<CR>$/;"	m
<Plug>QfLtoggle	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>QfLtoggle   :call qf#ToggleLocWindow()<CR>$/;"	m
<Plug>QfSwitch	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <expr> <silent> <Plug>QfSwitch &filetype == "qf" ? "<C-w>p" : "<C-w>b"$/;"	m
<Plug>SneakBackward	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nmap <Plug>SneakBackward  <Plug>Sneak_S$/;"	m
<Plug>SneakForward	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nmap <Plug>SneakForward   <Plug>Sneak_s$/;"	m
<Plug>SneakLabel_S	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>SneakLabel_S :<c-u>call sneak#wrap('', 2, 1, 2, 2)<cr>$/;"	m
<Plug>SneakLabel_S	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>SneakLabel_S :<c-u>call sneak#wrap(v:operator, 2, 1, 2, 2)<cr>$/;"	m
<Plug>SneakLabel_s	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>SneakLabel_s :<c-u>call sneak#wrap('', 2, 0, 2, 2)<cr>$/;"	m
<Plug>SneakLabel_s	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>SneakLabel_s :<c-u>call sneak#wrap(v:operator, 2, 0, 2, 2)<cr>$/;"	m
<Plug>SneakNext	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nmap <Plug>SneakNext     <Plug>Sneak_;$/;"	m
<Plug>SneakNext	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^omap <Plug>SneakNext     <Plug>Sneak_;$/;"	m
<Plug>SneakPrevious	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nmap <Plug>SneakPrevious <Plug>Sneak_,$/;"	m
<Plug>SneakPrevious	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^omap <Plug>SneakPrevious <Plug>Sneak_,$/;"	m
<Plug>SneakRepeat	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>SneakRepeat :<c-u>call sneak#wrap(v:operator, sneak#util#getc(), sneak#util#getc(), sneak#util#getc(), sneak#util#getc())<cr>$/;"	m
<Plug>Sneak_,	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_, :<c-u>call sneak#rpt('', 1)<cr>$/;"	m
<Plug>Sneak_,	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_, :<c-u>call sneak#rpt(v:operator, 1)<cr>$/;"	m
<Plug>Sneak_;	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_; :<c-u>call sneak#rpt('', 0)<cr>$/;"	m
<Plug>Sneak_;	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_; :<c-u>call sneak#rpt(v:operator, 0)<cr>$/;"	m
<Plug>Sneak_F	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_F :<c-u>call sneak#wrap('', 1, 1, 1, 0)<cr>$/;"	m
<Plug>Sneak_F	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_F :<c-u>call sneak#wrap(v:operator, 1, 1, 1, 0)<cr>$/;"	m
<Plug>Sneak_S	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_S :<c-u>call sneak#wrap('', 2, 1, 2, 1)<cr>$/;"	m
<Plug>Sneak_S	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_S :<c-u>call sneak#wrap(v:operator, 2, 1, 2, 1)<cr>$/;"	m
<Plug>Sneak_T	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_T :<c-u>call sneak#wrap('', 1, 1, 0, 0)<cr>$/;"	m
<Plug>Sneak_T	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_T :<c-u>call sneak#wrap(v:operator, 1, 1, 0, 0)<cr>$/;"	m
<Plug>Sneak_f	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_f :<c-u>call sneak#wrap('', 1, 0, 1, 0)<cr>$/;"	m
<Plug>Sneak_f	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_f :<c-u>call sneak#wrap(v:operator, 1, 0, 1, 0)<cr>$/;"	m
<Plug>Sneak_s	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_s :<c-u>call sneak#wrap('', 2, 0, 2, 1)<cr>$/;"	m
<Plug>Sneak_s	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_s :<c-u>call sneak#wrap(v:operator, 2, 0, 2, 1)<cr>$/;"	m
<Plug>Sneak_t	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^nnoremap <silent> <Plug>Sneak_t :<c-u>call sneak#wrap('', 1, 0, 0, 0)<cr>$/;"	m
<Plug>Sneak_t	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^onoremap <silent> <Plug>Sneak_t :<c-u>call sneak#wrap(v:operator, 1, 0, 0, 0)<cr>$/;"	m
<SID>:	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^nnoremap <SID>: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<backspace>	vimrc	/^nnoremap <silent> <backspace> :noh<CR>:SearchReset<CR>$/;"	m
<c-h>	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    imap <c-h> <plug>(MUcompleteCycBwd)$/;"	m
<c-l>	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    imap <c-l> <plug>(MUcompleteCycFwd)$/;"	m
<down>	vimrc	/^nmap <silent> <down>  <esc>:cnext<cr>$/;"	m
<leader>"	vimrc	/^nnoremap <silent> <leader>" :split<cr>$/;"	m
<leader>%	vimrc	/^nnoremap <silent> <leader>% :vsplit<cr>$/;"	m
<leader>.	vimrc	/^vnoremap <leader>. :norm! .<cr>$/;"	m
<leader>@	vimrc	/^vnoremap <leader>@ :norm! @<cr>$/;"	m
<leader>A	vimrc	/^nnoremap <leader>A :argadd **\/*$/;"	m
<leader>B	vimrc	/^nnoremap <leader>B :ls<cr>:b<space>$/;"	m
<leader>F	vimrc	/^nnoremap <leader>F :find <c-r>=fnameescape(expand('%:p:h'))<cr>\/*<C-d>$/;"	m
<leader>G	vimrc	/^nnoremap <leader>G :vimgrep<space>$/;"	m
<leader>M	vimrc	/^nnoremap <leader>M :make<cr>$/;"	m
<leader>S	vimrc	/^nnoremap <leader>S :call StripTrailingWhitespace()<cr>$/;"	m
<leader>T	vimrc	/^nnoremap <leader>T :TTags<cr>$/;"	m
<leader>W	vimrc	/^nnoremap <leader>W <C-w>W$/;"	m
<leader>a	vimrc	/^nnoremap <leader>a :argadd <c-r>=fnameescape(expand('%:p:h'))<cr>\/*<C-d>$/;"	m
<leader>b	vimrc	/^nnoremap <leader>b :b <C-d>$/;"	m
<leader>c	vimrc	/^nnoremap <leader>c :chdir <c-r>=fnameescape(expand('%:p:h'))<cr>\/*<C-d>$/;"	m
<leader>c	vimrc	/^nnoremap <silent> <leader>c <esc>:close<cr>$/;"	m
<leader>d	vimrc	/^nnoremap <leader>d :Dlist<space>$/;"	m
<leader>e	vimrc	/^nnoremap <leader>e :e <c-r>=fnameescape(expand('%:p:h'))<cr>\/*<C-d>$/;"	m
<leader>f	vimrc	/^nnoremap <leader>f :find *$/;"	m
<leader>g	vimrc	/^nnoremap <leader>g :grep<space>$/;"	m
<leader>i	vimrc	/^nnoremap <leader>i :Ilist<space>$/;"	m
<leader>j	vimrc	/^nnoremap <leader>j :tjump \/$/;"	m
<leader>l	vimrc	/^nnoremap <leader>l :lgrep<space>$/;"	m
<leader>o	vimrc	/^nnoremap <leader>o <C-w>o$/;"	m
<leader>p	vimrc	/^nnoremap <leader>p :ptjump \/$/;"	m
<leader>q	vimrc	/^nnoremap <leader>q :b#<cr>$/;"	m
<leader>s	vimrc	/^nnoremap <leader>s :Search $/;"	m
<leader>t	vimrc	/^nnoremap <leader>t :TTags<space>*<space>*<space>.<cr>$/;"	m
<leader>w	vimrc	/^nnoremap <leader>w <C-w>w$/;"	m
<leader>z	vimrc	/^nnoremap <leader>z :call ToggleFolds()<cr>$/;"	m
<left>	vimrc	/^nmap <silent> <left> <esc>:lprev<cr>$/;"	m
<plug>(MUcompleteAuto)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^imap <expr> <silent> <plug>(MUcompleteAuto) mucomplete#complete(1)$/;"	m
<plug>(MUcompleteBwd)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^imap <expr> <silent> <plug>(MUcompleteBwd) mucomplete#tab_complete(-1)$/;"	m
<plug>(MUcompleteBwdKey)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    inoremap <silent> <plug>(MUcompleteBwdKey) <c-h>$/;"	m
<plug>(MUcompleteCtd)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^inoremap    <silent> <plug>(MUcompleteCtd) <c-d>$/;"	m
<plug>(MUcompleteCycBwd)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^imap <expr> <silent> <plug>(MUcompleteCycBwd) pumvisible()?mucomplete#cycle(-1):"\\<plug>(MUcompleteBwdKey)"$/;"	m
<plug>(MUcompleteCycFwd)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^imap <expr> <silent> <plug>(MUcompleteCycFwd) pumvisible()?mucomplete#cycle( 1):"\\<plug>(MUcompleteFwdKey)"$/;"	m
<plug>(MUcompleteFwd)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^imap <expr> <silent> <plug>(MUcompleteFwd) mucomplete#tab_complete( 1)$/;"	m
<plug>(MUcompleteFwdKey)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    inoremap <silent> <plug>(MUcompleteFwdKey) <c-l>$/;"	m
<plug>(MUcompleteNxt)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^imap <expr> <silent> <plug>(MUcompleteNxt) mucomplete#verify_completion()$/;"	m
<plug>(MUcompleteTab)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^inoremap    <silent> <plug>(MUcompleteTab) <tab>$/;"	m
<right>	vimrc	/^nmap <silent> <right> <esc>:lnext<cr>$/;"	m
<s-tab>	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    imap <s-tab> <plug>(MUcompleteBwd)$/;"	m
<tab>	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    imap <tab>   <plug>(MUcompleteFwd)$/;"	m
<up>	vimrc	/^nmap <silent> <up> <esc>:cprev<cr>$/;"	m
AGS	pack/plugins/start/junegunn-fzf/src/Makefile	/^		\/bin\/bash -ci 'cd \/fzf\/src; make TAGS=static release'$/;"	m
Add	pack/plugins/start/junegunn-fzf/src/cache.go	/^func (cc *ChunkCache) Add(chunk *Chunk, key string, list []*Result) {$/;"	f
Algo	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^type Algo func(caseSensitive bool, forward bool, input util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int)$/;"	t
All terminal emulators	pack/colors/start/romainl-apprentice/README.md	/^### All terminal emulators$/;"	k
Alt0	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Alt0$/;"	c
AltA	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	AltA = Alt0 + 'a' - '0' + iota$/;"	c
AltB	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	AltB$/;"	c
AltBS	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	AltBS$/;"	c
AltC	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	AltC$/;"	c
AltD	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	AltD$/;"	c
AltE	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	AltE$/;"	c
AltEnter	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	AltEnter$/;"	c
AltF	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	AltF$/;"	c
AltSlash	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	AltSlash$/;"	c
AltSpace	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	AltSpace$/;"	c
AltZ	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	AltZ = AltA + 'z' - 'a'$/;"	c
Argument Seek	pack/plugins/start/wellle-targets/README.md	/^### Argument Seek$/;"	k
Argument Text Objects	pack/plugins/start/wellle-targets/README.md	/^## Argument Text Objects$/;"	i
Argument mappings	pack/plugins/start/wellle-targets/cheatsheet.md	/^## Argument mappings$/;"	i
AsString	pack/plugins/start/junegunn-fzf/src/item.go	/^func (item *Item) AsString(stripAnsi bool) string {$/;"	f
AsString	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func (p *Pattern) AsString() string {$/;"	f
AsUint16	pack/plugins/start/junegunn-fzf/src/util/util.go	/^func AsUint16(val int) uint16 {$/;"	f
AsmFmt	pack/plugins/start/fatih-vim-go/ftplugin/asm.vim	/^command! -nargs=0 AsmFmt call go#asmfmt#Format()$/;"	c
AtomicBool	pack/plugins/start/junegunn-fzf/src/util/atomicbool.go	/^type AtomicBool struct {$/;"	t
Attr	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^type Attr C.uint$/;"	t
Attr	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^type Attr tcell.Style$/;"	t
AttrRegular	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	AttrRegular Attr = 0$/;"	c
AttrRegular	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	AttrRegular Attr = 0$/;"	c
Author	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^## Author$/;"	i
AutoMkdir	vimrc	/^augroup AutoMkdir$/;"	a
AutoMkdir	vimrc	/^function! <SID>AutoMkdir() abort$/;"	f
BINARY	pack/plugins/start/junegunn-fzf/src/Makefile	/^	BINARY := $(BINARY32)$/;"	m
BINARY	pack/plugins/start/junegunn-fzf/src/Makefile	/^	BINARY := $(BINARY64)$/;"	m
BINARY32	pack/plugins/start/junegunn-fzf/src/Makefile	/^BINARY32    := fzf-$(GOOS)_386$/;"	m
BINARY64	pack/plugins/start/junegunn-fzf/src/Makefile	/^BINARY64    := fzf-$(GOOS)_amd64$/;"	m
BINARYARM7	pack/plugins/start/junegunn-fzf/src/Makefile	/^BINARYARM7  := fzf-$(GOOS)_arm7$/;"	m
BINDIR	pack/plugins/start/junegunn-fzf/src/Makefile	/^BINDIR      := $(shell dirname $(ROOTDIR))\/bin$/;"	m
BSpace	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	BSpace$/;"	c
BTab	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	BTab$/;"	c
Before submitting	pack/plugins/start/junegunn-fzf/.github/ISSUE_TEMPLATE.md	/^### Before submitting$/;"	k
Behavior	pack/plugins/start/fatih-vim-go/.github/ISSUE_TEMPLATE.md	/^### Behavior$/;"	k
Blame	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
BlameCommit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BlameCommit(cmd) abort$/;"	f
BlameJump	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
BlameSyntax	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
Blink	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	Blink          = C.A_BLINK$/;"	c
Blink	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	Blink          = Attr(tcell.AttrBlink)$/;"	c
Bold	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	Bold      Attr = C.A_BOLD$/;"	c
Bold	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	Bold      Attr = Attr(tcell.AttrBold)$/;"	c
Browse	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
BufReadIndex	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndex() abort$/;"	f
BufReadIndexFile	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndexFile() abort$/;"	f
BufReadObject	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadObject() abort$/;"	f
BufWriteIndexFile	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BufWriteIndexFile() abort$/;"	f
Bug fixes	pack/plugins/start/junegunn-fzf/CHANGELOG.md	/^### Bug fixes$/;"	k
Build 32-bit and 64-bit executables and tarballs	pack/plugins/start/junegunn-fzf/BUILD.md	/^# Build 32-bit and 64-bit executables and tarballs$/;"	h
Build executables and tarballs for Linux using Docker	pack/plugins/start/junegunn-fzf/BUILD.md	/^# Build executables and tarballs for Linux using Docker$/;"	h
Build fzf binary and copy it to bin directory	pack/plugins/start/junegunn-fzf/BUILD.md	/^# Build fzf binary and copy it to bin directory$/;"	h
Build fzf binary for your platform in src/fzf	pack/plugins/start/junegunn-fzf/BUILD.md	/^# Build fzf binary for your platform in src\/fzf$/;"	h
BuildPattern	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func BuildPattern(fuzzy bool, fuzzyAlgo algo.Algo, extended bool, caseMode Case, forward bool,$/;"	f
But fear no longer!	pack/plugins/start/wellle-tmux-complete/README.md	/^## But fear no longer!$/;"	i
ByOrder	pack/plugins/start/junegunn-fzf/src/result.go	/^type ByOrder []Offset$/;"	t
ByRelevance	pack/plugins/start/junegunn-fzf/src/result.go	/^type ByRelevance []*Result$/;"	t
ByRelevanceTac	pack/plugins/start/junegunn-fzf/src/result.go	/^type ByRelevanceTac []*Result$/;"	t
CFill	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (w *Window) CFill(str string, fg Color, bg Color, attr Attr) bool {$/;"	f
CFill	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) CFill(str string, fg Color, bg Color, a Attr) bool {$/;"	f
CPrint	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (w *Window) CPrint(pair ColorPair, attr Attr, text string) {$/;"	f
CPrint	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) CPrint(pair ColorPair, a Attr, text string) {$/;"	f
CSCOPE_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -R$/;"	v
CSCOPE_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -i %TAGS_FILE%.files$/;"	v
CSCOPE_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=$/;"	v
CSCOPE_EXE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_EXE=%~2$/;"	v
CSCOPE_EXE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_EXE=cscope$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% --append "%UPDATED_SOURCE%"$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% -L %TAGS_FILE%.files$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% "%PROJECT_ROOT%"$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --exclude=%2$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --options=%2$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_ARGS=$/;"	v
CTAGS_EXE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_EXE=%~2$/;"	v
CTAGS_EXE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_EXE=ctags$/;"	v
CacheKey	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func (p *Pattern) CacheKey() string {$/;"	f
Can select multiple processes with <TAB> or <Shift-TAB> keys	pack/plugins/start/junegunn-fzf/README.md	/^# Can select multiple processes with <TAB> or <Shift-TAB> keys$/;"	h
Case	pack/plugins/start/junegunn-fzf/src/options.go	/^type Case int$/;"	t
CaseIgnore	pack/plugins/start/junegunn-fzf/src/options.go	/^	CaseIgnore$/;"	c
CaseRespect	pack/plugins/start/junegunn-fzf/src/options.go	/^	CaseRespect$/;"	c
CaseSmart	pack/plugins/start/junegunn-fzf/src/options.go	/^	CaseSmart Case = iota$/;"	c
Chars	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^type Chars struct {$/;"	t
CheckBinaries	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:CheckBinaries()$/;"	f
Chmod	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=1 Chmod :$/;"	c
Chunk	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^type Chunk []*Item \/\/ >>> []Item$/;"	t
ChunkCache	pack/plugins/start/junegunn-fzf/src/cache.go	/^type ChunkCache struct {$/;"	t
ChunkList	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^type ChunkList struct {$/;"	t
Clear	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func Clear() {$/;"	f
Clear	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func Clear() {$/;"	f
Clear	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^func (events *Events) Clear() {$/;"	f
Close	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (w *Window) Close() {$/;"	f
Close	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func Close() {$/;"	f
Close	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) Close() {$/;"	f
Close	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func Close() {$/;"	f
CloseWindow	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function s:CloseWindow(prefix)$/;"	f
ColBorder	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColBorder$/;"	c
ColBorder	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColBorder       ColorPair$/;"	v
ColCurrent	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColCurrent$/;"	c
ColCurrent	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColCurrent      ColorPair$/;"	v
ColCurrentMatch	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColCurrentMatch$/;"	c
ColCurrentMatch	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColCurrentMatch ColorPair$/;"	v
ColCursor	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColCursor$/;"	c
ColCursor	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColCursor       ColorPair$/;"	v
ColDefault	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColDefault ColorPair = iota$/;"	c
ColDefault	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColDefault      = ColorPair{colDefault, colDefault}$/;"	v
ColHeader	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColHeader$/;"	c
ColHeader	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColHeader       ColorPair$/;"	v
ColInfo	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColInfo$/;"	c
ColInfo	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColInfo         ColorPair$/;"	v
ColMatch	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColMatch$/;"	c
ColMatch	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColMatch        ColorPair$/;"	v
ColNormal	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColNormal$/;"	c
ColNormal	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColNormal       ColorPair$/;"	v
ColPrompt	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColPrompt$/;"	c
ColPrompt	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColPrompt       ColorPair$/;"	v
ColSelected	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColSelected$/;"	c
ColSelected	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColSelected     ColorPair$/;"	v
ColSpinner	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColSpinner$/;"	c
ColSpinner	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColSpinner      ColorPair$/;"	v
ColUser	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	ColUser \/\/ Should be the last entry$/;"	c
ColUser	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	ColUser         ColorPair$/;"	v
Color	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^type Color int32$/;"	t
ColorPair	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^type ColorPair int16$/;"	t
ColorPair	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^type ColorPair [2]Color$/;"	t
ColorTheme	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^type ColorTheme struct {$/;"	t
Colors	pack/plugins/start/junegunn-fzf/src/item.go	/^func (item *Item) Colors() []ansiOffset {$/;"	f
Commit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Commit(args, ...) abort$/;"	f
CommitComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
Compatibility	pack/plugins/start/lifepillar-vim-mucomplete/Readme.md	/^# Compatibility$/;"	h
CompilerSet	pack/plugins/start/fatih-vim-go/compiler/go.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompletionTest	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^module CompletionTest$/;"	m
Configuration	pack/plugins/start/fatih-vim-go/.github/ISSUE_TEMPLATE.md	/^### Configuration$/;"	k
Constrain	pack/plugins/start/junegunn-fzf/src/util/util.go	/^func Constrain(val int, min int, max int) int {$/;"	f
Constrain32	pack/plugins/start/junegunn-fzf/src/util/util.go	/^func Constrain32(val int32, min int32, max int32) int32 {$/;"	f
CountItems	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^func CountItems(cs []*Chunk) int {$/;"	f
Credits	pack/plugins/start/fatih-vim-go/README.md	/^## Credits$/;"	i
CtrlA	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlA$/;"	c
CtrlB	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlB$/;"	c
CtrlC	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlC$/;"	c
CtrlD	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlD$/;"	c
CtrlE	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlE$/;"	c
CtrlF	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlF$/;"	c
CtrlG	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlG$/;"	c
CtrlH	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlH$/;"	c
CtrlJ	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlJ$/;"	c
CtrlK	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlK$/;"	c
CtrlL	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlL$/;"	c
CtrlM	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlM$/;"	c
CtrlN	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlN$/;"	c
CtrlO	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlO$/;"	c
CtrlP	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlP$/;"	c
CtrlQ	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlQ$/;"	c
CtrlR	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlR$/;"	c
CtrlS	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlS$/;"	c
CtrlT	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlT$/;"	c
CtrlU	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlU$/;"	c
CtrlV	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlV$/;"	c
CtrlW	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlW$/;"	c
CtrlX	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlX$/;"	c
CtrlY	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlY$/;"	c
CtrlZ	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	CtrlZ$/;"	c
Customize seeking	pack/plugins/start/wellle-targets/cheatsheet.md	/^## Customize seeking$/;"	i
DB_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set DB_FILE=%~2$/;"	v
DB_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^set DB_FILE=cscope.out$/;"	v
DEBUG	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^var DEBUG bool$/;"	v
DOCKEROPTS	pack/plugins/start/junegunn-fzf/src/Makefile	/^DOCKEROPTS  := -i -t -v $(ROOTDIR):\/fzf\/src$/;"	m
DONE	pack/plugins/start/romainl-vim-qf/README.md	/^## DONE$/;"	i
Dark256	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Dark256       *ColorTheme$/;"	v
Default16	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Default16     *ColorTheme$/;"	v
DefaultTheme	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func DefaultTheme() *ColorTheme {$/;"	f
DefaultTheme	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func DefaultTheme() *ColorTheme {$/;"	f
Del	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Del$/;"	c
Delimiter	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^type Delimiter struct {$/;"	t
Derivative works	pack/colors/start/romainl-apprentice/README.md	/^## Derivative works$/;"	i
Diff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Diff(vert,keepfocus,...) abort$/;"	f
Dim	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	Dim            = C.A_DIM$/;"	c
Dim	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	Dim            = Attr(tcell.AttrDim)$/;"	c
DirComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
Directories under current directory (single-selection)	pack/plugins/start/junegunn-fzf/README.md	/^# Directories under current directory (single-selection)$/;"	h
Directories under ~/github that match `fzf`	pack/plugins/start/junegunn-fzf/README.md	/^# Directories under ~\/github that match `fzf`$/;"	h
Disciple	pack/colors/start/romainl-disciple/README.md	/^# Disciple$/;"	h
Dispatch	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Dispatch(bang, args)$/;"	f
DoReset	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^function! s:DoReset()$/;"	f
DoSearch	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^function! s:DoSearch(useSearch, forwhat)$/;"	f
Documentation	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^## Documentation$/;"	i
DoesAutoWrap	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func DoesAutoWrap() bool {$/;"	f
DoesAutoWrap	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func DoesAutoWrap() bool {$/;"	f
Dofile	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=1 Dofile call qf#DoList(0, <q-args>)$/;"	c
Doline	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=1 Doline call qf#DoList(1, <q-args>)$/;"	c
Donation	pack/plugins/start/fatih-vim-go/README.md	/^## Donation$/;"	i
DoneParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^:DoneParseArgs$/;"	l
DoneParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:DoneParseArgs$/;"	l
DoubleClick	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	DoubleClick$/;"	c
Down	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Down$/;"	c
DrawBorder	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) DrawBorder() {$/;"	f
DurWithin	pack/plugins/start/junegunn-fzf/src/util/util.go	/^func DurWithin($/;"	f
ESC	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	ESC$/;"	c
Edit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Edit(cmd,bang,...) abort$/;"	f
EditComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditRunComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
EmptyMerger	pack/plugins/start/junegunn-fzf/src/merger.go	/^var EmptyMerger = NewMerger(nil, [][]*Result{}, false, false)$/;"	v
EmptyTheme	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^func EmptyTheme() *ColorTheme {$/;"	f
Enabling Apprentice.	pack/colors/start/romainl-apprentice/README.md	/^## Enabling Apprentice.$/;"	i
Enabling Disciple.	pack/colors/start/romainl-disciple/README.md	/^## Enabling Disciple.$/;"	i
Enclose	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (w *Window) Enclose(y int, x int) bool {$/;"	f
Enclose	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) Enclose(y int, x int) bool {$/;"	f
End	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	End$/;"	c
EqualMatch	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func EqualMatch(caseSensitive bool, forward bool, text util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
Erase	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (w *Window) Erase() {$/;"	f
Erase	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) Erase() {$/;"	f
Error	pack/plugins/start/fatih-vim-go/autoload/go/import.vim	/^function! s:Error(s) abort$/;"	f
Event	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^type Event struct {$/;"	t
EventBox	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^type EventBox struct {$/;"	t
EventType	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^type EventType int$/;"	t
Events	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^type Events map[EventType]interface{}$/;"	t
EvtClose	pack/plugins/start/junegunn-fzf/src/constants.go	/^	EvtClose$/;"	c
EvtClose	pack/plugins/start/junegunn-fzf/src/util/eventbox_test.go	/^	EvtClose$/;"	c
EvtHeader	pack/plugins/start/junegunn-fzf/src/constants.go	/^	EvtHeader$/;"	c
EvtReadFin	pack/plugins/start/junegunn-fzf/src/constants.go	/^	EvtReadFin$/;"	c
EvtReadFin	pack/plugins/start/junegunn-fzf/src/util/eventbox_test.go	/^	EvtReadFin$/;"	c
EvtReadNew	pack/plugins/start/junegunn-fzf/src/constants.go	/^	EvtReadNew util.EventType = iota$/;"	c
EvtReadNew	pack/plugins/start/junegunn-fzf/src/util/eventbox_test.go	/^	EvtReadNew EventType = iota$/;"	c
EvtSearchFin	pack/plugins/start/junegunn-fzf/src/constants.go	/^	EvtSearchFin$/;"	c
EvtSearchFin	pack/plugins/start/junegunn-fzf/src/util/eventbox_test.go	/^	EvtSearchFin$/;"	c
EvtSearchNew	pack/plugins/start/junegunn-fzf/src/constants.go	/^	EvtSearchNew$/;"	c
EvtSearchNew	pack/plugins/start/junegunn-fzf/src/util/eventbox_test.go	/^	EvtSearchNew$/;"	c
EvtSearchProgress	pack/plugins/start/junegunn-fzf/src/constants.go	/^	EvtSearchProgress$/;"	c
EvtSearchProgress	pack/plugins/start/junegunn-fzf/src/util/eventbox_test.go	/^	EvtSearchProgress$/;"	c
ExactMatchNaive	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func ExactMatchNaive(caseSensitive bool, forward bool, text util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
Example Mappings	pack/plugins/start/fatih-vim-go/README.md	/^## Example Mappings$/;"	i
Examples	pack/plugins/start/wellle-targets/README.md	/^## Examples$/;"	i
ExecCommand	pack/plugins/start/junegunn-fzf/src/util/util_unix.go	/^func ExecCommand(command string) *exec.Cmd {$/;"	f
ExecCommand	pack/plugins/start/junegunn-fzf/src/util/util_windows.go	/^func ExecCommand(command string) *exec.Cmd {$/;"	f
ExecuteInTree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
ExtendedFuzzyMatcher	pack/plugins/start/junegunn-fzf/fzf	/^  class ExtendedFuzzyMatcher < FuzzyMatcher$/;"	c	class:start_search
F	vimrc	/^nmap F <Plug>Sneak_F$/;"	m
F	vimrc	/^omap F <Plug>Sneak_F$/;"	m
F1	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F1$/;"	c
F10	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F10$/;"	c
F11	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F11$/;"	c
F12	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F12$/;"	c
F2	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F2$/;"	c
F3	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F3$/;"	c
F4	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F4$/;"	c
F5	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F5$/;"	c
F6	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F6$/;"	c
F7	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F7$/;"	c
F8	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F8$/;"	c
F9	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	F9$/;"	c
FILE_LIST_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD=$/;"	v
FZF	pack/plugins/start/junegunn-fzf/fzf	/^class FZF$/;"	c
FZF	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^command! -nargs=* -complete=dir -bang FZF call s:cmd(<bang>0, <f-args>)$/;"	c
Features	pack/plugins/start/fatih-vim-go/README.md	/^## Features$/;"	i
Features	pack/plugins/start/romainl-vim-qf/README.md	/^## Features$/;"	i
Feed the output of ag into fzf	pack/plugins/start/junegunn-fzf/README.md	/^# Feed the output of ag into fzf$/;"	h
Feedback, please!	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^## Feedback, please!$/;"	i
FileRead	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:FileRead() abort$/;"	f
Files under current directory	pack/plugins/start/junegunn-fzf/README.md	/^# Files under current directory$/;"	h
Files under parent directory	pack/plugins/start/junegunn-fzf/README.md	/^# Files under parent directory$/;"	h
Files under parent directory that match `fzf`	pack/plugins/start/junegunn-fzf/README.md	/^# Files under parent directory that match `fzf`$/;"	h
Files under your home directory	pack/plugins/start/junegunn-fzf/README.md	/^# Files under your home directory$/;"	h
Fill	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (w *Window) Fill(str string) bool {$/;"	f
Fill	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) Fill(str string) bool {$/;"	f
FillString	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) FillString(text string, pair ColorPair, a Attr) bool {$/;"	f
Filter	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=1 -bang Filter call qf#FilterList(<q-args>, expand("<bang>") == "!" ? 1 : 0)$/;"	c
Find	pack/plugins/start/junegunn-fzf/src/cache.go	/^func (cc *ChunkCache) Find(chunk *Chunk, key string) ([]*Result, bool) {$/;"	f
Find	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -complete=file -nargs=+ Find   exe s:Grep(<q-bang>, <q-args>, 'find')$/;"	c
FinishCommit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:FinishCommit() abort$/;"	f
Fixes and improvements	pack/plugins/start/junegunn-fzf/CHANGELOG.md	/^### Fixes and improvements$/;"	k
FormatTag	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! s:FormatTag(tag) "{{{3$/;"	f
FuzzyMatchV1	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func FuzzyMatchV1(caseSensitive bool, forward bool, text util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
FuzzyMatchV2	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func FuzzyMatchV2(caseSensitive bool, forward bool, input util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
FuzzyMatcher	pack/plugins/start/junegunn-fzf/fzf	/^  class FuzzyMatcher < Matcher$/;"	c	class:start_search
GF	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GFInit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:GFInit(...) abort$/;"	f
GOOS	pack/plugins/start/junegunn-fzf/src/Makefile	/^		\/bin\/bash -ci 'cd \/fzf\/src; GOOS=android make android-build'$/;"	m
GOOS	pack/plugins/start/junegunn-fzf/src/Makefile	/^	GOOS := darwin$/;"	m
GOOS	pack/plugins/start/junegunn-fzf/src/Makefile	/^	GOOS := linux$/;"	m
GOPATH	pack/plugins/start/junegunn-fzf/src/Makefile	/^GOPATH      := $(shell dirname $(ROOTDIR))\/gopath$/;"	m
GVim/MacVim	pack/colors/start/romainl-apprentice/README.md	/^### GVim\/MacVim$/;"	k
GVim/MacVim	pack/colors/start/romainl-disciple/README.md	/^### GVim\/MacVim$/;"	k
Get	pack/plugins/start/junegunn-fzf/src/merger.go	/^func (mg *Merger) Get(idx int) *Result {$/;"	f
Get	pack/plugins/start/junegunn-fzf/src/util/atomicbool.go	/^func (a *AtomicBool) Get() bool {$/;"	f
Get	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^func (chars *Chars) Get(i int) rune {$/;"	f
GetChar	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func GetChar() Event {$/;"	f
GetChar	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func GetChar() Event {$/;"	f
GetGoHTMLTmplIndent	pack/plugins/start/fatih-vim-go/indent/gohtmltmpl.vim	/^function! GetGoHTMLTmplIndent(lnum)$/;"	f
GetNextSequenceNumber	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^function! s:GetNextSequenceNumber()$/;"	f
GetTag	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! s:GetTag(world, id) "{{{3$/;"	f
Getting Started	pack/plugins/start/lifepillar-vim-mucomplete/Readme.md	/^# Getting Started$/;"	h
Git	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Git(bang, args) abort$/;"	f
GitComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:GitComplete(A, L, P) abort$/;"	f
Global features (available from any window)	pack/plugins/start/romainl-vim-qf/README.md	/^### Global features (available from any window)$/;"	k
GoAddTags	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range GoAddTags call go#util#AddTags(<line1>, <line2>, <f-args>)$/;"	c
GoAlternate	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -bang GoAlternate call go#alternate#Switch(<bang>0, '')$/;"	c
GoAsmFmtAutoSaveToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoAsmFmtAutoSaveToggle call go#asmfmt#ToggleAsmFmtAutoSave()$/;"	c
GoAutoTypeInfoToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoAutoTypeInfoToggle call go#complete#ToggleAutoTypeInfo()$/;"	c
GoBuild	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoBuild call go#cmd#Build(<bang>0,<f-args>)$/;"	c
GoCallees	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallees call go#guru#Callees(<count>)$/;"	c
GoCallers	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallers call go#guru#Callers(<count>)$/;"	c
GoCallstack	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallstack call go#guru#Callstack(<count>)$/;"	c
GoChannelPeers	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoChannelPeers call go#guru#ChannelPeers(<count>)$/;"	c
GoCoverage	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverage call go#coverage#Buffer(<bang>0, <f-args>)$/;"	c
GoCoverageBrowser	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverageBrowser call go#coverage#Browser(<bang>0, <f-args>)$/;"	c
GoCoverageClear	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverageClear call go#coverage#Clear()$/;"	c
GoCoverageToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverageToggle call go#coverage#BufferToggle(<bang>0, <f-args>)$/;"	c
GoDecls	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^  command! -nargs=? -complete=file GoDecls call ctrlp#init(ctrlp#decls#cmd(0, <q-args>))$/;"	c
GoDeclsDir	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^  command! -nargs=? -complete=dir GoDeclsDir call ctrlp#init(ctrlp#decls#cmd(1, <q-args>))$/;"	c
GoDef	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range GoDef :call go#def#Jump('')$/;"	c
GoDefPop	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoDefPop :call go#def#StackPop(<f-args>)$/;"	c
GoDefStack	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoDefStack :call go#def#Stack(<f-args>)$/;"	c
GoDefStackClear	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoDefStackClear :call go#def#StackClear(<f-args>)$/;"	c
GoDeps	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoDeps echo go#tool#Deps()$/;"	c
GoDescribe	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoDescribe call go#guru#Describe(<count>)$/;"	c
GoDoc	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range -complete=customlist,go#package#Complete GoDoc call go#doc#Open('new', 'split', <f-args>)$/;"	c
GoDocBrowser	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range -complete=customlist,go#package#Complete GoDocBrowser call go#doc#OpenBrowser(<f-args>)$/;"	c
GoDrop	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -complete=customlist,go#package#Complete GoDrop call go#import#SwitchImport(0, '', <f-args>, '')$/;"	c
GoErrCheck	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -complete=customlist,go#package#Complete GoErrCheck call go#lint#Errcheck(<f-args>)$/;"	c
GoFiles	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFiles echo go#tool#Files()$/;"	c
GoFmt	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFmt call go#fmt#Format(-1)$/;"	c
GoFmtAutoSaveToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFmtAutoSaveToggle call go#fmt#ToggleFmtAutoSave()$/;"	c
GoFreevars	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoFreevars call go#guru#Freevars(<count>)$/;"	c
GoGenerate	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoGenerate call go#cmd#Generate(<bang>0,<f-args>)$/;"	c
GoGuruScope	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -complete=customlist,go#package#Complete GoGuruScope call go#guru#Scope(<f-args>)$/;"	c
GoGuruTags	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoGuruTags call go#guru#Tags(<f-args>)$/;"	c
GoImpl	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -buffer -complete=customlist,go#impl#Complete GoImpl call go#impl#Impl(<f-args>)$/;"	c
GoImplements	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoImplements call go#guru#Implements(<count>)$/;"	c
GoImport	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=1 -bang -complete=customlist,go#package#Complete GoImport call go#import#SwitchImport(1, '', <f-args>, '<bang>')$/;"	c
GoImportAs	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang -complete=customlist,go#package#Complete GoImportAs call go#import#SwitchImport(1, <f-args>, '<bang>')$/;"	c
GoImports	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoImports call go#fmt#Format(1)$/;"	c
GoIndent	pack/plugins/start/fatih-vim-go/indent/go.vim	/^function! GoIndent(lnum)$/;"	f
GoInfo	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoInfo call go#tool#Info(0)$/;"	c
GoInstall	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoInstall call go#cmd#Install(<bang>0, <f-args>)$/;"	c
GoInstallBinaries	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^command! GoInstallBinaries call s:GoInstallBinaries(-1)$/;"	c
GoInstallBinaries	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:GoInstallBinaries(updateBinaries)$/;"	f
GoLint	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoLint call go#lint#Golint(<f-args>)$/;"	c
GoMetaLinter	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoMetaLinter call go#lint#Gometa(0, <f-args>)$/;"	c
GoMetaLinterAutoSaveToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoMetaLinterAutoSaveToggle call go#lint#ToggleMetaLinterAutoSave()$/;"	c
GoNeosnippet	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^function! s:GoNeosnippet()$/;"	f
GoPath	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^command! -nargs=? -complete=dir GoPath call go#path#GoPath(<f-args>)$/;"	c
GoPlay	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 -range=% GoPlay call go#play#Share(<count>, <line1>, <line2>)$/;"	c
GoReferrers	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoReferrers call go#guru#Referrers(<count>)$/;"	c
GoRename	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoRename call go#rename#Rename(<bang>0,<f-args>)$/;"	c
GoRun	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang -complete=file GoRun call go#cmd#Run(<bang>0,<f-args>)$/;"	c
GoSameIds	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIds call go#guru#SameIds()$/;"	c
GoSameIdsAutoToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIdsAutoToggle call go#guru#AutoToogleSameIds()$/;"	c
GoSameIdsClear	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIdsClear call go#guru#ClearSameIds()$/;"	c
GoSameIdsToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIdsToggle call go#guru#ToggleSameIds()$/;"	c
GoTemplateAutoCreateToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoTemplateAutoCreateToggle call go#template#ToggleAutoCreate()$/;"	c
GoTest	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTest call go#cmd#Test(<bang>0, 0, <f-args>)$/;"	c
GoTestCompile	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTestCompile call go#cmd#Test(<bang>0, 1, <f-args>)$/;"	c
GoTestFunc	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTestFunc call go#cmd#TestFunc(<bang>0, <f-args>)$/;"	c
GoUltiSnips	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^function! s:GoUltiSnips()$/;"	f
GoUpdateBinaries	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^command! GoUpdateBinaries call s:GoInstallBinaries(1)$/;"	c
GoVet	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoVet call go#lint#Vet(<bang>0, <f-args>)$/;"	c
GoWhicherrs	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoWhicherrs call go#guru#Whicherrs(<count>)$/;"	c
GodocView	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! s:GodocView(newposition, position, content) abort$/;"	f
Grep	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:Grep(bang,args,prg) abort$/;"	f
Grep	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Grep(cmd,bang,arg) abort$/;"	f
Gutentags	pack/plugins/start/ludovicchabant-vim-gutentags/README.md	/^# Gutentags$/;"	h
GutentagsToggleEnabled	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleEnabled :let g:gutentags_enabled=!g:gutentags_enabled$/;"	c
GutentagsToggleFake	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleFake    :call gutentags#fake()$/;"	c
GutentagsToggleTrace	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleTrace   :call gutentags#toggletrace()$/;"	c
GutentagsUnlock	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^command! GutentagsUnlock :call gutentags#delete_lock_files()$/;"	c
HL	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:HL(group, fg, bg, attr)$/;"	f
Highlighting Customization	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^## Highlighting Customization$/;"	i
History	pack/plugins/start/junegunn-fzf/src/history.go	/^type History struct {$/;"	t
Home	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Home$/;"	c
How?	pack/plugins/start/ludovicchabant-vim-gutentags/README.md	/^## How?$/;"	i
INDEX_WHOLE_PROJECT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        set INDEX_WHOLE_PROJECT=0$/;"	v
INDEX_WHOLE_PROJECT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set INDEX_WHOLE_PROJECT=1$/;"	v
Improvements	pack/plugins/start/junegunn-fzf/CHANGELOG.md	/^### Improvements$/;"	k
Index	pack/plugins/start/junegunn-fzf/src/item.go	/^func (item *Item) Index() int32 {$/;"	f
Index	pack/plugins/start/junegunn-fzf/src/result.go	/^func (result *Result) Index() int32 {$/;"	f
Init	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func Init(theme *ColorTheme, black bool, mouse bool) {$/;"	f
Init	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func Init(theme *ColorTheme, black bool, mouse bool) {$/;"	f
InitTheme	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^func InitTheme(theme *ColorTheme, black bool) {$/;"	f
Input	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) Input() []rune {$/;"	f
Install	pack/plugins/start/fatih-vim-go/README.md	/^## Install$/;"	i
Install shell extensions	pack/plugins/start/junegunn-fzf/README.md	/^# Install shell extensions$/;"	h
Install the executable to ../bin directory	pack/plugins/start/junegunn-fzf/src/README.md	/^# Install the executable to ..\/bin directory$/;"	h
Installation	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^## Installation$/;"	i
Installation	pack/colors/start/tomasr-molokai/README.md	/^## Installation$/;"	i
Installation	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^## Installation$/;"	i
Installation	pack/plugins/start/romainl-vim-qf/README.md	/^## Installation$/;"	i
Installation	pack/plugins/start/wellle-targets/README.md	/^## Installation$/;"	i
Installation	pack/plugins/start/wellle-tmux-complete/README.md	/^## Installation$/;"	i
Installing Apprentice.	pack/colors/start/romainl-apprentice/README.md	/^## Installing Apprentice.$/;"	i
Installing Disciple.	pack/colors/start/romainl-disciple/README.md	/^## Installing Disciple.$/;"	i
Integration tests	pack/plugins/start/junegunn-fzf/src/README.md	/^# Integration tests$/;"	h
Introduction	pack/plugins/start/wellle-targets/README.md	/^## Introduction$/;"	i
Invalid	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Invalid$/;"	c
IsEmpty	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func (p *Pattern) IsEmpty() bool {$/;"	f
IsFull	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^func (c *Chunk) IsFull() bool {$/;"	f
IsTty	pack/plugins/start/junegunn-fzf/src/util/util.go	/^func IsTty() bool {$/;"	f
IsWindows	pack/plugins/start/junegunn-fzf/src/util/util_unix.go	/^func IsWindows() bool {$/;"	f
IsWindows	pack/plugins/start/junegunn-fzf/src/util/util_windows.go	/^func IsWindows() bool {$/;"	f
Issues	pack/plugins/start/wellle-targets/README.md	/^## Issues$/;"	i
Italic	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^var Italic Attr = C.A_VERTICAL << 1 \/\/ FIXME$/;"	v
Italic	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	Italic         = Attr(tcell.AttrNone) \/\/ Not supported$/;"	c
Item	pack/plugins/start/junegunn-fzf/src/item.go	/^type Item struct {$/;"	t
ItemBuilder	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^type ItemBuilder func([]byte, int) *Item$/;"	t
ItemCount	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^function! s:ItemCount(string)$/;"	f
JumpInit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:JumpInit(...) abort$/;"	f
K	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> K :GoDoc<cr>$/;"	m
Keep	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=1 Keep call qf#FilterList(<q-args>, 0)$/;"	c
LOG_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set LOG_FILE=$/;"	v
Left	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Left$/;"	c
Len	pack/plugins/start/junegunn-fzf/src/result.go	/^func (a ByOrder) Len() int {$/;"	f
Len	pack/plugins/start/junegunn-fzf/src/result.go	/^func (a ByRelevance) Len() int {$/;"	f
Len	pack/plugins/start/junegunn-fzf/src/result.go	/^func (a ByRelevanceTac) Len() int {$/;"	f
Len	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (a byTimeOrder) Len() int {$/;"	f
Length	pack/plugins/start/junegunn-fzf/src/merger.go	/^func (mg *Merger) Length() int {$/;"	f
Length	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^func (chars *Chars) Length() int {$/;"	f
Less	pack/plugins/start/junegunn-fzf/src/result.go	/^func (a ByOrder) Less(i, j int) bool {$/;"	f
Less	pack/plugins/start/junegunn-fzf/src/result.go	/^func (a ByRelevance) Less(i, j int) bool {$/;"	f
Less	pack/plugins/start/junegunn-fzf/src/result.go	/^func (a ByRelevanceTac) Less(i, j int) bool {$/;"	f
Less	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (a byTimeOrder) Less(i, j int) bool {$/;"	f
License	pack/plugins/start/fatih-vim-go/README.md	/^## License$/;"	i
License	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^## License$/;"	i
Light256	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Light256      *ColorTheme$/;"	v
Lightline and Airline themes	pack/colors/start/romainl-apprentice/README.md	/^## Lightline and Airline themes$/;"	i
ListLists	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer ListLists call qf#ListLists()$/;"	c
LoadList	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=+ -complete=customlist,qf#CompleteList LoadList    call qf#LoadList(0, <q-args>)$/;"	c
LoadListAdd	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=+ -complete=customlist,qf#CompleteList LoadListAdd call qf#LoadList(1, <q-args>)$/;"	c
Load_Settings_Override	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:Load_Settings_Override(custom)$/;"	f
Local features (available only in location/quickfix windows)	pack/plugins/start/romainl-vim-qf/README.md	/^### Local features (available only in location\/quickfix windows)$/;"	k
Locate	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -complete=file -nargs=+ Locate exe s:Grep(<q-bang>, <q-args>, 'locate')$/;"	c
Log	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Log(cmd, line1, line2, ...) abort$/;"	f
Loop	pack/plugins/start/junegunn-fzf/src/matcher.go	/^func (m *Matcher) Loop() {$/;"	f
Loop	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) Loop() {$/;"	f
LoopParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^:LoopParseArgs$/;"	l
LoopParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:LoopParseArgs$/;"	l
MUcomplete	pack/plugins/start/lifepillar-vim-mucomplete/Readme.md	/^# MUcomplete$/;"	h
MUcomplete in action	pack/plugins/start/lifepillar-vim-mucomplete/Readme.md	/^# MUcomplete in action$/;"	h
MUcompleteAutoOff	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    command -nargs=0 MUcompleteAutoOff :call mucomplete#disable_auto()$/;"	c
MUcompleteAutoOn	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    command -nargs=0 MUcompleteAutoOn :call mucomplete#enable_auto()$/;"	c
MUcompleteAutoToggle	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    command -nargs=0 MUcompleteAutoToggle :call mucomplete#toggle_auto()$/;"	c
MakeQFE	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! s:MakeQFE(tag) "{{{3$/;"	f
MakeQFL	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! s:MakeQFL(tags) "{{{3$/;"	f
MakeSlab	pack/plugins/start/junegunn-fzf/src/util/slab.go	/^func MakeSlab(size16 int, size32 int) *Slab {$/;"	f
Mappings	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^## Mappings$/;"	i
Match	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func (p *Pattern) Match(chunk *Chunk, slab *util.Slab) []*Result {$/;"	f
MatchData	pack/plugins/start/junegunn-fzf/fzf	/^    class MatchData$/;"	c	class:start_search.Matcher
MatchItem	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func (p *Pattern) MatchItem(item *Item, withPos bool, slab *util.Slab) (*Result, []Offset, *[]int) {$/;"	f
MatchRequest	pack/plugins/start/junegunn-fzf/src/matcher.go	/^type MatchRequest struct {$/;"	t
Matcher	pack/plugins/start/junegunn-fzf/fzf	/^  class Matcher$/;"	c	class:start_search
Matcher	pack/plugins/start/junegunn-fzf/src/matcher.go	/^type Matcher struct {$/;"	t
Max	pack/plugins/start/junegunn-fzf/src/util/util.go	/^func Max(first int, second int) int {$/;"	f
Max16	pack/plugins/start/junegunn-fzf/src/util/util.go	/^func Max16(first int16, second int16) int16 {$/;"	f
Max32	pack/plugins/start/junegunn-fzf/src/util/util.go	/^func Max32(first int32, second int32) int32 {$/;"	f
MaxX	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func MaxX() int {$/;"	f
MaxX	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func MaxX() int {$/;"	f
MaxY	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func MaxY() int {$/;"	f
MaxY	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func MaxY() int {$/;"	f
Merge	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (a Attr) Merge(b Attr) Attr {$/;"	f
Merge	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (a Attr) Merge(b Attr) Attr {$/;"	f
Merge	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Merge(cmd, bang, args) abort$/;"	f
Merger	pack/plugins/start/junegunn-fzf/src/merger.go	/^type Merger struct {$/;"	t
Min	pack/plugins/start/junegunn-fzf/src/util/util.go	/^func Min(first int, second int) int {$/;"	f
Min	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^function! s:Min(...)$/;"	f
Min32	pack/plugins/start/junegunn-fzf/src/util/util.go	/^func Min32(first int32, second int32) int32 {$/;"	f
Minor improvements/fixes	pack/plugins/start/junegunn-fzf/CHANGELOG.md	/^### Minor improvements\/fixes$/;"	k
Mkdir	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -nargs=? -complete=dir Mkdir$/;"	c
Molokai Color Scheme for Vim	pack/colors/start/tomasr-molokai/README.md	/^# Molokai Color Scheme for Vim$/;"	h
More info	pack/plugins/start/fatih-vim-go/README.md	/^## More info$/;"	i
Motivation	pack/plugins/start/wellle-tmux-complete/README.md	/^## Motivation$/;"	i
Mouse	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Mouse$/;"	c
MouseEvent	pack/plugins/start/junegunn-fzf/fzf	/^  class MouseEvent$/;"	c	class:start_search
MouseEvent	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^type MouseEvent struct {$/;"	t
Move	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (w *Window) Move(y int, x int) {$/;"	f
Move	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) Move(y int, x int) {$/;"	f
Move	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=1 -bang -complete=file Move :$/;"	c
Move	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Move(force,destination) abort$/;"	f
MoveAndClear	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (w *Window) MoveAndClear(y int, x int) {$/;"	f
MoveAndClear	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) MoveAndClear(y int, x int) {$/;"	f
MoveComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:MoveComplete(A,L,P) abort$/;"	f
MultipleSearch	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^    function! MultipleSearch(allBuffers, forwhat)$/;"	f
MultipleSearch#MultipleSearch	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^    function! MultipleSearch#MultipleSearch(allBuffers, forwhat)$/;"	f
MultipleSearchCommon	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^function! s:MultipleSearchCommon(allBuffers, forwhat)$/;"	f
MultipleSearchInit	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^function! s:MultipleSearchInit()$/;"	f
MultipleSearchReset	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^function! s:MultipleSearchReset(allBuffers)$/;"	f
Neovim terminal theme	pack/colors/start/romainl-apprentice/README.md	/^## Neovim terminal theme$/;"	i
New features	pack/plugins/start/junegunn-fzf/CHANGELOG.md	/^### New features$/;"	k
NewAtomicBool	pack/plugins/start/junegunn-fzf/src/util/atomicbool.go	/^func NewAtomicBool(initialState bool) *AtomicBool {$/;"	f
NewChunkCache	pack/plugins/start/junegunn-fzf/src/cache.go	/^func NewChunkCache() ChunkCache {$/;"	f
NewChunkList	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^func NewChunkList(trans ItemBuilder) *ChunkList {$/;"	f
NewEventBox	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^func NewEventBox() *EventBox {$/;"	f
NewHistory	pack/plugins/start/junegunn-fzf/src/history.go	/^func NewHistory(path string, maxSize int) (*History, error) {$/;"	f
NewMatcher	pack/plugins/start/junegunn-fzf/src/matcher.go	/^func NewMatcher(patternBuilder func([]rune) *Pattern,$/;"	f
NewMerger	pack/plugins/start/junegunn-fzf/src/merger.go	/^func NewMerger(pattern *Pattern, lists [][]*Result, sorted bool, tac bool) *Merger {$/;"	f
NewTerminal	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func NewTerminal(opts *Options, eventBox *util.EventBox) *Terminal {$/;"	f
NewWindow	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func NewWindow(top int, left int, width int, height int, border bool) *Window {$/;"	f
NewWindow	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func NewWindow(top int, left int, width int, height int, border bool) *Window {$/;"	f
Next and Last Argument	pack/plugins/start/wellle-targets/README.md	/^### Next and Last Argument$/;"	k
Next and Last Pair	pack/plugins/start/wellle-targets/README.md	/^### Next and Last Pair$/;"	k
Next and Last Quote	pack/plugins/start/wellle-targets/README.md	/^### Next and Last Quote$/;"	k
Next and Last Separator	pack/plugins/start/wellle-targets/README.md	/^### Next and Last Separator$/;"	k
NilClass	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^class NilClass$/;"	c
No Ruby dependency	pack/plugins/start/junegunn-fzf/src/README.md	/^### No Ruby dependency$/;"	k
NoTags	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! s:NoTags() "{{{3$/;"	f
NofrilsAcme	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsAcme :colo nofrils-acme$/;"	c
NofrilsAcme	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsAcme :colo nofrils-acme$/;"	c
NofrilsAcme	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsAcme :colo nofrils-acme$/;"	c
NofrilsAcme	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsAcme :colo nofrils-acme$/;"	c
NofrilsDark	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsDark :colo nofrils-dark$/;"	c
NofrilsDark	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsDark :colo nofrils-dark$/;"	c
NofrilsDark	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsDark :colo nofrils-dark$/;"	c
NofrilsDark	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsDark :colo nofrils-dark$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsFocusCode :call NofrilsFocusCode()$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^function! NofrilsFocusCode()$/;"	f
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsFocusCode :call NofrilsFocusCode()$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^function! NofrilsFocusCode()$/;"	f
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsFocusCode :call NofrilsFocusCode()$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^function! NofrilsFocusCode()$/;"	f
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsFocusCode :call NofrilsFocusCode()$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^function! NofrilsFocusCode()$/;"	f
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsFocusComments :call NofrilsFocusComments()$/;"	c
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^function! NofrilsFocusComments()$/;"	f
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsFocusComments :call NofrilsFocusComments()$/;"	c
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^function! NofrilsFocusComments()$/;"	f
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsFocusComments :call NofrilsFocusComments()$/;"	c
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^function! NofrilsFocusComments()$/;"	f
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsFocusComments :call NofrilsFocusComments()$/;"	c
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^function! NofrilsFocusComments()$/;"	f
NofrilsFocusNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsFocusNormal :call NofrilsNormal()$/;"	c
NofrilsFocusNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsFocusNormal :call NofrilsNormal()$/;"	c
NofrilsFocusNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsFocusNormal :call NofrilsNormal()$/;"	c
NofrilsFocusNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsFocusNormal :call NofrilsNormal()$/;"	c
NofrilsLight	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsLight :colo nofrils-light$/;"	c
NofrilsLight	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsLight :colo nofrils-light$/;"	c
NofrilsLight	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsLight :colo nofrils-light$/;"	c
NofrilsLight	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsLight :colo nofrils-light$/;"	c
NofrilsNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^function! NofrilsNormal()$/;"	f
NofrilsNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^function! NofrilsNormal()$/;"	f
NofrilsNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^function! NofrilsNormal()$/;"	f
NofrilsNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^function! NofrilsNormal()$/;"	f
NofrilsSepia	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsSepia :colo nofrils-sepia$/;"	c
NofrilsSepia	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsSepia :colo nofrils-sepia$/;"	c
NofrilsSepia	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsSepia :colo nofrils-sepia$/;"	c
NofrilsSepia	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsSepia :colo nofrils-sepia$/;"	c
Notes	pack/plugins/start/wellle-targets/README.md	/^## Notes$/;"	i
Now fzf (w/o pipe) will use ag instead of find	pack/plugins/start/junegunn-fzf/README.md	/^# Now fzf (w\/o pipe) will use ag instead of find$/;"	h
O	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^        nnoremap <buffer> O <CR>:cclose<CR>$/;"	m
O	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^        nnoremap <buffer> O <CR>:lclose<CR>$/;"	m
Offset	pack/plugins/start/junegunn-fzf/src/result.go	/^type Offset [2]int32$/;"	t
OpenWindow	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function s:OpenWindow(prefix)$/;"	f
Optional	pack/plugins/start/fatih-vim-go/README.md	/^### Optional$/;"	k
Options	pack/plugins/start/junegunn-fzf/src/options.go	/^type Options struct {$/;"	t
Options	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^## Options$/;"	i
Options to fzf command	pack/plugins/start/junegunn-fzf/README.md	/^# Options to fzf command$/;"	h
Overview	pack/plugins/start/wellle-targets/README.md	/^## Overview$/;"	i
PAUSE_BEFORE_EXIT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set PAUSE_BEFORE_EXIT=1$/;"	v
PAUSE_BEFORE_EXIT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set PAUSE_BEFORE_EXIT=0$/;"	v
PROJECT_ROOT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set PROJECT_ROOT=%~2$/;"	v
PROJECT_ROOT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set PROJECT_ROOT=$/;"	v
PROJ_ROOT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set PROJ_ROOT=%~2$/;"	v
Pair Seek	pack/plugins/start/wellle-targets/README.md	/^### Pair Seek$/;"	k
Pair Text Objects	pack/plugins/start/wellle-targets/README.md	/^## Pair Text Objects$/;"	i
Pair mappings	pack/plugins/start/wellle-targets/cheatsheet.md	/^## Pair mappings$/;"	i
PairFor	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func PairFor(fg Color, bg Color) ColorPair {$/;"	f
PairFor	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func PairFor(fg Color, bg Color) ColorPair {$/;"	f
PaperColor_GenerateSpecs	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! g:PaperColor_GenerateSpecs()$/;"	f
PaperColor_Test	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! g:PaperColor_Test()$/;"	f
ParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^:ParseArgs$/;"	l
ParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:ParseArgs$/;"	l
ParseArgs	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! s:ParseArgs(keyargs_as_string) "{{{3$/;"	f
ParseOptions	pack/plugins/start/junegunn-fzf/src/options.go	/^func ParseOptions() *Options {$/;"	f
ParseRange	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^func ParseRange(str *string) (Range, bool) {$/;"	f
PassMerger	pack/plugins/start/junegunn-fzf/src/merger.go	/^func PassMerger(chunks *[]*Chunk, tac bool) *Merger {$/;"	f
Pattern	pack/plugins/start/junegunn-fzf/src/pattern.go	/^type Pattern struct {$/;"	t
Pause	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func Pause() {$/;"	f
Pause	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func Pause() {$/;"	f
Peek	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^func (b *EventBox) Peek(event EventType) bool {$/;"	f
Performance	pack/plugins/start/junegunn-fzf/src/README.md	/^### Performance$/;"	k
PgDn	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	PgDn$/;"	c
PgUp	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	PgUp$/;"	c
PrefixMatch	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func PrefixMatch(caseSensitive bool, forward bool, text util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
Preparing your environment.	pack/colors/start/romainl-apprentice/README.md	/^## Preparing your environment.$/;"	i
Preparing your environment.	pack/colors/start/romainl-disciple/README.md	/^## Preparing your environment.$/;"	i
Prerequisites	pack/plugins/start/junegunn-fzf/BUILD.md	/^### Prerequisites$/;"	k
Previous releases	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## Previous releases$/;"	i
Print	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (w *Window) Print(text string) {$/;"	f
Print	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) Print(text string) {$/;"	f
PrintString	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) PrintString(text string, pair ColorPair, a Attr) {$/;"	f
Push	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^func (cl *ChunkList) Push(data []byte) bool {$/;"	f
Quote Seek	pack/plugins/start/wellle-targets/README.md	/^### Quote Seek$/;"	k
Quote Text Objects	pack/plugins/start/wellle-targets/README.md	/^## Quote Text Objects$/;"	i
Quote mappings	pack/plugins/start/wellle-targets/cheatsheet.md	/^## Quote mappings$/;"	i
RELEASE32	pack/plugins/start/junegunn-fzf/src/Makefile	/^RELEASE32   := fzf-$(VERSION)-$(GOOS)_386$/;"	m
RELEASE64	pack/plugins/start/junegunn-fzf/src/Makefile	/^RELEASE64   := fzf-$(VERSION)-$(GOOS)_amd64$/;"	m
RELEASEARM7	pack/plugins/start/junegunn-fzf/src/Makefile	/^RELEASEARM7 := fzf-$(VERSION)-$(GOOS)_arm7$/;"	m
ROOTDIR	pack/plugins/start/junegunn-fzf/src/Makefile	/^ROOTDIR     := $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))$/;"	m
Range	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^type Range struct {$/;"	t
ReadSource	pack/plugins/start/junegunn-fzf/src/reader.go	/^func (r *Reader) ReadSource() {$/;"	f
Reader	pack/plugins/start/junegunn-fzf/src/reader.go	/^type Reader struct {$/;"	t
Refresh	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func Refresh() {$/;"	f
Refresh	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func Refresh() {$/;"	f
RefreshWindows	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func RefreshWindows(windows []*Window) {$/;"	f
RefreshWindows	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func RefreshWindows(windows []*Window) {$/;"	f
RehighlightBlame	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:RehighlightBlame() abort$/;"	f
Reject	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=1 Reject call qf#FilterList(<q-args>, 1)$/;"	c
Related Projects Based On PaperColor	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^# Related Projects Based On PaperColor$/;"	h
RemoteComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:RemoteComplete(A, L, P) abort$/;"	f
Remove	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang Remove$/;"	c
Remove	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Remove(force) abort$/;"	f
RemoveList	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=* -bang -complete=customlist,qf#CompleteList RemoveList call qf#RemoveList(expand("<bang>") == "!" ? 1 : 0, <q-args>)$/;"	c
Rename	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=1 -bang -complete=custom,s:Rename_complete Rename$/;"	c
Rename_complete	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:Rename_complete(A, L, P) abort$/;"	f
ReplaceCmd	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
Reset	pack/plugins/start/junegunn-fzf/src/matcher.go	/^func (m *Matcher) Reset(chunks []*Chunk, patternRunes []rune, cancel bool, final bool, sort bool) {$/;"	f
Resize	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Resize$/;"	c
Restore	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer Restore call qf#RestoreList()$/;"	c
Result	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^type Result struct {$/;"	t
Result	pack/plugins/start/junegunn-fzf/src/result.go	/^type Result struct {$/;"	t
Resume	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func Resume() bool {$/;"	f
Resume	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func Resume() bool {$/;"	f
Reverse	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	Reverse        = C.A_REVERSE$/;"	c
Reverse	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	Reverse        = Attr(tcell.AttrReverse)$/;"	c
RevisionComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:RevisionComplete(A, L, P) abort$/;"	f
Right	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Right$/;"	c
Run	pack/plugins/start/junegunn-fzf/src/core.go	/^func Run(opts *Options) {$/;"	f
Rune	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Rune = iota$/;"	c
RunesToChars	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^func RunesToChars(runes []rune) Chars {$/;"	f
S	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^  nmap S <Plug>Sneak_S$/;"	m
SHELL	pack/plugins/start/junegunn-fzf/src/Makefile	/^	SHELL=\/bin\/sh GOOS=$(GOOS) go test -v -tags "$(TAGS)" .\/...$/;"	m
SID	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function s:SID() abort$/;"	f
SLeft	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	SLeft$/;"	c
SOURCES	pack/plugins/start/junegunn-fzf/src/Makefile	/^SOURCES     := $(wildcard *.go *\/*.go)$/;"	m
SRCDIR	pack/plugins/start/junegunn-fzf/src/Makefile	/^SRCDIR      := $(GOPATH)\/src\/github.com\/junegunn\/fzf\/src$/;"	m
SRight	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	SRight$/;"	c
Sample	pack/plugins/start/fatih-vim-go/t/fixtures/src/buildfail/sample.go	/^func Sample() int {$/;"	f
Sample	pack/plugins/start/fatih-vim-go/t/fixtures/src/buildtestfail/sample.go	/^func Sample() int {$/;"	f
Sample	pack/plugins/start/fatih-vim-go/t/fixtures/src/failtest/sample.go	/^func Sample() int {$/;"	f
Sample	pack/plugins/start/fatih-vim-go/t/fixtures/src/pkg1/sample.go	/^func Sample() int {$/;"	f
SaveList	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=? -complete=customlist,qf#CompleteList SaveList    call qf#SaveList(0, <q-args>)$/;"	c
SaveListAdd	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=? -complete=customlist,qf#CompleteList SaveListAdd call qf#SaveList(1, <q-args>)$/;"	c
Screenshots	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^## Screenshots$/;"	i
Search	pack/plugins/start/vim-scripts-multiplesearch/plugin/MultipleSearch.vim	/^        command -nargs=* Search :silent call MultipleSearch#MultipleSearch(0, <q-args>)$/;"	c
Search	pack/plugins/start/vim-scripts-multiplesearch/plugin/MultipleSearch.vim	/^        command -nargs=* Search :silent call MultipleSearch(0, <q-args>)$/;"	c
SearchBuffers	pack/plugins/start/vim-scripts-multiplesearch/plugin/MultipleSearch.vim	/^        command -nargs=* SearchBuffers :silent call MultipleSearch#MultipleSearch(1, <q-args>)$/;"	c
SearchBuffers	pack/plugins/start/vim-scripts-multiplesearch/plugin/MultipleSearch.vim	/^        command -nargs=* SearchBuffers :silent call MultipleSearch(1, <q-args>)$/;"	c
SearchBuffersReset	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^    command -nargs=0 SearchBuffersReset :silent call <SID>MultipleSearchReset(1) $/;"	c
SearchNext	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^function! s:SearchNext(direction)$/;"	f
SearchReinit	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^    command -nargs=0 SearchReinit :silent call <SID>MultipleSearchInit() $/;"	c
SearchReset	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^    command -nargs=0 SearchReset :silent call <SID>MultipleSearchReset(0) $/;"	c
Separator Seek	pack/plugins/start/wellle-targets/README.md	/^### Separator Seek$/;"	k
Separator Text Objects	pack/plugins/start/wellle-targets/README.md	/^## Separator Text Objects$/;"	i
Separator mappings	pack/plugins/start/wellle-targets/cheatsheet.md	/^## Separator mappings$/;"	i
Set	pack/plugins/start/junegunn-fzf/src/util/atomicbool.go	/^func (a *AtomicBool) Set(newState bool) bool {$/;"	f
Set	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^func (b *EventBox) Set(event EventType, value interface{}) {$/;"	f
SetTagbar	pack/plugins/start/fatih-vim-go/ftplugin/go/tagbar.vim	/^function! s:SetTagbar()$/;"	f
Setting ag as the default source for fzf	pack/plugins/start/junegunn-fzf/README.md	/^# Setting ag as the default source for fzf$/;"	h
Settings	pack/plugins/start/fatih-vim-go/README.md	/^## Settings$/;"	i
Settings	pack/plugins/start/wellle-targets/README.md	/^## Settings$/;"	i
Settings	pack/plugins/start/wellle-tmux-complete/README.md	/^## Settings$/;"	i
Shell	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^class Shell$/;"	c
ShowTag	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! s:ShowTag(world, tagline) "{{{3$/;"	f
ShowUsage	pack/plugins/start/ludovicchabant-vim-gutentags/plat/unix/update_scopedb.sh	/^ShowUsage() {$/;"	f
ShowUsage	pack/plugins/start/ludovicchabant-vim-gutentags/plat/unix/update_tags.sh	/^ShowUsage() {$/;"	f
Slab	pack/plugins/start/junegunn-fzf/src/util/slab.go	/^type Slab struct {$/;"	t
Slice	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^func (chars *Chars) Slice(b int, e int) Chars {$/;"	f
Snapshot	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^func (cl *ChunkList) Snapshot() ([]*Chunk, int) {$/;"	f
SneakPluginNetrw	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^  augroup SneakPluginNetrw$/;"	a
Source	pack/plugins/start/wellle-tmux-complete/rplugin/python3/deoplete/sources/tmuxcomplete.py	/^class Source(Base):$/;"	c
Source files are located in src directory	pack/plugins/start/junegunn-fzf/BUILD.md	/^# Source files are located in src directory$/;"	h
Split	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^func (chars *Chars) Split(delimiter string) []Chars {$/;"	f
StageDiff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StageNext	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageNext(count) abort$/;"	f
StagePatch	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StagePrevious	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StagePrevious(count) abort$/;"	f
StageReloadSeek	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageReloadSeek(target,lnum1,lnum2) abort$/;"	f
StageToggle	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
StageUndo	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageUndo() abort$/;"	f
Status	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Status() abort$/;"	f
Steps to reproduce:	pack/plugins/start/fatih-vim-go/.github/ISSUE_TEMPLATE.md	/^### Steps to reproduce:$/;"	k
String	pack/plugins/start/junegunn-fzf/fzf	/^  class String$/;"	c
String	pack/plugins/start/junegunn-fzf/fzf	/^class String$/;"	c
StripTrailingWhitespace	vimrc	/^function! StripTrailingWhitespace()$/;"	f
Strntok	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^function! s:Strntok( s, tok, n)$/;"	f
Style	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (c Color) Style() tcell.Color {$/;"	f
SudoEdit	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -complete=file -nargs=? SudoEdit$/;"	c
SudoEditInit	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SudoEditInit() abort$/;"	f
SudoReadCmd	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SudoReadCmd() abort$/;"	f
SudoSetup	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SudoSetup(file) abort$/;"	f
SudoWrite	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar SudoWrite$/;"	c
SudoWriteCmd	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SudoWriteCmd() abort$/;"	f
SuffixMatch	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func SuffixMatch(caseSensitive bool, forward bool, text util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
Swap	pack/plugins/start/junegunn-fzf/src/result.go	/^func (a ByOrder) Swap(i, j int) {$/;"	f
Swap	pack/plugins/start/junegunn-fzf/src/result.go	/^func (a ByRelevance) Swap(i, j int) {$/;"	f
Swap	pack/plugins/start/junegunn-fzf/src/result.go	/^func (a ByRelevanceTac) Swap(i, j int) {$/;"	f
Swap	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (a byTimeOrder) Swap(i, j int) {$/;"	f
Syntax Highlighting Plugins Target	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^## Syntax Highlighting Plugins Target$/;"	i
T	vimrc	/^nmap T <Plug>Sneak_T$/;"	m
T	vimrc	/^omap T <Plug>Sneak_T$/;"	m
TAGS_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set TAGS_FILE=%~2$/;"	v
TAGS_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set TAGS_FILE=tags$/;"	v
TODO	pack/plugins/start/romainl-vim-qf/README.md	/^## TODO$/;"	i
TTags	pack/plugins/start/tomtom-ttags-vim/plugin/ttags.vim	/^command! -nargs=* -bang TTags call ttags#List(!empty('<bang>'), <f-args>)$/;"	c
TTagselect	pack/plugins/start/tomtom-ttags-vim/plugin/ttags.vim	/^command! -nargs=* -bang TTagselect call ttags#Select(!empty('<bang>'), <q-args>)$/;"	c
Tab	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Tab$/;"	c
Terminal	pack/plugins/start/junegunn-fzf/src/terminal.go	/^type Terminal struct {$/;"	t
Terminal emulators	pack/colors/start/romainl-disciple/README.md	/^### Terminal emulators$/;"	k
Terminal multiplexers	pack/colors/start/romainl-disciple/README.md	/^### Terminal multiplexers$/;"	k
TestAtomicBool	pack/plugins/start/junegunn-fzf/src/util/atomicbool_test.go	/^func TestAtomicBool(t *testing.T) {$/;"	f
TestBase	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^class TestBase < Minitest::Test$/;"	c
TestBash	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^class TestBash < TestBase$/;"	c
TestBind	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestBind(t *testing.T) {$/;"	f
TestCacheKey	pack/plugins/start/junegunn-fzf/src/pattern_test.go	/^func TestCacheKey(t *testing.T) {$/;"	f
TestCaseSensitivity	pack/plugins/start/junegunn-fzf/src/pattern_test.go	/^func TestCaseSensitivity(t *testing.T) {$/;"	f
TestCharsLength	pack/plugins/start/junegunn-fzf/src/util/chars_test.go	/^func TestCharsLength(t *testing.T) {$/;"	f
TestCharsToString	pack/plugins/start/junegunn-fzf/src/util/chars_test.go	/^func TestCharsToString(t *testing.T) {$/;"	f
TestChunkCache	pack/plugins/start/junegunn-fzf/src/cache_test.go	/^func TestChunkCache(t *testing.T) {$/;"	f
TestChunkList	pack/plugins/start/junegunn-fzf/src/chunklist_test.go	/^func TestChunkList(t *testing.T) {$/;"	f
TestColorOffset	pack/plugins/start/junegunn-fzf/src/result_test.go	/^func TestColorOffset(t *testing.T) {$/;"	f
TestColorSpec	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestColorSpec(t *testing.T) {$/;"	f
TestContrain	pack/plugins/start/junegunn-fzf/src/util/util_test.go	/^func TestContrain(t *testing.T) {$/;"	f
TestDefaultCtrlNP	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestDefaultCtrlNP(t *testing.T) {$/;"	f
TestDelimiterRegex	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestDelimiterRegex(t *testing.T) {$/;"	f
TestDelimiterRegexRegex	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestDelimiterRegexRegex(t *testing.T) {$/;"	f
TestDelimiterRegexString	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestDelimiterRegexString(t *testing.T) {$/;"	f
TestEmptyMerger	pack/plugins/start/junegunn-fzf/src/merger_test.go	/^func TestEmptyMerger(t *testing.T) {$/;"	f
TestEmptyPattern	pack/plugins/start/junegunn-fzf/src/algo/algo_test.go	/^func TestEmptyPattern(t *testing.T) {$/;"	f
TestEqual	pack/plugins/start/junegunn-fzf/src/pattern_test.go	/^func TestEqual(t *testing.T) {$/;"	f
TestEventBox	pack/plugins/start/junegunn-fzf/src/util/eventbox_test.go	/^func TestEventBox(t *testing.T) {$/;"	f
TestExact	pack/plugins/start/junegunn-fzf/src/pattern_test.go	/^func TestExact(t *testing.T) {$/;"	f
TestExactMatchNaive	pack/plugins/start/junegunn-fzf/src/algo/algo_test.go	/^func TestExactMatchNaive(t *testing.T) {$/;"	f
TestExactMatchNaiveBackward	pack/plugins/start/junegunn-fzf/src/algo/algo_test.go	/^func TestExactMatchNaiveBackward(t *testing.T) {$/;"	f
TestExtractColor	pack/plugins/start/junegunn-fzf/src/ansi_test.go	/^func TestExtractColor(t *testing.T) {$/;"	f
TestFish	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^class TestFish < TestBase$/;"	c
TestFuzzyMatch	pack/plugins/start/junegunn-fzf/src/algo/algo_test.go	/^func TestFuzzyMatch(t *testing.T) {$/;"	f
TestFuzzyMatchBackward	pack/plugins/start/junegunn-fzf/src/algo/algo_test.go	/^func TestFuzzyMatchBackward(t *testing.T) {$/;"	f
TestGoFZF	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^class TestGoFZF < TestBase$/;"	c
TestHistory	pack/plugins/start/junegunn-fzf/src/history_test.go	/^func TestHistory(t *testing.T) {$/;"	f
TestIrrelevantNth	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestIrrelevantNth(t *testing.T) {$/;"	f
TestLongString	pack/plugins/start/junegunn-fzf/src/algo/algo_test.go	/^func TestLongString(t *testing.T) {$/;"	f
TestMax	pack/plugins/start/junegunn-fzf/src/util/util_test.go	/^func TestMax(t *testing.T) {$/;"	f
TestMergerSorted	pack/plugins/start/junegunn-fzf/src/merger_test.go	/^func TestMergerSorted(t *testing.T) {$/;"	f
TestMergerUnsorted	pack/plugins/start/junegunn-fzf/src/merger_test.go	/^func TestMergerUnsorted(t *testing.T) {$/;"	f
TestOffsetSort	pack/plugins/start/junegunn-fzf/src/result_test.go	/^func TestOffsetSort(t *testing.T) {$/;"	f
TestOrigTextAndTransformed	pack/plugins/start/junegunn-fzf/src/pattern_test.go	/^func TestOrigTextAndTransformed(t *testing.T) {$/;"	f
TestPairFor	pack/plugins/start/junegunn-fzf/src/tui/tui_test.go	/^func TestPairFor(t *testing.T) {$/;"	f
TestParseKeys	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestParseKeys(t *testing.T) {$/;"	f
TestParseKeysWithComma	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestParseKeysWithComma(t *testing.T) {$/;"	f
TestParseNilTheme	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestParseNilTheme(t *testing.T) {$/;"	f
TestParseRange	pack/plugins/start/junegunn-fzf/src/tokenizer_test.go	/^func TestParseRange(t *testing.T) {$/;"	f
TestParseTermsEmpty	pack/plugins/start/junegunn-fzf/src/pattern_test.go	/^func TestParseTermsEmpty(t *testing.T) {$/;"	f
TestParseTermsExtended	pack/plugins/start/junegunn-fzf/src/pattern_test.go	/^func TestParseTermsExtended(t *testing.T) {$/;"	f
TestParseTermsExtendedExact	pack/plugins/start/junegunn-fzf/src/pattern_test.go	/^func TestParseTermsExtendedExact(t *testing.T) {$/;"	f
TestPrefixMatch	pack/plugins/start/junegunn-fzf/src/algo/algo_test.go	/^func TestPrefixMatch(t *testing.T) {$/;"	f
TestPreviewOpts	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestPreviewOpts(t *testing.T) {$/;"	f
TestRankComparison	pack/plugins/start/junegunn-fzf/src/result_test.go	/^func TestRankComparison(t *testing.T) {$/;"	f
TestReadFromCommand	pack/plugins/start/junegunn-fzf/src/reader_test.go	/^func TestReadFromCommand(t *testing.T) {$/;"	f
TestReplacePlaceholder	pack/plugins/start/junegunn-fzf/src/terminal_test.go	/^func TestReplacePlaceholder(t *testing.T) {$/;"	f
TestResultRank	pack/plugins/start/junegunn-fzf/src/result_test.go	/^func TestResultRank(t *testing.T) {$/;"	f
TestSample	pack/plugins/start/fatih-vim-go/t/fixtures/src/buildfail/sample_test.go	/^func TestSample(t *testing.T) {$/;"	f
TestSample	pack/plugins/start/fatih-vim-go/t/fixtures/src/buildtestfail/sample_test.go	/^func TestSample(t *testing.T) {$/;"	f
TestSample	pack/plugins/start/fatih-vim-go/t/fixtures/src/failtest/sample_test.go	/^func TestSample(t *testing.T) {$/;"	f
TestSample	pack/plugins/start/fatih-vim-go/t/fixtures/src/parsefail/sample_test.go	/^func TestSample(t *testing.T) {$/;"	f
TestSample	pack/plugins/start/fatih-vim-go/t/fixtures/src/pkg1/sample_test.go	/^func TestSample(t *testing.T) {$/;"	f
TestShell	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^module TestShell$/;"	m
TestSplit	pack/plugins/start/junegunn-fzf/src/util/chars_test.go	/^func TestSplit(t *testing.T) {$/;"	f
TestSplitNth	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestSplitNth(t *testing.T) {$/;"	f
TestStringPtr	pack/plugins/start/junegunn-fzf/src/item_test.go	/^func TestStringPtr(t *testing.T) {$/;"	f
TestSuffixMatch	pack/plugins/start/junegunn-fzf/src/algo/algo_test.go	/^func TestSuffixMatch(t *testing.T) {$/;"	f
TestToCharsAscii	pack/plugins/start/junegunn-fzf/src/util/chars_test.go	/^func TestToCharsAscii(t *testing.T) {$/;"	f
TestToCharsNil	pack/plugins/start/junegunn-fzf/src/util/chars_test.go	/^func TestToCharsNil(t *testing.T) {$/;"	f
TestToggle	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func TestToggle(t *testing.T) {$/;"	f
TestTokenize	pack/plugins/start/junegunn-fzf/src/tokenizer_test.go	/^func TestTokenize(t *testing.T) {$/;"	f
TestTransform	pack/plugins/start/junegunn-fzf/src/tokenizer_test.go	/^func TestTransform(t *testing.T) {$/;"	f
TestTransformIndexOutOfBounds	pack/plugins/start/junegunn-fzf/src/tokenizer_test.go	/^func TestTransformIndexOutOfBounds(t *testing.T) {$/;"	f
TestTrimLength	pack/plugins/start/junegunn-fzf/src/util/chars_test.go	/^func TestTrimLength(t *testing.T) {$/;"	f
TestZsh	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^class TestZsh < TestBase$/;"	c
There are also _fzf_path_completion and _fzf_dir_completion	pack/plugins/start/junegunn-fzf/README.md	/^# There are also _fzf_path_completion and _fzf_dir_completion$/;"	h
Third party integration	pack/plugins/start/wellle-tmux-complete/README.md	/^## Third party integration$/;"	i
Tmux	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^class Tmux$/;"	c
To apply the command to CTRL-T as well	pack/plugins/start/junegunn-fzf/README.md	/^# To apply the command to CTRL-T as well$/;"	h
ToChars	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^func ToChars(bytea []byte) Chars {$/;"	f
ToRunes	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^func (chars *Chars) ToRunes() []rune {$/;"	f
ToString	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^func (chars *Chars) ToString() string {$/;"	f
Todos	pack/plugins/start/wellle-targets/README.md	/^## Todos$/;"	i
ToggleFolds	vimrc	/^function! ToggleFolds()$/;"	f
Token	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^type Token struct {$/;"	t
Tokenize	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^func Tokenize(text util.Chars, delimiter Delimiter) []Token {$/;"	f
TrailingWhitespaces	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^func (chars *Chars) TrailingWhitespaces() int {$/;"	f
Transform	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^func Transform(tokens []Token, withNth []Range) []Token {$/;"	f
TrimLength	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^func (chars *Chars) TrimLength() int {$/;"	f
TxClear	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=0 -bar -bang TxClear     call tmuxify#pane_send_raw('C-l', <q-bang>)$/;"	c
TxCreate	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=? -bar -bang TxCreate    call tmuxify#pane_create(<q-bang>, <args>)$/;"	c
TxKill	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=0 -bar -bang TxKill      call tmuxify#pane_kill(<q-bang>)$/;"	c
TxRun	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=? -bar -bang TxRun       call tmuxify#pane_run(<q-bang>, <args>)$/;"	c
TxSend	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=? -bar -bang TxSend      call tmuxify#pane_send(<q-bang>, <args>)$/;"	c
TxSendKey	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=? -bar -bang TxSendKey   call tmuxify#pane_send_raw(<q-args>, <q-bang>)$/;"	c
TxSetPane	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=? -bar -bang TxSetPane   call tmuxify#pane_set(<q-bang>, <f-args>)$/;"	c
TxSetRunCmd	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=? -bar       TxSetRunCmd call tmuxify#set_run_command_for_filetype(<args>)$/;"	c
TxSigInt	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=0 -bar -bang TxSigInt    call tmuxify#pane_send_raw('C-c', <q-bang>)$/;"	c
U	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^    nmap U <Plug>(RepeatUndoLine)$/;"	m
UNAME_M	pack/plugins/start/junegunn-fzf/src/Makefile	/^UNAME_M := $(shell uname -m)$/;"	m
UNAME_S	pack/plugins/start/junegunn-fzf/src/Makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UPDATED_SOURCE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set UPDATED_SOURCE=%~2$/;"	v
UPDATED_SOURCE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set UPDATED_SOURCE=$/;"	v
Underline	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	Underline      = C.A_UNDERLINE$/;"	c
Underline	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	Underline      = Attr(tcell.AttrUnderline)$/;"	c
Unit tests	pack/plugins/start/junegunn-fzf/src/README.md	/^# Unit tests$/;"	h
Unlink	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang Unlink$/;"	c
Unlock	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:Unlock$/;"	l
Unwatch	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^func (b *EventBox) Unwatch(events ...EventType) {$/;"	f
Up	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	Up$/;"	c
UpdateCount	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) UpdateCount(cnt int, final bool) {$/;"	f
UpdateHeader	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) UpdateHeader(header []string) {$/;"	f
UpdateList	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) UpdateList(merger *Merger) {$/;"	f
UpdateProgress	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) UpdateProgress(progress float32) {$/;"	f
Upgrading fzf	pack/plugins/start/junegunn-fzf/README.md	/^### Upgrading fzf$/;"	k
Usage	pack/plugins/start/fatih-vim-go/README.md	/^## Usage$/;"	i
Usage	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^:Usage$/;"	l
Usage	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:Usage$/;"	l
Use ag instead of the default find command for listing candidates.	pack/plugins/start/junegunn-fzf/README.md	/^# Use ag instead of the default find command for listing candidates.$/;"	h
Use ~~ as the trigger sequence instead of the default **	pack/plugins/start/junegunn-fzf/README.md	/^# Use ~~ as the trigger sequence instead of the default **$/;"	h
Using Homebrew	pack/plugins/start/junegunn-fzf/README.md	/^### Using Homebrew$/;"	k
Using Makefile	pack/plugins/start/junegunn-fzf/BUILD.md	/^### Using Makefile$/;"	k
Using `go get`	pack/plugins/start/junegunn-fzf/BUILD.md	/^### Using `go get`$/;"	k
Using git	pack/plugins/start/junegunn-fzf/README.md	/^### Using git$/;"	k
Using with Neovim (beta)	pack/plugins/start/fatih-vim-go/README.md	/^### Using with Neovim (beta)$/;"	k
Using with Syntastic	pack/plugins/start/fatih-vim-go/README.md	/^### Using with Syntastic$/;"	k
VADER_OUTPUT_FILE	pack/plugins/start/justinmk-vim-sneak/Makefile	/^	VADER_OUTPUT_FILE=\/dev\/stderr n$(VIM) --headless '+Vader! tests\/*.vader'$/;"	m
VERSION	pack/plugins/start/junegunn-fzf/src/Makefile	/^VERSION     := $(shell awk -F= '\/version =\/ {print $$2}' constants.go | tr -d "\\" ")$/;"	m
VIM	pack/plugins/start/justinmk-vim-sneak/Makefile	/^VIM = vim -N -u NORC -i NONE --cmd 'set rtp+=tests\/vader rtp+=tests\/repeat rtp+=$$PWD'$/;"	m
Vim plugin	pack/plugins/start/junegunn-fzf/README.md	/^### Vim plugin$/;"	k
W	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^  command! -bar W Wall$/;"	c
Wait	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^func (b *EventBox) Wait(callback func(*Events)) {$/;"	f
WaitFor	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^func (b *EventBox) WaitFor(event EventType) {$/;"	f
Wall	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=? Wall$/;"	c
Wall	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:Wall() abort$/;"	f
Watch	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^func (b *EventBox) Watch(events ...EventType) {$/;"	f
What they say about Apprentice.	pack/colors/start/romainl-apprentice/README.md	/^## What they say about Apprentice.$/;"	i
What?	pack/plugins/start/ludovicchabant-vim-gutentags/README.md	/^## What?$/;"	i
Why?	pack/plugins/start/ludovicchabant-vim-gutentags/README.md	/^## Why?$/;"	i
Window	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^type Window struct {$/;"	t
WindowImpl	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^type WindowImpl C.WINDOW$/;"	t
WindowImpl	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^type WindowImpl WindowTcell$/;"	t
WindowTcell	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^type WindowTcell struct {$/;"	t
Windows	pack/plugins/start/junegunn-fzf/README.md	/^### Windows$/;"	k
With ncurses 6	pack/plugins/start/junegunn-fzf/BUILD.md	/^### With ncurses 6$/;"	k
With tcell	pack/plugins/start/junegunn-fzf/BUILD.md	/^### With tcell$/;"	k
Working with 8/16 colors	pack/colors/start/romainl-apprentice/README.md	/^### Working with 8\/16 colors$/;"	k
Wq	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
Write	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
X	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (w *Window) X() int {$/;"	f
X	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) X() int {$/;"	f
Y	vimrc	/^nnoremap Y y\$$/;"	m
Z	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^  omap Z <Plug>Sneak_S$/;"	m
[[	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> [[ :<c-u>call go#textobj#FunctionJump('n', 'prev')<cr>$/;"	m
[[	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> [[ :<c-u>call go#textobj#FunctionJump('o', 'prev')<cr>$/;"	m
\	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^    nmap \\ <Plug>Sneak_,$/;"	m
\	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^    omap \\ <Plug>Sneak_,$/;"	m
]]	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> ]] :<c-u>call go#textobj#FunctionJump('n', 'next')<cr>$/;"	m
]]	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> ]] :<c-u>call go#textobj#FunctionJump('o', 'next')<cr>$/;"	m
__fsel	pack/plugins/start/junegunn-fzf/shell/key-bindings.zsh	/^__fsel() {$/;"	f
__fzf_cd__	pack/plugins/start/junegunn-fzf/shell/key-bindings.bash	/^__fzf_cd__() {$/;"	f
__fzf_generic_path_completion	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^__fzf_generic_path_completion() {$/;"	f
__fzf_generic_path_completion	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^__fzf_generic_path_completion() {$/;"	f
__fzf_history__	pack/plugins/start/junegunn-fzf/shell/key-bindings.bash	/^__fzf_history__() ($/;"	f
__fzf_select__	pack/plugins/start/junegunn-fzf/shell/key-bindings.bash	/^__fzf_select__() {$/;"	f
__fzf_select_tmux__	pack/plugins/start/junegunn-fzf/shell/key-bindings.bash	/^__fzf_select_tmux__() {$/;"	f
__fzf_use_tmux__	pack/plugins/start/junegunn-fzf/shell/key-bindings.bash	/^__fzf_use_tmux__() {$/;"	f
__fzfcmd	pack/plugins/start/junegunn-fzf/shell/key-bindings.bash	/^__fzfcmd() {$/;"	f
__fzfcmd	pack/plugins/start/junegunn-fzf/shell/key-bindings.zsh	/^__fzfcmd() {$/;"	f
__init__	pack/plugins/start/wellle-tmux-complete/rplugin/python3/deoplete/sources/tmuxcomplete.py	/^    def __init__(self, vim):$/;"	m	class:Source
_cache	pack/plugins/start/junegunn-fzf/src/pattern.go	/^	_cache        ChunkCache$/;"	v
_clickY	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	_clickY       []int$/;"	v
_color	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	_color        bool$/;"	v
_colorFn	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	_colorFn  func(ColorPair, Attr) (C.short, C.int)$/;"	v
_colorMap	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	_colorMap map[int]ColorPair$/;"	v
_colorToAttribute	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	_colorToAttribute = []tcell.Color{$/;"	v
_fzf_compgen_dir	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^  _fzf_compgen_dir() {$/;"	f
_fzf_compgen_dir	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^  _fzf_compgen_dir() {$/;"	f
_fzf_compgen_path	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^  _fzf_compgen_path() {$/;"	f
_fzf_compgen_path	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^  _fzf_compgen_path() {$/;"	f
_fzf_complete	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_complete() {$/;"	f
_fzf_complete	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^_fzf_complete() {$/;"	f
_fzf_complete_export	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_complete_export() {$/;"	f
_fzf_complete_export	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^_fzf_complete_export() {$/;"	f
_fzf_complete_kill	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_complete_kill() {$/;"	f
_fzf_complete_ssh	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_complete_ssh() {$/;"	f
_fzf_complete_ssh	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^_fzf_complete_ssh() {$/;"	f
_fzf_complete_telnet	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_complete_telnet() {$/;"	f
_fzf_complete_telnet	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^_fzf_complete_telnet() {$/;"	f
_fzf_complete_unalias	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_complete_unalias() {$/;"	f
_fzf_complete_unalias	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^_fzf_complete_unalias() {$/;"	f
_fzf_complete_unset	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_complete_unset() {$/;"	f
_fzf_complete_unset	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^_fzf_complete_unset() {$/;"	f
_fzf_defc	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_defc() {$/;"	f
_fzf_dir_completion	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_dir_completion() {$/;"	f
_fzf_dir_completion	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^_fzf_dir_completion() {$/;"	f
_fzf_feed_fifo	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^_fzf_feed_fifo() ($/;"	f
_fzf_file_completion	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_file_completion() {$/;"	f
_fzf_handle_dynamic_completion	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_handle_dynamic_completion() {$/;"	f
_fzf_opts_completion	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_opts_completion() {$/;"	f
_fzf_orig_completion_filter	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_orig_completion_filter() {$/;"	f
_fzf_path_completion	pack/plugins/start/junegunn-fzf/shell/completion.bash	/^_fzf_path_completion() {$/;"	f
_fzf_path_completion	pack/plugins/start/junegunn-fzf/shell/completion.zsh	/^_fzf_path_completion() {$/;"	f
_mouse	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	_mouse  bool$/;"	v
_patternCache	pack/plugins/start/junegunn-fzf/src/pattern.go	/^	_patternCache map[string]*Pattern$/;"	v
_prevDownTime	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	_prevDownTime time.Time$/;"	v
_runeWidths	pack/plugins/start/junegunn-fzf/src/terminal.go	/^var _runeWidths = make(map[rune]int)$/;"	v
_screen	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^	_screen   *C.SCREEN$/;"	v
_screen	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^	_screen tcell.Screen$/;"	v
_spinner	pack/plugins/start/junegunn-fzf/src/terminal.go	/^var _spinner = []string{`-`, `\\`, `|`, `\/`, `-`, `\\`, `|`, `\/`}$/;"	v
_splitRegex	pack/plugins/start/junegunn-fzf/src/pattern.go	/^	_splitRegex   *regexp.Regexp$/;"	v
_tabStop	pack/plugins/start/junegunn-fzf/src/terminal.go	/^var _tabStop int$/;"	v
a:args	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let a:args.error_info_cb = function('s:error_info_cb')$/;"	v
a:args	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let a:args.error_info_cb = function('s:error_info_cb')$/;"	v
a:args	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^  let a:args.error_info_cb = function('s:error_info_cb')$/;"	v
abortMatch	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:abortMatch(message)$/;"	f
actAbort	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actAbort$/;"	c
actAccept	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actAccept$/;"	c
actBackwardChar	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actBackwardChar$/;"	c
actBackwardDeleteChar	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actBackwardDeleteChar$/;"	c
actBackwardKillWord	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actBackwardKillWord$/;"	c
actBackwardWord	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actBackwardWord$/;"	c
actBeginningOfLine	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actBeginningOfLine$/;"	c
actCancel	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actCancel$/;"	c
actClearScreen	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actClearScreen$/;"	c
actDeleteChar	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actDeleteChar$/;"	c
actDeleteCharEOF	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actDeleteCharEOF$/;"	c
actDeselectAll	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actDeselectAll$/;"	c
actDown	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actDown$/;"	c
actEndOfLine	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actEndOfLine$/;"	c
actExecute	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actExecute$/;"	c
actExecuteMulti	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actExecuteMulti$/;"	c
actForwardChar	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actForwardChar$/;"	c
actForwardWord	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actForwardWord$/;"	c
actIgnore	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actIgnore actionType = iota$/;"	c
actInvalid	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actInvalid$/;"	c
actJump	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actJump$/;"	c
actJumpAccept	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actJumpAccept$/;"	c
actKillLine	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actKillLine$/;"	c
actKillWord	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actKillWord$/;"	c
actMouse	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actMouse$/;"	c
actNextHistory	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actNextHistory$/;"	c
actPageDown	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actPageDown$/;"	c
actPageUp	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actPageUp$/;"	c
actPreviewDown	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actPreviewDown$/;"	c
actPreviewPageDown	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actPreviewPageDown$/;"	c
actPreviewPageUp	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actPreviewPageUp$/;"	c
actPreviewUp	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actPreviewUp$/;"	c
actPreviousHistory	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actPreviousHistory$/;"	c
actPrintQuery	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actPrintQuery$/;"	c
actRune	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actRune$/;"	c
actSelectAll	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actSelectAll$/;"	c
actToggle	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actToggle$/;"	c
actToggleAll	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actToggleAll$/;"	c
actToggleDown	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actToggleDown$/;"	c
actToggleIn	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actToggleIn$/;"	c
actToggleOut	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actToggleOut$/;"	c
actTogglePreview	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actTogglePreview$/;"	c
actToggleSort	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actToggleSort$/;"	c
actToggleUp	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actToggleUp$/;"	c
actUnixLineDiscard	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actUnixLineDiscard$/;"	c
actUnixWordRubout	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actUnixWordRubout$/;"	c
actUp	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actUp$/;"	c
actYank	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	actYank$/;"	c
act_on_pumvisible	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:act_on_pumvisible()$/;"	f
act_on_textchanged	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  fun! s:act_on_textchanged()$/;"	f
actionType	pack/plugins/start/junegunn-fzf/src/terminal.go	/^type actionType int$/;"	t
adapt_to_environment	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:adapt_to_environment()$/;"	f
addMapping1	pack/plugins/start/wellle-targets/plugin/targets.vim	/^function! s:addMapping1(mapType, mapping, aiAI)$/;"	f
addMapping2	pack/plugins/start/wellle-targets/plugin/targets.vim	/^function! s:addMapping2(mapType, mapping, aiAI, nlNL)$/;"	f
addToJumplist	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:addToJumplist(target)$/;"	f
addVisualMappings	pack/plugins/start/wellle-targets/plugin/targets.vim	/^function! s:addVisualMappings()$/;"	f
add_methods	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
addstr_safe	pack/plugins/start/junegunn-fzf/fzf	/^  def addstr_safe str$/;"	f	class:usage
af	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> af :<c-u>call go#textobj#Function('a')<cr>$/;"	m
after	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/label.vim	/^func! s:after()$/;"	f
airline#themes#PaperColor#refresh	pack/colors/start/nlknguyen-papercolor-theme/autoload/airline/themes/PaperColor.vim	/^function! airline#themes#PaperColor#refresh()$/;"	f
al	vimrc	/^omap al :<C-u>normal val<CR>$/;"	m
algo	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^package algo$/;"	p
algo	pack/plugins/start/junegunn-fzf/src/algo/algo_test.go	/^package algo$/;"	p
alloc16	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func alloc16(offset int, slab *util.Slab, size int, clear bool) (int, []int16) {$/;"	f
alloc32	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func alloc32(offset int, slab *util.Slab, size int, clear bool) (int, []int32) {$/;"	f
ansiOffset	pack/plugins/start/junegunn-fzf/src/ansi.go	/^type ansiOffset struct {$/;"	t
ansiRegex	pack/plugins/start/junegunn-fzf/src/ansi.go	/^var ansiRegex *regexp.Regexp$/;"	v
ansiState	pack/plugins/start/junegunn-fzf/src/ansi.go	/^type ansiState struct {$/;"	t
append	pack/plugins/start/junegunn-fzf/src/history.go	/^func (h *History) append(line string) error {$/;"	f
append_line	pack/plugins/start/junegunn-fzf/install	/^append_line() {$/;"	f
apply_highlightings	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:apply_highlightings()$/;"	f
args	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^  let args = {$/;"	v
ask	pack/plugins/start/junegunn-fzf/install	/^ask() {$/;"	f
asmfmt_autosave	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:asmfmt_autosave()$/;"	f
assert	pack/plugins/start/junegunn-fzf/src/merger_test.go	/^func assert(t *testing.T, cond bool, msg ...string) {$/;"	f
assertMatch	pack/plugins/start/junegunn-fzf/src/algo/algo_test.go	/^func assertMatch(t *testing.T, fun Algo, caseSensitive, forward bool, input, pattern string, sidx int, eidx int, score int) {$/;"	f
async_guru	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:async_guru(args) abort$/;"	f
atof	pack/plugins/start/junegunn-fzf/src/options.go	/^func atof(str string) float64 {$/;"	f
atoi	pack/plugins/start/junegunn-fzf/src/options.go	/^func atoi(str string) int {$/;"	f
attach_autocmds	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! s:attach_autocmds()$/;"	f
attrColored	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func attrColored(pair ColorPair, a Attr) (C.short, C.int) {$/;"	f
attrMono	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func attrMono(pair ColorPair, a Attr) (C.short, C.int) {$/;"	f
auto_sameids	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:auto_sameids()$/;"	f
auto_type_info	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:auto_type_info()$/;"	f
awkBlack	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^	awkBlack$/;"	c
awkNil	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^	awkNil = iota$/;"	c
awkTokenizer	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^func awkTokenizer(input util.Chars) ([]util.Chars, int) {$/;"	f
awkWhite	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^	awkWhite$/;"	c
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^let b:current_syntax = "go"$/;"	v
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/godefstack.vim	/^let b:current_syntax = "godefstack"$/;"	v
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/gohtmltmpl.vim	/^let b:current_syntax = "gohtmltmpl"$/;"	v
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/gotexttmpl.vim	/^let b:current_syntax = "gotexttmpl"$/;"	v
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/vimgo.vim	/^let b:current_syntax = "vimgo"$/;"	v
b:did_ftplugin	pack/plugins/start/fatih-vim-go/ftplugin/asm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/fatih-vim-go/ftplugin/gohtmltmpl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	pack/plugins/start/fatih-vim-go/indent/go.vim	/^let b:did_indent = 1$/;"	v
b:isLoc	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^let b:isLoc = len(getloclist(0)) > 0 ? 1 : 0$/;"	v
b:undo_ftplugin	pack/plugins/start/fatih-vim-go/ftplugin/asm.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^let b:undo_ftplugin = "setl fo< com< ofu<"$/;"	v
bash	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^    def bash$/;"	f	class:Shell
basicMatch	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func (p *Pattern) basicMatch(item *Item, withPos bool, slab *util.Slab) (Offset, int, int, *[]int) {$/;"	f
before	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/label.vim	/^func! s:before()$/;"	f
bestSeekTarget	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:bestSeekTarget(targets, oldpos, min, max, message)$/;"	f
bg	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (p ColorPair) bg() Color {$/;"	f
bonusAt	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func bonusAt(input util.Chars, idx int) int16 {$/;"	f
bonusBoundary	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	bonusBoundary = scoreMatch \/ 2$/;"	c
bonusCamel123	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	bonusCamel123 = bonusBoundary + scoreGapExtention$/;"	c
bonusConsecutive	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	bonusConsecutive = -(scoreGapStart + scoreGapExtention)$/;"	c
bonusFirstCharMultiplier	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	bonusFirstCharMultiplier = 2$/;"	c
bonusFor	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func bonusFor(prevClass charClass, class charClass) int16 {$/;"	f
bonusNonWord	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	bonusNonWord = scoreMatch \/ 2$/;"	c
buffer	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer_commit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_compare_age	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
buffer_containing_commit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_expand	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_getline	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getvar	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_name	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_path	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_repo	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_rev	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_setvar	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_sha1	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_spec	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  function! s:buffer_spec() dict abort$/;"	f
buffer_type	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_up	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_up(...) dict abort$/;"	f
buildLists	pack/plugins/start/junegunn-fzf/src/merger_test.go	/^func buildLists(partiallySorted bool) ([][]*Result, []*Result) {$/;"	f
buildResult	pack/plugins/start/junegunn-fzf/src/result.go	/^func buildResult(item *Item, offsets []Offset, score int, trimLen int) *Result {$/;"	f
build_delim_regex	pack/plugins/start/junegunn-fzf/fzf	/^  def FZF.build_delim_regex delim$/;"	F
burp	pack/plugins/start/junegunn-fzf/fzf	/^  def burp string, orig = nil$/;"	f
byBegin	pack/plugins/start/junegunn-fzf/src/options.go	/^	byBegin$/;"	c
byEnd	pack/plugins/start/junegunn-fzf/src/options.go	/^	byEnd$/;"	c
byLength	pack/plugins/start/junegunn-fzf/src/options.go	/^	byLength$/;"	c
byScore	pack/plugins/start/junegunn-fzf/src/options.go	/^	byScore criterion = iota$/;"	c
byTimeOrder	pack/plugins/start/junegunn-fzf/src/terminal.go	/^type byTimeOrder []selectedItem$/;"	t
cache_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! s:cache_project_root(path) abort$/;"	f
cacheable	pack/plugins/start/junegunn-fzf/src/merger.go	/^func (mg *Merger) cacheable() bool {$/;"	f
calc_size	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:calc_size(max, val, dict)$/;"	f
calculateScore	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func calculateScore(caseSensitive bool, text util.Chars, pattern []rune, sidx int, eidx int, withPos bool) (int, *[]int) {$/;"	f
calculateSize	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func calculateSize(base int, size sizeSpec, margin int, minSize int) int {$/;"	f
call	pack/plugins/start/junegunn-fzf/fzf	/^  def call(name, method, *args)$/;"	f	class:FZF
callback	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:callback(dict, lines) abort$/;"	f
callback_handlers_on_exit	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:callback_handlers_on_exit(job, exit_status, data) abort$/;"	f
callbacks	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let callbacks = go#job#Spawn(a:args)$/;"	v
callbacks	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let callbacks = go#job#Spawn(a:args)$/;"	v
callbacks	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^  let callbacks = go#job#Spawn(a:args)$/;"	v
can_complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:can_complete()$/;"	f
can_diffoff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
capture	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def capture pane = 0$/;"	f	class:Tmux
cbs	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^    let cbs.callback = a:args.callback$/;"	v
cbs	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^    let cbs.close_cb = a:args.close_cb$/;"	v
cbs.close_cb	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^  function cbs.close_cb(chan) dict$/;"	f
cbs.show_errors	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^  function cbs.show_errors(listtype) dict$/;"	f
cd	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let cd = exists('*haslocaldir') && haslocaldir() ? 'lcd ' : 'cd '$/;"	v
cd	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let cd = exists('*haslocaldir') && haslocaldir() ? 'lcd ' : 'cd '$/;"	v
cfile	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:cfile() abort$/;"	f
charClass	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^type charClass int$/;"	t
charClassOf	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func charClassOf(char rune) charClass {$/;"	f
charClassOfAscii	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func charClassOfAscii(char rune) charClass {$/;"	f
charClassOfNonAscii	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func charClassOfNonAscii(char rune) charClass {$/;"	f
charLetter	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	charLetter$/;"	c
charLower	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	charLower$/;"	c
charNonWord	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	charNonWord charClass = iota$/;"	c
charNumber	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	charNumber$/;"	c
charUpper	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	charUpper$/;"	c
check_binary	pack/plugins/start/junegunn-fzf/install	/^check_binary() {$/;"	f
chunkSize	pack/plugins/start/junegunn-fzf/src/constants.go	/^	chunkSize int = 100$/;"	c
cleanUp	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:cleanUp()$/;"	f
clearChunkCache	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func clearChunkCache() {$/;"	f
clearCommandLine	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:clearCommandLine()$/;"	f
clearPack	get-plugins.go	/^func clearPack() {$/;"	f
clearPatternCache	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func clearPatternCache() {$/;"	f
close_cb	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  function! s:close_cb(chan) closure$/;"	f
close_cb	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  function! s:close_cb(chan) closure$/;"	f
cmd	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:cmd(bang, ...) abort$/;"	f
cmd_job	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function s:cmd_job(args) abort$/;"	f
colBlack	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	colBlack Color = iota$/;"	c
colBlue	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	colBlue$/;"	c
colCyan	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	colCyan$/;"	c
colDefault	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	colDefault         = -1$/;"	c
colGreen	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	colGreen$/;"	c
colMagenta	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	colMagenta$/;"	c
colRed	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	colRed$/;"	c
colUndefined	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	colUndefined Color = -2$/;"	c
colWhite	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	colWhite$/;"	c
colYellow	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	colYellow$/;"	c
collect	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:collect(temps) abort$/;"	f
color	pack/plugins/start/junegunn-fzf/fzf	/^      def self.color sym, bold = false$/;"	F	class:init_screen
colorOffset	pack/plugins/start/junegunn-fzf/src/result.go	/^type colorOffset struct {$/;"	t
colorOffsets	pack/plugins/start/junegunn-fzf/src/result.go	/^func (result *Result) colorOffsets(matchOffsets []Offset, theme *tui.ColorTheme, color tui.ColorPair, attr tui.Attr, current bool) []colorOffset {$/;"	f
colored	pack/plugins/start/junegunn-fzf/src/ansi.go	/^func (s *ansiState) colored() bool {$/;"	f
colors_name	pack/colors/start/romainl-apprentice/colors/apprentice.vim	/^let colors_name = "apprentice"$/;"	v
colors_name	pack/colors/start/romainl-disciple/colors/disciple.vim	/^let colors_name = 'disciple'$/;"	v
colors_should_have_correct_format	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:colors_should_have_correct_format()$/;"	f
colour	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:colour(r, g, b)$/;"	f
command	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:command(definition) abort$/;"	f
common_sink	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:common_sink(action, lines) abort$/;"	f
compareRanks	pack/plugins/start/junegunn-fzf/src/result.go	/^func compareRanks(irank rank, jrank rank, tac bool) bool {$/;"	f
complete_descriptor	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! s:complete_descriptor(...) abort$/;"	f
complete_panes	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! s:complete_panes(...) abort$/;"	f
complete_sessions	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! s:complete_sessions(...) abort$/;"	f
complete_windows	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! s:complete_windows(...) abort$/;"	f
configured_tree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:configured_tree(git_dir) abort$/;"	f
confirm	pack/plugins/start/junegunn-fzf/uninstall	/^confirm() {$/;"	f
constrain	pack/plugins/start/junegunn-fzf/fzf	/^  def constrain offset, cursor, count, height$/;"	f	class:start_search
constrain	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) constrain() {$/;"	f
consume	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func consume(expects ...rune) bool {$/;"	f
coordinatorDelayMax	pack/plugins/start/junegunn-fzf/src/constants.go	/^	coordinatorDelayMax  time.Duration = 100 * time.Millisecond$/;"	c
coordinatorDelayStep	pack/plugins/start/junegunn-fzf/src/constants.go	/^	coordinatorDelayStep time.Duration = 10 * time.Millisecond$/;"	c
copySlice	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func copySlice(slice []rune) []rune {$/;"	f
coverage_browser_callback	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! s:coverage_browser_callback(coverfile, job, exit_status, data)$/;"	f
coverage_browser_handler	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! s:coverage_browser_handler(job, exit_status, data) abort$/;"	f
coverage_callback	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! s:coverage_callback(coverfile, job, exit_status, data)$/;"	f
coverage_handler	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! s:coverage_handler(job, exit_status, data) abort$/;"	f
coverage_job	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function s:coverage_job(args)$/;"	f
cpath	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:cpath(path) abort$/;"	f
cprint	pack/plugins/start/junegunn-fzf/fzf	/^  def cprint str, col$/;"	f	class:usage
createArgTextObjects	pack/plugins/start/wellle-targets/plugin/targets.vim	/^function! s:createArgTextObjects(mapType)$/;"	f
createPairTextObjects	pack/plugins/start/wellle-targets/plugin/targets.vim	/^function! s:createPairTextObjects(mapType)$/;"	f
createQuoteTextObjects	pack/plugins/start/wellle-targets/plugin/targets.vim	/^function! s:createQuoteTextObjects(mapType)$/;"	f
createSeparatorTextObjects	pack/plugins/start/wellle-targets/plugin/targets.vim	/^function! s:createSeparatorTextObjects(mapType)$/;"	f
createTagTextObjects	pack/plugins/start/wellle-targets/plugin/targets.vim	/^function! s:createTagTextObjects(mapType)$/;"	f
criterion	pack/plugins/start/junegunn-fzf/src/options.go	/^type criterion int$/;"	t
ctrl	pack/plugins/start/junegunn-fzf/fzf	/^  def ctrl char$/;"	f	class:usage
ctrlp#decls#accept	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#accept(mode, str) abort$/;"	f
ctrlp#decls#cmd	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#cmd(mode, ...) abort$/;"	f
ctrlp#decls#enter	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#enter() abort$/;"	f
ctrlp#decls#exit	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#exit() abort$/;"	f
ctrlp#decls#init	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#init() abort$/;"	f
current	pack/plugins/start/junegunn-fzf/src/history.go	/^func (h *History) current() string {$/;"	f
current	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) current() string {$/;"	f
currentItem	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) currentItem() *Item {$/;"	f
current_compiler	pack/plugins/start/fatih-vim-go/compiler/go.vim	/^let current_compiler = "go"$/;"	v
cursor_y	pack/plugins/start/junegunn-fzf/fzf	/^  def cursor_y offset = 0$/;"	f	class:usage
d	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^        let d = {'file': 'f',"startline": "1", "startcol": "2", "endline": "3", "endcol": "4", "numstmt": "5", "cnt": "0"}$/;"	v
d	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^        let d = {'file': 'f',"startline": "1", "startcol": "2", "endline": "3", "endcol": "4", "numstmt": "5", "cnt": "6"}$/;"	v
dbgfeat	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/debug.vim	/^func! s:dbgfeat(featurename)$/;"	f
dbgflag	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/debug.vim	/^func! s:dbgflag(settingname)$/;"	f
dbgfunc	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/debug.vim	/^func! s:dbgfunc(funcname)$/;"	f
debug	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:debug(message)$/;"	f
def_job	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function s:def_job(args) abort$/;"	f
defaultCommand	pack/plugins/start/junegunn-fzf/src/constants_unix.go	/^	defaultCommand = `find . -path '*\/\\.*' -prune -o -type f -print -o -type l -print 2> \/dev\/null | sed s\/^..\/\/`$/;"	c
defaultCommand	pack/plugins/start/junegunn-fzf/src/constants_windows.go	/^	defaultCommand = `dir \/s\/b`$/;"	c
defaultHistoryMax	pack/plugins/start/junegunn-fzf/src/constants.go	/^	defaultHistoryMax int = 1000$/;"	c
defaultJumpLabels	pack/plugins/start/junegunn-fzf/src/constants.go	/^	defaultJumpLabels string = "asdfghjklqwertyuiopzxcvbnm1234567890ASDFGHJKLQWERTYUIOPZXCVBNM`~;:,<.>\/?'\\"!@#$%^&*()[{]}-_=+"$/;"	c
defaultKeymap	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func defaultKeymap() map[int]actionType {$/;"	f
defaultMargin	pack/plugins/start/junegunn-fzf/src/options.go	/^func defaultMargin() [4]sizeSpec {$/;"	f
defaultOptions	pack/plugins/start/junegunn-fzf/src/options.go	/^func defaultOptions() *Options {$/;"	f
default_color	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/hl.vim	/^func! s:default_color(hlgroup, what, mode) abort$/;"	f
defaults	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:defaults()$/;"	f
define_commands	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:define_commands() abort$/;"	f
delChar	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) delChar() bool {$/;"	f
delimiterRegexp	pack/plugins/start/junegunn-fzf/src/options.go	/^func delimiterRegexp(str string) Delimiter {$/;"	f
diff_modifier	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diff_modifier(count) abort$/;"	f
diff_restore	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diff_restore() abort$/;"	f
diff_window_count	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
diffoff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff() abort$/;"	f
diffoff_all	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
diffthis	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diffthis() abort$/;"	f
dir	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let dir = getcwd()$/;"	v
dir	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let dir = getcwd()$/;"	v
disable_conceal_in_other_windows	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/label.vim	/^func! s:disable_conceal_in_other_windows()$/;"	f
displayWidth	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func displayWidth(runes []rune) int {$/;"	f
displayWidthWithLimit	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func displayWidthWithLimit(runes []rune, prefixWidth int, limit int) int {$/;"	f
do_label	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/label.vim	/^func! s:do_label(s, v, reverse) "{{{$/;"	f
do_match	pack/plugins/start/junegunn-fzf/fzf	/^    def do_match str, pat$/;"	f	class:start_search.Matcher
dopopd	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:dopopd()$/;"	f
double?	pack/plugins/start/junegunn-fzf/fzf	/^    def double? v$/;"	f	class:start_search.MouseEvent
doubleClickDuration	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^	doubleClickDuration = 500 * time.Millisecond$/;"	c
download	pack/plugins/start/junegunn-fzf/install	/^download() {$/;"	f
drop	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:drop(target)$/;"	f
dropa	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:dropa(target)$/;"	f
dropr	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:dropr(target)$/;"	f
dupe	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^func (c *Chunk) dupe() *Chunk {$/;"	f
dupeTheme	pack/plugins/start/junegunn-fzf/src/options.go	/^func dupeTheme(theme *tui.ColorTheme) *tui.ColorTheme {$/;"	f
echo_go_info	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:echo_go_info()$/;"	f
emit	pack/plugins/start/junegunn-fzf/fzf	/^  def emit event$/;"	f	class:usage
empty?	pack/plugins/start/junegunn-fzf/fzf	/^    def empty? q$/;"	f	class:start_search.ExtendedFuzzyMatcher
empty?	pack/plugins/start/junegunn-fzf/fzf	/^    def empty? q$/;"	f	class:start_search.FuzzyMatcher
enable_syntax	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! s:enable_syntax() abort$/;"	f
end_with?	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def end_with? str$/;"	f	class:NilClass
equals	pack/plugins/start/junegunn-fzf/src/ansi.go	/^func (s *ansiState) equals(t *ansiState) bool {$/;"	f
error	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:error(msg)$/;"	f
errorExit	pack/plugins/start/junegunn-fzf/src/options.go	/^func errorExit(msg string) {$/;"	f
escSequence	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func escSequence() Event {$/;"	f
escape	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:escape(path)$/;"	f
escapedColon	pack/plugins/start/junegunn-fzf/src/options.go	/^	escapedColon = 0$/;"	c
escapedComma	pack/plugins/start/junegunn-fzf/src/options.go	/^	escapedComma = 1$/;"	c
eunuch	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^augroup eunuch$/;"	a
exact_regex	pack/plugins/start/junegunn-fzf/fzf	/^    def exact_regex w$/;"	f	class:start_search.ExtendedFuzzyMatcher.parse
execute	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:execute(dict, command, temps) abort$/;"	f
execute	pack/plugins/start/wellle-targets/test/test.vim	/^function! s:execute(operation, motions)$/;"	f
executeCommand	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) executeCommand(template string, items []*Item) {$/;"	f
executeRegexp	pack/plugins/start/junegunn-fzf/src/options.go	/^var executeRegexp *regexp.Regexp$/;"	v
execute_term	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:execute_term(dict, command, temps) abort$/;"	f
execute_tmux	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:execute_tmux(dict, command, temps) abort$/;"	f
exists	get-plugins.go	/^func exists(path string) (bool, error) {$/;"	f
exitError	pack/plugins/start/junegunn-fzf/src/constants.go	/^	exitError     = 2$/;"	c
exitInterrupt	pack/plugins/start/junegunn-fzf/src/constants.go	/^	exitInterrupt = 130$/;"	c
exitNoMatch	pack/plugins/start/junegunn-fzf/src/constants.go	/^	exitNoMatch   = 1$/;"	c
exitOk	pack/plugins/start/junegunn-fzf/src/constants.go	/^	exitOk        = 0$/;"	c
exit_handler	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:exit_handler(code, command, ...)$/;"	f
expand	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:expand(...)$/;"	f
expected_256_only_colors_should_be_consistent	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:expected_256_only_colors_should_be_consistent()$/;"	f
extendedMatch	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func (p *Pattern) extendedMatch(item *Item, withPos bool, slab *util.Slab) ([]Offset, int, int, *[]int) {$/;"	f
extractColor	pack/plugins/start/junegunn-fzf/src/ansi.go	/^func extractColor(str string, state *ansiState, proc func(string, *ansiState) bool) (string, *[]ansiOffset, *ansiState) {$/;"	f
f	vimrc	/^nmap f <Plug>Sneak_f$/;"	m
f	vimrc	/^omap f <Plug>Sneak_f$/;"	m
fail	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:fail(...)$/;"	f
feed	pack/plugins/start/junegunn-fzf/src/reader.go	/^func (r *Reader) feed(src io.Reader) {$/;"	f
fg	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (p ColorPair) fg() Color {$/;"	f
fill	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func fill(x, y, w, h int, r rune) {$/;"	f
filter_list	pack/plugins/start/junegunn-fzf/fzf	/^  def filter_list list$/;"	f
findArg	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:findArg(direction, flags1, flags2, flags3, opening, closing)$/;"	f
findArgBoundary	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:findArgBoundary(...)$/;"	f
findFirstMatch	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func findFirstMatch(pattern string, str string) int {$/;"	f
findLastMatch	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func findLastMatch(pattern string, str string) int {$/;"	f
findRawTarget	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:findRawTarget(kind, which, count)$/;"	f
findTarget	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:findTarget(delimiter, which, modifier, count)$/;"	f
firstKey	pack/plugins/start/junegunn-fzf/src/options.go	/^func firstKey(keymap map[int]string) int {$/;"	f
fish	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^    def fish$/;"	f	class:Shell
fixstr	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! s:fixstr(line)$/;"	f
fmt_autosave	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:fmt_autosave()$/;"	f
fnameescape	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:fnameescape(string) abort$/;"	f
fnameescape	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
force_encoding	pack/plugins/start/junegunn-fzf/fzf	/^    def force_encoding *arg$/;"	f	class:String
format	pack/plugins/start/junegunn-fzf/fzf	/^  def format line, limit, offsets$/;"	f	class:usage
ft_hook	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! s:ft_hook() "set up temporary mappings to 'hook' into f\/F\/t\/T$/;"	f
fugitive	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#buffer	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#can_diffoff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#can_diffoff(buf) abort$/;"	f
fugitive#cfile	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#cfile() abort$/;"	f
fugitive#cwindow	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#cwindow() abort$/;"	f
fugitive#detect	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#foldtext	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#git_commands	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_commands() abort$/;"	f
fugitive#git_version	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_version(...) abort$/;"	f
fugitive#head	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#reload_status	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#repo	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#statusline	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive_blame	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_foldtext	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_foldtext$/;"	a
fugitive_remove	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_status	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_statusline	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_statusline$/;"	a
fugitive_temp	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_temp$/;"	a
function	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:function(name) abort$/;"	f
fuzzy_regex	pack/plugins/start/junegunn-fzf/fzf	/^    def fuzzy_regex q$/;"	f	class:start_search.FuzzyMatcher
fzf	pack/plugins/start/junegunn-fzf/src/ansi.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/ansi_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/cache.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/cache_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/chunklist_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/constants.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/constants_unix.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/constants_windows.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/core.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/history.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/history_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/item.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/item_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/matcher.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/merger.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/merger_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/options.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/options_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/pattern.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/pattern_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/reader.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/reader_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/result.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/result_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/terminal.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/terminal_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/terminal_unix.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/terminal_windows.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/src/tokenizer_test.go	/^package fzf$/;"	p
fzf	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def fzf(*opts)$/;"	f	class:TestBase
fzf!	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def fzf!(*opts)$/;"	f	class:TestBase
fzf#run	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! fzf#run(...) abort$/;"	f
fzf#wrap	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! fzf#wrap(...)$/;"	f
fzf.on_exit	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^  function! fzf.on_exit(id, code)$/;"	f
fzf_exec	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:fzf_exec()$/;"	f
fzf_popd	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^augroup fzf_popd$/;"	a
fzf_tmux	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:fzf_tmux(dict)$/;"	f
g:airline#themes#PaperColor#palette	pack/colors/start/nlknguyen-papercolor-theme/autoload/airline/themes/PaperColor.vim	/^let g:airline#themes#PaperColor#palette = {}$/;"	v
g:autoloaded_tmuxify	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^let g:autoloaded_tmuxify = 1$/;"	v
g:colors_name	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let g:colors_name = "PaperColor"$/;"	v
g:colors_name	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^let g:colors_name = "nofrils-acme"$/;"	v
g:colors_name	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^let g:colors_name = "nofrils-dark"$/;"	v
g:colors_name	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^let g:colors_name = "nofrils-light"$/;"	v
g:colors_name	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^let g:colors_name = "nofrils-sepia"$/;"	v
g:colors_name	pack/colors/start/tomasr-molokai/colors/molokai.vim	/^let g:colors_name="molokai"$/;"	v
g:ctrlp_ext_vars	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^  let g:ctrlp_ext_vars = [s:go_decls_var]$/;"	v
g:ctrlp_ext_vars	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^  let g:ctrlp_ext_vars = add(g:ctrlp_ext_vars, s:go_decls_var)$/;"	v
g:curdir	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:curdir = expand('<sfile>:p:h') . '\/'$/;"	v
g:fugitive_browse_handlers	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_browse_handlers = []$/;"	v
g:fugitive_git_executable	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:go_alternate_mode	pack/plugins/start/fatih-vim-go/autoload/go/alternate.vim	/^  let g:go_alternate_mode = "edit"$/;"	v
g:go_bin_path	vimrc	/^let g:go_bin_path=$HOME."\/go\/bin"$/;"	v
g:go_doc_command	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^  let g:go_doc_command = "godoc"$/;"	v
g:go_doc_options	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^  let g:go_doc_options = ""$/;"	v
g:go_errcheck_bin	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_errcheck_bin = "errcheck"$/;"	v
g:go_fmt_autosave	vimrc	/^let g:go_fmt_autosave=1$/;"	v
g:go_fmt_command	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_fmt_command = "gofmt"$/;"	v
g:go_fmt_command	vimrc	/^let g:go_fmt_command="goimports"$/;"	v
g:go_fmt_experimental	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_fmt_experimental = 0$/;"	v
g:go_fmt_experimental	vimrc	/^let g:go_fmt_experimental=1$/;"	v
g:go_fmt_fail_silently	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_fmt_fail_silently = 0$/;"	v
g:go_fmt_options	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_fmt_options = ''$/;"	v
g:go_goimports_bin	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_goimports_bin = "goimports"$/;"	v
g:go_golint_bin	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_golint_bin = "golint"$/;"	v
g:go_gopath	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:go_gopath = g:curdir . 't\/fixtures'$/;"	v
g:go_gorename_bin	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let g:go_gorename_bin = "gorename"$/;"	v
g:go_gorename_prefill	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let g:go_gorename_prefill = 1$/;"	v
g:go_gotags_bin	pack/plugins/start/fatih-vim-go/ftplugin/go/tagbar.vim	/^  let g:go_gotags_bin = "gotags"$/;"	v
g:go_highlight_array_whitespace_error	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_array_whitespace_error = 1$/;"	v
g:go_highlight_build_constraints	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_build_constraints = 0$/;"	v
g:go_highlight_build_constraints	vimrc	/^let g:go_highlight_build_constraints=1$/;"	v
g:go_highlight_chan_whitespace_error	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_chan_whitespace_error = 1$/;"	v
g:go_highlight_extra_types	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_extra_types = 1$/;"	v
g:go_highlight_fields	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_fields = 0$/;"	v
g:go_highlight_fields	vimrc	/^let g:go_highlight_fields=1$/;"	v
g:go_highlight_format_strings	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_format_strings = 1$/;"	v
g:go_highlight_functions	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_functions = 0$/;"	v
g:go_highlight_functions	vimrc	/^let g:go_highlight_functions=1$/;"	v
g:go_highlight_generate_tags	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_generate_tags = 0$/;"	v
g:go_highlight_generate_tags	vimrc	/^let g:go_highlight_generate_tags=1$/;"	v
g:go_highlight_methods	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_methods = 0$/;"	v
g:go_highlight_methods	vimrc	/^let g:go_highlight_methods=1$/;"	v
g:go_highlight_operators	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_operators = 0$/;"	v
g:go_highlight_operators	vimrc	/^let g:go_highlight_operators=1$/;"	v
g:go_highlight_space_tab_error	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_space_tab_error = 1$/;"	v
g:go_highlight_string_spellcheck	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_string_spellcheck = 1$/;"	v
g:go_highlight_string_spellcheck	vimrc	/^let g:go_highlight_string_spellcheck=0$/;"	v
g:go_highlight_trailing_whitespace_error	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_trailing_whitespace_error = 1$/;"	v
g:go_highlight_types	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_types = 0$/;"	v
g:go_highlight_types	vimrc	/^let g:go_highlight_types=1$/;"	v
g:go_jump_to_error	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^  let g:go_jump_to_error = 1$/;"	v
g:go_jump_to_error	vimrc	/^let g:go_jump_to_error=0$/;"	v
g:go_list_type	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^  let g:go_list_type = ""$/;"	v
g:go_loaded_gosnippets	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^let g:go_loaded_gosnippets = 1$/;"	v
g:go_loaded_install	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^let g:go_loaded_install = 1$/;"	v
g:go_metalinter_autosave_enabled	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_metalinter_autosave_enabled = ['vet', 'golint']$/;"	v
g:go_metalinter_command	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_metalinter_command = ""$/;"	v
g:go_metalinter_deadline	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_metalinter_deadline = "5s"$/;"	v
g:go_metalinter_enabled	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_metalinter_enabled = ['vet', 'golint', 'errcheck']$/;"	v
g:go_play_open_browser	pack/plugins/start/fatih-vim-go/autoload/go/play.vim	/^  let g:go_play_open_browser = 1$/;"	v
g:go_snippet_engine	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^  let g:go_snippet_engine = "ultisnips"$/;"	v
g:go_term_mode	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^  let g:go_term_mode = 'vsplit'$/;"	v
g:go_textobj_enabled	pack/plugins/start/fatih-vim-go/autoload/go/textobj.vim	/^  let g:go_textobj_enabled = 1$/;"	v
g:go_textobj_include_function_doc	pack/plugins/start/fatih-vim-go/autoload/go/textobj.vim	/^  let g:go_textobj_include_function_doc = 1$/;"	v
g:gutentags_add_default_project_roots	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_default_project_roots = get(g:, 'gutentags_add_default_project_roots', 1)$/;"	v
g:gutentags_auto_add_cscope	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_auto_add_cscope = 1$/;"	v
g:gutentags_auto_set_tags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_auto_set_tags = get(g:, 'gutentags_auto_set_tags', 1)$/;"	v
g:gutentags_background_update	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_background_update = get(g:, 'gutentags_background_update', 1)$/;"	v
g:gutentags_cache_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = ''$/;"	v
g:gutentags_cache_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':p')$/;"	v
g:gutentags_cache_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':s?[\/\\\\]$??')$/;"	v
g:gutentags_cscope_executable	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_executable = 'cscope'$/;"	v
g:gutentags_ctags_check_tagfile	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_check_tagfile = get(g:, 'gutentags_ctags_check_tagfile', 0)$/;"	v
g:gutentags_ctags_executable	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_executable = get(g:, 'gutentags_ctags_executable', 'ctags')$/;"	v
g:gutentags_ctags_executable	vimrc	/^    let g:gutentags_ctags_executable="ctags-exuberant"$/;"	v
g:gutentags_ctags_options_file	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_options_file = get(g:, 'gutentags_ctags_options_file', '.gutctags')$/;"	v
g:gutentags_debug	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_debug = get(g:, 'gutentags_debug', 0)$/;"	v
g:gutentags_define_advanced_commands	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_define_advanced_commands = get(g:, 'gutentags_define_advanced_commands', 0)$/;"	v
g:gutentags_enabled	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_enabled = get(g:, 'gutentags_enabled', 1)$/;"	v
g:gutentags_exclude	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude = get(g:, 'gutentags_exclude', [])$/;"	v
g:gutentags_exclude_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_project_root = get(g:, 'gutentags_exclude_project_root', ['\/usr\/local'])$/;"	v
g:gutentags_fake	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_fake = get(g:, 'gutentags_fake', 0)$/;"	v
g:gutentags_file_list_command	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_file_list_command = get(g:, 'gutentags_file_list_command', '')$/;"	v
g:gutentags_generate_on_missing	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_missing = get(g:, 'gutentags_generate_on_missing', 1)$/;"	v
g:gutentags_generate_on_new	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_new = get(g:, 'gutentags_generate_on_new', 1)$/;"	v
g:gutentags_generate_on_write	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_write = get(g:, 'gutentags_generate_on_write', 1)$/;"	v
g:gutentags_init_user_func	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_init_user_func = get(g:, 'gutentags_init_user_func', $/;"	v
g:gutentags_modules	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_modules = get(g:, 'gutentags_modules', ['ctags'])$/;"	v
g:gutentags_pause_after_update	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_pause_after_update = get(g:, 'gutentags_pause_after_update', 0)$/;"	v
g:gutentags_plat_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . "\\\\plat\\\\win32\\\\"$/;"	v
g:gutentags_plat_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . '\/plat\/unix\/'$/;"	v
g:gutentags_project_info	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_info = get(g:, 'gutentags_project_info', [])$/;"	v
g:gutentags_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_project_root += ['.git', '.hg', '.svn', '.bzr', '_darcs', '_FOSSIL_', '.fslckout']$/;"	v
g:gutentags_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root = get(g:, 'gutentags_project_root', [])$/;"	v
g:gutentags_project_root_finder	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root_finder = get(g:, 'gutentags_project_root_finder', '')$/;"	v
g:gutentags_res_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . "\\\\res\\\\"$/;"	v
g:gutentags_res_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . '\/res\/'$/;"	v
g:gutentags_resolve_symlinks	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_resolve_symlinks = get(g:, 'gutentags_resolve_symlinks', 0)$/;"	v
g:gutentags_scopefile	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_scopefile = 'cscope.out'$/;"	v
g:gutentags_script_ext	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.cmd'$/;"	v
g:gutentags_script_ext	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.sh'$/;"	v
g:gutentags_tagfile	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_tagfile = get(g:, 'gutentags_tagfile', 'tags')$/;"	v
g:gutentags_trace	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_trace = get(g:, 'gutentags_trace', 0)$/;"	v
g:loaded_eunuch	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^let g:loaded_eunuch = 1$/;"	v
g:loaded_fugitive	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_fzf	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^let g:loaded_fzf = 1$/;"	v
g:loaded_gutentags	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:loaded_gutentags = 1$/;"	v
g:loaded_mucomplete	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^let g:loaded_mucomplete = 1$/;"	v
g:loaded_qf	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^let g:loaded_qf = 1$/;"	v
g:loaded_repeat	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^let g:loaded_repeat = 1$/;"	v
g:loaded_sneak_plugin	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^let g:loaded_sneak_plugin = 1$/;"	v
g:loaded_targets	pack/plugins/start/wellle-targets/plugin/targets.vim	/^let g:loaded_targets = '0.4.5' " version number$/;"	v
g:loaded_tmuxify	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^let g:loaded_tmuxify = 1$/;"	v
g:mucomplete#can_complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  let g:mucomplete#can_complete = extend({$/;"	v
g:mucomplete#can_complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  let g:mucomplete#can_complete = mucomplete#compat#can_complete()$/;"	v
g:mucomplete#chains	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let g:mucomplete#chains = extend({$/;"	v
g:mucomplete#enable_auto_at_startup	vimrc	/^let g:mucomplete#enable_auto_at_startup=0$/;"	v
g:mucomplete#trigger_auto_pattern	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let g:mucomplete#trigger_auto_pattern = extend({$/;"	v
g:netrw_altfile	vimrc	/^let g:netrw_altfile=1$/;"	v
g:nofrils_heavycomments	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^    let g:nofrils_heavycomments = 0$/;"	v
g:nofrils_heavycomments	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^    let g:nofrils_heavycomments = 0$/;"	v
g:nofrils_heavycomments	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^    let g:nofrils_heavycomments = 0$/;"	v
g:nofrils_heavycomments	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^    let g:nofrils_heavycomments = 0$/;"	v
g:nofrils_heavycomments	vimrc	/^let g:nofrils_heavycomments=0 " bright comments off$/;"	v
g:nofrils_heavylinenumbers	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^    let g:nofrils_heavylinenumbers = 0$/;"	v
g:nofrils_heavylinenumbers	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^    let g:nofrils_heavylinenumbers = 0$/;"	v
g:nofrils_heavylinenumbers	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^    let g:nofrils_heavylinenumbers = 0$/;"	v
g:nofrils_heavylinenumbers	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^    let g:nofrils_heavylinenumbers = 0$/;"	v
g:nofrils_heavylinenumbers	vimrc	/^let g:nofrils_heavylinenumbers=0 " heavy line numbers off$/;"	v
g:nofrils_strbackgrounds	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^    let g:nofrils_strbackgrounds = 0$/;"	v
g:nofrils_strbackgrounds	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^    let g:nofrils_strbackgrounds = 0$/;"	v
g:nofrils_strbackgrounds	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^    let g:nofrils_strbackgrounds = 0$/;"	v
g:nofrils_strbackgrounds	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^    let g:nofrils_strbackgrounds = 0$/;"	v
g:nofrils_strbackgrounds	vimrc	/^let g:nofrils_strbackgrounds=0 " to turn off highlighted string backgrounds$/;"	v
g:repeat_reg	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^let g:repeat_reg = ['', '']$/;"	v
g:repeat_tick	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^let g:repeat_tick = -1$/;"	v
g:sample	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:sample = 'buildfail\/sample.go'$/;"	v
g:sample	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:sample = 'buildtestfail\/sample.go'$/;"	v
g:sample	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:sample = 'failtest\/sample.go'$/;"	v
g:sample	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:sample = 'pkg1\/sample.go'$/;"	v
g:sample2	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:sample2 = 'pkg2\/sample.go'$/;"	v
g:sampleabs	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:sampleabs = g:curdir . g:srcpath . 'buildfail\/sample.go'$/;"	v
g:sampleabs	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:sampleabs = g:curdir . g:srcpath . 'buildtestfail\/sample.go'$/;"	v
g:sampleabs	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:sampleabs = g:curdir . g:srcpath . 'failtest\/sample.go'$/;"	v
g:sampleabs	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:sampleabs = g:curdir . g:srcpath . 'pkg1\/sample.go'$/;"	v
g:sampleabs2	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:sampleabs2 = g:curdir . g:srcpath . 'pkg2\/sample.go'$/;"	v
g:samplecover	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:samplecover = g:curdir . g:srcpath . 'pkg1\/sample.out'$/;"	v
g:sampletest	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:sampletest = 'failtest\/sample_test.go'$/;"	v
g:skip_loading_mswin	vimrc	/^let g:skip_loading_mswin=1 " Just in case :)$/;"	v
g:sneak#label	vimrc	/^let g:sneak#label=1$/;"	v
g:sneak#search#instance	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/search.vim	/^let g:sneak#search#instance = sneak#search#new()$/;"	v
g:sneak#target_labels	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/label.vim	/^let g:sneak#target_labels = get(g:, 'sneak#target_labels', "asdfghjkl;qwertyuiopzxcvbnm\/ASDFGHJKL:QWERTYUIOPZXCVBNM?")$/;"	v
g:srcpath	pack/plugins/start/fatih-vim-go/t/coverlay.vim	/^	let g:srcpath = 't\/fixtures\/src\/'$/;"	v
g:targets_aiAI	pack/plugins/start/wellle-targets/README.md	/^### g:targets_aiAI$/;"	k
g:targets_argOpening and g:targets_argClosing	pack/plugins/start/wellle-targets/README.md	/^### g:targets_argOpening and g:targets_argClosing$/;"	k
g:targets_argSeparator	pack/plugins/start/wellle-targets/README.md	/^### g:targets_argSeparator$/;"	k
g:targets_argTrigger	pack/plugins/start/wellle-targets/README.md	/^### g:targets_argTrigger$/;"	k
g:targets_jumpRanges	pack/plugins/start/wellle-targets/README.md	/^### g:targets_jumpRanges$/;"	k
g:targets_nlNL	pack/plugins/start/wellle-targets/README.md	/^### g:targets_nlNL$/;"	k
g:targets_pairs	pack/plugins/start/wellle-targets/README.md	/^### g:targets_pairs$/;"	k
g:targets_quotes	pack/plugins/start/wellle-targets/README.md	/^### g:targets_quotes$/;"	k
g:targets_seekRanges	pack/plugins/start/wellle-targets/README.md	/^### g:targets_seekRanges$/;"	k
g:targets_separators	pack/plugins/start/wellle-targets/README.md	/^### g:targets_separators$/;"	k
g:targets_tagTrigger	pack/plugins/start/wellle-targets/README.md	/^### g:targets_tagTrigger$/;"	k
g:tmuxcomplete#loaded	pack/plugins/start/wellle-tmux-complete/plugin/tmuxcomplete.vim	/^let g:tmuxcomplete#loaded = '0.1.1' " version number$/;"	v
g:tmuxify_custom_command	vimrc	/^let g:tmuxify_custom_command='tmux split-window -d -l 10'$/;"	v
g:vim_markdown_folding_disabled	vimrc	/^let g:vim_markdown_folding_disabled=0$/;"	v
g:vim_markdown_frontmatter	vimrc	/^let g:vim_markdown_frontmatter=1$/;"	v
gather_candidates	pack/plugins/start/wellle-tmux-complete/rplugin/python3/deoplete/sources/tmuxcomplete.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gd	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> gd :GoDef<cr>$/;"	m
general	vimrc	/^    augroup general$/;"	a
generate_color_palettes	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:generate_color_palettes()$/;"	f
generate_vim_highlightings	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:generate_vim_highlightings()$/;"	f
get	pack/plugins/start/junegunn-fzf/fzf	/^  def get name$/;"	f	class:FZF
getDelimiters	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:getDelimiters(trigger)$/;"	f
getRawDelimiters	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:getRawDelimiters(trigger)$/;"	f
get_browser_command	pack/plugins/start/fatih-vim-go/autoload/go/play.vim	/^function! s:get_browser_command() abort$/;"	f
get_browser_command	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! s:get_browser_command() abort$/;"	f
get_color	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:get_color(attr, ...)$/;"	f
get_ctags_executable	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:get_ctags_executable(proj_dir) abort$/;"	f
get_input	pack/plugins/start/junegunn-fzf/fzf	/^  def get_input actions$/;"	f	class:start_search
get_mouse	pack/plugins/start/junegunn-fzf/fzf	/^  def get_mouse$/;"	f	class:start_search
get_pane_descriptor_from_id	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! s:get_pane_descriptor_from_id(pane_id) abort$/;"	f
get_visual_content	pack/plugins/start/fatih-vim-go/autoload/go/play.vim	/^function! s:get_visual_content() abort$/;"	f
get_visual_selection	pack/plugins/start/fatih-vim-go/autoload/go/play.vim	/^function! s:get_visual_selection() abort$/;"	f
geta	pack/plugins/start/junegunn-fzf/fzf	/^  def geta(*names)$/;"	f	class:FZF
getchar	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:getchar()$/;"	f
getnchars	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! s:getnchars(n, mode)$/;"	f
getpos	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:getpos()$/;"	f
getword	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/spel.vim	/^  fun! s:getword()$/;"	f
github_url	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:github_url(opts, ...) abort$/;"	f
gj	vimrc	/^nnoremap gj j$/;"	m
gk	vimrc	/^nnoremap gk k$/;"	m
global	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^let global = get(g:, 'tmuxify_global_maps', 0) ? '!' : ''$/;"	v
go	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def go *args$/;"	f
go#alternate#Switch	pack/plugins/start/fatih-vim-go/autoload/go/alternate.vim	/^function! go#alternate#Switch(bang, cmd) abort$/;"	f
go#asmfmt#Format	pack/plugins/start/fatih-vim-go/autoload/go/asmfmt.vim	/^function! go#asmfmt#Format() abort$/;"	f
go#asmfmt#ToggleAsmFmtAutoSave	pack/plugins/start/fatih-vim-go/autoload/go/asmfmt.vim	/^function! go#asmfmt#ToggleAsmFmtAutoSave() abort$/;"	f
go#cmd#Build	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#Build(bang, ...) abort$/;"	f
go#cmd#Generate	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#Generate(bang, ...) abort$/;"	f
go#cmd#Install	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#Install(bang, ...) abort$/;"	f
go#cmd#Run	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#Run(bang, ...) abort$/;"	f
go#cmd#RunTerm	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#RunTerm(bang, mode, files) abort$/;"	f
go#cmd#Test	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#Test(bang, compile, ...) abort$/;"	f
go#cmd#TestFunc	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#TestFunc(bang, ...) abort$/;"	f
go#cmd#autowrite	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#autowrite() abort$/;"	f
go#complete#Complete	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! go#complete#Complete(findstart, base) abort$/;"	f
go#complete#GetInfo	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! go#complete#GetInfo() abort$/;"	f
go#complete#Info	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! go#complete#Info(auto) abort$/;"	f
go#complete#ToggleAutoTypeInfo	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! go#complete#ToggleAutoTypeInfo() abort$/;"	f
go#coverage#Browser	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#Browser(bang, ...) abort$/;"	f
go#coverage#Buffer	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#Buffer(bang, ...) abort$/;"	f
go#coverage#BufferToggle	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#BufferToggle(bang, ...) abort$/;"	f
go#coverage#Clear	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#Clear() abort$/;"	f
go#coverage#genmatch	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#genmatch(cov) abort$/;"	f
go#coverage#overlay	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#overlay(file) abort$/;"	f
go#coverage#parsegocoverline	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#parsegocoverline(line) abort$/;"	f
go#def#Jump	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#Jump(mode) abort$/;"	f
go#def#SelectStackEntry	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#SelectStackEntry() abort$/;"	f
go#def#Stack	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#Stack(...) abort$/;"	f
go#def#StackClear	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#StackClear(...) abort$/;"	f
go#def#StackPop	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#StackPop(...) abort$/;"	f
go#def#StackUI	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#StackUI() abort$/;"	f
go#doc#Open	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! go#doc#Open(newmode, mode, ...) abort$/;"	f
go#doc#OpenBrowser	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! go#doc#OpenBrowser(...) abort$/;"	f
go#fmt#Format	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! go#fmt#Format(withGoimport) abort$/;"	f
go#fmt#ToggleFmtAutoSave	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! go#fmt#ToggleFmtAutoSave() abort$/;"	f
go#guru#AutoToogleSameIds	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#AutoToogleSameIds() abort$/;"	f
go#guru#Callees	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Callees(selected) abort$/;"	f
go#guru#Callers	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Callers(selected) abort$/;"	f
go#guru#Callstack	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Callstack(selected) abort$/;"	f
go#guru#ChannelPeers	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#ChannelPeers(selected) abort$/;"	f
go#guru#ClearSameIds	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#ClearSameIds() abort$/;"	f
go#guru#Describe	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Describe(selected) abort$/;"	f
go#guru#DescribeInfo	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#DescribeInfo() abort$/;"	f
go#guru#Freevars	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Freevars(selected) abort$/;"	f
go#guru#Implements	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Implements(selected) abort$/;"	f
go#guru#Referrers	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Referrers(selected) abort$/;"	f
go#guru#SameIds	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#SameIds() abort$/;"	f
go#guru#SameIdsTimer	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#SameIdsTimer() abort$/;"	f
go#guru#Scope	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Scope(...) abort$/;"	f
go#guru#Tags	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Tags(...) abort$/;"	f
go#guru#ToggleSameIds	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#ToggleSameIds() abort$/;"	f
go#guru#Whicherrs	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Whicherrs(selected) abort$/;"	f
go#impl#Complete	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! go#impl#Complete(arglead, cmdline, cursorpos) abort$/;"	f
go#impl#Impl	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! go#impl#Impl(...) abort$/;"	f
go#import#SwitchImport	pack/plugins/start/fatih-vim-go/autoload/go/import.vim	/^function! go#import#SwitchImport(enabled, localname, path, bang) abort$/;"	f
go#job#Spawn	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^function go#job#Spawn(args)$/;"	f
go#jobcontrol#AddHandler	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! go#jobcontrol#AddHandler(handler) abort$/;"	f
go#jobcontrol#RemoveHandler	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! go#jobcontrol#RemoveHandler(id) abort$/;"	f
go#jobcontrol#Spawn	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! go#jobcontrol#Spawn(bang, desc, args) abort$/;"	f
go#lint#Errcheck	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#Errcheck(...) abort$/;"	f
go#lint#Golint	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#Golint(...) abort$/;"	f
go#lint#Gometa	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#Gometa(autosave, ...) abort$/;"	f
go#lint#ToggleMetaLinterAutoSave	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#ToggleMetaLinterAutoSave() abort$/;"	f
go#lint#Vet	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#Vet(bang, ...) abort$/;"	f
go#list#Clean	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Clean(listtype) abort$/;"	f
go#list#Get	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Get(listtype) abort$/;"	f
go#list#JumpToFirst	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#JumpToFirst(listtype) abort$/;"	f
go#list#Parse	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Parse(listtype, items) abort$/;"	f
go#list#ParseFormat	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#ParseFormat(listtype, errformat, items, title) abort$/;"	f
go#list#Populate	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Populate(listtype, items, title) abort$/;"	f
go#list#PopulateWin	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#PopulateWin(winnr, items) abort$/;"	f
go#list#Type	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Type(listtype) abort$/;"	f
go#list#Window	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Window(listtype, ...) abort$/;"	f
go#package#Complete	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#Complete(ArgLead, CmdLine, CursorPos) abort$/;"	f
go#package#CompleteMembers	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#CompleteMembers(package, member) abort$/;"	f
go#package#FromPath	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#FromPath(arg) abort$/;"	f
go#package#ImportPath	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#ImportPath(arg) abort$/;"	f
go#package#Paths	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#Paths() abort$/;"	f
go#path#BinPath	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#BinPath() abort$/;"	f
go#path#CheckBinPath	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#CheckBinPath(binpath) abort$/;"	f
go#path#Default	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#Default() abort$/;"	f
go#path#Detect	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#Detect() abort$/;"	f
go#path#GoPath	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#GoPath(...) abort$/;"	f
go#path#HasPath	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#HasPath(path) abort$/;"	f
go#play#Share	pack/plugins/start/fatih-vim-go/autoload/go/play.vim	/^function! go#play#Share(count, line1, line2) abort$/;"	f
go#rename#Rename	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^function! go#rename#Rename(bang, ...) abort$/;"	f
go#statusline#Clear	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^function! go#statusline#Clear(timer_id) abort$/;"	f
go#statusline#Show	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^function! go#statusline#Show() abort$/;"	f
go#statusline#Update	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^function! go#statusline#Update(status_dir, status) abort$/;"	f
go#template#ToggleAutoCreate	pack/plugins/start/fatih-vim-go/autoload/go/template.vim	/^function! go#template#ToggleAutoCreate() abort$/;"	f
go#template#create	pack/plugins/start/fatih-vim-go/autoload/go/template.vim	/^function! go#template#create() abort$/;"	f
go#term#new	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! go#term#new(bang, cmd) abort$/;"	f
go#term#newmode	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! go#term#newmode(bang, cmd, mode) abort$/;"	f
go#textobj#Function	pack/plugins/start/fatih-vim-go/autoload/go/textobj.vim	/^function! go#textobj#Function(mode) abort$/;"	f
go#textobj#FunctionJump	pack/plugins/start/fatih-vim-go/autoload/go/textobj.vim	/^function! go#textobj#FunctionJump(mode, direction) abort$/;"	f
go#tool#Deps	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Deps() abort$/;"	f
go#tool#ExecuteInDir	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#ExecuteInDir(cmd) abort$/;"	f
go#tool#Exists	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Exists(importpath) abort$/;"	f
go#tool#Files	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Files() abort$/;"	f
go#tool#FilterValids	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#FilterValids(items) abort$/;"	f
go#tool#Imports	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Imports() abort$/;"	f
go#tool#Info	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Info(auto) abort$/;"	f
go#tool#OpenBrowser	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#OpenBrowser(url) abort$/;"	f
go#tool#PackageName	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#PackageName() abort$/;"	f
go#tool#ParseErrors	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#ParseErrors(lines) abort$/;"	f
go#ui#CloseWindow	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^function! go#ui#CloseWindow() abort$/;"	f
go#ui#GetReturnWindow	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^function! go#ui#GetReturnWindow() abort$/;"	f
go#ui#OpenDefinition	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^function! go#ui#OpenDefinition(filter) abort$/;"	f
go#ui#OpenWindow	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^function! go#ui#OpenWindow(title, content, filetype) abort$/;"	f
go#util#AddTags	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#AddTags(line1, line2, ...) abort$/;"	f
go#util#EchoError	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoError(msg)$/;"	f
go#util#EchoInfo	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoInfo(msg)$/;"	f
go#util#EchoProgress	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoProgress(msg)$/;"	f
go#util#EchoSuccess	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoSuccess(msg)$/;"	f
go#util#EchoWarning	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoWarning(msg)$/;"	f
go#util#IsWin	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#IsWin() abort$/;"	f
go#util#Join	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Join(...) abort$/;"	f
go#util#LineEnding	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#LineEnding() abort$/;"	f
go#util#Offset	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Offset(line, col) abort$/;"	f
go#util#OffsetCursor	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#OffsetCursor() abort$/;"	f
go#util#PathListSep	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#PathListSep() abort$/;"	f
go#util#PathSep	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#PathSep() abort$/;"	f
go#util#ShellError	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#ShellError() abort$/;"	f
go#util#Shellescape	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^fu! go#util#Shellescape(arg)$/;"	f
go#util#Shelljoin	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Shelljoin(arglist, ...) abort$/;"	f
go#util#Shelllist	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Shelllist(arglist, ...) abort$/;"	f
go#util#StripPathSep	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#StripPathSep(path) abort$/;"	f
go#util#StripTrailingSlash	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#StripTrailingSlash(paths) abort$/;"	f
go#util#System	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#System(str, ...) abort$/;"	f
go#util#Windo	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Windo(command) abort$/;"	f
go#util#camelcase	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#camelcase(word) abort$/;"	f
go#util#env	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#env(key) abort$/;"	f
go#util#goarch	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#goarch() abort$/;"	f
go#util#goos	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#goos() abort$/;"	f
go#util#gopath	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#gopath() abort$/;"	f
go#util#goroot	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#goroot() abort$/;"	f
go#util#has_job	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#has_job() abort$/;"	f
go#util#osarch	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#osarch() abort$/;"	f
go#util#snakecase	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#snakecase(word) abort$/;"	f
go#util#snippetcase	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#snippetcase(word) abort$/;"	f
go_packages	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! s:go_packages(dirs) abort$/;"	f
gocodeAutocomplete	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeAutocomplete() abort$/;"	f
gocodeCommand	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeCommand(cmd, preargs, args) abort$/;"	f
gocodeCurrentBuffer	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeCurrentBuffer() abort$/;"	f
gocodeCurrentBufferOpt	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeCurrentBufferOpt(filename) abort$/;"	f
gocodeEnableOptions	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeEnableOptions() abort$/;"	f
godocNotFound	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! s:godocNotFound(content) abort$/;"	f
godocWord	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! s:godocWord(args) abort$/;"	f
gofiletype_post	pack/plugins/start/fatih-vim-go/ftdetect/gofiletype.vim	/^function! s:gofiletype_post()$/;"	f
gofiletype_pre	pack/plugins/start/fatih-vim-go/ftdetect/gofiletype.vim	/^function! s:gofiletype_pre(type)$/;"	f
gogetdoc	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! s:gogetdoc(json) abort$/;"	f
grey_colour	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:grey_colour(n)$/;"	f
grey_level	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:grey_level(n)$/;"	f
grey_number	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:grey_number(x)$/;"	f
grow	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:grow()$/;"	f
gsub	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
guru_cmd	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:guru_cmd(args) range abort$/;"	f
gutentags#add_progress	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#add_progress(module, file) abort$/;"	f
gutentags#cscope#command_terminated	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#command_terminated(job_id, data, event) abort$/;"	f
gutentags#cscope#generate	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#generate(proj_dir, tags_file, write_mode) abort$/;"	f
gutentags#cscope#init	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#init(project_root) abort$/;"	f
gutentags#ctags#generate	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#generate(proj_dir, tags_file, write_mode) abort$/;"	f
gutentags#ctags#init	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#init(project_root) abort$/;"	f
gutentags#delete_lock_files	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#delete_lock_files() abort$/;"	f
gutentags#fake	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#fake(...)$/;"	f
gutentags#get_cachefile	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_cachefile(root_dir, filename) abort$/;"	f
gutentags#get_execute_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_execute_cmd() abort$/;"	f
gutentags#get_execute_cmd_suffix	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_execute_cmd_suffix() abort$/;"	f
gutentags#get_plat_file	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_plat_file(filename) abort$/;"	f
gutentags#get_project_file_list_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_file_list_cmd(path) abort$/;"	f
gutentags#get_project_info	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_info(path) abort$/;"	f
gutentags#get_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_root(path) abort$/;"	f
gutentags#get_res_file	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_res_file(filename) abort$/;"	f
gutentags#inprogress	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#inprogress()$/;"	f
gutentags#normalizepath	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#normalizepath(path)$/;"	f
gutentags#rescan	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#rescan(...)$/;"	f
gutentags#setup_gutentags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#setup_gutentags() abort$/;"	f
gutentags#shellslash	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#shellslash(path)$/;"	f
gutentags#statusline	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline(...) abort$/;"	f
gutentags#stripslash	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#stripslash(path)$/;"	f
gutentags#throw	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#throw(message)$/;"	f
gutentags#throwerr	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#throwerr(message)$/;"	f
gutentags#toggletrace	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#toggletrace(...)$/;"	f
gutentags#trace	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#trace(message, ...)$/;"	f
gutentags#validate_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#validate_cmd(cmd) abort$/;"	f
gutentags_detect	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^augroup gutentags_detect$/;"	a
handleEmptyMatch	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:handleEmptyMatch(target)$/;"	f
handleTarget	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:handleTarget(target, rawTarget)$/;"	f
hasPreviewWindow	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) hasPreviewWindow() bool {$/;"	f
has_any	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:has_any(dict, keys)$/;"	f
help	pack/plugins/start/junegunn-fzf/install	/^help() {$/;"	f
help	pack/plugins/start/junegunn-fzf/src/options.go	/^func help(code int) {$/;"	f
hi	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^function! s:hi()$/;"	f
i%	vimrc	/^omap i% :<C-u>normal vi%<CR>$/;"	m
if	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> if :<c-u>call go#textobj#Function('i')<cr>$/;"	m
il	vimrc	/^omap il :<C-u>normal vil<CR>$/;"	m
include?	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def include? str$/;"	f	class:NilClass
indexAt	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func indexAt(index int, max int, forward bool) int {$/;"	f
init	pack/plugins/start/junegunn-fzf/src/ansi.go	/^func init() {$/;"	f
init	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func init() {$/;"	f
init	pack/plugins/start/junegunn-fzf/src/pattern_test.go	/^func init() {$/;"	f
init	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func init() {$/;"	f
init	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func init() {$/;"	f
init	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^func init() {$/;"	f
init	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/hl.vim	/^func! s:init() abort$/;"	f
init	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:init(mapmode)$/;"	f
init	pack/plugins/start/wellle-tmux-complete/plugin/tmuxcomplete.vim	/^function! s:init()$/;"	f
initPairs	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func initPairs(theme *ColorTheme) {$/;"	f
initScreen	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func initScreen() {$/;"	f
initX	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:initX(trigger)$/;"	f
init_screen	pack/plugins/start/junegunn-fzf/fzf	/^  def init_screen$/;"	f
initialDelay	pack/plugins/start/junegunn-fzf/src/constants.go	/^	initialDelay     = 20 * time.Millisecond$/;"	c
initialDelayTac	pack/plugins/start/junegunn-fzf/src/constants.go	/^	initialDelayTac  = 100 * time.Millisecond$/;"	c
initialize	pack/plugins/start/junegunn-fzf/fzf	/^      def initialize n$/;"	f	class:start_search.Matcher.MatchData
initialize	pack/plugins/start/junegunn-fzf/fzf	/^    def initialize nth, delim$/;"	f	class:start_search.Matcher
initialize	pack/plugins/start/junegunn-fzf/fzf	/^    def initialize rxflag, mode = :fuzzy, nth = nil, delim = nil$/;"	f	class:start_search.ExtendedFuzzyMatcher
initialize	pack/plugins/start/junegunn-fzf/fzf	/^    def initialize rxflag, nth = nil, delim = nil$/;"	f	class:start_search.FuzzyMatcher
initialize	pack/plugins/start/junegunn-fzf/fzf	/^    def initialize v = nil$/;"	f	class:start_search.MouseEvent
initialize	pack/plugins/start/junegunn-fzf/fzf	/^  def initialize argv, source = $stdin$/;"	f	class:FZF
initialize	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def initialize shell = :bash$/;"	f	class:Tmux
innert	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:innert(target)$/;"	f
install_ruby_fzf	pack/plugins/start/junegunn-fzf/install	/^install_ruby_fzf() {$/;"	f
instaweb_url	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:instaweb_url(opts) abort$/;"	f
interface_list	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! s:interface_list(pkg) abort$/;"	f
interpretCode	pack/plugins/start/junegunn-fzf/src/ansi.go	/^func interpretCode(ansiCode string, prevState *ansiState) *ansiState {$/;"	f
is24	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^func (c Color) is24() bool {$/;"	f
isAlphabet	pack/plugins/start/junegunn-fzf/src/options.go	/^func isAlphabet(char uint8) bool {$/;"	f
isExecuteAction	pack/plugins/start/junegunn-fzf/src/options.go	/^func isExecuteAction(str string) bool {$/;"	f
isNewSelection	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:isNewSelection()$/;"	f
isNumeric	pack/plugins/start/junegunn-fzf/src/options.go	/^func isNumeric(char uint8) bool {$/;"	f
isPreviewEnabled	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) isPreviewEnabled() bool {$/;"	f
is_special_key	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/label.vim	/^func! s:is_special_key(key)$/;"	f
item_count	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^          def item_count$/;"	f	class:Tmux.until
iter	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func (p *Pattern) iter(pfun algo.Algo, tokens []Token, caseSensitive bool, forward bool, pattern []rune, withPos bool, slab *util.Slab) (Offset, int, int, *[]int) {$/;"	f
j	vimrc	/^nnoremap j gj$/;"	m
jobdir	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let jobdir = fnameescape(expand("%:p:h"))$/;"	v
jobdir	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let jobdir = fnameescape(expand("%:p:h"))$/;"	v
joinTokens	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^func joinTokens(tokens []Token) []rune {$/;"	f
jumpAcceptEnabled	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	jumpAcceptEnabled$/;"	c
jumpDisabled	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	jumpDisabled jumpMode = iota$/;"	c
jumpEnabled	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	jumpEnabled$/;"	c
jumpMode	pack/plugins/start/junegunn-fzf/src/terminal.go	/^type jumpMode int$/;"	t
jump_to_declaration	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! s:jump_to_declaration(out, mode, bin_name) abort$/;"	f
jump_to_declaration_cb	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! s:jump_to_declaration_cb(mode, bin_name, job, exit_status, data) abort$/;"	f
k	vimrc	/^nnoremap k gk$/;"	m
keyMatch	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func keyMatch(key int, event tui.Event) bool {$/;"	f
kill	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def kill$/;"	f	class:Tmux
l:start_options	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^    let l:start_options.in_io = "file"$/;"	v
l:start_options	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^    let l:start_options.in_name = l:tmpname$/;"	v
l:start_options	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^    let l:start_options.in_io = "file"$/;"	v
l:start_options	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^    let l:start_options.in_name = l:tmpname$/;"	v
l:tmpname	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^    let l:tmpname = tempname()$/;"	v
l:tmpname	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^    let l:tmpname = tempname()$/;"	v
lastChunk	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^func (cl *ChunkList) lastChunk() *Chunk {$/;"	f
lastselect	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:lastselect(count)$/;"	f
lastselecta	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:lastselecta(...)$/;"	f
linechars	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
lines.gather_candidates	pack/plugins/start/wellle-tmux-complete/autoload/unite/sources/tmuxcomplete.vim	/^function! s:lines.gather_candidates(args, context)$/;"	f
link_fzf_in_path	pack/plugins/start/junegunn-fzf/install	/^link_fzf_in_path() {$/;"	f
lint_job	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function s:lint_job(args)$/;"	f
loadSettings	pack/plugins/start/wellle-targets/plugin/targets.vim	/^function! s:loadSettings()$/;"	f
loaded_multiplesearch	pack/plugins/start/vim-scripts-multiplesearch/plugin/MultipleSearch.vim	/^let loaded_multiplesearch = 1$/;"	v
loaded_ttags	pack/plugins/start/tomtom-ttags-vim/plugin/ttags.vim	/^let loaded_ttags = 6$/;"	v
main	get-plugins.go	/^func main() {$/;"	f
main	get-plugins.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/templates/hello_world.go	/^func main() {$/;"	f
main	pack/plugins/start/fatih-vim-go/templates/hello_world.go	/^package main$/;"	p
main	pack/plugins/start/junegunn-fzf/src/fzf/main.go	/^func main() {$/;"	f
main	pack/plugins/start/junegunn-fzf/src/fzf/main.go	/^package main$/;"	p
main_syntax	pack/plugins/start/fatih-vim-go/syntax/gohtmltmpl.vim	/^  let main_syntax = 'html'$/;"	v
manual_update_tags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! s:manual_update_tags(bang) abort$/;"	f
map_netrw_key	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^  func! s:map_netrw_key(key)$/;"	f
map_reset_key	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! s:map_reset_key(key, mode)$/;"	f
mapleader	vimrc	/^let mapleader="\\<space>"$/;"	v
match	pack/plugins/start/junegunn-fzf/fzf	/^    def match list, q, prefix, suffix$/;"	f	class:start_search.ExtendedFuzzyMatcher.parse
match	pack/plugins/start/junegunn-fzf/fzf	/^    def match list, q, prefix, suffix$/;"	f	class:start_search.FuzzyMatcher
matchChunk	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func (p *Pattern) matchChunk(chunk *Chunk, space []*Result, slab *util.Slab) []*Result {$/;"	f
matcher	pack/plugins/start/junegunn-fzf/fzf	/^  def matcher$/;"	f
maxDisplayWidthCalc	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	maxDisplayWidthCalc = 1024$/;"	c
maxItems	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) maxItems() int {$/;"	f
maxPartitions	pack/plugins/start/junegunn-fzf/src/constants.go	/^	maxPartitions           = 32$/;"	c
maxPatternLength	pack/plugins/start/junegunn-fzf/src/constants.go	/^	maxPatternLength = 100$/;"	c
max_items	pack/plugins/start/junegunn-fzf/fzf	/^  def max_items; C.lines - 2; end$/;"	f	class:usage
mergedGet	pack/plugins/start/junegunn-fzf/src/merger.go	/^func (mg *Merger) mergedGet(idx int) *Result {$/;"	f
mergerCacheMax	pack/plugins/start/junegunn-fzf/src/constants.go	/^	mergerCacheMax int = 100000$/;"	c
metalinter_autosave	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:metalinter_autosave()$/;"	f
minHeight	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	minHeight = 4$/;"	c
minRank	pack/plugins/start/junegunn-fzf/src/result.go	/^func minRank() rank {$/;"	f
minWidth	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	minWidth  = 16$/;"	c
modifyDelimiter	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:modifyDelimiter(kind, delimiter)$/;"	f
modifyTarget	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:modifyTarget(target, kind, modifier)$/;"	f
move	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) move(y int, x int, clear bool) {$/;"	f
mucomplete#compat#can_complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#can_complete()$/;"	f
mucomplete#compat#dict	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#dict(t)$/;"	f
mucomplete#compat#file	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#file(t)$/;"	f
mucomplete#compat#omni	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#omni(t)$/;"	f
mucomplete#compat#path	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#path(t)$/;"	f
mucomplete#compat#spel	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#spel(t)$/;"	f
mucomplete#compat#tags	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#tags(t)$/;"	f
mucomplete#compat#thes	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#thes(t)$/;"	f
mucomplete#compat#ulti	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#ulti(t)$/;"	f
mucomplete#compat#user	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#user(t)$/;"	f
mucomplete#compat#uspl	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#uspl(t)$/;"	f
mucomplete#compat#yes_you_can	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#yes_you_can(t)$/;"	f
mucomplete#complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#complete(dir)$/;"	f
mucomplete#cycle	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#cycle(dir)$/;"	f
mucomplete#cycle_or_select	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#cycle_or_select(dir)$/;"	f
mucomplete#disable_auto	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  fun! mucomplete#disable_auto()$/;"	f
mucomplete#enable_auto	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  fun! mucomplete#enable_auto()$/;"	f
mucomplete#path#complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/path.vim	/^  fun! mucomplete#path#complete() abort$/;"	f
mucomplete#spel#complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/spel.vim	/^fun! mucomplete#spel#complete() abort$/;"	f
mucomplete#tab_complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#tab_complete(dir)$/;"	f
mucomplete#toggle_auto	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  fun! mucomplete#toggle_auto()$/;"	f
mucomplete#ultisnips#complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/ultisnips.vim	/^fun! mucomplete#ultisnips#complete() abort$/;"	f
mucomplete#verify_completion	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#verify_completion()$/;"	f
mucomplete#yup	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#yup()$/;"	f
mustNotError	get-plugins.go	/^func mustNotError(err error) {$/;"	f
neocomplcache#sources#tmuxcomplete#define	pack/plugins/start/wellle-tmux-complete/autoload/neocomplcache/sources/tmuxcomplete.vim	/^function! neocomplcache#sources#tmuxcomplete#define()$/;"	f
neocomplete#sources#tmuxcomplete#define	pack/plugins/start/wellle-tmux-complete/autoload/neocomplete/sources/tmuxcomplete.vim	/^function! neocomplete#sources#tmuxcomplete#define()$/;"	f
newItem	pack/plugins/start/junegunn-fzf/src/terminal_test.go	/^func newItem(str string) *Item {$/;"	f
newRange	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^func newRange(begin int, end int) Range {$/;"	f
new_shell	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestBash
new_shell	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestFish
new_shell	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestZsh
next	pack/plugins/start/junegunn-fzf/src/history.go	/^func (h *History) next() string {$/;"	f
nextInt	pack/plugins/start/junegunn-fzf/src/options.go	/^func nextInt(args []string, i *int, message string) int {$/;"	f
nextString	pack/plugins/start/junegunn-fzf/src/options.go	/^func nextString(args []string, i *int, message string) string {$/;"	f
next_completion	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:next_completion()$/;"	f
next_method	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:next_method()$/;"	f
next_method_cyclic	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:next_method_cyclic()$/;"	f
nextselect	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:nextselect(count)$/;"	f
nextselecta	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:nextselecta(...)$/;"	f
notifyOnResize	pack/plugins/start/junegunn-fzf/src/terminal_unix.go	/^func notifyOnResize(resizeChan chan<- os.Signal) {$/;"	f
notifyOnResize	pack/plugins/start/junegunn-fzf/src/terminal_windows.go	/^func notifyOnResize(resizeChan chan<- os.Signal) {$/;"	f
numLinesMax	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func numLinesMax(str string, max int) int {$/;"	f
numPartitionsMultiplier	pack/plugins/start/junegunn-fzf/src/constants.go	/^	numPartitionsMultiplier = 8$/;"	c
num_unicode_bytes	pack/plugins/start/junegunn-fzf/fzf	/^  def num_unicode_bytes chr$/;"	f	class:start_search
o	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^    nnoremap <buffer> o <CR><C-w>p$/;"	m
offset	pack/plugins/start/junegunn-fzf/fzf	/^      def offset _$/;"	f	class:start_search.Matcher.MatchData
old_gopath	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let old_gopath = $GOPATH$/;"	v
old_gopath	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let old_gopath = $GOPATH$/;"	v
old_gopath	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let old_gopath = $GOPATH$/;"	v
on_exit	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:on_exit(job_id, exit_status) abort$/;"	f
on_exit	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! s:on_exit(job_id, exit_status) abort$/;"	f
on_stderr	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:on_stderr(job_id, data) abort$/;"	f
on_stderr	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! s:on_stderr(job_id, data) abort$/;"	f
on_stdout	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:on_stdout(job_id, data) abort$/;"	f
on_stdout	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! s:on_stdout(job_id, data) abort$/;"	f
open	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:open(cmd, target)$/;"	f
optString	pack/plugins/start/junegunn-fzf/src/options.go	/^func optString(arg string, prefixes ...string) (bool, string) {$/;"	f
optionalNextString	pack/plugins/start/junegunn-fzf/src/options.go	/^func optionalNextString(args []string, i *int) string {$/;"	f
optionalNumeric	pack/plugins/start/junegunn-fzf/src/options.go	/^func optionalNumeric(args []string, i *int) int {$/;"	f
opts	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^    let opts['sink*'] = remove(opts, 'sink')$/;"	v
optsFor	pack/plugins/start/junegunn-fzf/src/options_test.go	/^func optsFor(words ...string) *Options {$/;"	f
ord	pack/plugins/start/junegunn-fzf/fzf	/^      def ord$/;"	f	class:usage
output	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) output() bool {$/;"	f
overflow	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func overflow(runes []rune, max int) bool {$/;"	f
override	pack/plugins/start/junegunn-fzf/src/history.go	/^func (h *History) override(str string) {$/;"	f
p	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^    nnoremap <buffer> p :call qf#PreviewFileUnderCursor()<CR>$/;"	m
palettes_should_have_color00_to_color15	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:palettes_should_have_color00_to_color15()$/;"	f
parse	pack/plugins/start/junegunn-fzf/fzf	/^    def parse q$/;"	f	class:start_search.ExtendedFuzzyMatcher
parseAlgo	pack/plugins/start/junegunn-fzf/src/options.go	/^func parseAlgo(str string) algo.Algo {$/;"	f
parseKeyChords	pack/plugins/start/junegunn-fzf/src/options.go	/^func parseKeyChords(str string, message string) map[int]string {$/;"	f
parseKeymap	pack/plugins/start/junegunn-fzf/src/options.go	/^func parseKeymap(keymap map[int]actionType, execmap map[int]string, str string) {$/;"	f
parseMargin	pack/plugins/start/junegunn-fzf/src/options.go	/^func parseMargin(margin string) [4]sizeSpec {$/;"	f
parseOptions	pack/plugins/start/junegunn-fzf/src/options.go	/^func parseOptions(opts *Options, allArgs []string) {$/;"	f
parsePreviewWindow	pack/plugins/start/junegunn-fzf/src/options.go	/^func parsePreviewWindow(opts *previewOpts, input string) {$/;"	f
parseSize	pack/plugins/start/junegunn-fzf/src/options.go	/^func parseSize(str string, maxPercent float64, label string) sizeSpec {$/;"	f
parseTerms	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func parseTerms(fuzzy bool, caseMode Case, str string) []termSet {$/;"	f
parseTheme	pack/plugins/start/junegunn-fzf/src/options.go	/^func parseTheme(defaultTheme *tui.ColorTheme, str string) *tui.ColorTheme {$/;"	f
parseTiebreak	pack/plugins/start/junegunn-fzf/src/options.go	/^func parseTiebreak(str string) []criterion {$/;"	f
parseToggleSort	pack/plugins/start/junegunn-fzf/src/options.go	/^func parseToggleSort(keymap map[int]actionType, str string) {$/;"	f
parse_errors	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^function s:parse_errors(exit_val, bang, out)$/;"	f
parse_guru_output	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:parse_guru_output(exit_val, output, title) abort$/;"	f
parse_nth	pack/plugins/start/junegunn-fzf/fzf	/^  def parse_nth nth$/;"	f	class:FZF
partialResult	pack/plugins/start/junegunn-fzf/src/matcher.go	/^type partialResult struct {$/;"	t
paste	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def paste str$/;"	f	class:Tmux
pick	pack/plugins/start/junegunn-fzf/fzf	/^  def pick$/;"	f	class:start_search
pkg	pack/plugins/start/fatih-vim-go/t/fixtures/src/buildfail/sample.go	/^package pkg$/;"	p
pkg	pack/plugins/start/fatih-vim-go/t/fixtures/src/buildfail/sample_test.go	/^package pkg$/;"	p
pkg	pack/plugins/start/fatih-vim-go/t/fixtures/src/buildtestfail/sample.go	/^package pkg$/;"	p
pkg	pack/plugins/start/fatih-vim-go/t/fixtures/src/buildtestfail/sample_test.go	/^package pkg$/;"	p
pkg	pack/plugins/start/fatih-vim-go/t/fixtures/src/failtest/sample.go	/^package pkg$/;"	p
pkg	pack/plugins/start/fatih-vim-go/t/fixtures/src/failtest/sample_test.go	/^package pkg$/;"	p
pkg	pack/plugins/start/fatih-vim-go/t/fixtures/src/parsefail/sample.go	/^package pkg$/;"	p
pkg	pack/plugins/start/fatih-vim-go/t/fixtures/src/parsefail/sample_test.go	/^package pkg$/;"	p
pkg1	pack/plugins/start/fatih-vim-go/t/fixtures/src/pkg1/sample.go	/^package pkg1$/;"	p
pkg1	pack/plugins/start/fatih-vim-go/t/fixtures/src/pkg1/sample_test.go	/^package pkg1$/;"	p
placeCursor	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) placeCursor() {$/;"	f
placeholder	pack/plugins/start/junegunn-fzf/src/terminal.go	/^var placeholder *regexp.Regexp$/;"	v
placematch	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/label.vim	/^func! s:placematch(c, pos)$/;"	f
posArray	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^func posArray(withPos bool, len int) *[]int {$/;"	f
posDown	pack/plugins/start/junegunn-fzf/src/options.go	/^	posDown$/;"	c
posLeft	pack/plugins/start/junegunn-fzf/src/options.go	/^	posLeft$/;"	c
posRight	pack/plugins/start/junegunn-fzf/src/options.go	/^	posRight$/;"	c
posUp	pack/plugins/start/junegunn-fzf/src/options.go	/^	posUp windowPosition = iota$/;"	c
position	pack/plugins/start/wellle-targets/autoload/targets/target.vim	/^function! s:position(line, column, cursor, min, max, tie)$/;"	f
postProcessOptions	pack/plugins/start/junegunn-fzf/src/options.go	/^func postProcessOptions(opts *Options) {$/;"	f
prepare	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def prepare$/;"	f
prepareInput	pack/plugins/start/junegunn-fzf/src/pattern.go	/^func (p *Pattern) prepareInput(item *Item) []Token {$/;"	f
prepareRepeat	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:prepareRepeat(delimiter, which, modifier)$/;"	f
prepareReselect	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:prepareReselect()$/;"	f
present	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:present(dict, ...)$/;"	f
previewOpts	pack/plugins/start/junegunn-fzf/src/options.go	/^type previewOpts struct {$/;"	t
previewer	pack/plugins/start/junegunn-fzf/src/terminal.go	/^type previewer struct {$/;"	t
previous	pack/plugins/start/junegunn-fzf/src/history.go	/^func (h *History) previous() string {$/;"	f
printAll	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) printAll() {$/;"	f
printHeader	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) printHeader() {$/;"	f
printHighlighted	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) printHighlighted(result *Result, attr tui.Attr, col1 tui.ColorPair, col2 tui.ColorPair, current bool) {$/;"	f
printInfo	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) printInfo() {$/;"	f
printItem	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) printItem(result *Result, i int, current bool) {$/;"	f
printList	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) printList() {$/;"	f
printPreview	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) printPreview() {$/;"	f
printPrompt	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) printPrompt() {$/;"	f
print_info	pack/plugins/start/junegunn-fzf/fzf	/^  def print_info msg = nil$/;"	f	class:usage
print_input	pack/plugins/start/junegunn-fzf/fzf	/^  def print_input$/;"	f	class:usage
print_item	pack/plugins/start/junegunn-fzf/fzf	/^  def print_item row, tokens, chosen, selected$/;"	f	class:usage
processTabs	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func processTabs(runes []rune, prefixWidth int) (string, int) {$/;"	f
process_options_file	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:process_options_file(proj_dir, path) abort$/;"	f
progressMinDuration	pack/plugins/start/junegunn-fzf/src/constants.go	/^	progressMinDuration     = 200 * time.Millisecond$/;"	c
push	pack/plugins/start/junegunn-fzf/src/chunklist.go	/^func (c *Chunk) push(trans ItemBuilder, data []byte, index int) bool {$/;"	f
pushd	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:pushd(dict)$/;"	f
qf	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^augroup qf$/;"	a
qf#AddList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#AddList()$/;"	f
qf#AddTitle	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#AddTitle(title)$/;"	f
qf#CompleteList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#CompleteList(ArgLead, CmdLine, CursorPos)$/;"	f
qf#DoList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#DoList(line, cmd)$/;"	f
qf#FilterList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#FilterList(pat, reject)$/;"	f
qf#FunctionName	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#FunctionName(argument)$/;"	f
qf#GetFilePath	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#GetFilePath(line) abort$/;"	f
qf#IsLocWindow	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#IsLocWindow(nmbr)$/;"	f
qf#IsQfWindow	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#IsQfWindow(nmbr)$/;"	f
qf#JumpFileChunk	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#JumpFileChunk(down) abort$/;"	f
qf#JumpToFirstItemOfFileChunk	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#JumpToFirstItemOfFileChunk() abort$/;"	f
qf#ListLists	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#ListLists()$/;"	f
qf#LoadList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#LoadList(add, ...)$/;"	f
qf#NextFile	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#NextFile() abort$/;"	f
qf#OpenLoclist	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#OpenLoclist()$/;"	f
qf#OpenQuickfix	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#OpenQuickfix()$/;"	f
qf#PreviewFileUnderCursor	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#PreviewFileUnderCursor()$/;"	f
qf#PreviousFile	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#PreviousFile() abort$/;"	f
qf#RemoveList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#RemoveList(bang, ...)$/;"	f
qf#ResetLists	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#ResetLists()$/;"	f
qf#RestoreList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#RestoreList()$/;"	f
qf#ReuseTitle	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#ReuseTitle()$/;"	f
qf#SaveList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#SaveList(add, name) abort$/;"	f
qf#SetList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#SetList(pat, reject)$/;"	f
qf#SetStatusline	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#SetStatusline()$/;"	f
qf#SetTitle	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#SetTitle(pat, reject)$/;"	f
qf#ToggleLocWindow	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#ToggleLocWindow()$/;"	f
qf#ToggleQfWindow	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#ToggleQfWindow()$/;"	f
qf#WrapCommand	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#WrapCommand(direction, prefix)$/;"	f
queryCache	pack/plugins/start/junegunn-fzf/src/cache.go	/^type queryCache map[string][]*Result$/;"	t
queryCacheMax	pack/plugins/start/junegunn-fzf/src/constants.go	/^	queryCacheMax int = chunkSize \/ 5$/;"	c
quoteDir	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:quoteDir()$/;"	f
quoteDirInternal	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:quoteDirInternal(oldcolumn)$/;"	f
quoteEntry	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func quoteEntry(entry string) string {$/;"	f
randResult	pack/plugins/start/junegunn-fzf/src/merger_test.go	/^func randResult() *Result {$/;"	f
rangeEllipsis	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^const rangeEllipsis = 0$/;"	c
rank	pack/plugins/start/junegunn-fzf/fzf	/^    def rank tuple$/;"	f
rank	pack/plugins/start/junegunn-fzf/src/result.go	/^type rank struct {$/;"	t
readFromCommand	pack/plugins/start/junegunn-fzf/src/reader.go	/^func (r *Reader) readFromCommand(cmd string) {$/;"	f
readFromStdin	pack/plugins/start/junegunn-fzf/src/reader.go	/^func (r *Reader) readFromStdin() {$/;"	f
read_nb	pack/plugins/start/junegunn-fzf/fzf	/^  def read_nb chars = 1, default = nil, tries = 10$/;"	f	class:start_search
read_nbs	pack/plugins/start/junegunn-fzf/fzf	/^  def read_nbs$/;"	f	class:start_search
readerBufferSize	pack/plugins/start/junegunn-fzf/src/constants.go	/^	readerBufferSize = 64 * 1024$/;"	c
readonce	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def readonce$/;"	f	class:TestBase
recall	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:recall() abort$/;"	f
refresh	pack/plugins/start/junegunn-fzf/fzf	/^  def refresh$/;"	f	class:usage
refresh	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) refresh() {$/;"	f
remove	pack/plugins/start/junegunn-fzf/uninstall	/^remove() {$/;"	f
remove_line	pack/plugins/start/junegunn-fzf/uninstall	/^remove_line() {$/;"	f
rename_job	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^function s:rename_job(args)$/;"	f
render	pack/plugins/start/junegunn-fzf/fzf	/^  def render &blk$/;"	f	class:start_search
repeat#invalidate	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^function! repeat#invalidate()$/;"	f
repeat#run	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^function! repeat#run(count)$/;"	f
repeat#set	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^function! repeat#set(sequence,...)$/;"	f
repeat#setreg	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^function! repeat#setreg(sequence,register)$/;"	f
repeat#wrap	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^function! repeat#wrap(command,count)$/;"	f
repeatPlugin	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^augroup repeatPlugin$/;"	a
replacePlaceholder	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func replacePlaceholder(template string, stripAnsi bool, delimiter Delimiter, query string, items []*Item) string {$/;"	f
repo	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo_aliases	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_aliases() dict abort$/;"	f
repo_bare	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_config(conf) dict abort$/;"	f
repo_dir	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dirglob	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_git_chomp	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
repo_head_ref	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
repo_keywordprg	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_rev_parse	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_tree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
reqClose	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqClose$/;"	c
reqHeader	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqHeader$/;"	c
reqInfo	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqInfo$/;"	c
reqJump	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqJump$/;"	c
reqList	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqList$/;"	c
reqPreviewDisplay	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqPreviewDisplay$/;"	c
reqPreviewEnqueue	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqPreviewEnqueue$/;"	c
reqPreviewRefresh	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqPreviewRefresh$/;"	c
reqPrintQuery	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqPrintQuery$/;"	c
reqPrompt	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqPrompt util.EventType = iota$/;"	c
reqQuit	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqQuit$/;"	c
reqRedraw	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqRedraw$/;"	c
reqRefresh	pack/plugins/start/junegunn-fzf/src/terminal.go	/^	reqRefresh$/;"	c
reqReset	pack/plugins/start/junegunn-fzf/src/matcher.go	/^	reqReset$/;"	c
reqRetry	pack/plugins/start/junegunn-fzf/src/matcher.go	/^	reqRetry util.EventType = iota$/;"	c
resizeWindows	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) resizeWindows() {$/;"	f
restore_conceal_in_other_windows	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/label.vim	/^func! s:restore_conceal_in_other_windows()$/;"	f
reverseStringArray	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func reverseStringArray(input []string) []string {$/;"	f
rgb_colour	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:rgb_colour(x, y, z)$/;"	f
rgb_level	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:rgb_level(n)$/;"	f
rgb_number	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:rgb_number(x)$/;"	f
robertmeta's vimrc	README.md	/^# robertmeta's vimrc$/;"	h
root_dirs	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! s:root_dirs() abort$/;"	f
rubout	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) rubout(pattern string) {$/;"	f
run_guru	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:run_guru(args) abort$/;"	f
runeWidth	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func runeWidth(r rune, prefixWidth int) int {$/;"	f
rxflag_for	pack/plugins/start/junegunn-fzf/fzf	/^    def rxflag_for q$/;"	f	class:start_search.FuzzyMatcher
s	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^  nmap s <Plug>Sneak_s$/;"	m
s	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^    nnoremap <buffer> s <C-w><CR>$/;"	m
s.dosearch	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/search.vim	/^  func! s.dosearch(...) " a:1 : extra search options$/;"	f
s.get_onscreen_searchpattern	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/search.vim	/^  func! s.get_onscreen_searchpattern(w)$/;"	f
s.get_stopline	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/search.vim	/^  func! s.get_stopline()$/;"	f
s.hasmatches	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/search.vim	/^  func! s.hasmatches(n)$/;"	f
s.initpattern	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/search.vim	/^  func! s.initpattern()$/;"	f
s:MODE_16_COLOR	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:MODE_16_COLOR = 0$/;"	v
s:MODE_256_COLOR	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:MODE_256_COLOR = 1$/;"	v
s:MODE_TRUE_COLOR	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:MODE_TRUE_COLOR = 2$/;"	v
s:MODE_TRUE_OR_256_COLOR	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:MODE_TRUE_OR_256_COLOR = 3 " for code generation purpose, not for theme usage$/;"	v
s:N	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:N = 0              " Length of the current completion chain$/;"	v
s:abstract_prototype	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:added_dbs	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^let s:added_dbs = []$/;"	v
s:auto	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:auto = 0           " Is autocompletion enabled?$/;"	v
s:buf_nr	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^let s:buf_nr = -1$/;"	v
s:buf_nr	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^let s:buf_nr = -1$/;"	v
s:buffer_prototype	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:cmp	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/ultisnips.vim	/^let s:cmp = 'stridx(v:val, l:pat)' . (get(g:, 'mucomplete#ultisnips#match_at_start', 1) ? '==0' : '>=0')$/;"	v
s:cnp	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:cnp = get(g:, 'mucomplete#ctrlx_mode_out', "\\<c-g>\\<c-g>")$/;"	v
s:colorful_term	vimrc	/^let s:colorful_term=(&term=~"xterm") || (&term=~"screen")$/;"	v
s:commands	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:commands = []$/;"	v
s:common_efm	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:common_efm = ''$/;"	v
s:compl_mappings	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:compl_mappings = extend({$/;"	v
s:compl_methods	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:compl_methods = [] " Current completion chain$/;"	v
s:compl_text	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:compl_text = ''    " Text to be completed$/;"	v
s:coverage_browser_handler_jobs	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^let s:coverage_browser_handler_jobs = {}$/;"	v
s:coverage_handler_jobs	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^let s:coverage_handler_jobs = {}$/;"	v
s:cpo_save	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^let s:cpo_save = &cpo$/;"	v
s:current_file	pack/plugins/start/fatih-vim-go/autoload/go/template.vim	/^let s:current_file = expand("<sfile>")$/;"	v
s:current_fileencodings	pack/plugins/start/fatih-vim-go/ftdetect/gofiletype.vim	/^let s:current_fileencodings = ''$/;"	v
s:current_fileformats	pack/plugins/start/fatih-vim-go/ftdetect/gofiletype.vim	/^let s:current_fileformats = ''$/;"	v
s:cycle	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:cycle = 0          " Should µcomplete treat the completion chain as cyclic?$/;"	v
s:default_action	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^let s:default_action = {$/;"	v
s:default_layout	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^let s:default_layout = { 'down': '~40%' }$/;"	v
s:dir	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:dir = 1            " Direction to search for the next completion method (1=fwd, -1=bwd)$/;"	v
s:dir_for_worktree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:dir_for_worktree = {}$/;"	v
s:empty	pack/plugins/start/wellle-targets/autoload/targets/state.vim	/^let s:empty = 1$/;"	v
s:env_cache	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^let s:env_cache = {}$/;"	v
s:fzf_go	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^let s:fzf_go = expand('<sfile>:h:h').'\/bin\/fzf'$/;"	v
s:fzf_tmux	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^let s:fzf_tmux = expand('<sfile>:h:h').'\/bin\/fzf-tmux'$/;"	v
s:git_versions	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:go_decls_var	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^let s:go_decls_var = {$/;"	v
s:go_stack	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^let s:go_stack = []$/;"	v
s:go_stack_level	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^let s:go_stack_level = 0$/;"	v
s:goarch	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goarch = '*'$/;"	v
s:goarch	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goarch = g:golang_goarch$/;"	v
s:goarch	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^let s:goarch = $GOARCH$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goos = '*'$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goos = 'darwin'$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goos = 'windows'$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goos = g:golang_goos$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^let s:goos = $GOOS$/;"	v
s:got_fmt_error	pack/plugins/start/fatih-vim-go/autoload/go/asmfmt.vim	/^let s:got_fmt_error = 0$/;"	v
s:handlers	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^let s:handlers = {}$/;"	v
s:hash_colors	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:i	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:i = 0              " Index of the current completion method in the completion chain$/;"	v
s:i_history	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:i_history = []     " To detect loops when using <c-h>\/<c-l>$/;"	v
s:id	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:initial_go_path	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^let s:initial_go_path = ""$/;"	v
s:install	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^let s:install = expand('<sfile>:h:h').'\/install'$/;"	v
s:installed	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^let s:installed = 0$/;"	v
s:invalid	pack/plugins/start/wellle-targets/autoload/targets/state.vim	/^let s:invalid = 0$/;"	v
s:is_dark	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:is_dark=(&background == 'dark')$/;"	v
s:jobs	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^let s:jobs = {}$/;"	v
s:jobs	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^let s:jobs = {}$/;"	v
s:known_files	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^let s:known_files = []$/;"	v
s:known_projects	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^let s:known_projects = {}$/;"	v
s:last_saved_list	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^let s:last_saved_list = ''$/;"	v
s:last_status	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^let s:last_status = ""$/;"	v
s:launcher	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^let s:launcher = function('s:xterm_launcher')$/;"	v
s:layout_keys	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^let s:layout_keys = ['window', 'up', 'down', 'left', 'right']$/;"	v
s:lines	pack/plugins/start/wellle-tmux-complete/autoload/unite/sources/tmuxcomplete.vim	/^let s:lines = deepcopy(s:words)$/;"	v
s:lines	pack/plugins/start/wellle-tmux-complete/autoload/unite/sources/tmuxcomplete.vim	/^let s:lines.description = 'lines in the current tmux session'$/;"	v
s:lines	pack/plugins/start/wellle-tmux-complete/autoload/unite/sources/tmuxcomplete.vim	/^let s:lines.name = 'tmuxcomplete\/lines'$/;"	v
s:map_prefix	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^let s:map_prefix = get(g:, 'tmuxify_map_prefix', '<leader>m')$/;"	v
s:maxmarks	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/label.vim	/^let s:maxmarks = sneak#util#strlen(g:sneak#target_labels)$/;"	v
s:maybe_in_progress	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^    let s:maybe_in_progress[module] = {}$/;"	v
s:maybe_in_progress	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^let s:maybe_in_progress = {}$/;"	v
s:mode	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let s:mode = s:MODE_16_COLOR$/;"	v
s:mode	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let s:mode = s:MODE_256_COLOR$/;"	v
s:mode	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let s:mode = s:MODE_TRUE_COLOR$/;"	v
s:molokai_original	pack/colors/start/tomasr-molokai/colors/molokai.vim	/^    let s:molokai_original = 0$/;"	v
s:molokai_original	pack/colors/start/tomasr-molokai/colors/molokai.vim	/^    let s:molokai_original = g:molokai_original$/;"	v
s:named_lists	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^let s:named_lists = {}$/;"	v
s:nonempty	pack/plugins/start/wellle-targets/autoload/targets/state.vim	/^let s:nonempty = 2$/;"	v
s:optionsEnabled	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^let s:optionsEnabled = 0$/;"	v
s:packages	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^let s:packages = [$/;"	v
s:palette	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^    let s:palette = s:selected_theme['dark'].palette$/;"	v
s:palette	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^    let s:palette = s:selected_theme['light'].palette$/;"	v
s:pathsep	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:pathsep = exists('+shellslash') && !&shellslash ? '\\\\' : '\/'$/;"	v
s:pathsep	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^let s:pathsep = exists('+shellslash') && !&shellslash ? '\\\\' : '\/'$/;"	v
s:pumvisible	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:pumvisible = 0     " Has the pop-up menu become visible?$/;"	v
s:repo_prototype	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:repos = {}$/;"	v
s:runner_exe	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^let s:runner_exe = gutentags#get_plat_file('update_scopedb')$/;"	v
s:runner_exe	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let s:runner_exe = gutentags#get_plat_file('update_tags')$/;"	v
s:running_windows	vimrc	/^let s:running_windows=has("win16") || has("win32") || has("win64")$/;"	v
s:save_cpo	pack/plugins/start/fatih-vim-go/compiler/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/path.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/spel.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/tomtom-ttags-vim/plugin/ttags.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/vim-scripts-multiplesearch/autoload/MultipleSearch.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/wellle-tmux-complete/autoload/neocomplcache/sources/tmuxcomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/wellle-tmux-complete/autoload/neocomplete/sources/tmuxcomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/wellle-tmux-complete/autoload/unite/sources/tmuxcomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpoptions	pack/plugins/start/wellle-targets/autoload/targets.vim	/^let s:save_cpoptions = &cpoptions$/;"	v
s:save_cpoptions	pack/plugins/start/wellle-targets/plugin/targets.vim	/^let s:save_cpoptions = &cpoptions$/;"	v
s:script	pack/plugins/start/wellle-tmux-complete/autoload/tmuxcomplete.vim	/^let s:script = expand('<sfile>:h:h') . "\/sh\/tmuxcomplete"$/;"	v
s:script_path	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:script_path = fnamemodify(resolve(expand('<sfile>:p')), ':h')$/;"	v
s:select_entry	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:select_entry = { 'c-p' : "\\<c-p>", 'keyp': "\\<c-p>" }$/;"	v
s:selected_theme	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let s:selected_theme = s:themes[g:PaperColor_Theme]$/;"	v
s:selected_theme	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:selected_theme = s:themes['default'] " default$/;"	v
s:sock_type	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^let s:sock_type = (has('win32') || has('win64')) ? 'tcp' : 'unix'$/;"	v
s:source	pack/plugins/start/wellle-tmux-complete/autoload/neocomplcache/sources/tmuxcomplete.vim	/^let s:source = {$/;"	v
s:source	pack/plugins/start/wellle-tmux-complete/autoload/neocomplete/sources/tmuxcomplete.vim	/^let s:source = {$/;"	v
s:st	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^let s:st = { 'rst':1, 'input':'', 'inputlen':0, 'reverse':0, 'bounds':[0,0], 'inclusive':0 }$/;"	v
s:statuses	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^let s:statuses = {}$/;"	v
s:tags	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^let s:tags = {}$/;"	v
s:temp_files	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:test_compile_handlers	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^let s:test_compile_handlers = {}$/;"	v
s:themes	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:themes = {}$/;"	v
s:themes	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:themes['default'] = {$/;"	v
s:themes	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:themes['default'].dark = {$/;"	v
s:themes	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:themes['default'].light = {$/;"	v
s:timer_id	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^let s:timer_id = 0$/;"	v
s:to_HEX	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:to_HEX = { $/;"	v
s:toggle	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^let s:toggle = 0$/;"	v
s:unix_redir	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:update_queue	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^    let s:update_queue[module] = []$/;"	v
s:update_queue	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^let s:update_queue = {}$/;"	v
s:words	pack/plugins/start/wellle-tmux-complete/autoload/unite/sources/tmuxcomplete.vim	/^let s:words = {$/;"	v
s:worktree_for_dir	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:worktree_for_dir = {}$/;"	v
s:yes_you_can	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  let s:yes_you_can = function('mucomplete#compat#yes_you_can')$/;"	v
s:yes_you_can	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  let s:yes_you_can = { _ -> 1 } " Try always$/;"	v
same_ids_highlight	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:same_ids_highlight(exit_val, output) abort$/;"	f
scan	pack/plugins/start/junegunn-fzf/src/matcher.go	/^func (m *Matcher) scan(request MatchRequest) (*Merger, bool) {$/;"	f
scoreGapExtention	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	scoreGapExtention = -1$/;"	c
scoreGapStart	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	scoreGapStart     = -3$/;"	c
scoreMatch	pack/plugins/start/junegunn-fzf/src/algo/algo.go	/^	scoreMatch        = 16$/;"	c
search	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:search(...)$/;"	f
seekselect	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:seekselect(dir, countL, countR)$/;"	f
seekselecta	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:seekselecta(count)$/;"	f
seekselectp	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:seekselectp(...)$/;"	f
select	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:select(direction)$/;"	f
select git branches in horizontal split below (15 lines)	pack/plugins/start/junegunn-fzf/README.md	/^# select git branches in horizontal split below (15 lines)$/;"	h
select multiple words in vertical split on the left (20% of screen width)	pack/plugins/start/junegunn-fzf/README.md	/^# select multiple words in vertical split on the left (20% of screen width)$/;"	h
selectRegion	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:selectRegion(target)$/;"	f
selectTarget	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:selectTarget(target, rawTarget)$/;"	f
selecta	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:selecta(direction)$/;"	f
selectedItem	pack/plugins/start/junegunn-fzf/src/terminal.go	/^type selectedItem struct {$/;"	t
selectp	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:selectp(...)$/;"	f
send_keys	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def send_keys *args$/;"	f	class:Tmux
separator	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:separator()$/;"	f
set	pack/plugins/start/junegunn-fzf/fzf	/^  def set name, value = nil$/;"	f	class:FZF
set_color_variables	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:set_color_variables()$/;"	f
set_highlightings_variable	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:set_highlightings_variable()$/;"	f
set_var	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def set_var name, val$/;"	f	class:TestFish
set_var	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def set_var name, val$/;"	f	class:TestShell
setup	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def setup$/;"	f	class:TestBash
setup	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def setup$/;"	f	class:TestFish
setup	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def setup$/;"	f	class:TestGoFZF
setup	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def setup$/;"	f	class:TestShell
setup	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def setup$/;"	f	class:TestZsh
setup	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:setup()$/;"	f
shellesc	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:shellesc(arg)$/;"	f
shellesc	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellslash	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:shellslash(path) abort$/;"	f
shortpath	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:shortpath()$/;"	f
shouldGrow	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:shouldGrow(trigger)$/;"	f
shrink	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:shrink(target)$/;"	f
sizeSpec	pack/plugins/start/junegunn-fzf/src/options.go	/^type sizeSpec struct {$/;"	t
slab	pack/plugins/start/junegunn-fzf/src/pattern_test.go	/^var slab *util.Slab$/;"	v
slab16Size	pack/plugins/start/junegunn-fzf/src/constants.go	/^	slab16Size int = 100 * 1024 \/\/ 200KB * 32 = 12.8MB$/;"	c
slab32Size	pack/plugins/start/junegunn-fzf/src/constants.go	/^	slab32Size int = 2048       \/\/ 8KB * 32 = 256KB$/;"	c
sliceChunks	pack/plugins/start/junegunn-fzf/src/matcher.go	/^func (m *Matcher) sliceChunks(chunks []*Chunk) [][]*Chunk {$/;"	f
sneak#cancel	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! sneak#cancel()$/;"	f
sneak#debug#profile	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/debug.vim	/^func! sneak#debug#profile()$/;"	f
sneak#debug#report	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/debug.vim	/^func! sneak#debug#report()$/;"	f
sneak#hl#get	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/hl.vim	/^func! sneak#hl#get(hlgroup) abort "gets the definition of the specified highlight$/;"	f
sneak#hl#links_to	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/hl.vim	/^func! sneak#hl#links_to(hlgroup) abort$/;"	f
sneak#hl#removehl	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/hl.vim	/^func! sneak#hl#removehl() abort "remove highlighting$/;"	f
sneak#init	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! sneak#init()$/;"	f
sneak#is_sneaking	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! sneak#is_sneaking()$/;"	f
sneak#label#sanitize_target_labels	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/label.vim	/^func! sneak#label#sanitize_target_labels()$/;"	f
sneak#label#to	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/label.vim	/^func! sneak#label#to(s, v, reverse)$/;"	f
sneak#reset	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! sneak#reset(key)$/;"	f
sneak#rpt	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! sneak#rpt(op, reverse) abort$/;"	f
sneak#search#get_cs	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/search.vim	/^func! sneak#search#get_cs(input, use_ic_scs)$/;"	f
sneak#search#new	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/search.vim	/^func! sneak#search#new()$/;"	f
sneak#state	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! sneak#state()$/;"	f
sneak#to	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! sneak#to(op, input, inputlen, count, repeatmotion, reverse, inclusive, label) abort "{{{$/;"	f
sneak#util#echo	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#echo(msg)$/;"	f
sneak#util#getc	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#getc()$/;"	f
sneak#util#getchar	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#getchar()$/;"	f
sneak#util#has_upper	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#has_upper(s)$/;"	f
sneak#util#isvisualop	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#isvisualop(op)$/;"	f
sneak#util#nudge	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#nudge(right)$/;"	f
sneak#util#skipfold	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#skipfold(current_line, reverse)$/;"	f
sneak#util#strlen	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/util.vim	/^  func! sneak#util#strlen(s)$/;"	f
sneak#util#wincol1	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/util.vim	/^func! sneak#util#wincol1()$/;"	f
sneak#wrap	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^func! sneak#wrap(op, inputlen, reverse, inclusive, label) abort$/;"	f
sneak_colorscheme	pack/plugins/start/justinmk-vim-sneak/autoload/sneak/hl.vim	/^augroup sneak_colorscheme " re-init if :colorscheme is changed at runtime. #108$/;"	a
sort	pack/plugins/start/junegunn-fzf/fzf	/^    def sort list$/;"	f
sortCriteria	pack/plugins/start/junegunn-fzf/src/result.go	/^var sortCriteria []criterion$/;"	v
sortSelected	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) sortSelected() []selectedItem {$/;"	f
source.gather_candidates	pack/plugins/start/wellle-tmux-complete/autoload/neocomplcache/sources/tmuxcomplete.vim	/^function! s:source.gather_candidates(context)$/;"	f
source.gather_candidates	pack/plugins/start/wellle-tmux-complete/autoload/neocomplete/sources/tmuxcomplete.vim	/^function! s:source.gather_candidates(context)$/;"	f
spawn	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:spawn(bang, desc, args) abort$/;"	f
spinnerDuration	pack/plugins/start/junegunn-fzf/src/constants.go	/^	spinnerDuration  = 200 * time.Millisecond$/;"	c
split	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:split(dict)$/;"	f
splitNth	pack/plugins/start/junegunn-fzf/src/options.go	/^func splitNth(str string) []Range {$/;"	f
splittable	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:splittable(dict)$/;"	f
stage_info	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:stage_info(lnum) abort$/;"	f
start	pack/plugins/start/junegunn-fzf/fzf	/^  def start$/;"	f
start_loop	pack/plugins/start/junegunn-fzf/fzf	/^  def start_loop$/;"	f	class:start_search
start_options	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let start_options = {$/;"	v
start_options	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let start_options = {$/;"	v
start_options	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^  let start_options = {$/;"	v
start_options	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^  let start_options = {$/;"	v
start_options	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let start_options = {$/;"	v
start_options	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let start_options = {$/;"	v
start_reader	pack/plugins/start/junegunn-fzf/fzf	/^  def start_reader$/;"	f
start_renderer	pack/plugins/start/junegunn-fzf/fzf	/^  def start_renderer$/;"	f	class:start_search
start_search	pack/plugins/start/junegunn-fzf/fzf	/^  def start_search &callback$/;"	f
start_with?	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def start_with? str$/;"	f	class:NilClass
status_dir	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let status_dir =  expand('%:p:h')$/;"	v
strLines	pack/plugins/start/junegunn-fzf/src/options.go	/^func strLines(str string) []string {$/;"	f
style	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (p ColorPair) style() tcell.Style {$/;"	f
sub	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
sw	pack/plugins/start/fatih-vim-go/indent/go.vim	/^  func s:sw()$/;"	f
symlink	pack/plugins/start/junegunn-fzf/install	/^symlink() {$/;"	f
sync	pack/plugins/start/junegunn-fzf/fzf	/^  def sync$/;"	f	class:FZF
sync_guru	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:sync_guru(args) abort$/;"	f
t	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^    nnoremap <buffer> t <C-w><CR><C-w>T$/;"	m
t	vimrc	/^nmap t <Plug>Sneak_t$/;"	m
t	vimrc	/^omap t <Plug>Sneak_t$/;"	m
targets#e	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! targets#e(modifier)$/;"	f
targets#o	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! targets#o(trigger, count)$/;"	f
targets#state#empty	pack/plugins/start/wellle-targets/autoload/targets/state.vim	/^function! targets#state#empty()$/;"	f
targets#state#invalid	pack/plugins/start/wellle-targets/autoload/targets/state.vim	/^function! targets#state#invalid()$/;"	f
targets#state#isEmpty	pack/plugins/start/wellle-targets/autoload/targets/state.vim	/^function! targets#state#isEmpty() dict$/;"	f
targets#state#isInvalid	pack/plugins/start/wellle-targets/autoload/targets/state.vim	/^function! targets#state#isInvalid() dict$/;"	f
targets#state#isInvalidOrEmpty	pack/plugins/start/wellle-targets/autoload/targets/state.vim	/^function! targets#state#isInvalidOrEmpty() dict$/;"	f
targets#state#isNonempty	pack/plugins/start/wellle-targets/autoload/targets/state.vim	/^function! targets#state#isNonempty() dict$/;"	f
targets#state#isValid	pack/plugins/start/wellle-targets/autoload/targets/state.vim	/^function! targets#state#isValid() dict$/;"	f
targets#state#new	pack/plugins/start/wellle-targets/autoload/targets/state.vim	/^function! targets#state#new(state)$/;"	f
targets#state#nonempty	pack/plugins/start/wellle-targets/autoload/targets/state.vim	/^function! targets#state#nonempty()$/;"	f
targets#target#copy	pack/plugins/start/wellle-targets/autoload/targets/target.vim	/^function! targets#target#copy() dict$/;"	f
targets#target#cursorE	pack/plugins/start/wellle-targets/autoload/targets/target.vim	/^function! targets#target#cursorE() dict$/;"	f
targets#target#cursorS	pack/plugins/start/wellle-targets/autoload/targets/target.vim	/^function! targets#target#cursorS() dict$/;"	f
targets#target#e	pack/plugins/start/wellle-targets/autoload/targets/target.vim	/^function! targets#target#e() dict$/;"	f
targets#target#fromValues	pack/plugins/start/wellle-targets/autoload/targets/target.vim	/^function! targets#target#fromValues(sl, sc, el, ec)$/;"	f
targets#target#fromVisualSelection	pack/plugins/start/wellle-targets/autoload/targets/target.vim	/^function! targets#target#fromVisualSelection()$/;"	f
targets#target#getcharE	pack/plugins/start/wellle-targets/autoload/targets/target.vim	/^function! targets#target#getcharE() dict$/;"	f
targets#target#getcharS	pack/plugins/start/wellle-targets/autoload/targets/target.vim	/^function! targets#target#getcharS() dict$/;"	f
targets#target#getposE	pack/plugins/start/wellle-targets/autoload/targets/target.vim	/^function! targets#target#getposE(...) dict$/;"	f
targets#target#getposS	pack/plugins/start/wellle-targets/autoload/targets/target.vim	/^function! targets#target#getposS(...) dict$/;"	f
targets#target#new	pack/plugins/start/wellle-targets/autoload/targets/target.vim	/^function! targets#target#new(sl, sc, el, ec, error)$/;"	f
targets#target#range	pack/plugins/start/wellle-targets/autoload/targets/target.vim	/^function! targets#target#range(cursor, min, max) dict$/;"	f
targets#target#s	pack/plugins/start/wellle-targets/autoload/targets/target.vim	/^function! targets#target#s() dict$/;"	f
targets#target#searchposE	pack/plugins/start/wellle-targets/autoload/targets/target.vim	/^function! targets#target#searchposE(...) dict$/;"	f
targets#target#searchposS	pack/plugins/start/wellle-targets/autoload/targets/target.vim	/^function! targets#target#searchposS(...) dict$/;"	f
targets#target#select	pack/plugins/start/wellle-targets/autoload/targets/target.vim	/^function! targets#target#select() dict$/;"	f
targets#target#setE	pack/plugins/start/wellle-targets/autoload/targets/target.vim	/^function! targets#target#setE(line, column) dict$/;"	f
targets#target#setS	pack/plugins/start/wellle-targets/autoload/targets/target.vim	/^function! targets#target#setS(line, column) dict$/;"	f
targets#target#state	pack/plugins/start/wellle-targets/autoload/targets/target.vim	/^function! targets#target#state() dict$/;"	f
targets#target#string	pack/plugins/start/wellle-targets/autoload/targets/target.vim	/^function! targets#target#string() dict$/;"	f
targets#target#withError	pack/plugins/start/wellle-targets/autoload/targets/target.vim	/^function! targets#target#withError(error)$/;"	f
targets#undo	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! targets#undo(lastseq)$/;"	f
targets#x	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! targets#x(trigger, count)$/;"	f
teardown	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def teardown$/;"	f	class:TestGoFZF
teardown	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def teardown$/;"	f	class:TestShell
template_autocreate	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:template_autocreate()$/;"	f
tempname	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def tempname$/;"	f	class:TestBase
term	pack/plugins/start/junegunn-fzf/src/pattern.go	/^type term struct {$/;"	t
termEqual	pack/plugins/start/junegunn-fzf/src/pattern.go	/^	termEqual$/;"	c
termExact	pack/plugins/start/junegunn-fzf/src/pattern.go	/^	termExact$/;"	c
termFuzzy	pack/plugins/start/junegunn-fzf/src/pattern.go	/^	termFuzzy termType = iota$/;"	c
termPrefix	pack/plugins/start/junegunn-fzf/src/pattern.go	/^	termPrefix$/;"	c
termSet	pack/plugins/start/junegunn-fzf/src/pattern.go	/^type termSet []term$/;"	t
termSuffix	pack/plugins/start/junegunn-fzf/src/pattern.go	/^	termSuffix$/;"	c
termType	pack/plugins/start/junegunn-fzf/src/pattern.go	/^type termType int$/;"	t
testBasic	pack/plugins/start/wellle-targets/test/test.vim	/^function! s:testBasic()$/;"	f
testEmpty	pack/plugins/start/wellle-targets/test/test.vim	/^function s:testEmpty()$/;"	f
testModifiers	pack/plugins/start/wellle-targets/test/test.vim	/^function s:testModifiers()$/;"	f
testMultiline	pack/plugins/start/wellle-targets/test/test.vim	/^function! s:testMultiline()$/;"	f
testQuotes	pack/plugins/start/wellle-targets/test/test.vim	/^function s:testQuotes()$/;"	f
testSeeking	pack/plugins/start/wellle-targets/test/test.vim	/^function s:testSeeking()$/;"	f
testVisual	pack/plugins/start/wellle-targets/test/test.vim	/^function s:testVisual()$/;"	f
test_alt_c	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_alt_c$/;"	f	class:TestShell
test_alt_c_command	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_alt_c_command$/;"	f	class:TestShell
test_bind	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_bind$/;"	f	class:TestGoFZF
test_bind_print_query	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_bind_print_query$/;"	f	class:TestGoFZF
test_cancel	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_cancel$/;"	f	class:TestGoFZF
test_compile	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! s:test_compile(test_file, job, exit_status, data) abort$/;"	f
test_compile_handler	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! s:test_compile_handler(job, exit_status, data) abort$/;"	f
test_ctrl_r	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_ctrl_r$/;"	f	class:TestShell
test_ctrl_t	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_ctrl_t$/;"	f	class:TestShell
test_ctrl_t_command	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_ctrl_t_command$/;"	f	class:TestShell
test_ctrl_t_unicode	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_ctrl_t_unicode$/;"	f	class:TestShell
test_custom_completion	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_custom_completion$/;"	f	class:CompletionTest
test_cycle	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_cycle$/;"	f	class:TestGoFZF
test_default_extended	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_default_extended$/;"	f
test_dir_completion	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_dir_completion$/;"	f	class:CompletionTest
test_exact	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_exact$/;"	f
test_execute	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_execute$/;"	f	class:TestGoFZF
test_execute_multi	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_execute_multi$/;"	f	class:TestGoFZF
test_execute_shell	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_execute_shell$/;"	f	class:TestGoFZF
test_exit_0	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_exit_0$/;"	f	class:TestGoFZF
test_exit_0_exit_code	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_exit_0_exit_code$/;"	f	class:TestGoFZF
test_exitstatus_empty	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_exitstatus_empty$/;"	f
test_expect	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_expect$/;"	f	class:TestGoFZF
test_expect_print_query	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_expect_print_query$/;"	f	class:TestGoFZF
test_expect_print_query_select_1	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_expect_print_query_select_1$/;"	f	class:TestGoFZF
test_expect_printable_character_print_query	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_expect_printable_character_print_query$/;"	f	class:TestGoFZF
test_file_completion	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_file_completion$/;"	f	class:CompletionTest
test_file_completion_root	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_file_completion_root$/;"	f	class:CompletionTest
test_file_completion_unicode	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_file_completion_unicode$/;"	f	class:CompletionTest
test_filter_exitstatus	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_filter_exitstatus$/;"	f	class:TestGoFZF
test_fzf_default_command	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_fzf_default_command$/;"	f	class:TestGoFZF
test_header	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_header$/;"	f	class:TestGoFZF
test_header_and_header_lines	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_header_and_header_lines$/;"	f	class:TestGoFZF
test_header_and_header_lines_reverse	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_header_and_header_lines_reverse$/;"	f	class:TestGoFZF
test_header_lines	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_header_lines$/;"	f	class:TestGoFZF
test_header_lines_overflow	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_header_lines_overflow$/;"	f	class:TestGoFZF
test_header_lines_reverse	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_header_lines_reverse$/;"	f	class:TestGoFZF
test_header_lines_with_nth	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_header_lines_with_nth$/;"	f	class:TestGoFZF
test_header_reverse	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_header_reverse$/;"	f	class:TestGoFZF
test_history	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_history$/;"	f	class:TestGoFZF
test_hscroll_off	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_hscroll_off$/;"	f
test_invalid_cache	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_invalid_cache$/;"	f	class:TestGoFZF
test_invalid_option	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_invalid_option$/;"	f	class:TestGoFZF
test_invalid_term	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_invalid_term$/;"	f	class:TestGoFZF
test_jump	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_jump$/;"	f
test_jump_accept	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_jump_accept$/;"	f
test_key_bindings	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_key_bindings$/;"	f	class:TestGoFZF
test_long_line	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_long_line$/;"	f	class:TestGoFZF
test_margin	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_margin$/;"	f	class:TestGoFZF
test_margin_reverse	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_margin_reverse$/;"	f	class:TestGoFZF
test_multi_order	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_multi_order$/;"	f	class:TestGoFZF
test_one	pack/plugins/start/fatih-vim-go/scripts/test.sh	/^test_one() {$/;"	f
test_or_operator	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_or_operator$/;"	f
test_partial_caching	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_partial_caching$/;"	f
test_preview	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_preview$/;"	f
test_preview_hidden	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_preview_hidden$/;"	f
test_process_completion	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_process_completion$/;"	f	class:CompletionTest
test_query_unicode	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_query_unicode$/;"	f	class:TestGoFZF
test_read0	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_read0$/;"	f	class:TestGoFZF
test_report	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:test_report(test, verbose)$/;"	f
test_scroll	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_scroll$/;"	f	class:TestGoFZF
test_select_1	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_select_1$/;"	f	class:TestGoFZF
test_select_1_exit_0_fail	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_select_1_exit_0_fail$/;"	f	class:TestGoFZF
test_select_all_deselect_all_toggle_all	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_select_all_deselect_all_toggle_all$/;"	f	class:TestGoFZF
test_smart_case_for_each_term	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_smart_case_for_each_term$/;"	f	class:TestGoFZF
test_sync	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_sync$/;"	f	class:TestGoFZF
test_tabstop	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_tabstop$/;"	f	class:TestGoFZF
test_tac	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_tac$/;"	f	class:TestGoFZF
test_tac_nosort	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_tac_nosort$/;"	f	class:TestGoFZF
test_tac_sort	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_tac_sort$/;"	f	class:TestGoFZF
test_tiebreak	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_tiebreak$/;"	f	class:TestGoFZF
test_tiebreak_end	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_tiebreak_end$/;"	f	class:TestGoFZF
test_tiebreak_index_begin	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_tiebreak_index_begin$/;"	f	class:TestGoFZF
test_tiebreak_length_with_nth	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_tiebreak_length_with_nth$/;"	f	class:TestGoFZF
test_tiebreak_length_with_nth_trim_length	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_tiebreak_length_with_nth_trim_length$/;"	f	class:TestGoFZF
test_toggle_sort	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_toggle_sort$/;"	f	class:TestGoFZF
test_unicode_case	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_unicode_case$/;"	f	class:TestGoFZF
test_unset_completion	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_unset_completion$/;"	f	class:CompletionTest
test_vanilla	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_vanilla$/;"	f	class:TestGoFZF
test_with_nth	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_with_nth$/;"	f	class:TestGoFZF
test_with_nth_ansi	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_with_nth_ansi$/;"	f	class:TestGoFZF
test_with_nth_no_ansi	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def test_with_nth_no_ansi$/;"	f	class:TestGoFZF
throw	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:throw(string) abort$/;"	f
tmux-complete.vim	pack/plugins/start/wellle-tmux-complete/README.md	/^# tmux-complete.vim$/;"	h
tmux_enabled	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:tmux_enabled()$/;"	f
tmuxcomplete#complete	pack/plugins/start/wellle-tmux-complete/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#complete(findstart, base)$/;"	f
tmuxcomplete#completions	pack/plugins/start/wellle-tmux-complete/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#completions(base, capture_args, splitmode)$/;"	f
tmuxcomplete#findstartWORD	pack/plugins/start/wellle-tmux-complete/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#findstartWORD(line, max)$/;"	f
tmuxcomplete#findstartword	pack/plugins/start/wellle-tmux-complete/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#findstartword(line, max)$/;"	f
tmuxcomplete#gather_candidates	pack/plugins/start/wellle-tmux-complete/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#gather_candidates()$/;"	f
tmuxcomplete#grepargs	pack/plugins/start/wellle-tmux-complete/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#grepargs(base)$/;"	f
tmuxcomplete#init	pack/plugins/start/wellle-tmux-complete/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#init()$/;"	f
tmuxcomplete#list	pack/plugins/start/wellle-tmux-complete/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#list(splitmode, scrollback)$/;"	f
tmuxify#get_associated_pane	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#get_associated_pane(...) abort$/;"	f
tmuxify#pane_command	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#pane_command(bang, ...) abort$/;"	f
tmuxify#pane_create	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#pane_create(bang, ...) abort$/;"	f
tmuxify#pane_kill	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#pane_kill(bang) abort$/;"	f
tmuxify#pane_run	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#pane_run(bang, ...) abort$/;"	f
tmuxify#pane_send	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#pane_send(bang, ...) abort$/;"	f
tmuxify#pane_send_raw	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#pane_send_raw(cmd, bang) abort$/;"	f
tmuxify#pane_set	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#pane_set(bang, ...) abort$/;"	f
tmuxify#set_run_command_for_filetype	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#set_run_command_for_filetype(...) abort$/;"	f
toBool	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:toBool(val) abort$/;"	f
to_256	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:to_256(rgb)$/;"	f
tokenize	pack/plugins/start/junegunn-fzf/fzf	/^    def tokenize str$/;"	f	class:start_search.Matcher
tokenize	pack/plugins/start/junegunn-fzf/fzf	/^  def tokenize delim, nth$/;"	f	class:String
transform	pack/plugins/start/junegunn-fzf/fzf	/^  def transform line$/;"	f
triggerReselect	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:triggerReselect()$/;"	f
triggerUndo	pack/plugins/start/wellle-targets/autoload/targets.vim	/^function! s:triggerUndo()$/;"	f
trim	pack/plugins/start/junegunn-fzf/fzf	/^    def trim str, len, left$/;"	f	class:usage
trimLeft	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func trimLeft(runes []rune, width int) ([]rune, int32) {$/;"	f
trimRight	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func trimRight(runes []rune, width int) ([]rune, int) {$/;"	f
trim_bracket	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:trim_bracket(val) abort$/;"	f
try_curl	pack/plugins/start/junegunn-fzf/install	/^try_curl() {$/;"	f
try_wget	pack/plugins/start/junegunn-fzf/install	/^try_wget() {$/;"	f
ttags#GotoTag	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! ttags#GotoTag(world, selected) "{{{3$/;"	f
ttags#Highlight	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! ttags#Highlight(tags) "{{{3$/;"	f
ttags#InsertTemplate	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! ttags#InsertTemplate(world, selected) "{{{3$/;"	f
ttags#Kinds	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! ttags#Kinds(...) "{{{3$/;"	f
ttags#List	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! ttags#List(use_extra, ...) "{{{3$/;"	f
ttags#PreviewTag	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! ttags#PreviewTag(world, selected) "{{{3$/;"	f
ttags#RewriteCygwinTag	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! ttags#RewriteCygwinTag(filename) "{{{3$/;"	f
ttags#Select	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! ttags#Select(use_extra, keyargs_as_string) "{{{3$/;"	f
ttags#SelectTags	pack/plugins/start/tomtom-ttags-vim/autoload/ttags.vim	/^function! ttags#SelectTags(use_extra, constraints) "{{{3$/;"	f
tui	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^package tui$/;"	p
tui	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^package tui$/;"	p
tui	pack/plugins/start/junegunn-fzf/src/tui/tui.go	/^package tui$/;"	p
tui	pack/plugins/start/junegunn-fzf/src/tui/tui_test.go	/^package tui$/;"	p
u	pack/plugins/start/tpope-vim-repeat.git/autoload/repeat.vim	/^    nmap u <Plug>(RepeatUndo)$/;"	m
uniq	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^  function! s:uniq(list)$/;"	f
unite#sources#tmuxcomplete#define	pack/plugins/start/wellle-tmux-complete/autoload/unite/sources/tmuxcomplete.vim	/^function! unite#sources#tmuxcomplete#define()$/;"	f
unsets	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^    def unsets$/;"	f	class:Shell
until	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def until pane = 0$/;"	f	class:Tmux
updatePlugin	get-plugins.go	/^func updatePlugin(wg *sync.WaitGroup, org, plugin string) {$/;"	f
update_list	pack/plugins/start/junegunn-fzf/fzf	/^  def update_list wipe$/;"	f	class:start_search
update_tags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! s:update_tags(bufno, module, write_mode, queue_mode) abort$/;"	f
upgrade	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:upgrade(dict)$/;"	f
usage	pack/plugins/start/junegunn-fzf/fzf	/^  def usage x, message = nil$/;"	f
usage	pack/plugins/start/junegunn-fzf/src/options.go	/^const usage = `usage: fzf [options]$/;"	c
usage: fzf-tmux [-u|-d [HEIGHT[%]]] [-l|-r [WIDTH[%]]] [--] [FZF OPTIONS]	pack/plugins/start/junegunn-fzf/README.md	/^# usage: fzf-tmux [-u|-d [HEIGHT[%]]] [-l|-r [WIDTH[%]]] [--] [FZF OPTIONS]$/;"	h
util	pack/plugins/start/junegunn-fzf/src/util/atomicbool.go	/^package util$/;"	p
util	pack/plugins/start/junegunn-fzf/src/util/atomicbool_test.go	/^package util$/;"	p
util	pack/plugins/start/junegunn-fzf/src/util/chars.go	/^package util$/;"	p
util	pack/plugins/start/junegunn-fzf/src/util/chars_test.go	/^package util$/;"	p
util	pack/plugins/start/junegunn-fzf/src/util/eventbox.go	/^package util$/;"	p
util	pack/plugins/start/junegunn-fzf/src/util/eventbox_test.go	/^package util$/;"	p
util	pack/plugins/start/junegunn-fzf/src/util/slab.go	/^package util$/;"	p
util	pack/plugins/start/junegunn-fzf/src/util/util.go	/^package util$/;"	p
util	pack/plugins/start/junegunn-fzf/src/util/util_test.go	/^package util$/;"	p
util	pack/plugins/start/junegunn-fzf/src/util/util_unix.go	/^package util$/;"	p
util	pack/plugins/start/junegunn-fzf/src/util/util_windows.go	/^package util$/;"	p
v	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^    nnoremap <expr> <buffer> v &splitright ? "\\<C-w>\\<CR>\\<C-w>L\\<C-w>p\\<C-w>J\\<C-w>p" : "\\<C-w>\\<CR>\\<C-w>H\\<C-w>p\\<C-w>J\\<C-w>p"$/;"	m
v=	pack/plugins/start/junegunn-fzf/fzf	/^    def v= v$/;"	f	class:start_search.MouseEvent
version	pack/plugins/start/junegunn-fzf/fzf	/^    def version$/;"	f
version	pack/plugins/start/junegunn-fzf/src/constants.go	/^	version = "0.15.9"$/;"	c
vim	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^augroup vim-go$/;"	a
vim	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^augroup vim-go-hi$/;"	a
vim-go	pack/plugins/start/fatih-vim-go/README.md	/^# vim-go$/;"	h
vim-qf	pack/plugins/start/romainl-vim-qf/README.md	/^# vim-qf$/;"	h
vim-tmuxify	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^# vim-tmuxify$/;"	h
vmove	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) vmove(o int) {$/;"	f
vselect	pack/plugins/start/junegunn-fzf/fzf	/^  def vselect &prc$/;"	f	class:start_search
vset	pack/plugins/start/junegunn-fzf/src/terminal.go	/^func (t *Terminal) vset(o int) bool {$/;"	f
wait	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^def wait$/;"	f
warn	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:warn(msg)$/;"	f
warn	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:warn(str) abort$/;"	f
width	pack/plugins/start/junegunn-fzf/fzf	/^    def width str$/;"	f	class:usage
win	pack/plugins/start/junegunn-fzf/src/tui/ncurses.go	/^func (w *Window) win() *C.WINDOW {$/;"	f
win	pack/plugins/start/junegunn-fzf/src/tui/tcell.go	/^func (w *Window) win() *WindowTcell {$/;"	f
windowPosition	pack/plugins/start/junegunn-fzf/src/options.go	/^type windowPosition int$/;"	t
winshell	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:winshell() abort$/;"	f
withPrefixLengths	pack/plugins/start/junegunn-fzf/src/tokenizer.go	/^func withPrefixLengths(tokens []util.Chars, begin int) []Token {$/;"	f
within?	pack/plugins/start/junegunn-fzf/fzf	/^    def within?$/;"	f	class:start_search.MouseEvent
words.gather_candidates	pack/plugins/start/wellle-tmux-complete/autoload/unite/sources/tmuxcomplete.vim	/^function! s:words.gather_candidates(args, context)$/;"	f
writeToFile	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:writeToFile(message, file)$/;"	f
write_triggered_update_tags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! s:write_triggered_update_tags(bufno) abort$/;"	f
writelines	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^  def writelines path, lines$/;"	f
xterm_launcher	pack/plugins/start/junegunn-fzf/plugin/fzf.vim	/^function! s:xterm_launcher()$/;"	f
z	pack/plugins/start/justinmk-vim-sneak/plugin/sneak.vim	/^  omap z <Plug>Sneak_s$/;"	m
zsh	pack/plugins/start/junegunn-fzf/test/test_go.rb	/^    def zsh$/;"	f	class:Shell
{	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^nnoremap <silent> <buffer> { :call qf#PreviousFile()<CR>$/;"	m
}	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^nnoremap <silent> <buffer> } :call qf#NextFile()<CR>$/;"	m

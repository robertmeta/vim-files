![Apprentice](http://romainl.github.io/Apprentice/images/logo.png)	pack/colors/start/romainl-apprentice/README.md	/^# ![Apprentice](http:\/\/romainl.github.io\/Apprentice\/images\/logo.png)$/;"	h
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
#	pack/plugins/start/sheerun-vim-polyglot/indent/ps1.vim	/^inoremap # X#$/;"	m
$GOPATH	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let $GOPATH = go#path#Detect()$/;"	v
$GOPATH	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let $GOPATH = old_gopath$/;"	v
$GOPATH	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let $GOPATH = go#path#Detect()$/;"	v
$GOPATH	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let $GOPATH = old_gopath$/;"	v
$GOPATH	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let $GOPATH = go#path#Detect()$/;"	v
$GOPATH	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let $GOPATH = old_gopath$/;"	v
$PYTHONWARNINGS	pack/plugins/start/sheerun-vim-polyglot/compiler/python.vim	/^  let $PYTHONWARNINGS="ignore"$/;"	v
%	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^	nmap <buffer> % <Plug>LatexBox_JumpToMatch$/;"	m
%	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^	omap <buffer> % <Plug>LatexBox_JumpToMatch$/;"	m
%	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^	vmap <buffer> % <Plug>LatexBox_JumpToMatch$/;"	m
%%	vimrc	/^cnoremap %% <c-r>=fnameescape(expand('%'))<cr>$/;"	m
-	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^  nmap - <Plug>VinegarUp$/;"	m
.	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^    nmap . <Plug>(RepeatDot)$/;"	m
.	vimrc	/^vnoremap . :norm.<CR>$/;"	m
1.0 Release Candidate	pack/colors/start/nlknguyen-papercolor-theme/ROADMAP.md	/^# 1.0 Release Candidate$/;"	h
1.10 (November 24, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.10 (November 24, 2016)$/;"	i
1.11 - (January 9, 2017)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.11 - (January 9, 2017)$/;"	i
1.12 - (March 29, 2017)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.12 - (March 29, 2017)$/;"	i
1.6 (April 25, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.6 (April 25, 2016)$/;"	i
1.7 (June 7, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.7 (June 7, 2016)$/;"	i
1.7.1 (June 7, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.7.1 (June 7, 2016)$/;"	i
1.8 (July 31, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.8 (July 31, 2016)$/;"	i
1.9 (September 13, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.9 (September 13, 2016)$/;"	i
256color-ready terminal emulators	pack/colors/start/romainl-apprentice/README.md	/^### 256color-ready terminal emulators$/;"	k
::	vimrc	/^cnoremap :: <c-r>=fnameescape(expand('%:p:h'))<cr>\/$/;"	m
;f	vimrc	/^inoremap <silent> ;f <c-x><c-f>$/;"	m
;i	vimrc	/^inoremap <silent> ;i <c-x><c-i>$/;"	m
;l	vimrc	/^inoremap <silent> ;l <c-x><c-l>$/;"	m
;n	vimrc	/^inoremap <silent> ;n <c-x><c-n>$/;"	m
;o	vimrc	/^inoremap <silent> ;o <c-x><c-o>$/;"	m
;p	vimrc	/^inoremap <silent> ;p <c-x><c-p>$/;"	m
;t	vimrc	/^inoremap <silent> ;t <c-x><c-]>$/;"	m
;u	vimrc	/^inoremap <silent> ;u <c-x><c-u>$/;"	m
<2-leftmouse>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <2-leftmouse> :call <SID>TOCActivate(1)<cr>$/;"	m
<BS>	pack/plugins/start/sheerun-vim-polyglot/indent/elm.vim	/^    inoremap <silent> <BS> <C-R>=<SID>HaskellDedent(1)<CR>$/;"	m
<C-A>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^cnoremap        <C-A> <Home>$/;"	m
<C-A>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^inoremap        <C-A> <C-O>^$/;"	m
<C-B>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^cnoremap        <C-B> <Left>$/;"	m
<C-B>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^inoremap <expr> <C-B> getline('.')=~'^\\s*$'&&col('.')>strlen(getline('.'))?"0\\<Lt>C-D>\\<Lt>Esc>kJs":"\\<Lt>Left>"$/;"	m
<C-D>	pack/plugins/start/sheerun-vim-polyglot/indent/elm.vim	/^    inoremap <silent> <C-D> <C-R>=<SID>HaskellDedent(0)<CR>$/;"	m
<C-D>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^cnoremap <expr> <C-D> getcmdpos()>strlen(getcmdline())?"\\<Lt>C-D>":"\\<Lt>Del>"$/;"	m
<C-D>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^inoremap <expr> <C-D> col('.')>strlen(getline('.'))?"\\<Lt>C-D>":"\\<Lt>Del>"$/;"	m
<C-E>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^inoremap <expr> <C-E> col('.')>strlen(getline('.'))<bar><bar>pumvisible()?"\\<Lt>C-E>":"\\<Lt>End>"$/;"	m
<C-F>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^cnoremap <expr> <C-F> getcmdpos()>strlen(getcmdline())?&cedit:"\\<Lt>Right>"$/;"	m
<C-F>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^inoremap <expr> <C-F> col('.')>strlen(getline('.'))?"\\<Lt>C-F>":"\\<Lt>Right>"$/;"	m
<C-G>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  cmap <script> <C-G> <C-C>$/;"	m
<C-G>S	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^    imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>s	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^    imap      <C-G>s <Plug>Isurround$/;"	m
<C-LeftMouse>	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-LeftMouse> <LeftMouse>:GoDef<cr>$/;"	m
<C-R>	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^    nmap <C-R> <Plug>(RepeatRedo)$/;"	m
<C-S>	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^      imap    <C-S> <Plug>Isurround$/;"	m
<C-T>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^cmap   <script> <C-T> <SID>transposition<SID>transpose$/;"	m
<C-W><C-D>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> <C-W><C-D>  :<C-U>exe <SID>jump('split',v:count)<SID>foldopen<CR>$/;"	m
<C-W>d	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> <C-W>d      :<C-U>exe <SID>jump('split',v:count)<SID>foldopen<CR>$/;"	m
<C-X><C-A>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^cnoremap   <C-X><C-A> <C-A>$/;"	m
<C-X><C-A>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^inoremap   <C-X><C-A> <C-A>$/;"	m
<C-]>	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-]> :GoDef<cr>$/;"	m
<C-t>	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-t> :<C-U>call go#def#StackPop(v:count1)<cr>$/;"	m
<C-w><C-]>	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-w><C-]> :<C-u>call go#def#Jump("split")<CR>$/;"	m
<C-w>]	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-w>] :<C-u>call go#def#Jump("split")<CR>$/;"	m
<CR>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <CR> :call <SID>TOCActivate(1)<CR>$/;"	m
<D-R>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^nnoremap <buffer> <D-R> :RustRun! <C-r>=join(b:rust_last_rustc_args)<CR><C-\\>erust#AppendCmdLine(' -- ' . join(b:rust_last_args))<CR>$/;"	m
<D-r>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^nnoremap <silent> <buffer> <D-r> :RustRun<CR>$/;"	m
<Esc>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <Esc> :call <SID>TOCClose()<CR>$/;"	m
<Esc>OA	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <Esc>OA k$/;"	m
<Esc>OB	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <Esc>OB j$/;"	m
<Esc>OC	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <Esc>OC l$/;"	m
<Esc>OD	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <Esc>OD h$/;"	m
<F2>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/r.vim	/^noremap <buffer> <F2> :!xterm -T 'R' -e funnel.pl ~\/.r-pipe "R && echo -e 'Interpreter has finished. Exiting. Goodbye.\\n'"&<CR><CR>$/;"	m
<F2>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rhelp.vim	/^noremap <buffer> <F2> :!xterm -T 'R' -e funnel.pl ~\/.r-pipe "R && echo -e 'Interpreter has finished. Exiting. Goodbye.\\n'"&<CR><CR>$/;"	m
<F2>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rnoweb.vim	/^noremap <buffer> <F2> :!xterm -T 'R' -e funnel.pl ~\/.r-pipe "R && echo -e 'Interpreter has finished. Exiting. Goodbye.\\n'"&<CR><CR>$/;"	m
<F31>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map <F31> <M-d>$/;"	m
<F31>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map! <F31> <M-d>$/;"	m
<F32>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map <F32> <M-n>$/;"	m
<F32>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map! <F32> <M-n>$/;"	m
<F33>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map <F33> <M-p>$/;"	m
<F33>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map! <F33> <M-p>$/;"	m
<F34>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map <F34> <M-BS>$/;"	m
<F34>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map! <F34> <M-BS>$/;"	m
<F35>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map <F35> <M-BS>$/;"	m
<F35>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map! <F35> <M-BS>$/;"	m
<F3>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/r.vim	/^noremap <buffer> <F3> :!xterm -T 'R' -e funnel.pl ~\/.r-pipe "R-devel && echo 'Interpreter has finished. Exiting. Goodbye.'"&<CR><CR>$/;"	m
<F4>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/r.vim	/^noremap <buffer> <F4> :!xterm -T 'R' -e funnel.pl ~\/.r-pipe "R -vanilla && echo 'Interpreter has finished. Exiting. Goodbye.'"&<CR><CR>$/;"	m
<F5>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/r.vim	/^noremap <buffer> <F5> :execute '1 ,' line("$") 'w >> ~\/.r-pipe' <CR><CR>$/;"	m
<F9>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/r.vim	/^inoremap <buffer> <F9> <Esc> :execute line(".") 'w >> ~\/.r-pipe'<CR>$/;"	m
<F9>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/r.vim	/^noremap <buffer> <F9> :execute line(".") 'w >> ~\/.r-pipe'<CR>$/;"	m
<F9>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rhelp.vim	/^inoremap <buffer> <F9> <Esc> :execute line(".") 'w >> ~\/.r-pipe'<CR>$/;"	m
<F9>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rhelp.vim	/^noremap <buffer> <F9> :execute line(".") 'w >> ~\/.r-pipe'<CR>$/;"	m
<F9>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rnoweb.vim	/^inoremap <buffer> <F9> <Esc> :execute line(".") 'w >> ~\/.r-pipe'<CR>$/;"	m
<F9>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rnoweb.vim	/^noremap <buffer> <F9> :execute line(".") 'w >> ~\/.r-pipe'<CR>$/;"	m
<Leader>fr	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>fr :FufFile <c-r>=scala#GetRootDirForFuzzyFinder('%:p:h')<cr><cr>$/;"	m
<Leader>fs	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>fs :FufFile <c-r>=scala#GetMainDirForFuzzyFinder('%:p:h')<cr><cr>$/;"	m
<Leader>ft	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>ft :FufFile <c-r>=scala#GetTestDirForFuzzyFinder('%:p:h')<cr><cr>$/;"	m
<Leader>hp	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hp <Plug>GitGutterPreviewHunk$/;"	m
<Leader>hr	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hr <Plug>GitGutterUndoHunk:echomsg '<Leader>hr is deprecated. Use <Leader>hu'<CR>$/;"	m
<Leader>hs	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hs <Plug>GitGutterStageHunk$/;"	m
<Leader>hu	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hu <Plug>GitGutterUndoHunk$/;"	m
<Leader>rf	pack/plugins/start/sheerun-vim-polyglot/ftplugin/textile.vim	/^noremap <buffer> <Leader>rf :TextileRenderFile<CR>$/;"	m
<Leader>rp	pack/plugins/start/sheerun-vim-polyglot/ftplugin/textile.vim	/^noremap <buffer> <Leader>rp :TextilePreview<CR>$/;"	m
<Leader>rt	pack/plugins/start/sheerun-vim-polyglot/ftplugin/textile.vim	/^noremap <buffer> <Leader>rt :TextileRenderTab<CR>$/;"	m
<LocalLeader>C	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^    nmap <buffer> <LocalLeader>C <Plug>LUncomOff$/;"	m
<LocalLeader>C	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^    vmap <buffer> <LocalLeader>C <Plug>BUncomOff$/;"	m
<LocalLeader>S	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  map <LocalLeader>S :call OCaml_switch(1)<CR>$/;"	m
<LocalLeader>c	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^    nmap <buffer> <LocalLeader>c <Plug>LUncomOn$/;"	m
<LocalLeader>c	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^    vmap <buffer> <LocalLeader>c <Plug>BUncomOn$/;"	m
<LocalLeader>d	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^map <LocalLeader>d :call OCamlGotoDefinition("normal")<RETURN>$/;"	m
<LocalLeader>d	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^vmap <LocalLeader>d :call OCamlGotoDefinition("visual")<RETURN>$/;"	m
<LocalLeader>lC	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>lC :LatexmkClean!<CR>$/;"	m
<LocalLeader>lG	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>lG :LatexmkStatus!<CR>$/;"	m
<LocalLeader>lL	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>lL :Latexmk!<CR>$/;"	m
<LocalLeader>lc	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>lc :LatexmkClean<CR>$/;"	m
<LocalLeader>le	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>le :LatexErrors<CR>$/;"	m
<LocalLeader>lf	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^	noremap <buffer> <LocalLeader>lf :LatexFold<CR>$/;"	m
<LocalLeader>lg	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>lg :LatexmkStatus<CR>$/;"	m
<LocalLeader>lj	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <silent> <buffer> <LocalLeader>lj :LatexLabels<CR>$/;"	m
<LocalLeader>lk	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>lk :LatexmkStop<CR>$/;"	m
<LocalLeader>ll	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>ll :Latexmk<CR>$/;"	m
<LocalLeader>lt	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <silent> <buffer> <LocalLeader>lt :LatexTOC<CR>$/;"	m
<LocalLeader>lv	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>lv :LatexView<CR>$/;"	m
<LocalLeader>s	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  map <LocalLeader>s :call OCaml_switch(0)<CR>$/;"	m
<LocalLeader>t	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^map <LocalLeader>t :call OCamlPrintType("normal")<RETURN>$/;"	m
<LocalLeader>t	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^vmap <LocalLeader>t :call OCamlPrintType("visual")<RETURN>$/;"	m
<M-BS>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap!        <M-BS> <C-W>$/;"	m
<M-Enter>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/r.vim	/^inoremap <M-Enter> <Esc>:execute line(".") 'w >> ~\/.r-pipe'<CR>o$/;"	m
<M-Enter>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rhelp.vim	/^inoremap <M-Enter> <Esc>:execute line(".") 'w >> ~\/.r-pipe'<CR>o$/;"	m
<M-Enter>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rnoweb.vim	/^inoremap <M-Enter> <Esc>:execute line(".") 'w >> ~\/.r-pipe'<CR>o$/;"	m
<M-b>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap!        <M-b> <S-Left>$/;"	m
<M-d>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^cnoremap        <M-d> <S-Right><C-W>$/;"	m
<M-d>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap!        <M-d> <C-O>dw$/;"	m
<M-f>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap!        <M-f> <S-Right>$/;"	m
<M-n>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap!        <M-n> <Down>$/;"	m
<M-p>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap!        <M-p> <Up>$/;"	m
<P	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <P :call <SID>putline('[p', 'Above')<CR><']$/;"	m
<Plug>(RepeatDot)	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatDot)      :<C-U>exe repeat#run(v:count)<CR>$/;"	m
<Plug>(RepeatRedo)	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatRedo)     :<C-U>call repeat#wrap("\\<Lt>C-R>",v:count)<CR>$/;"	m
<Plug>(RepeatUndo)	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatUndo)     :<C-U>call repeat#wrap('u',v:count)<CR>$/;"	m
<Plug>(RepeatUndoLine)	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatUndoLine) :<C-U>call repeat#wrap('U',v:count)<CR>$/;"	m
<Plug>(crystal-format)	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^nnoremap <Plug>(crystal-format) :<C-u>CrystalFormat<CR>$/;"	m
<Plug>(crystal-jump-to-definition)	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^nnoremap <Plug>(crystal-jump-to-definition) :<C-u>CrystalDef<CR>$/;"	m
<Plug>(crystal-show-context)	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^nnoremap <Plug>(crystal-show-context) :<C-u>CrystalContext<CR>$/;"	m
<Plug>(crystal-spec-run-all)	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^nnoremap <Plug>(crystal-spec-run-all) :<C-u>CrystalSpecRunAll<CR>$/;"	m
<Plug>(crystal-spec-run-current)	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^nnoremap <Plug>(crystal-spec-run-current) :<C-u>CrystalSpecRunCurrent<CR>$/;"	m
<Plug>(crystal-spec-switch)	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^nnoremap <Plug>(crystal-spec-switch) :<C-u>CrystalSpecSwitch<CR>$/;"	m
<Plug>(go-alternate-edit)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-alternate-edit) :<C-u>call go#alternate#Switch(0, "edit")<CR>$/;"	m
<Plug>(go-alternate-split)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-alternate-split) :<C-u>call go#alternate#Switch(0, "split")<CR>$/;"	m
<Plug>(go-alternate-vertical)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-alternate-vertical) :<C-u>call go#alternate#Switch(0, "vsplit")<CR>$/;"	m
<Plug>(go-build)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-build) :<C-u>call go#cmd#Build(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-callees)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-callees) :<C-u>call go#guru#Callees(-1)<CR>$/;"	m
<Plug>(go-callers)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-callers) :<C-u>call go#guru#Callers(-1)<CR>$/;"	m
<Plug>(go-callstack)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-callstack) :<C-u>call go#guru#Callstack(-1)<CR>$/;"	m
<Plug>(go-channelpeers)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-channelpeers) :<C-u>call go#guru#ChannelPeers(-1)<CR>$/;"	m
<Plug>(go-coverage)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage) :<C-u>call go#coverage#Buffer(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-coverage-browser)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage-browser) :<C-u>call go#coverage#Browser(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-coverage-clear)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage-clear) :<C-u>call go#coverage#Clear()<CR>$/;"	m
<Plug>(go-coverage-toggle)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage-toggle) :<C-u>call go#coverage#BufferToggle(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-def)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def) :<C-u>call go#def#Jump('')<CR>$/;"	m
<Plug>(go-def-pop)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-pop) :<C-u>call go#def#StackPop()<CR>$/;"	m
<Plug>(go-def-split)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-split) :<C-u>call go#def#Jump("split")<CR>$/;"	m
<Plug>(go-def-stack)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-stack) :<C-u>call go#def#Stack()<CR>$/;"	m
<Plug>(go-def-stack-clear)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-stack-clear) :<C-u>call go#def#StackClear()<CR>$/;"	m
<Plug>(go-def-tab)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-tab) :<C-u>call go#def#Jump("tab")<CR>$/;"	m
<Plug>(go-def-vertical)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-vertical) :<C-u>call go#def#Jump("vsplit")<CR>$/;"	m
<Plug>(go-deps)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-deps) :<C-u>call go#tool#Deps()<CR>$/;"	m
<Plug>(go-describe)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-describe) :<C-u>call go#guru#Describe(-1)<CR>$/;"	m
<Plug>(go-doc)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc) :<C-u>call go#doc#Open("new", "split")<CR>$/;"	m
<Plug>(go-doc-browser)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-browser) :<C-u>call go#doc#OpenBrowser()<CR>$/;"	m
<Plug>(go-doc-split)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-split) :<C-u>call go#doc#Open("new", "split")<CR>$/;"	m
<Plug>(go-doc-tab)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-tab) :<C-u>call go#doc#Open("tabnew", "tabe")<CR>$/;"	m
<Plug>(go-doc-vertical)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-vertical) :<C-u>call go#doc#Open("vnew", "vsplit")<CR>$/;"	m
<Plug>(go-files)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-files) :<C-u>call go#tool#Files()<CR>$/;"	m
<Plug>(go-generate)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-generate) :<C-u>call go#cmd#Generate(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-implements)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-implements) :<C-u>call go#guru#Implements(-1)<CR>$/;"	m
<Plug>(go-import)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-import) :<C-u>call go#import#SwitchImport(1, '', expand('<cword>'), '')<CR>$/;"	m
<Plug>(go-imports)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-imports) :<C-u>call go#fmt#Format(1)<CR>$/;"	m
<Plug>(go-info)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-info) :<C-u>call go#tool#Info(0)<CR>$/;"	m
<Plug>(go-install)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-install) :<C-u>call go#cmd#Install(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-lint)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-lint) :<C-u>call go#lint#Golint()<CR>$/;"	m
<Plug>(go-metalinter)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-metalinter) :<C-u>call go#lint#Gometa(0)<CR>$/;"	m
<Plug>(go-referrers)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-referrers) :<C-u>call go#guru#Referrers(-1)<CR>$/;"	m
<Plug>(go-rename)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-rename) :<C-u>call go#rename#Rename(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-run)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-run) :<C-u>call go#cmd#Run(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-run-split)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^  nnoremap <silent> <Plug>(go-run-split) :<C-u>call go#cmd#RunTerm(!g:go_jump_to_error, 'split', [])<CR>$/;"	m
<Plug>(go-run-tab)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^  nnoremap <silent> <Plug>(go-run-tab) :<C-u>call go#cmd#RunTerm(!g:go_jump_to_error, 'tabe', [])<CR>$/;"	m
<Plug>(go-run-vertical)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^  nnoremap <silent> <Plug>(go-run-vertical) :<C-u>call go#cmd#RunTerm(!g:go_jump_to_error, 'vsplit', [])<CR>$/;"	m
<Plug>(go-sameids)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-sameids) :<C-u>call go#guru#SameIds()<CR>$/;"	m
<Plug>(go-sameids-toggle)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-sameids-toggle) :<C-u>call go#guru#ToggleSameIds()<CR>$/;"	m
<Plug>(go-test)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test) :<C-u>call go#cmd#Test(!g:go_jump_to_error, 0)<CR>$/;"	m
<Plug>(go-test-compile)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test-compile) :<C-u>call go#cmd#Test(!g:go_jump_to_error, 1)<CR>$/;"	m
<Plug>(go-test-func)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test-func) :<C-u>call go#cmd#TestFunc(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-vet)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-vet) :<C-u>call go#lint#Vet(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-whicherrs)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-whicherrs) :<C-u>call go#guru#Whicherrs(-1)<CR>$/;"	m
<Plug>(qf_loc_next)	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>(qf_loc_next)     :<C-u> call qf#wrap#WrapCommand('down', 'l')<CR>$/;"	m
<Plug>(qf_loc_previous)	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>(qf_loc_previous) :<C-u> call qf#wrap#WrapCommand('up', 'l')<CR>$/;"	m
<Plug>(qf_loc_toggle)	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>(qf_loc_toggle)      :<C-u> call qf#toggle#ToggleLocWindow(0)<CR>$/;"	m
<Plug>(qf_loc_toggle_stay)	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>(qf_loc_toggle_stay) :<C-u> call qf#toggle#ToggleLocWindow(1)<CR>$/;"	m
<Plug>(qf_qf_next)	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>(qf_qf_next)     :<C-u> call qf#wrap#WrapCommand('down', 'c')<CR>$/;"	m
<Plug>(qf_qf_previous)	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>(qf_qf_previous) :<C-u> call qf#wrap#WrapCommand('up', 'c')<CR>$/;"	m
<Plug>(qf_qf_switch)	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <expr><silent> <Plug>(qf_qf_switch) &filetype ==# 'qf' ? '<C-w>p' : '<C-w>b'$/;"	m
<Plug>(qf_qf_toggle)	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>(qf_qf_toggle)       :<C-u> call qf#toggle#ToggleQfWindow(0)<CR>$/;"	m
<Plug>(qf_qf_toggle_stay)	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>(qf_qf_toggle_stay)  :<C-u> call qf#toggle#ToggleQfWindow(1)<CR>$/;"	m
<Plug>(quickhl-cword-disable)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-cword-disable) :call quickhl#cword#disable()<CR>$/;"	m
<Plug>(quickhl-cword-enable)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-cword-enable)  :call quickhl#cword#enable()<CR>$/;"	m
<Plug>(quickhl-cword-toggle)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-cword-toggle)  :call quickhl#cword#toggle()<CR>$/;"	m
<Plug>(quickhl-manual-reset)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-manual-reset)  :call quickhl#manual#reset()<CR>$/;"	m
<Plug>(quickhl-manual-reset)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^vnoremap <silent> <Plug>(quickhl-manual-reset)  :call quickhl#manual#reset()<CR>$/;"	m
<Plug>(quickhl-manual-this)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-manual-this) :call quickhl#manual#this('n')<CR>$/;"	m
<Plug>(quickhl-manual-this)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^vnoremap <silent> <Plug>(quickhl-manual-this) :call quickhl#manual#this('v')<CR>$/;"	m
<Plug>(quickhl-manual-toggle)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-manual-toggle) :call quickhl#manual#lock_toggle()<CR>$/;"	m
<Plug>(quickhl-manual-toggle)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^vnoremap <silent> <Plug>(quickhl-manual-toggle) :call quickhl#manual#lock_toggle()<CR>$/;"	m
<Plug>(quickhl-tag-disable)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-tag-disable)    :call quickhl#tag#disable()<CR>$/;"	m
<Plug>(quickhl-tag-enable)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-tag-enable)     :call quickhl#tag#enable()<CR>$/;"	m
<Plug>(quickhl-tag-toggle)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-tag-toggle)     :call quickhl#tag#toggle()<CR>$/;"	m
<Plug><cfile>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^cmap <buffer><script><expr> <Plug><cfile> substitute(RubyCursorFile(),'^$',"\\022\\006",'')$/;"	m
<Plug><cword>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^cmap <buffer><script><expr> <Plug><cword> substitute(RubyCursorIdentifier(),'^$',"\\022\\027",'')$/;"	m
<Plug>BUncomOff	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  vnoremap <buffer> <Plug>BUncomOff <ESC>:'<,'><CR>`<dd`>dd`<$/;"	m
<Plug>BUncomOn	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  vnoremap <buffer> <Plug>BUncomOn <ESC>:'<,'><CR>`<O<ESC>0i(*<ESC>`>o<ESC>0i*)<ESC>`<$/;"	m
<Plug>CSurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>CSurround  :<C-U>call <SID>changesurround(1)<CR>$/;"	m
<Plug>ChangeCommentary	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>ChangeCommentary c:<C-U>call <SID>textobject(1)<CR>$/;"	m
<Plug>Coerce	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^nnoremap <silent> <Plug>Coerce :<C-U>call <SID>coerce(nr2char(getchar()))<CR>$/;"	m
<Plug>Commentary	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>Commentary     :<C-U>set opfunc=<SID>go<CR>g@$/;"	m
<Plug>Commentary	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^onoremap <silent> <Plug>Commentary        :<C-U>call <SID>textobject(0)<CR>$/;"	m
<Plug>CommentaryLine	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>CommentaryLine :<C-U>set opfunc=<SID>go<Bar>exe 'norm! 'v:count1.'g@_'<CR>$/;"	m
<Plug>CommentaryUndo	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^nmap <silent> <Plug>CommentaryUndo <Plug>Commentary<Plug>Commentary$/;"	m
<Plug>Csurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>Dsurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>GitGutterNextHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterNextHunk &diff ? ']c' : ":\\<C-U>execute v:count1 . 'GitGutterNextHunk'\\<CR>"$/;"	m
<Plug>GitGutterPrevHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterPrevHunk &diff ? '[c' : ":\\<C-U>execute v:count1 . 'GitGutterPrevHunk'\\<CR>"$/;"	m
<Plug>GitGutterPreviewHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterPreviewHunk :GitGutterPreviewHunk<CR>$/;"	m
<Plug>GitGutterStageHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterStageHunk   :GitGutterStageHunk<CR>$/;"	m
<Plug>GitGutterTextObjectInnerPending	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>GitGutterTextObjectInnerPending :<C-U>call gitgutter#hunk#text_object(1)<CR>$/;"	m
<Plug>GitGutterTextObjectOuterPending	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>GitGutterTextObjectOuterPending :<C-U>call gitgutter#hunk#text_object(0)<CR>$/;"	m
<Plug>GitGutterUndoHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterUndoHunk    :GitGutterUndoHunk<CR>$/;"	m
<Plug>ISurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>Isurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>LUncomOff	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOff :s\/^(\\* \\(.*\\) \\*)\/\\1\/<CR>:noh<CR>$/;"	m
<Plug>LUncomOn	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOn mz0i(* <ESC>$A *)<ESC>`z$/;"	m
<Plug>LatexBox_JumpToMatch	:call	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^nnoremap <silent> <Plug>LatexBox_JumpToMatch	:call <SID>FindMatchingPair('n')<CR>$/;"	m
<Plug>LatexBox_JumpToMatch	:call	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^vnoremap <silent> <Plug>LatexBox_JumpToMatch	:call <SID>FindMatchingPair('v')<CR>$/;"	m
<Plug>LatexBox_JumpToMatch	v:call	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^onoremap <silent> <Plug>LatexBox_JumpToMatch	v:call <SID>FindMatchingPair('o')<CR>$/;"	m
<Plug>LatexBox_SelectCurrentEnvInner	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^vnoremap <silent> <Plug>LatexBox_SelectCurrentEnvInner :<C-U>call <SID>SelectCurrentEnv('inner')<CR>$/;"	m
<Plug>LatexBox_SelectCurrentEnvOuter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^vnoremap <silent> <Plug>LatexBox_SelectCurrentEnvOuter :<C-U>call <SID>SelectCurrentEnv('outer')<CR>$/;"	m
<Plug>LatexBox_SelectInlineMathInner	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^vnoremap <silent> <Plug>LatexBox_SelectInlineMathInner$/;"	m
<Plug>LatexBox_SelectInlineMathOuter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^vnoremap <silent> <Plug>LatexBox_SelectInlineMathOuter$/;"	m
<Plug>LatexChangeEnv				:call	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^nnoremap <silent> <Plug>LatexChangeEnv				:call <SID>ChangeEnvPrompt()<CR>$/;"	m
<Plug>LatexCloseCurEnv			<C-R>=<SID>CloseCurEnv()<CR>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^inoremap <silent> <Plug>LatexCloseCurEnv			<C-R>=<SID>CloseCurEnv()<CR>$/;"	m
<Plug>LatexEnvWrapFmtSelection	:<c-u>call	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^vnoremap <silent> <Plug>LatexEnvWrapFmtSelection	:<c-u>call <SID>PromptEnvWrapSelection(1)<CR>$/;"	m
<Plug>LatexEnvWrapSelection		:<c-u>call	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^vnoremap <silent> <Plug>LatexEnvWrapSelection		:<c-u>call <SID>PromptEnvWrapSelection()<CR>$/;"	m
<Plug>LatexToggleStarEnv			:call	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^nnoremap <silent> <Plug>LatexToggleStarEnv			:call <SID>LatexToggleStarEnv()<CR>$/;"	m
<Plug>LatexWrapSelection			:<c-u>call	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^vnoremap <silent> <Plug>LatexWrapSelection			:<c-u>call <SID>WrapSelection('')<CR>i$/;"	m
<Plug>QfCnext	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>QfCnext          :<C-u> call qf#wrap#WrapCommand('down', 'c')<CR>$/;"	m
<Plug>QfCprevious	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>QfCprevious      :<C-u> call qf#wrap#WrapCommand('up', 'c')<CR>$/;"	m
<Plug>QfCtoggle	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>QfCtoggle        :<C-u> call qf#toggle#ToggleQfWindow(0)<CR>$/;"	m
<Plug>QfLnext	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>QfLnext          :<C-u> call qf#wrap#WrapCommand('down', 'l')<CR>$/;"	m
<Plug>QfLprevious	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>QfLprevious      :<C-u> call qf#wrap#WrapCommand('up', 'l')<CR>$/;"	m
<Plug>QfLtoggle	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <Plug>QfLtoggle        :<C-u> call qf#toggle#ToggleLocWindow(0)<CR>$/;"	m
<Plug>QfSwitch	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <expr><silent> <Plug>QfSwitch   &filetype ==# 'qf' ? '<C-w>p' : '<C-w>b'$/;"	m
<Plug>QlistDefinefromhere	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^nnoremap <silent> <Plug>QlistDefinefromhere        :call <sid>Qlist("d", 0, 1, 0)<CR>$/;"	m
<Plug>QlistDefinefromtop	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^nnoremap <silent> <Plug>QlistDefinefromtop         :call <sid>Qlist("d", 0, 0, 0)<CR>$/;"	m
<Plug>QlistIncludefromhere	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^nnoremap <silent> <Plug>QlistIncludefromhere       :call <sid>Qlist("i", 0, 1, 0)<CR>$/;"	m
<Plug>QlistIncludefromtop	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^nnoremap <silent> <Plug>QlistIncludefromtop        :call <sid>Qlist("i", 0, 0, 0)<CR>$/;"	m
<Plug>SurroundRepeat	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>SurroundRepeat .$/;"	m
<Plug>VSurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>$/;"	m
<Plug>VgSurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>$/;"	m
<Plug>VinegarSplitUp	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^nnoremap <silent> <Plug>VinegarSplitUp :call <SID>opendir('split')<CR>$/;"	m
<Plug>VinegarTabUp	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^nnoremap <silent> <Plug>VinegarTabUp :call <SID>opendir('tabedit')<CR>$/;"	m
<Plug>VinegarUp	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^nnoremap <silent> <Plug>VinegarUp :call <SID>opendir('edit')<CR>$/;"	m
<Plug>VinegarVerticalSplitUp	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^nnoremap <silent> <Plug>VinegarVerticalSplitUp :call <SID>opendir('vsplit')<CR>$/;"	m
<Plug>YSsurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSsurround :<C-U>call <SID>opfunc2(v:count1)<CR>$/;"	m
<Plug>YSurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSurround  :<C-U>set opfunc=<SID>opfunc2<CR>g@$/;"	m
<Plug>Yssurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Yssurround :<C-U>call <SID>opfunc(v:count1)<CR>$/;"	m
<Plug>Ysurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Ysurround  :<C-U>set opfunc=<SID>opfunc<CR>g@$/;"	m
<Plug>unimpairedBlankDown	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedBlankDown :<C-U>call <SID>BlankDown(v:count1)<CR>$/;"	m
<Plug>unimpairedBlankUp	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedBlankUp   :<C-U>call <SID>BlankUp(v:count1)<CR>$/;"	m
<Plug>unimpairedContextNext	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedContextNext     :call <SID>Context(0)<CR>$/;"	m
<Plug>unimpairedContextNext	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^onoremap <silent> <Plug>unimpairedContextNext     :call <SID>ContextMotion(0)<CR>$/;"	m
<Plug>unimpairedContextPrevious	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedContextPrevious :call <SID>Context(1)<CR>$/;"	m
<Plug>unimpairedContextPrevious	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^onoremap <silent> <Plug>unimpairedContextPrevious :call <SID>ContextMotion(1)<CR>$/;"	m
<Plug>unimpairedDirectoryNext	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedDirectoryNext     :<C-U>edit <C-R>=fnamemodify(<SID>fnameescape(<SID>FileByOffset(v:count1)), ':.')<CR><CR>$/;"	m
<Plug>unimpairedDirectoryPrevious	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedDirectoryPrevious :<C-U>edit <C-R>=fnamemodify(<SID>fnameescape(<SID>FileByOffset(-v:count1)), ':.')<CR><CR>$/;"	m
<Plug>unimpairedMoveDown	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedMoveDown          :<C-U>call <SID>Move('+',v:count1,'Down')<CR>$/;"	m
<Plug>unimpairedMoveSelectionDown	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^noremap  <silent> <Plug>unimpairedMoveSelectionDown :<C-U>call <SID>MoveSelectionDown(v:count1)<CR>$/;"	m
<Plug>unimpairedMoveSelectionUp	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^noremap  <silent> <Plug>unimpairedMoveSelectionUp   :<C-U>call <SID>MoveSelectionUp(v:count1)<CR>$/;"	m
<Plug>unimpairedMoveUp	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedMoveUp            :<C-U>call <SID>Move('--',v:count1,'Up')<CR>$/;"	m
<Plug>unimpairedONext	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nmap <silent> <Plug>unimpairedONext     <Plug>unimpairedDirectoryNext:echohl WarningMSG<Bar>echo "]o is deprecated. Use ]f"<Bar>echohl NONE<CR>$/;"	m
<Plug>unimpairedOPrevious	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nmap <silent> <Plug>unimpairedOPrevious <Plug>unimpairedDirectoryPrevious:echohl WarningMSG<Bar>echo "[o is deprecated. Use [f"<Bar>echohl NONE<CR>$/;"	m
<Plug>unimpairedPaste	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedPaste :call <SID>setup_paste()<CR>$/;"	m
<Plug>unimpairedPutAbove	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedPutAbove :call <SID>putline('[p', 'Above')<CR>$/;"	m
<Plug>unimpairedPutBelow	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedPutBelow :call <SID>putline(']p', 'Below')<CR>$/;"	m
<SID>:	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  nmap <buffer><script> <SID>:  :<C-U>$/;"	m
<SID>:	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^nnoremap <SID>: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>c:	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  nmap <buffer><script> <SID>c: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>foldopen	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^  cnoremap <SID>foldopen <Bar>if &foldopen =~# 'tag'<Bar>exe 'norm! zv'<Bar>endif$/;"	m
<SID>tagzv	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  cmap <buffer><script><expr> <SID>tagzv &foldopen =~# 'tag' ? '<Bar>norm! zv' : ''$/;"	m
<SID>transpose	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap! <expr> <SID>transpose "\\<BS>\\<Right>".matchstr(getcmdline()[0 : getcmdpos()-2], '.$')$/;"	m
<SID>transposition	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap! <expr> <SID>transposition getcmdpos()>strlen(getcmdline())?"\\<Left>":getcmdpos()>1?'':"\\<Right>"$/;"	m
<Space>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <Space> :call <SID>TOCActivate(0)<CR>$/;"	m
<backspace>	vimrc	/^nnoremap <silent> <backspace> :noh<cr>:QuickhlManualReset<cr>$/;"	m
<c-h>	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    imap <unique> <c-h> <plug>(MUcompleteCycBwd)$/;"	m
<c-j>	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    imap <unique> <c-j> <plug>(MUcompleteCycFwd)$/;"	m
<c-r><c-l>	vimrc	/^cnoremap <c-r><c-l> <c-r>=getline('.')<cr>$/;"	m
<down>	vimrc	/^nmap <silent> <down>  <esc>:cnext<cr>$/;"	m
<f5>	vimrc	/^inoremap <f5> <c-r>=strftime("%c")<cr>$/;"	m
<f5>	vimrc	/^nnoremap <f5> "=strftime("%c")<cr>P$/;"	m
<f9>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/racket.vim	/^nnoremap <buffer> <f9> :!racket -t %<cr>$/;"	m
<leader>"	vimrc	/^nnoremap <leader>" :split<cr>$/;"	m
<leader>%	vimrc	/^nnoremap <leader>% :vsplit<cr>$/;"	m
<leader>A	vimrc	/^nnoremap <leader>A :argadd **\/*$/;"	m
<leader>B	vimrc	/^nnoremap <leader>B :ls<cr>:b<space>$/;"	m
<leader>G	vimrc	/^nnoremap <leader>G :grep <c-r><c-w><cr>$/;"	m
<leader>R	vimrc	/^nnoremap <leader>R :TxSetRunCmd!<cr>$/;"	m
<leader>S	vimrc	/^nnoremap <leader>S :QuickhlManualAdd<space>$/;"	m
<leader>W	vimrc	/^nnoremap <leader>W <c-w>W$/;"	m
<leader>a	vimrc	/^nnoremap <leader>a :argadd <c-r>=fnameescape(expand('%:p:h'))<cr>\/*<C-d>$/;"	m
<leader>b	vimrc	/^nnoremap <leader>b :b <C-d>$/;"	m
<leader>c	vimrc	/^nnoremap <leader>c <esc>:close<cr>$/;"	m
<leader>e	vimrc	/^nnoremap <leader>e :e <c-r>=fnameescape(expand('%:p:h'))<cr>\/*<C-d>$/;"	m
<leader>f	vimrc	/^nnoremap <leader>f :find *$/;"	m
<leader>g	vimrc	/^nnoremap <leader>g :grep<space>$/;"	m
<leader>i	vimrc	/^nnoremap <leader>i :Ilist<space>$/;"	m
<leader>m	vimrc	/^nnoremap <leader>m :make<cr>$/;"	m
<leader>o	vimrc	/^nnoremap <leader>o <c-w>o$/;"	m
<leader>p	vimrc	/^nnoremap <leader>p :find *$/;"	m
<leader>q	vimrc	/^nnoremap <leader>q :b#<cr>$/;"	m
<leader>r	vimrc	/^nnoremap <leader>r :TxRun!<cr>$/;"	m
<leader>s	vimrc	/^nmap <leader>s <Plug>(quickhl-manual-this)$/;"	m
<leader>t	vimrc	/^nnoremap <leader>t :ltag<space>\/ \\| lop<left><left><left><left><left><left>$/;"	m
<leader>vs	vimrc	/^nnoremap <leader>vs :<C-u>let @z=&so<cr>:set so=0 noscb<cr>:bo vs<cr>Ljzt:setl scb<cr><C-w>p:setl scb<cr>:let &so=@z<cr>$/;"	m
<leader>w	vimrc	/^nnoremap <leader>w <c-w>w$/;"	m
<leader>x	vimrc	/^nnoremap <leader>x :TxSigInt!<cr>$/;"	m
<leader>z	vimrc	/^nnoremap <leader>z :call ToggleFolds()<cr>$/;"	m
<left>	vimrc	/^nmap <silent> <left> <esc>:lprev<cr>$/;"	m
<leftrelease>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <leftrelease> :call <SID>TOCActivate(0)<cr>$/;"	m
<p	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <p :call <SID>putline(']p', 'Below')<CR><']$/;"	m
<plug>(MUcompleteBwd)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^imap <expr> <silent> <plug>(MUcompleteBwd) mucomplete#tab_complete(-1)$/;"	m
<plug>(MUcompleteBwdKey)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    inoremap <silent> <plug>(MUcompleteBwdKey) <c-h>$/;"	m
<plug>(MUcompleteCtd)	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^inoremap <silent>        <plug>(MUcompleteCtd) <c-d>$/;"	m
<plug>(MUcompleteCycBwd)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^imap <expr> <silent> <plug>(MUcompleteCycBwd) mucomplete#cycle(-1)$/;"	m
<plug>(MUcompleteCycFwd)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^imap <expr> <silent> <plug>(MUcompleteCycFwd) mucomplete#cycle( 1)$/;"	m
<plug>(MUcompleteFwd)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^imap <expr> <silent> <plug>(MUcompleteFwd) mucomplete#tab_complete( 1)$/;"	m
<plug>(MUcompleteFwdKey)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    inoremap <silent> <plug>(MUcompleteFwdKey) <c-j>$/;"	m
<plug>(MUcompleteOut)	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^inoremap <silent>        <plug>(MUcompleteOut) <c-g><c-g>$/;"	m
<plug>(MUcompleteTab)	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^inoremap <silent>        <plug>(MUcompleteTab) <tab>$/;"	m
<plug>(MUcompleteTry)	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^imap     <silent> <expr> <plug>(MUcompleteTry) <sid>try_completion()$/;"	m
<plug>(MUcompleteVerify)	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^imap     <silent> <expr> <plug>(MUcompleteVerify) <sid>verify_completion()$/;"	m
<right>	vimrc	/^nmap <silent> <right> <esc>:lnext<cr>$/;"	m
<s-tab>	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    imap <unique> <s-tab> <plug>(MUcompleteBwd)$/;"	m
<space>	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/terraform.vim	/^nnoremap <space> za$/;"	m
<space>	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/terraform.vim	/^onoremap <space> <C-C>za$/;"	m
<space>	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/terraform.vim	/^vnoremap <space> zf$/;"	m
<tab>	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    imap <unique> <tab> <plug>(MUcompleteFwd)$/;"	m
<up>	vimrc	/^nmap <silent> <up> <esc>:cprev<cr>$/;"	m
=	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/terraform.vim	/^  inoremap <buffer> <silent> = =<Esc>:call <SID>terraformalign()<CR>a$/;"	m
=	pack/plugins/start/sheerun-vim-polyglot/compiler/cryptol.vim	/^   command = -nargs =* CompilerSet setlocal <args>$/;"	c
=P	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> =P :call <SID>putline('[p', 'Above')<CR>=']$/;"	m
=p	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> =p :call <SID>putline(']p', 'Below')<CR>=']$/;"	m
>	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/puppet.vim	/^    inoremap <buffer> <silent> > ><Esc>:call <SID>puppetalign()<CR>a$/;"	m
>P	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> >P :call <SID>putline('[p', 'Above')<CR>>']$/;"	m
>p	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> >p :call <SID>putline(']p', 'Below')<CR>>']$/;"	m
Abolish	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^  let Abolish = {}$/;"	v
Abolish	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^command! -nargs=+ -bang -bar -range=0 -complete=custom,s:Complete Abolish$/;"	c
Abolished	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! Abolished()$/;"	f
AccessModifier	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:AccessModifier(cline_info) abort$/;"	f
Add	pack/plugins/start/sheerun-vim-polyglot/syntax/cucumber.vim	/^function! s:Add(name)$/;"	f
AddList	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! s:AddList()$/;"	f
AddTitle	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! s:AddTitle(title)$/;"	f
AfterAccessModifier	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:AfterAccessModifier(pline_info) abort$/;"	f
AfterBlockOpening	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:AfterBlockOpening(pline_info) abort$/;"	f
AfterEndKeyword	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:AfterEndKeyword(pline_info) abort$/;"	f
AfterHangingSplat	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:AfterHangingSplat(pline_info) abort$/;"	f
AfterIndentKeyword	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:AfterIndentKeyword(pline_info) abort$/;"	f
AfterLeadingOperator	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:AfterLeadingOperator(pline_info) abort$/;"	f
AfterUnbalancedBracket	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:AfterUnbalancedBracket(pline_info) abort$/;"	f
Align	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^function Align(left, right)$/;"	f
All terminal emulators	pack/colors/start/romainl-apprentice/README.md	/^### All terminal emulators$/;"	k
Anti-features	pack/plugins/start/romainl-vim-qf/README.md	/^### Anti-features$/;"	k
AsmFmt	pack/plugins/start/fatih-vim-go/ftplugin/asm.vim	/^command! -nargs=0 AsmFmt call go#asmfmt#Format()$/;"	c
Author	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^## Author$/;"	i
AutoMkdir	vimrc	/^augroup AutoMkdir$/;"	a
AutoMkdir	vimrc	/^function! <SID>AutoMkdir() abort$/;"	f
Balanced	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^function s:Balanced(lnum)$/;"	f
Balanced	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:Balanced(lnum)$/;"	f
BeginElementFound	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:BeginElementFound(stack, token, curr_vcol, stored_vcol, end_token, sw)$/;"	f
BeginElementFoundIfEmpty	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:BeginElementFoundIfEmpty(stack, token, curr_vcol, stored_vcol, sw)$/;"	f
BeginningOfClauseFound	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:BeginningOfClauseFound(stack, token, stored_vcol, lnum, i)$/;"	f
Behavior	pack/plugins/start/fatih-vim-go/.github/ISSUE_TEMPLATE.md	/^### Behavior$/;"	k
Blame	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
BlameCommit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BlameCommit(cmd) abort$/;"	f
BlameJump	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
BlameSyntax	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
BlankDown	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:BlankDown(count) abort$/;"	f
BlankUp	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:BlankUp(count) abort$/;"	f
BlockComment	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:BlockComment(cline_info) abort$/;"	f
BlockStarter	pack/plugins/start/sheerun-vim-polyglot/indent/python.vim	/^function! s:BlockStarter(lnum, block_start_re)$/;"	f
Browse	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
BufReadIndex	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndex() abort$/;"	f
BufReadIndexFile	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndexFile() abort$/;"	f
BufReadObject	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadObject() abort$/;"	f
BufWriteIndexFile	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BufWriteIndexFile() abort$/;"	f
BuildStructures	pack/plugins/start/sheerun-vim-polyglot/indent/twig.vim	/^fun! s:BuildStructures()$/;"	f
But fear no longer!	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^## But fear no longer!$/;"	i
CJSX	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^augroup CJSX$/;"	a
CSCOPE_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -R$/;"	v
CSCOPE_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -i %TAGS_FILE%.files$/;"	v
CSCOPE_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=$/;"	v
CSCOPE_EXE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_EXE=%~2$/;"	v
CSCOPE_EXE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_EXE=cscope$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% --append "%UPDATED_SOURCE%"$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% -L %TAGS_FILE%.files$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% "%PROJECT_ROOT%"$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% %~2$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --exclude=%2$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --options=%2$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_ARGS=$/;"	v
CTAGS_EXE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_EXE=%~2$/;"	v
CTAGS_EXE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_EXE=ctags$/;"	v
CalcVCol	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:CalcVCol(line, first_index, last_index, vcol, tabstop)$/;"	f
CallBaseIndent	pack/plugins/start/sheerun-vim-polyglot/indent/twig.vim	/^function! s:CallBaseIndent()$/;"	f
CaptionEnv	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^function! s:CaptionEnv()$/;"	f
CaptionFrame	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^function! s:CaptionFrame(line)$/;"	f
CaptionTable	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^function! s:CaptionTable()$/;"	f
ChangeEnvPrompt	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:ChangeEnvPrompt()$/;"	f
CheckBinaries	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:CheckBinaries()$/;"	f
CheckForFunctions	pack/plugins/start/sheerun-vim-polyglot/syntax/octave.vim	/^function! s:CheckForFunctions()$/;"	f
Chmod	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=1 Chmod :$/;"	c
ClearTokenCacheIfNeeded	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:ClearTokenCacheIfNeeded()$/;"	f
CloseCurEnv	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:CloseCurEnv()$/;"	f
ClosingBracketOnEmptyLine	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:ClosingBracketOnEmptyLine(cline_info) abort$/;"	f
ClosingHeredocDelimiter	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:ClosingHeredocDelimiter(cline_info) abort$/;"	f
CoffeeBufNew	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^augroup CoffeeBufNew | augroup END$/;"	a
CoffeeBufUpdate	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^augroup CoffeeBufUpdate | augroup END$/;"	a
CoffeeCompile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^\\        CoffeeCompile call s:CoffeeCompile(<line1>, <line2>, <q-args>)$/;"	c
CoffeeCompile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompile(startline, endline, args)$/;"	f
CoffeeCompileClose	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompileClose()$/;"	f
CoffeeCompileResetVars	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompileResetVars()$/;"	f
CoffeeCompileToBuf	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompileToBuf(buf, startline, endline)$/;"	f
CoffeeComplete	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeComplete(cmd, cmdline, cursor)$/;"	f
CoffeeLint	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^command! -buffer -range=% -bang -bar -nargs=* CoffeeLint$/;"	c
CoffeeLint	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeLint(startline, endline, bang, args)$/;"	f
CoffeeMake	pack/plugins/start/sheerun-vim-polyglot/compiler/coffee.vim	/^command! -bang -bar -nargs=* CoffeeMake$/;"	c
CoffeeMakeDeprecated	pack/plugins/start/sheerun-vim-polyglot/compiler/coffee.vim	/^function! s:CoffeeMakeDeprecated(bang, args)$/;"	f
CoffeeRun	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^command! -buffer -range=% -bar -nargs=* CoffeeRun$/;"	c
CoffeeRun	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeRun(startline, endline, args)$/;"	f
CoffeeRunClose	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeRunClose()$/;"	f
CoffeeRunResetVars	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeRunResetVars()$/;"	f
CoffeeUpdateMakePrg	pack/plugins/start/sheerun-vim-polyglot/compiler/coffee.vim	/^augroup CoffeeUpdateMakePrg$/;"	a
CoffeeWatch	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^\\        CoffeeWatch call s:CoffeeWatch(<q-args>)$/;"	c
CoffeeWatch	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatch(args)$/;"	f
CoffeeWatchClose	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatchClose()$/;"	f
CoffeeWatchResetVars	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatchResetVars()$/;"	f
CoffeeWatchUpdate	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatchUpdate()$/;"	f
CommentKeywordMatch	pack/plugins/start/sheerun-vim-polyglot/syntax/swift.vim	/^function! s:CommentKeywordMatch(keyword)$/;"	f
Commentary	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^command! -range -bar Commentary call s:go(<line1>,<line2>)$/;"	c
Commit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Commit(args, ...) abort$/;"	f
CommitComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
Compatibility	pack/plugins/start/lifepillar-vim-mucomplete/Readme.md	/^# Compatibility$/;"	h
CompilerSet	pack/plugins/start/fatih-vim-go/compiler/go.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/cargo.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/cucumber.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/eruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/eslint.vim	/^  command! -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/exunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/go.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/haml.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/nim.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/python.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/rake.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/rspec.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/ruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/rubyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/rustc.vim	/^	command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/sbt.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	pack/plugins/start/sheerun-vim-polyglot/compiler/typescript.vim	/^  command! -nargs=* CompilerSet setlocal <args>$/;"	c
Complete	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:Complete(A,L,P)$/;"	f
CompleteLabels	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:CompleteLabels(regex)$/;"	f
Config	pack/plugins/start/t9md-vim-quickhl/README.md	/^# Config$/;"	h
Configuration	pack/plugins/start/fatih-vim-go/.github/ISSUE_TEMPLATE.md	/^### Configuration$/;"	k
ContainedGroup	pack/plugins/start/sheerun-vim-polyglot/syntax/scala.vim	/^function! s:ContainedGroup()$/;"	f
Context	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:Context(reverse)$/;"	f
ContextMotion	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:ContextMotion(reverse)$/;"	f
ContinuedHangingOperator	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:ContinuedHangingOperator(msl_info) abort$/;"	f
ContinuedLine	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:ContinuedLine(pline_info) abort$/;"	f
Contributing	pack/plugins/start/ludovicchabant-vim-gutentags/CONTRIBUTING.md	/^# Contributing$/;"	h
Contributing	pack/plugins/start/sheerun-vim-polyglot/README.md	/^## Contributing$/;"	i
ConvertBack	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:ConvertBack(line)$/;"	f
CountMatches	pack/plugins/start/sheerun-vim-polyglot/indent/tex.vim	/^function! s:CountMatches(str, pat)$/;"	f
CreateOrExpression	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^function! s:CreateOrExpression(keywords)$/;"	f
CrystalContext	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalContext echo crystal_lang#context(expand('%'), getpos('.'), <q-args>).output$/;"	c
CrystalDef	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=0 CrystalDef call crystal_lang#jump_to_definition(expand('%'), getpos('.'))$/;"	c
CrystalFormat	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* -bar CrystalFormat call crystal_lang#format(<q-args>)$/;"	c
CrystalHierarchy	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalHierarchy echo crystal_lang#type_hierarchy(expand('%'), <q-args>)$/;"	c
CrystalImpl	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalImpl echo crystal_lang#impl(expand('%'), getpos('.'), <q-args>).output$/;"	c
CrystalSpecRunAll	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=? CrystalSpecRunAll call crystal_lang#run_all_spec(<f-args>)$/;"	c
CrystalSpecRunCurrent	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=? CrystalSpecRunCurrent call crystal_lang#run_current_spec(<f-args>)$/;"	c
CrystalSpecSwitch	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=? CrystalSpecSwitch call crystal_lang#switch_spec_file(<f-args>)$/;"	c
CucumberComplete	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^function! CucumberComplete(findstart,base) abort$/;"	f
Cycle	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar Cycle  :call s:cycle()$/;"	c
DB_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set DB_FILE=%~2$/;"	v
DB_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^set DB_FILE=cscope.out$/;"	v
DONE	pack/plugins/start/romainl-vim-qf/README.md	/^## DONE$/;"	i
DONE	pack/plugins/start/romainl-vim-qlist/README.md	/^## DONE$/;"	i
DartIndent	pack/plugins/start/sheerun-vim-polyglot/indent/dart.vim	/^function! DartIndent()$/;"	f
DefRuby	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! s:DefRuby()$/;"	f
DeindentingKeyword	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:DeindentingKeyword(cline_info) abort$/;"	f
Derivative works	pack/colors/start/romainl-apprentice/README.md	/^## Derivative works$/;"	i
DetectCoffee	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^function! s:DetectCoffee()$/;"	f
DetectElixir	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^function! s:DetectElixir()$/;"	f
DetectPerl6	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^function! s:DetectPerl6()$/;"	f
DetectScala	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^fun! s:DetectScala()$/;"	f
Diff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Diff(vert,keepfocus,...) abort$/;"	f
DiffGitCached	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitcommit.vim	/^command! -bang -bar -buffer -complete=custom,s:diffcomplete -nargs=* DiffGitCached :call s:gitdiffcached(<bang>0,b:git_dir,<f-args>)$/;"	c
DirComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
Disciple	pack/colors/start/romainl-disciple/README.md	/^# Disciple$/;"	h
Dispatch	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Dispatch(bang, args)$/;"	f
Dlist	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^command! -nargs=1 -bar -bang Dlist call <sid>Qlist("d", 1, 0, '<bang>' == '!', <f-args>)$/;"	c
Documentation	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^## Documentation$/;"	i
Documentation	pack/plugins/start/romainl-vim-qf/README.md	/^## Documentation$/;"	i
Dofile	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=1 Dofile call qf#do#DoList(0, <q-args>)$/;"	c
Doline	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=1 Doline call qf#do#DoList(1, <q-args>)$/;"	c
DoneParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^:DoneParseArgs$/;"	l
DoneParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:DoneParseArgs$/;"	l
DotPackagesFile	pack/plugins/start/sheerun-vim-polyglot/autoload/dart.vim	/^function! s:DotPackagesFile() abort$/;"	f
Eatchar	ftplugin/go.vim	/^func! Eatchar(pat)$/;"	f
Edit	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar Edit   :call s:choose('edit')$/;"	c
Edit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Edit(cmd,bang,...) abort$/;"	f
EditComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditRunComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
ElmEval	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^function! ElmEval(sourceCode)$/;"	f
ElmEvalLine	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^command -buffer ElmEvalLine          call ElmEvalLine()$/;"	c
ElmEvalLine	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^function! ElmEvalLine()$/;"	f
ElmEvalSelection	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^command -buffer ElmEvalSelection     call ElmEvalSelection()$/;"	c
ElmEvalSelection	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^function! ElmEvalSelection()$/;"	f
ElmMake	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^function! ElmMake(file)$/;"	f
ElmMakeCurrentFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^command -buffer ElmMakeCurrentFile   call ElmMakeCurrentFile()$/;"	c
ElmMakeCurrentFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^function! ElmMakeCurrentFile()$/;"	f
ElmMakeFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^command -buffer -nargs=1 ElmMakeFile call ElmMakeFile <args>$/;"	c
ElmMakeFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^function! ElmMakeFile(file)$/;"	f
ElmMakeMain	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^command -buffer ElmMakeMain          call ElmMakeMain()$/;"	c
ElmMakeMain	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^function! ElmMakeMain()$/;"	f
ElmRepl	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^command -buffer ElmRepl              call ElmRepl()$/;"	c
ElmRepl	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^function! ElmRepl()$/;"	f
Emit	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! s:Emit(dict, type, args)$/;"	f
EmptyInsideString	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:EmptyInsideString(pline_info) abort$/;"	f
EnableJSX	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^fu! <SID>EnableJSX()$/;"	f
Enabling Apprentice.	pack/colors/start/romainl-apprentice/README.md	/^## Enabling Apprentice.$/;"	i
Enabling Disciple.	pack/colors/start/romainl-disciple/README.md	/^## Enabling Disciple.$/;"	i
EndStructure	pack/plugins/start/sheerun-vim-polyglot/indent/twig.vim	/^function! s:EndStructure(name)$/;"	f
ErlangCalcIndent	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:ErlangCalcIndent(lnum, stack)$/;"	f
ErlangCalcIndent2	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:ErlangCalcIndent2(lnum, stack)$/;"	f
ErlangIndent	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! ErlangIndent()$/;"	f
ErlangShowTokensInCurrentLine	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! ErlangShowTokensInCurrentLine()$/;"	f
ErlangShowTokensInLine	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! ErlangShowTokensInLine(line)$/;"	f
ErrMsg	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! s:ErrMsg(msg)$/;"	f
Error	pack/plugins/start/fatih-vim-go/autoload/go/import.vim	/^function! s:Error(s) abort$/;"	f
EscapeTitle	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^function! s:EscapeTitle(titlestr)$/;"	f
Exception	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^function Exception()$/;"	f
ExecMove	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:ExecMove(cmd) abort$/;"	f
ExecuteInTree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
ExecuteMacroOverVisualRange	vimrc	/^function! ExecuteMacroOverVisualRange()$/;"	f
ExitingOneLineScope	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:ExitingOneLineScope(lnum)$/;"	f
Expand	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! s:Expand(dict, pretty, args)$/;"	f
ExtraBrackets	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^function s:ExtraBrackets(lnum)$/;"	f
ExtraBrackets	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:ExtraBrackets(lnum) abort$/;"	f
ExtractInputs	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:ExtractInputs()$/;"	f
ExtractLabels	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:ExtractLabels()$/;"	f
FILE_LIST_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD_IS_ABSOLUTE=1$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD_IS_ABSOLUTE=0$/;"	v
FNameEscape	pack/plugins/start/sheerun-vim-polyglot/ftplugin/tex_LatexBox.vim	/^	function! s:FNameEscape(s)$/;"	f
FastFold	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^	augroup FastFold$/;"	a
Features	pack/plugins/start/fatih-vim-go/README.md	/^## Features$/;"	i
Features	pack/plugins/start/romainl-vim-qf/README.md	/^## Features$/;"	i
Feedback, please!	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^## Feedback, please!$/;"	i
FileByOffset	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:FileByOffset(num)$/;"	f
FileRead	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:FileRead() abort$/;"	f
Filter	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=1 -bang Filter call qf#filter#FilterList(<q-args>, expand("<bang>") == "!" ? 1 : 0)$/;"	c
Filtered	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^function! s:Filtered(fn, l)$/;"	f
Find	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -complete=file -nargs=+ Find   exe s:Grep(<q-bang>, <q-args>, 'find')$/;"	c
FindBibData	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:FindBibData(...)$/;"	f
FindClosestSection	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:FindClosestSection(toc, fileindices)$/;"	f
FindContainingClass	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^function! s:FindContainingClass()$/;"	f
FindContainingClass	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:FindContainingClass() abort$/;"	f
FindIndToken	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:FindIndToken(lnum, dir)$/;"	f
FindLet	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^function! s:FindLet(pstart, pmid, pend)$/;"	f
FindMatchingPair	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:FindMatchingPair(mode)$/;"	f
FindPair	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
FindPreviousOpenStructure	pack/plugins/start/sheerun-vim-polyglot/indent/twig.vim	/^function! s:FindPreviousOpenStructure(lineNumber)$/;"	f
FindStartLine	pack/plugins/start/sheerun-vim-polyglot/indent/nim.vim	/^function! s:FindStartLine(fromln, pattern)$/;"	f
FinishCommit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:FinishCommit() abort$/;"	f
Fixup	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar Fixup  :call s:choose('fixup')$/;"	c
FoldSectionLevels	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^function! s:FoldSectionLevels()$/;"	f
FoldableRegion	pack/plugins/start/sheerun-vim-polyglot/syntax/lua.vim	/^function! s:FoldableRegion(tag, name, expr)$/;"	f
FriendlyName	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^function FriendlyName(test_name)$/;"	f
G	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> G G4k$/;"	m
GF	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GFInit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:GFInit(...) abort$/;"	f
GVim/MacVim	pack/colors/start/romainl-apprentice/README.md	/^### GVim\/MacVim$/;"	k
GVim/MacVim	pack/colors/start/romainl-disciple/README.md	/^### GVim\/MacVim$/;"	k
GetAnsibleIndent	pack/plugins/start/sheerun-vim-polyglot/indent/ansible.vim	/^function GetAnsibleIndent(lnum)$/;"	f
GetBladeIndent	pack/plugins/start/sheerun-vim-polyglot/indent/blade.vim	/^function! GetBladeIndent()$/;"	f
GetBufferRubyClass	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubyClass(name, ...)$/;"	f
GetBufferRubyEntity	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubyEntity( name, type, ... )$/;"	f
GetBufferRubyModule	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubyModule(name, ...)$/;"	f
GetBufferRubySingletonMethods	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubySingletonMethods(name)$/;"	f
GetCabalIndent	pack/plugins/start/sheerun-vim-polyglot/indent/cabal.vim	/^function! GetCabalIndent()$/;"	f
GetCaddyfileIndent	pack/plugins/start/sheerun-vim-polyglot/indent/caddyfile.vim	/^function! GetCaddyfileIndent(lnum)$/;"	f
GetClojureIndent	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! GetClojureIndent()$/;"	f
GetCoffeeHtmlIndent	pack/plugins/start/sheerun-vim-polyglot/after/indent/html.vim	/^function! GetCoffeeHtmlIndent(curlinenum)$/;"	f
GetCoffeeIndent	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! GetCoffeeIndent(curlnum)$/;"	f
GetContents	pack/plugins/start/sheerun-vim-polyglot/indent/lua.vim	/^function s:GetContents(lnum)$/;"	f
GetCrystalIndent	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^function GetCrystalIndent(...)$/;"	f
GetCucumberIndent	pack/plugins/start/sheerun-vim-polyglot/indent/cucumber.vim	/^function! GetCucumberIndent()$/;"	f
GetDefaultPolicy	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! s:GetDefaultPolicy(curlnum)$/;"	f
GetEelixirIndent	pack/plugins/start/sheerun-vim-polyglot/indent/eelixir.vim	/^function! GetEelixirIndent(...)$/;"	f
GetEnvironmentList	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:GetEnvironmentList(lead, cmdline, pos)$/;"	f
GetErubyIndent	pack/plugins/start/sheerun-vim-polyglot/indent/eruby.vim	/^function! GetErubyIndent(...)$/;"	f
GetGitconfigIndent	pack/plugins/start/sheerun-vim-polyglot/indent/gitconfig.vim	/^function! GetGitconfigIndent()$/;"	f
GetGoHTMLTmplIndent	pack/plugins/start/fatih-vim-go/indent/gohtmltmpl.vim	/^function! GetGoHTMLTmplIndent(lnum)$/;"	f
GetGoHTMLTmplIndent	pack/plugins/start/sheerun-vim-polyglot/indent/gohtmltmpl.vim	/^function! GetGoHTMLTmplIndent(lnum)$/;"	f
GetHamlIndent	pack/plugins/start/sheerun-vim-polyglot/indent/haml.vim	/^function! GetHamlIndent()$/;"	f
GetHandlebarsIndent	pack/plugins/start/sheerun-vim-polyglot/indent/handlebars.vim	/^function! GetHandlebarsIndent(...)$/;"	f
GetHaskellIndent	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^function! GetHaskellIndent()$/;"	f
GetInd	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^function! s:GetInd(lnum, pat, lim)$/;"	f
GetIndtokenAtCol	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:GetIndtokenAtCol(indtokens, col)$/;"	f
GetJSONIndent	pack/plugins/start/sheerun-vim-polyglot/indent/json.vim	/^function GetJSONIndent()$/;"	f
GetJavascriptIndent	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^function GetJavascriptIndent()$/;"	f
GetJsIndent	pack/plugins/start/sheerun-vim-polyglot/indent/qml.vim	/^function! GetJsIndent()$/;"	f
GetJstIndent	pack/plugins/start/sheerun-vim-polyglot/indent/jst.vim	/^function! GetJstIndent(...)$/;"	f
GetJsxIndent	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^fu! GetJsxIndent()$/;"	f
GetJuliaIndent	pack/plugins/start/sheerun-vim-polyglot/indent/julia.vim	/^function GetJuliaIndent()$/;"	f
GetJuliaNestingStruct	pack/plugins/start/sheerun-vim-polyglot/indent/julia.vim	/^function GetJuliaNestingStruct(lnum)$/;"	f
GetKotlinIndent	pack/plugins/start/sheerun-vim-polyglot/indent/kotlin.vim	/^function! GetKotlinIndent()$/;"	f
GetLabelCache	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:GetLabelCache(file)$/;"	f
GetLineWithoutFullComment	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^function! s:GetLineWithoutFullComment(lnum)$/;"	f
GetLiquidIndent	pack/plugins/start/sheerun-vim-polyglot/indent/liquid.vim	/^function! GetLiquidIndent(...)$/;"	f
GetLitCoffeeIndent	pack/plugins/start/sheerun-vim-polyglot/indent/litcoffee.vim	/^function GetLitCoffeeIndent()$/;"	f
GetLiveScriptIndent	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! GetLiveScriptIndent(curlinenum)$/;"	f
GetLiveScriptIndent	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:GetLiveScriptIndent(curlinenum)$/;"	f
GetLuaIndent	pack/plugins/start/sheerun-vim-polyglot/indent/lua.vim	/^function GetLuaIndent()$/;"	f
GetMSL	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^function s:GetMSL(lnum)$/;"	f
GetMSL	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:GetMSL(lnum) abort$/;"	f
GetMSL	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:GetMSL(lnum, in_one_line_scope)$/;"	f
GetMakePrg	pack/plugins/start/sheerun-vim-polyglot/compiler/coffee.vim	/^function! s:GetMakePrg()$/;"	f
GetMakePrg	pack/plugins/start/sheerun-vim-polyglot/compiler/ls.vim	/^function! s:GetMakePrg()$/;"	f
GetMakoIndent	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^function GetMakoIndent()$/;"	f
GetMatch	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:GetMatch(curline)$/;"	f
GetNimIndent	pack/plugins/start/sheerun-vim-polyglot/indent/nim.vim	/^function! GetNimIndent(lnum)$/;"	f
GetOCamlIndent	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^function! GetOCamlIndent()$/;"	f
GetObjCIndentImproved	pack/plugins/start/sheerun-vim-polyglot/after/indent/objc.vim	/^function! GetObjCIndentImproved()$/;"	f
GetPair	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^  function s:GetPair(start,end,flags,skip,...)$/;"	f
GetPair	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^  function s:GetPair(start,end,flags,skip,time,...)$/;"	f
GetPair	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^  function s:GetPair(start,end,flags,skip,...)$/;"	f
GetPair	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^  function s:GetPair(start,end,flags,skip,time,...)$/;"	f
GetPerlIndent	pack/plugins/start/sheerun-vim-polyglot/indent/perl.vim	/^function! GetPerlIndent()$/;"	f
GetPlantUMLIndent	pack/plugins/start/sheerun-vim-polyglot/indent/plantuml.vim	/^function! GetPlantUMLIndent(...) abort$/;"	f
GetPotionFold	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cryptol/folding.vim	/^function! GetPotionFold(lnum)$/;"	f
GetPrevNormalLine	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! s:GetPrevNormalLine(startlnum)$/;"	f
GetPrevNormalLine	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:GetPrevNormalLine(startlinenum)$/;"	f
GetPugIndent	pack/plugins/start/sheerun-vim-polyglot/indent/pug.vim	/^function! GetPugIndent()$/;"	f
GetPuppetIndent	pack/plugins/start/sheerun-vim-polyglot/indent/puppet.vim	/^function! GetPuppetIndent()$/;"	f
GetPurescriptIndent	pack/plugins/start/sheerun-vim-polyglot/indent/purescript.vim	/^function! GetPurescriptIndent()$/;"	f
GetPythonPEPIndent	pack/plugins/start/sheerun-vim-polyglot/indent/python.vim	/^function! GetPythonPEPIndent(lnum)$/;"	f
GetRubyIndent	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! GetRubyIndent(...) abort$/;"	f
GetRubyVarType	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetRubyVarType(v)$/;"	f
GetRustIndent	pack/plugins/start/sheerun-vim-polyglot/indent/rust.vim	/^function GetRustIndent(lnum)$/;"	f
GetSID	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:GetSID()$/;"	f
GetScalaIndent	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! GetScalaIndent()$/;"	f
GetSlimIndent	pack/plugins/start/sheerun-vim-polyglot/indent/slim.vim	/^function! GetSlimIndent()$/;"	f
GetSolidityIndent	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function GetSolidityIndent()$/;"	f
GetStylusIndent	pack/plugins/start/sheerun-vim-polyglot/indent/stylus.vim	/^function! GetStylusIndent()$/;"	f
GetTokensFromLine	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:GetTokensFromLine(line, string_continuation, atom_continuation,$/;"	f
GetTrimmedLine	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! s:GetTrimmedLine(lnum)$/;"	f
GetTrimmedLine	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:GetTrimmedLine(linenum)$/;"	f
GetTwigIndent	pack/plugins/start/sheerun-vim-polyglot/indent/twig.vim	/^fun! GetTwigIndent(currentLineNumber)$/;"	f
GetTypescriptIndent	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function GetTypescriptIndent()$/;"	f
GetValaIndent	pack/plugins/start/sheerun-vim-polyglot/indent/vala.vim	/^function GetValaIndent(lnum)$/;"	f
GetVarIndent	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:GetVarIndent(lnum)$/;"	f
GetVueIndent	pack/plugins/start/sheerun-vim-polyglot/indent/vue.vim	/^function! GetVueIndent()$/;"	f
Getting Started	pack/plugins/start/lifepillar-vim-mucomplete/Readme.md	/^# Getting Started$/;"	h
Git	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Git(bang, args) abort$/;"	f
GitComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:GitComplete(A, L, P) abort$/;"	f
GitGutter	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutter    call gitgutter#process_buffer(bufnr(''), 0)$/;"	c
GitGutterAll	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterAll call gitgutter#all()$/;"	c
GitGutterDebug	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterDebug call gitgutter#debug#debug()$/;"	c
GitGutterDisable	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterDisable call gitgutter#disable()$/;"	c
GitGutterEnable	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterEnable  call gitgutter#enable()$/;"	c
GitGutterGetHunkSummary	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunkSummary()$/;"	f
GitGutterGetHunks	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunks()$/;"	f
GitGutterLineHighlightsDisable	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterLineHighlightsDisable call gitgutter#line_highlights_disable()$/;"	c
GitGutterLineHighlightsEnable	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterLineHighlightsEnable  call gitgutter#line_highlights_enable()$/;"	c
GitGutterLineHighlightsToggle	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterLineHighlightsToggle  call gitgutter#line_highlights_toggle()$/;"	c
GitGutterNextHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar -count=1 GitGutterNextHunk call gitgutter#hunk#next_hunk(<count>)$/;"	c
GitGutterPrevHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar -count=1 GitGutterPrevHunk call gitgutter#hunk#prev_hunk(<count>)$/;"	c
GitGutterPreviewHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterPreviewHunk call gitgutter#preview_hunk()$/;"	c
GitGutterRevertHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterRevertHunk  echomsg 'GitGutterRevertHunk is deprecated. Use GitGutterUndoHunk'<Bar>call gitgutter#undo_hunk()$/;"	c
GitGutterSignsDisable	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterSignsDisable call gitgutter#signs_disable()$/;"	c
GitGutterSignsEnable	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterSignsEnable  call gitgutter#signs_enable()$/;"	c
GitGutterSignsToggle	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterSignsToggle  call gitgutter#signs_toggle()$/;"	c
GitGutterStageHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterStageHunk   call gitgutter#stage_hunk()$/;"	c
GitGutterToggle	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterToggle  call gitgutter#toggle()$/;"	c
GitGutterUndoHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterUndoHunk    call gitgutter#undo_hunk()$/;"	c
Global features (available from any window)	pack/plugins/start/romainl-vim-qf/README.md	/^### Global features (available from any window)$/;"	k
GoAddTags	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range GoAddTags call go#tags#Add(<line1>, <line2>, <count>, <f-args>)$/;"	c
GoAlternate	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -bang GoAlternate call go#alternate#Switch(<bang>0, '')$/;"	c
GoAsmFmtAutoSaveToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoAsmFmtAutoSaveToggle call go#asmfmt#ToggleAsmFmtAutoSave()$/;"	c
GoAutoTypeInfoToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoAutoTypeInfoToggle call go#complete#ToggleAutoTypeInfo()$/;"	c
GoBuild	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoBuild call go#cmd#Build(<bang>0,<f-args>)$/;"	c
GoBuildTags	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -bang GoBuildTags call go#cmd#BuildTags(<bang>0, <f-args>)$/;"	c
GoCallees	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallees call go#guru#Callees(<count>)$/;"	c
GoCallers	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallers call go#guru#Callers(<count>)$/;"	c
GoCallstack	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallstack call go#guru#Callstack(<count>)$/;"	c
GoChannelPeers	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoChannelPeers call go#guru#ChannelPeers(<count>)$/;"	c
GoCoverage	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverage call go#coverage#Buffer(<bang>0, <f-args>)$/;"	c
GoCoverageBrowser	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverageBrowser call go#coverage#Browser(<bang>0, <f-args>)$/;"	c
GoCoverageClear	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverageClear call go#coverage#Clear()$/;"	c
GoCoverageToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverageToggle call go#coverage#BufferToggle(<bang>0, <f-args>)$/;"	c
GoDecls	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^  command! -nargs=? -complete=file GoDecls call ctrlp#init(ctrlp#decls#cmd(0, <q-args>))$/;"	c
GoDeclsDir	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^  command! -nargs=? -complete=dir GoDeclsDir call ctrlp#init(ctrlp#decls#cmd(1, <q-args>))$/;"	c
GoDef	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range GoDef :call go#def#Jump('')$/;"	c
GoDefPop	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoDefPop :call go#def#StackPop(<f-args>)$/;"	c
GoDefStack	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoDefStack :call go#def#Stack(<f-args>)$/;"	c
GoDefStackClear	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoDefStackClear :call go#def#StackClear(<f-args>)$/;"	c
GoDeps	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoDeps echo go#tool#Deps()$/;"	c
GoDescribe	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoDescribe call go#guru#Describe(<count>)$/;"	c
GoDoc	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range -complete=customlist,go#package#Complete GoDoc call go#doc#Open('new', 'split', <f-args>)$/;"	c
GoDocBrowser	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range -complete=customlist,go#package#Complete GoDocBrowser call go#doc#OpenBrowser(<f-args>)$/;"	c
GoDrop	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -complete=customlist,go#package#Complete GoDrop call go#import#SwitchImport(0, '', <f-args>, '')$/;"	c
GoErrCheck	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -complete=customlist,go#package#Complete GoErrCheck call go#lint#Errcheck(<f-args>)$/;"	c
GoFiles	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFiles echo go#tool#Files()$/;"	c
GoFmt	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFmt call go#fmt#Format(-1)$/;"	c
GoFmtAutoSaveToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFmtAutoSaveToggle call go#fmt#ToggleFmtAutoSave()$/;"	c
GoFreevars	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoFreevars call go#guru#Freevars(<count>)$/;"	c
GoGenerate	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoGenerate call go#cmd#Generate(<bang>0,<f-args>)$/;"	c
GoGuruScope	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -complete=customlist,go#package#Complete GoGuruScope call go#guru#Scope(<f-args>)$/;"	c
GoImpl	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -buffer -complete=customlist,go#impl#Complete GoImpl call go#impl#Impl(<f-args>)$/;"	c
GoImplements	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoImplements call go#guru#Implements(<count>)$/;"	c
GoImport	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=1 -bang -complete=customlist,go#package#Complete GoImport call go#import#SwitchImport(1, '', <f-args>, '<bang>')$/;"	c
GoImportAs	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang -complete=customlist,go#package#Complete GoImportAs call go#import#SwitchImport(1, <f-args>, '<bang>')$/;"	c
GoImports	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoImports call go#fmt#Format(1)$/;"	c
GoIndent	pack/plugins/start/fatih-vim-go/indent/go.vim	/^function! GoIndent(lnum)$/;"	f
GoIndent	pack/plugins/start/sheerun-vim-polyglot/indent/go.vim	/^function! GoIndent(lnum)$/;"	f
GoInfo	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoInfo call go#tool#Info(0)$/;"	c
GoInstall	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoInstall call go#cmd#Install(<bang>0, <f-args>)$/;"	c
GoInstallBinaries	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^command! GoInstallBinaries call s:GoInstallBinaries(-1)$/;"	c
GoInstallBinaries	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:GoInstallBinaries(updateBinaries)$/;"	f
GoKeyify	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoKeyify call go#keyify#Keyify()$/;"	c
GoLint	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoLint call go#lint#Golint(<f-args>)$/;"	c
GoMetaLinter	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoMetaLinter call go#lint#Gometa(0, <f-args>)$/;"	c
GoMetaLinterAutoSaveToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoMetaLinterAutoSaveToggle call go#lint#ToggleMetaLinterAutoSave()$/;"	c
GoNeosnippet	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^function! s:GoNeosnippet()$/;"	f
GoPath	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^command! -nargs=? -complete=dir GoPath call go#path#GoPath(<f-args>)$/;"	c
GoPlay	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 -range=% GoPlay call go#play#Share(<count>, <line1>, <line2>)$/;"	c
GoReferrers	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoReferrers call go#guru#Referrers(<count>)$/;"	c
GoRemoveTags	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range GoRemoveTags call go#tags#Remove(<line1>, <line2>, <count>, <f-args>)$/;"	c
GoRename	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoRename call go#rename#Rename(<bang>0,<f-args>)$/;"	c
GoRun	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang -complete=file GoRun call go#cmd#Run(<bang>0,<f-args>)$/;"	c
GoSameIds	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIds call go#guru#SameIds()$/;"	c
GoSameIdsAutoToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIdsAutoToggle call go#guru#AutoToogleSameIds()$/;"	c
GoSameIdsClear	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIdsClear call go#guru#ClearSameIds()$/;"	c
GoSameIdsToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIdsToggle call go#guru#ToggleSameIds()$/;"	c
GoTemplateAutoCreateToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoTemplateAutoCreateToggle call go#template#ToggleAutoCreate()$/;"	c
GoTest	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTest call go#cmd#Test(<bang>0, 0, <f-args>)$/;"	c
GoTestCompile	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTestCompile call go#cmd#Test(<bang>0, 1, <f-args>)$/;"	c
GoTestFunc	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTestFunc call go#cmd#TestFunc(<bang>0, <f-args>)$/;"	c
GoUltiSnips	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^function! s:GoUltiSnips()$/;"	f
GoUpdateBinaries	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^command! GoUpdateBinaries call s:GoInstallBinaries(1)$/;"	c
GoVet	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoVet call go#lint#Vet(<bang>0, <f-args>)$/;"	c
GoWhicherrs	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoWhicherrs call go#guru#Whicherrs(<count>)$/;"	c
GodocView	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! s:GodocView(newposition, position, content) abort$/;"	f
Grep	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:Grep(bang,args,prg) abort$/;"	f
Grep	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Grep(cmd,bang,arg) abort$/;"	f
GroovyHiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/groovy.vim	/^  command! -nargs=+ GroovyHiLink hi def link <args>$/;"	c
GroovyHiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/groovy.vim	/^  command! -nargs=+ GroovyHiLink hi link <args>$/;"	c
Gutentags	pack/plugins/start/ludovicchabant-vim-gutentags/README.md	/^# Gutentags$/;"	h
GutentagsToggleEnabled	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleEnabled :let g:gutentags_enabled=!g:gutentags_enabled$/;"	c
GutentagsToggleFake	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleFake    :call gutentags#fake()$/;"	c
GutentagsToggleTrace	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleTrace   :call gutentags#toggletrace()$/;"	c
GutentagsUnlock	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^command! GutentagsUnlock :call gutentags#delete_lock_files()$/;"	c
HL	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:HL(group, fg, bg, attr)$/;"	f
HasSyntax	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:HasSyntax(syntaxName, ...)$/;"	f
HaskellDedent	pack/plugins/start/sheerun-vim-polyglot/indent/elm.vim	/^function s:HaskellDedent(isbs)$/;"	f
HaskellFormatImport	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haskell.vim	/^command! -buffer -range HaskellFormatImport call haskell#formatImport(<line1>, <line2>)$/;"	c
HaskellIndent	pack/plugins/start/sheerun-vim-polyglot/indent/elm.vim	/^function HaskellIndent()$/;"	f
HaskellSortImports	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haskell.vim	/^command! -buffer -range HaskellSortImports call haskell#sortImports(<line1>, <line2>)$/;"	c
HaxeHiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/haxe.vim	/^  command! -nargs=+ HaxeHiLink hi def link <args>$/;"	c
HaxeHiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/haxe.vim	/^  command! -nargs=+ HaxeHiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/after/syntax/cpp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/after/syntax/cpp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/extras/flow.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/extras/flow.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/extras/jsdoc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/extras/jsdoc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/cql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/cql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/cryptol.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/cryptol.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/css.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/css.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/gnuplot.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/gnuplot.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/jinja2.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/jinja2.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/lua.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/lua.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/mako.vim	/^    com -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/mako.vim	/^    com -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/mason.vim	/^		com -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/mason.vim	/^		com -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/mma.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/mma.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/ocaml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/ocaml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/octave.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/octave.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/perl.vim	/^command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/pgsql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/pgsql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/pod.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/pod.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/proto.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/proto.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/ps1.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/ps1.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/puppet.vim	/^command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/python.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/python.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/qml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/qml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/racket.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/racket.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/rhelp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/rhelp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/stylus.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/stylus.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/textile.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/textile.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/thrift.vim	/^    command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/thrift.vim	/^    command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/twig.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/twig.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/vbnet.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/vbnet.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/velocity.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/velocity.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/xs.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/xs.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
Highlight on the fly.	pack/plugins/start/t9md-vim-quickhl/README.md	/^# Highlight on the fly.$/;"	h
How?	pack/plugins/start/ludovicchabant-vim-gutentags/README.md	/^## How?$/;"	i
HtmlHiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlHiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/mustache.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	pack/plugins/start/sheerun-vim-polyglot/syntax/mustache.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlIndentClose	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^fun! <SID>HtmlIndentClose(lnum, pattern)$/;"	f
HtmlIndentClose	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentClose(lnum)$/;"	f
HtmlIndentCloseAlt	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^fun! <SID>HtmlIndentCloseAlt(lnum)$/;"	f
HtmlIndentCloseAlt	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentCloseAlt(lnum)$/;"	f
HtmlIndentGet	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^fun! HtmlIndentGet(lnum)$/;"	f
HtmlIndentOpen	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^fun! <SID>HtmlIndentOpen(lnum, pattern)$/;"	f
HtmlIndentOpen	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentOpen(lnum)$/;"	f
HtmlIndentOpenAlt	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^fun! <SID>HtmlIndentOpenAlt(lnum)$/;"	f
HtmlIndentOpenAlt	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentOpenAlt(lnum)$/;"	f
HtmlIndentPush	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentPush(tag)$/;"	f
HtmlIndentSum	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^fun! <SID>HtmlIndentSum(lnum, style)$/;"	f
HtmlIndentSum	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentSum(lnum, style)$/;"	f
INDEX_WHOLE_PROJECT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        set INDEX_WHOLE_PROJECT=0$/;"	v
INDEX_WHOLE_PROJECT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set INDEX_WHOLE_PROJECT=1$/;"	v
Ilist	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^command! -nargs=1 -bar -bang Ilist call <sid>Qlist("i", 1, 0, '<bang>' == '!', <f-args>)$/;"	c
InMultiVarStatement	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:InMultiVarStatement(lnum)$/;"	f
InOneLineScope	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:InOneLineScope(lnum)$/;"	f
IndentError	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:IndentError(msg, token, stack)$/;"	f
IndentLevel	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cryptol/folding.vim	/^function! IndentLevel(lnum)$/;"	f
IndentWithContinuation	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:IndentWithContinuation(lnum, ind, width)$/;"	f
IndentingKeywordInMSL	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:IndentingKeywordInMSL(msl_info) abort$/;"	f
Install	pack/plugins/start/fatih-vim-go/README.md	/^## Install$/;"	i
Installation	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^## Installation$/;"	i
Installation	pack/colors/start/tomasr-molokai/README.md	/^## Installation$/;"	i
Installation	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^## Installation$/;"	i
Installation	pack/plugins/start/romainl-vim-qf/README.md	/^## Installation$/;"	i
Installation	pack/plugins/start/romainl-vim-qlist/README.md	/^## Installation$/;"	i
Installation	pack/plugins/start/sheerun-vim-polyglot/README.md	/^## Installation$/;"	i
Installation	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^## Installation$/;"	i
Installing Apprentice.	pack/colors/start/romainl-apprentice/README.md	/^## Installing Apprentice.$/;"	i
Installing Disciple.	pack/colors/start/romainl-disciple/README.md	/^## Installing Disciple.$/;"	i
IsAssignment	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:IsAssignment(str, pos) abort$/;"	f
IsBlock	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^function s:IsBlock(...)$/;"	f
IsBlock	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:IsBlock()$/;"	f
IsCatchStandalone	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:IsCatchStandalone(lnum, i)$/;"	f
IsComment	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! s:IsComment(lnum, col)$/;"	f
IsComment	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:IsComment(linenum, col)$/;"	f
IsCommentLine	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:IsCommentLine(linenum)$/;"	f
IsCommentLine	pack/plugins/start/sheerun-vim-polyglot/indent/swift.vim	/^function! s:IsCommentLine(lnum)$/;"	f
IsCommentOrString	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! s:IsCommentOrString(lnum, col)$/;"	f
IsCommentOrString	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:IsCommentOrString(linenum, col)$/;"	f
IsExcludedFromIndent	pack/plugins/start/sheerun-vim-polyglot/indent/swift.vim	/^function! s:IsExcludedFromIndent()$/;"	f
IsExcludedFromIndentAtPosition	pack/plugins/start/sheerun-vim-polyglot/indent/swift.vim	/^function! s:IsExcludedFromIndentAtPosition(line, column)$/;"	f
IsInClassDef	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! s:IsInClassDef()$/;"	f
IsInCommentOrString	pack/plugins/start/sheerun-vim-polyglot/indent/lua.vim	/^function s:IsInCommentOrString(lnum, col)$/;"	f
IsInMultilineComment	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:IsInMultilineComment(lnum, col)$/;"	f
IsInRubyGroup	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:IsInRubyGroup(groups, lnum, col) abort$/;"	f
IsInString	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInString	pack/plugins/start/sheerun-vim-polyglot/indent/json.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInString	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:IsInString(lnum, col) abort$/;"	f
IsInString	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInStringDelimiter	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^function s:IsInStringDelimiter(lnum, col)$/;"	f
IsInStringDelimiter	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:IsInStringDelimiter(lnum, col) abort$/;"	f
IsInStringOrComment	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrComment	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:IsInStringOrComment(lnum, col) abort$/;"	f
IsInStringOrComment	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrDocumentation	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^function s:IsInStringOrDocumentation(lnum, col)$/;"	f
IsInStringOrDocumentation	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:IsInStringOrDocumentation(lnum, col) abort$/;"	f
IsInsidePythonBlock	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^function IsInsidePythonBlock(startline)$/;"	f
IsLineAtomContinuation	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:IsLineAtomContinuation(lnum)$/;"	f
IsLineComment	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:IsLineComment(lnum, col)$/;"	f
IsLineStringContinuation	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:IsLineStringContinuation(lnum)$/;"	f
IsPosInClassDef	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! s:IsPosInClassDef(pos)$/;"	f
IsStartingDelimiter	pack/plugins/start/sheerun-vim-polyglot/indent/blade.vim	/^function! s:IsStartingDelimiter(lnum)$/;"	f
IsString	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! s:IsString(lnum, col)$/;"	f
IsString	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:IsString(linenum, col)$/;"	f
IsUsefulReplOutput	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^function! s:IsUsefulReplOutput(str)$/;"	f
JuliaMatch	pack/plugins/start/sheerun-vim-polyglot/indent/julia.vim	/^function JuliaMatch(lnum, str, regex, st)$/;"	f
JumpFileChunk	pack/plugins/start/romainl-vim-qf/autoload/qf/filegroup.vim	/^function! s:JumpFileChunk(down) abort$/;"	f
JumpInit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:JumpInit(...) abort$/;"	f
JumpToFirstItemOfFileChunk	pack/plugins/start/romainl-vim-qf/autoload/qf/filegroup.vim	/^function! s:JumpToFirstItemOfFileChunk() abort$/;"	f
Jump_Back	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! s:Jump_Back()$/;"	f
Jump_Forward	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! s:Jump_Forward()$/;"	f
K	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> K :GoDoc<cr>$/;"	m
K	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^nnoremap <buffer> <expr> K col('.') < 7 && expand('<Lt>cword>') =~ '\\X' && getline('.') =~ '^\\w\\+\\s\\+\\x\\+\\>' ? 'wK' : 'K'$/;"	m
K	pack/plugins/start/sheerun-vim-polyglot/ftplugin/racket.vim	/^nnoremap <buffer> K :silent !raco docs <cword><cr>:redraw!<cr>$/;"	m
K	pack/plugins/start/sheerun-vim-polyglot/ftplugin/racket.vim	/^vnoremap <buffer> K :call <SID>Racket_visual_doc()<cr>$/;"	m
Keep	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=1 Keep call qf#filter#FilterList(<q-args>, 0)$/;"	c
LOG_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set LOG_FILE=$/;"	v
LabelEnv	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^function! s:LabelEnv()$/;"	f
Language packs	pack/plugins/start/sheerun-vim-polyglot/README.md	/^## Language packs$/;"	i
Language-specific options	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^### Language-specific options$/;"	k
Language_Options	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:Language_Options(option)$/;"	f
LatexBoxNextSection	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^function! s:LatexBoxNextSection(type, backwards, visual)$/;"	f
LatexBox_BibComplete	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! LatexBox_BibComplete(regexp)$/;"	f
LatexBox_BibSearch	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! LatexBox_BibSearch(regexp)$/;"	f
LatexBox_Complete	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! LatexBox_Complete(findstart, base)$/;"	f
LatexBox_Completion	pack/plugins/start/sheerun-vim-polyglot/indent/tex.vim	/^	augroup LatexBox_Completion$/;"	a
LatexBox_FoldLevel	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^function! LatexBox_FoldLevel(lnum)$/;"	f
LatexBox_FoldOnDemand	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^function! LatexBox_FoldOnDemand()$/;"	f
LatexBox_FoldText	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^function! LatexBox_FoldText()$/;"	f
LatexBox_FoldText_title	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^function! LatexBox_FoldText_title()$/;"	f
LatexBox_GetAuxFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_GetAuxFile()$/;"	f
LatexBox_GetBuildBasename	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_GetBuildBasename(with_dir)$/;"	f
LatexBox_GetCurrentEnvironment	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_GetCurrentEnvironment(...)$/;"	f
LatexBox_GetLogFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_GetLogFile()$/;"	f
LatexBox_GetMainFileName	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/findmain.vim	/^function! LatexBox_GetMainFileName(...)$/;"	f
LatexBox_GetMainTexFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_GetMainTexFile()$/;"	f
LatexBox_GetOutputFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_GetOutputFile()$/;"	f
LatexBox_GetTexRoot	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_GetTexRoot()$/;"	f
LatexBox_HighlightPairs	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^	augroup LatexBox_HighlightPairs$/;"	a
LatexBox_InComment	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_InComment(...)$/;"	f
LatexBox_JumpToNextBraces	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^function! LatexBox_JumpToNextBraces(backward)$/;"	f
LatexBox_LatexErrors	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! LatexBox_LatexErrors(status, ...)$/;"	f
LatexBox_Latexmk	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! LatexBox_Latexmk(force)$/;"	f
LatexBox_LatexmkClean	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! LatexBox_LatexmkClean(cleanall)$/;"	f
LatexBox_LatexmkStatus	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! LatexBox_LatexmkStatus(detailed)$/;"	f
LatexBox_LatexmkStop	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! LatexBox_LatexmkStop(silent)$/;"	f
LatexBox_TOC	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^function! LatexBox_TOC(...)$/;"	f
LatexBox_TexIndent	pack/plugins/start/sheerun-vim-polyglot/indent/tex.vim	/^function! LatexBox_TexIndent()$/;"	f
LatexBox_TexToTree	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_TexToTree(str)$/;"	f
LatexBox_TreeToTex	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_TreeToTex(tree)$/;"	f
LatexBox_View	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_View(...)$/;"	f
LatexBox_complete_inlineMath_or_not	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:LatexBox_complete_inlineMath_or_not()$/;"	f
LatexBox_inlineMath_completion	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:LatexBox_inlineMath_completion(regex, ...)$/;"	f
LatexBox_inlineMath_mathlist	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:LatexBox_inlineMath_mathlist(line,inline_pattern, line_num)$/;"	f
LatexBox_kpsewhich	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! LatexBox_kpsewhich(file)$/;"	f
LatexErrors	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^command! LatexErrors			call LatexBox_LatexErrors(-1)$/;"	c
LatexFold	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^command! LatexFold  call LatexBox_FoldOnDemand()$/;"	c
LatexLabels	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^command! LatexLabels call <SID>PromptLabelList()$/;"	c
LatexTOC	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^command! LatexTOC call LatexBox_TOC()$/;"	c
LatexTOCToggle	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^command! LatexTOCToggle call LatexBox_TOC(1)$/;"	c
LatexToggleStarEnv	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:LatexToggleStarEnv()$/;"	f
LatexView	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^command! -nargs=* LatexView call LatexBox_View('<args>')$/;"	c
Latexbox_CallIndent	pack/plugins/start/sheerun-vim-polyglot/indent/tex.vim	/^function! Latexbox_CallIndent()$/;"	f
Latexmk	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^command! -bang	Latexmk			call LatexBox_Latexmk(<q-bang> == "!")$/;"	c
LatexmkCallback	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:LatexmkCallback(basename, status)$/;"	f
LatexmkClean	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^command! -bang	LatexmkClean	call LatexBox_LatexmkClean(<q-bang> == "!")$/;"	c
LatexmkSetPID	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:LatexmkSetPID(basename, pid)$/;"	f
LatexmkStatus	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^command! -bang	LatexmkStatus	call LatexBox_LatexmkStatus(<q-bang> == "!")$/;"	c
LatexmkStop	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^command! LatexmkStop			call LatexBox_LatexmkStop(0)$/;"	c
LeadingOperator	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:LeadingOperator(cline_info) abort$/;"	f
License	pack/plugins/start/fatih-vim-go/README.md	/^## License$/;"	i
License	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^## License$/;"	i
License	pack/plugins/start/sheerun-vim-polyglot/README.md	/^## License$/;"	i
Lightline and Airline themes	pack/colors/start/romainl-apprentice/README.md	/^## Lightline and Airline themes$/;"	i
LineHasOpeningBrackets	pack/plugins/start/sheerun-vim-polyglot/indent/json.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
LineHasOpeningBrackets	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
ListLists	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer ListLists call qf#namedlist#ListLists()$/;"	c
LiveScriptCompile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ls.vim	/^\\        LiveScriptCompile call s:LiveScriptCompile(<line1>, <line2>, <q-args>)$/;"	c
LiveScriptCompile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompile(startline, endline, args)$/;"	f
LiveScriptCompileClose	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileClose()$/;"	f
LiveScriptCompileComplete	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileComplete(arg, cmdline, cursor)$/;"	f
LiveScriptCompileResetVars	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileResetVars()$/;"	f
LiveScriptCompileUpdate	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileUpdate(startline, endline)$/;"	f
LiveScriptCompileWatchUpdate	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileWatchUpdate()$/;"	f
LiveScriptMake	pack/plugins/start/sheerun-vim-polyglot/compiler/ls.vim	/^command! -bang -bar -nargs=* LiveScriptMake make<bang> <args>$/;"	c
LiveScriptRun	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ls.vim	/^command! -range=% -bar LiveScriptRun <line1>,<line2>:w !lsc -sp$/;"	c
LiveScriptUpdateMakePrg	pack/plugins/start/sheerun-vim-polyglot/compiler/ls.vim	/^augroup LiveScriptUpdateMakePrg$/;"	a
LoadList	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=+ -complete=customlist,qf#namedlist#CompleteList LoadList    call qf#namedlist#LoadList(0, <q-args>)$/;"	c
LoadListAdd	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=+ -complete=customlist,qf#namedlist#CompleteList LoadListAdd call qf#namedlist#LoadList(1, <q-args>)$/;"	c
Load_Settings_Override	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:Load_Settings_Override(custom)$/;"	f
Local features (available only in location/quickfix windows)	pack/plugins/start/romainl-vim-qf/README.md	/^### Local features (available only in location\/quickfix windows)$/;"	k
Locate	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -complete=file -nargs=+ Locate exe s:Grep(<q-bang>, <q-args>, 'locate')$/;"	c
Log	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^function Log(msg)$/;"	f
Log	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:Log(s)$/;"	f
Log	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Log(cmd, line1, line2, ...) abort$/;"	f
LoopParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^:LoopParseArgs$/;"	l
LoopParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:LoopParseArgs$/;"	l
MUcomplete	pack/plugins/start/lifepillar-vim-mucomplete/Readme.md	/^# MUcomplete$/;"	h
MUcomplete in action	pack/plugins/start/lifepillar-vim-mucomplete/Readme.md	/^# MUcomplete in action$/;"	h
MUcompleteAutoOff	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    command -bar -nargs=0 MUcompleteAutoOff call mucomplete#disable_auto()$/;"	c
MUcompleteAutoOn	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    command -bar -nargs=0 MUcompleteAutoOn call mucomplete#enable_auto()$/;"	c
MUcompleteAutoToggle	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    command -bar -nargs=0 MUcompleteAutoToggle call mucomplete#toggle_auto()$/;"	c
MakoIndentClose	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^fun! <SID>MakoIndentClose(lnum)$/;"	f
MakoIndentOpen	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^fun! <SID>MakoIndentOpen(lnum)$/;"	f
MakoIndentPush	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^fun! <SID>MakoIndentPush(tag)$/;"	f
Map	pack/plugins/start/sheerun-vim-polyglot/indent/twig.vim	/^function! s:Map(Fun, list)$/;"	f
MapNextFamily	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:MapNextFamily(map,cmd)$/;"	f
Mappings	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^## Mappings$/;"	i
Match	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^function s:Match(lnum, regex)$/;"	f
Match	pack/plugins/start/sheerun-vim-polyglot/indent/json.vim	/^function s:Match(lnum, regex)$/;"	f
Match	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:Match(lnum, regex) abort$/;"	f
Match	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:Match(lnum, regex)$/;"	f
MatchCount	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^fun! <SID>MatchCount(expr, pat)$/;"	f
MaxLookback	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:MaxLookback(startlinenum)$/;"	f
Merge	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Merge(cmd, bang, args) abort$/;"	f
Mkdir	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -nargs=? -complete=dir Mkdir$/;"	c
Molokai Color Scheme for Vim	pack/colors/start/tomasr-molokai/README.md	/^# Molokai Color Scheme for Vim$/;"	h
Motivation	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^## Motivation$/;"	i
Move	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=1 -bang -complete=file Move :$/;"	c
Move	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Move(force,destination) abort$/;"	f
Move	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:Move(cmd, count, map) abort$/;"	f
MoveComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:MoveComplete(A,L,P) abort$/;"	f
MoveSelectionDown	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:MoveSelectionDown(count) abort$/;"	f
MoveSelectionUp	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:MoveSelectionUp(count) abort$/;"	f
MultilineStringOrLineComment	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:MultilineStringOrLineComment(cline_info) abort$/;"	f
Neovim terminal theme	pack/colors/start/romainl-apprentice/README.md	/^## Neovim terminal theme$/;"	i
NextCharsMatch	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:NextCharsMatch(regex)$/;"	f
NextIndToken	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:NextIndToken(lnum, i)$/;"	f
NextNonBlankLine	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cryptol/folding.vim	/^function! NextNonBlankLine(lnum)$/;"	f
NextSection	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^function! s:NextSection(backwards)$/;"	f
NofrilsAcme	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsAcme :colo nofrils-acme$/;"	c
NofrilsAcme	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsAcme :colo nofrils-acme$/;"	c
NofrilsAcme	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsAcme :colo nofrils-acme$/;"	c
NofrilsAcme	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsAcme :colo nofrils-acme$/;"	c
NofrilsDark	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsDark :colo nofrils-dark$/;"	c
NofrilsDark	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsDark :colo nofrils-dark$/;"	c
NofrilsDark	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsDark :colo nofrils-dark$/;"	c
NofrilsDark	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsDark :colo nofrils-dark$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsFocusCode :call NofrilsFocusCode()$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^function! NofrilsFocusCode()$/;"	f
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsFocusCode :call NofrilsFocusCode()$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^function! NofrilsFocusCode()$/;"	f
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsFocusCode :call NofrilsFocusCode()$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^function! NofrilsFocusCode()$/;"	f
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsFocusCode :call NofrilsFocusCode()$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^function! NofrilsFocusCode()$/;"	f
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsFocusComments :call NofrilsFocusComments()$/;"	c
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^function! NofrilsFocusComments()$/;"	f
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsFocusComments :call NofrilsFocusComments()$/;"	c
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^function! NofrilsFocusComments()$/;"	f
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsFocusComments :call NofrilsFocusComments()$/;"	c
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^function! NofrilsFocusComments()$/;"	f
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsFocusComments :call NofrilsFocusComments()$/;"	c
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^function! NofrilsFocusComments()$/;"	f
NofrilsFocusNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsFocusNormal :call NofrilsNormal()$/;"	c
NofrilsFocusNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsFocusNormal :call NofrilsNormal()$/;"	c
NofrilsFocusNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsFocusNormal :call NofrilsNormal()$/;"	c
NofrilsFocusNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsFocusNormal :call NofrilsNormal()$/;"	c
NofrilsLight	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsLight :colo nofrils-light$/;"	c
NofrilsLight	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsLight :colo nofrils-light$/;"	c
NofrilsLight	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsLight :colo nofrils-light$/;"	c
NofrilsLight	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsLight :colo nofrils-light$/;"	c
NofrilsNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^function! NofrilsNormal()$/;"	f
NofrilsNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^function! NofrilsNormal()$/;"	f
NofrilsNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^function! NofrilsNormal()$/;"	f
NofrilsNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^function! NofrilsNormal()$/;"	f
NofrilsSepia	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsSepia :colo nofrils-sepia$/;"	c
NofrilsSepia	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsSepia :colo nofrils-sepia$/;"	c
NofrilsSepia	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsSepia :colo nofrils-sepia$/;"	c
NofrilsSepia	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsSepia :colo nofrils-sepia$/;"	c
NumberOfMatches	pack/plugins/start/sheerun-vim-polyglot/indent/swift.vim	/^function! s:NumberOfMatches(char, string, index)$/;"	f
O	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^        nnoremap <buffer> O <CR>:cclose<CR>$/;"	m
O	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^        nnoremap <buffer> O <CR>:lclose<CR>$/;"	m
OCamlGotoDefinition	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^fun! OCamlGotoDefinition(current_mode)$/;"	f
OCamlParseAnnot	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^fun! OCamlParseAnnot()$/;"	f
OCamlPrintType	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^fun! OCamlPrintType(current_mode)$/;"	f
OCaml_switch	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  fun OCaml_switch(newwin)$/;"	f
OMLetFoldLevel	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^function OMLetFoldLevel(l)$/;"	f
OneScope	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^function s:OneScope(lnum)$/;"	f
OneScope	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:OneScope(lnum)$/;"	f
OpenBrace	pack/plugins/start/sheerun-vim-polyglot/indent/puppet.vim	/^function! s:OpenBrace(lnum)$/;"	f
Options	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^## Options$/;"	i
PAUSE_BEFORE_EXIT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set PAUSE_BEFORE_EXIT=1$/;"	v
PAUSE_BEFORE_EXIT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set PAUSE_BEFORE_EXIT=0$/;"	v
POST_PROCESS_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set POST_PROCESS_CMD=%~2$/;"	v
POST_PROCESS_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set POST_PROCESS_CMD=$/;"	v
PROJECT_ROOT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set PROJECT_ROOT=%~2$/;"	v
PROJECT_ROOT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set PROJECT_ROOT=$/;"	v
PROJ_ROOT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set PROJ_ROOT=%~2$/;"	v
PackageMap	pack/plugins/start/sheerun-vim-polyglot/autoload/dart.vim	/^function! s:PackageMap() abort$/;"	f
PaperColor_GenerateSpecs	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! g:PaperColor_GenerateSpecs()$/;"	f
PaperColor_Test	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! g:PaperColor_Test()$/;"	f
ParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^:ParseArgs$/;"	l
ParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:ParseArgs$/;"	l
ParseCoffeeError	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:ParseCoffeeError(output, src, startline)$/;"	f
PartOfInclude	pack/plugins/start/sheerun-vim-polyglot/indent/puppet.vim	/^function! s:PartOfInclude(lnum)$/;"	f
PasteForStatusline	vimrc	/^function! PasteForStatusline()$/;"	f
Pick	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar Pick   :call s:choose('pick')$/;"	c
Pop	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:Pop(stack)$/;"	f
Preparing your environment.	pack/colors/start/romainl-apprentice/README.md	/^## Preparing your environment.$/;"	i
Preparing your environment.	pack/colors/start/romainl-disciple/README.md	/^## Preparing your environment.$/;"	i
PrevCodeLine	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^function s:PrevCodeLine(lnum)$/;"	f
PrevCodeLine	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:PrevCodeLine(lnum)$/;"	f
PrevIndToken	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:PrevIndToken(lnum, i)$/;"	f
PrevLineOfCode	pack/plugins/start/sheerun-vim-polyglot/indent/lua.vim	/^function s:PrevLineOfCode(lnum)$/;"	f
PrevNonBlankNonString	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
PrevNonBlankNonString	pack/plugins/start/sheerun-vim-polyglot/indent/json.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
PrevNonBlankNonString	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:PrevNonBlankNonString(lnum) abort$/;"	f
PrevNonBlankNonString	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
Previous releases	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## Previous releases$/;"	i
PreviousNotMSL	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:PreviousNotMSL(msl_info) abort$/;"	f
Profile script for µcomplete	pack/plugins/start/lifepillar-vim-mucomplete/test/Readme.md	/^# Profile script for µcomplete$/;"	h
PromptEnvWrapSelection	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:PromptEnvWrapSelection(...)$/;"	f
PromptForMainFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^function! s:PromptForMainFile()$/;"	f
PromptLabelList	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:PromptLabelList(...)$/;"	f
Push	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:Push(stack, token)$/;"	f
Pushing	pack/plugins/start/ludovicchabant-vim-gutentags/CONTRIBUTING.md	/^## Pushing$/;"	i
Qlist	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^function! s:Qlist(command, selection, start_at_cursor, force, ...)$/;"	f
QuickhlCwordDisable	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlCwordDisable :call quickhl#cword#disable()$/;"	c
QuickhlCwordEnable	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlCwordEnable  :call quickhl#cword#enable()$/;"	c
QuickhlCwordToggle	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlCwordToggle  :call quickhl#cword#toggle()$/;"	c
QuickhlManualAdd	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! -bang -nargs=1 QuickhlManualAdd     :call quickhl#manual#add(<q-args>,<bang>0)$/;"	c
QuickhlManualColors	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command!                QuickhlManualColors  :call quickhl#manual#colors()$/;"	c
QuickhlManualDelete	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! -bang -nargs=* QuickhlManualDelete  :call quickhl#manual#del(<q-args>,<bang>0)$/;"	c
QuickhlManualDisable	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command!                QuickhlManualDisable       :call quickhl#manual#disable()$/;"	c
QuickhlManualEnable	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command!                QuickhlManualEnable       :call quickhl#manual#enable()$/;"	c
QuickhlManualList	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command!                QuickhlManualList    :call quickhl#manual#list()$/;"	c
QuickhlManualLock	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command!                QuickhlManualLock    :call quickhl#manual#lock()$/;"	c
QuickhlManualLockToggle	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlManualLockToggle        :call quickhl#manual#lock_toggle()$/;"	c
QuickhlManualLockWindow	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlManualLockWindow        :call quickhl#manual#lock_window()$/;"	c
QuickhlManualLockWindowToggle	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlManualLockWindowToggle  :call quickhl#manual#lock_window_toggle()$/;"	c
QuickhlManualReset	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command!                QuickhlManualReset   :call quickhl#manual#reset()$/;"	c
QuickhlManualUnlock	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlManualUnlock            :call quickhl#manual#unlock()$/;"	c
QuickhlManualUnlockWindow	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlManualUnlockWindow      :call quickhl#manual#unlock_window()$/;"	c
QuickhlTagDisable	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlTagDisable  :call quickhl#tag#disable()$/;"	c
QuickhlTagEnable	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlTagEnable   :call quickhl#tag#enable()$/;"	c
QuickhlTagToggle	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlTagToggle   :call quickhl#tag#toggle()$/;"	c
Racket_visual_doc	pack/plugins/start/sheerun-vim-polyglot/ftplugin/racket.vim	/^function! s:Racket_visual_doc()$/;"	f
Random	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^function Random(min, max)$/;"	f
RandomID	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mma.vim	/^	function! RandomID()$/;"	f
ReadOnPath	pack/plugins/start/sheerun-vim-polyglot/syntax/ragel.vim	/^fun! <SID>ReadOnPath(script)$/;"	f
ReadTOC	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:ReadTOC(auxfile, texfile, ...)$/;"	f
RehighlightBlame	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:RehighlightBlame() abort$/;"	f
Reject	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=1 Reject call qf#filter#FilterList(<q-args>, 1)$/;"	c
Related Projects Based On PaperColor	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^# Related Projects Based On PaperColor$/;"	h
RemoteComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:RemoteComplete(A, L, P) abort$/;"	f
Remove	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang Remove$/;"	c
Remove	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Remove(force) abort$/;"	f
RemoveList	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=* -bang -complete=customlist,qf#namedlist#CompleteList RemoveList call qf#namedlist#RemoveList(expand("<bang>") == "!" ? 1 : 0, <q-args>)$/;"	c
RemoveTrailingComments	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^function s:RemoveTrailingComments(content)$/;"	f
Rename	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=1 -bang -complete=custom,s:Rename_complete Rename$/;"	c
Rename_complete	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:Rename_complete(A, L, P) abort$/;"	f
ReplaceCmd	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
ResetLists	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! s:ResetLists()$/;"	f
Restore	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer Restore call qf#filter#RestoreList()$/;"	c
RevisionComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:RevisionComplete(A, L, P) abort$/;"	f
Reword	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar Reword :call s:choose('reword')$/;"	c
RmDir	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! s:RmDir(path)$/;"	f
RubyBalloonexpr	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^function! RubyBalloonexpr() abort$/;"	f
RubyCursorFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^function! RubyCursorFile() abort$/;"	f
RubyCursorIdentifier	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^function! RubyCursorIdentifier() abort$/;"	f
Run	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! s:Run(dict, rustc_args, args)$/;"	f
RunRustfmt	pack/plugins/start/sheerun-vim-polyglot/autoload/rustfmt.vim	/^function! s:RunRustfmt(command, curw, tmpname)$/;"	f
RunTest	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^function RunTest(test)$/;"	f
RustEmitAsm	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -buffer RustEmitAsm call rust#Emit("asm", <q-args>)$/;"	c
RustEmitIr	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -buffer RustEmitIr call rust#Emit("llvm-ir", <q-args>)$/;"	c
RustExpand	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -complete=customlist,rust#CompleteExpand -bang -buffer RustExpand call rust#Expand(<bang>0, <q-args>)$/;"	c
RustFmt	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^command! -buffer RustFmt call rustfmt#Format()$/;"	c
RustFmtRange	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^command! -range -buffer RustFmtRange call rustfmt#FormatRange(<line1>, <line2>)$/;"	c
RustPlay	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^command! -range=% RustPlay :call rust#Play(<count>, <line1>, <line2>, <f-args>)$/;"	c
RustRun	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -complete=file -bang -buffer RustRun call rust#Run(<bang>0, <q-args>)$/;"	c
RustfmtCommand	pack/plugins/start/sheerun-vim-polyglot/autoload/rustfmt.vim	/^function! s:RustfmtCommand(filename)$/;"	f
RustfmtCommandRange	pack/plugins/start/sheerun-vim-polyglot/autoload/rustfmt.vim	/^function! s:RustfmtCommandRange(filename, line1, line2)$/;"	f
S	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^  command -nargs=1 -bang -bar -range=0 -complete=custom,s:SubComplete S$/;"	c
SID	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function s:SID() abort$/;"	f
SIDWrap	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:SIDWrap(func)$/;"	f
SIDWrap	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:SIDWrap(func)$/;"	f
SaveList	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=? -complete=customlist,qf#namedlist#CompleteList SaveList    call qf#namedlist#SaveList(0, <q-args>)$/;"	c
SaveListAdd	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=? -complete=customlist,qf#namedlist#CompleteList SaveListAdd call qf#namedlist#SaveList(1, <q-args>)$/;"	c
ScratchBufBuild	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:ScratchBufBuild(src, vert, size)$/;"	f
ScratchBufUpdate	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:ScratchBufUpdate(buf, text)$/;"	f
Screenshots	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^## Screenshots$/;"	i
SearchAndSkipComments	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:SearchAndSkipComments(pat, ...)$/;"	f
SearchCode	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! s:SearchCode(lnum, regex)$/;"	f
SearchEndPair	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:SearchEndPair(lnum, curr_col)$/;"	f
SearchMatchingKeyword	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! s:SearchMatchingKeyword(startlnum, open, close)$/;"	f
SearchPair	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! s:SearchPair(startlnum, lookback, skip, open, close)$/;"	f
SearchPair	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:SearchPair(lnum, curr_col, start, middle, end)$/;"	f
SearchPair	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:SearchPair(start, end)$/;"	f
SearchParensPair	pack/plugins/start/sheerun-vim-polyglot/indent/python.vim	/^function! s:SearchParensPair()$/;"	f
SelectCurrentEnv	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:SelectCurrentEnv(seltype)$/;"	f
SelectInlineMath	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:SelectInlineMath(seltype)$/;"	f
SelectJavascript	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^fun! s:SelectJavascript()$/;"	f
SetList	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! s:SetList(pat, reject)$/;"	f
SetMakePrg	pack/plugins/start/sheerun-vim-polyglot/compiler/coffee.vim	/^function! s:SetMakePrg()$/;"	f
SetMakePrg	pack/plugins/start/sheerun-vim-polyglot/compiler/ls.vim	/^function! s:SetMakePrg()$/;"	f
SetTagbar	pack/plugins/start/fatih-vim-go/ftplugin/go/tagbar.vim	/^function! s:SetTagbar()$/;"	f
SetTitle	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! s:SetTitle(pat, reject)$/;"	f
SetUp	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function SetUp()$/;"	f
Settings	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^## Settings$/;"	i
ShellTokenize	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! s:ShellTokenize(text)$/;"	f
ShiftWidth	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^  function! s:ShiftWidth()$/;"	f
ShouldSkip	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! s:ShouldSkip(startlnum, lnum, col)$/;"	f
ShouldSkip	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:ShouldSkip(startlinenum, linenum, col)$/;"	f
ShowUsage	pack/plugins/start/ludovicchabant-vim-gutentags/plat/unix/update_scopedb.sh	/^ShowUsage() {$/;"	f
ShowUsage	pack/plugins/start/ludovicchabant-vim-gutentags/plat/unix/update_tags.sh	/^ShowUsage() {$/;"	f
Shuffle	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^function Shuffle(list)$/;"	f
SkipExpr	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:SkipExpr(startlinenum)$/;"	f
SmartSearch	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:SmartSearch(linenum, regex)$/;"	f
Source	pack/plugins/start/wellle-tmux-complete-vim/rplugin/python3/deoplete/sources/tmuxcomplete.py	/^class Source(Base):$/;"	c
SourceFlowSyntax	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^fun! s:SourceFlowSyntax()$/;"	f
Split	pack/plugins/start/sheerun-vim-polyglot/syntax/ragel.vim	/^function! <SID>Split(path) abort " {{{1$/;"	f
Squash	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar Squash :call s:choose('squash')$/;"	c
StageDiff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StageNext	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageNext(count) abort$/;"	f
StagePatch	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StagePrevious	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StagePrevious(count) abort$/;"	f
StageReloadSeek	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageReloadSeek(target,lnum1,lnum2) abort$/;"	f
StageToggle	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
StageUndo	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageUndo() abort$/;"	f
StarSetf	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^func! s:StarSetf(ft)$/;"	f
StartOfFile	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^function! s:StartOfFile(pline_info) abort$/;"	f
StartStructure	pack/plugins/start/sheerun-vim-polyglot/indent/twig.vim	/^function! s:StartStructure(name)$/;"	f
StatementStart	pack/plugins/start/sheerun-vim-polyglot/indent/python.vim	/^function! s:StatementStart(lnum)$/;"	f
Status	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Status() abort$/;"	f
Steps to reproduce:	pack/plugins/start/fatih-vim-go/.github/ISSUE_TEMPLATE.md	/^### Steps to reproduce:$/;"	k
StripTrailingWhitespace	vimrc	/^command! StripTrailingWhitespace :call StripTrailingWhitespace()$/;"	c
StripTrailingWhitespace	vimrc	/^function! StripTrailingWhitespace()$/;"	f
Stylus	pack/plugins/start/sheerun-vim-polyglot/ftplugin/stylus.vim	/^command! Stylus !clear; cat % | stylus$/;"	c
SubComplete	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:SubComplete(A,L,P)$/;"	f
Subvert	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^command! -nargs=1 -bang -bar -range=0 -complete=custom,s:SubComplete Subvert$/;"	c
SudoEdit	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -complete=file -nargs=? SudoEdit$/;"	c
SudoEditInit	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SudoEditInit() abort$/;"	f
SudoReadCmd	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SudoReadCmd() abort$/;"	f
SudoSetup	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SudoSetup(file) abort$/;"	f
SudoWrite	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar SudoWrite$/;"	c
SudoWriteCmd	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SudoWriteCmd() abort$/;"	f
Swift	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^function! s:Swift()$/;"	f
SwiftIndent	pack/plugins/start/sheerun-vim-polyglot/indent/swift.vim	/^function! SwiftIndent(...)$/;"	f
SwitchWindow	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^function! s:SwitchWindow(buf)$/;"	f
SynAttrXMLish	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^fu! SynAttrXMLish(synattr)$/;"	f
SynEOL	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^fu! SynEOL(lnum)$/;"	f
SynFold	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFold <args> fold$/;"	c
SynFold	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFold <args>$/;"	c
SynFoldDoc	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFoldDoc <args> fold$/;"	c
SynFoldDoc	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFoldDoc <args>$/;"	c
SynJSXBlockEnd	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^fu! SynJSXBlockEnd(syns)$/;"	f
SynJSXContinues	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^fu! SynJSXContinues(cursyn, prevsyn)$/;"	f
SynJSXDepth	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^fu! SynJSXDepth(syns)$/;"	f
SynSOL	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^fu! SynSOL(lnum)$/;"	f
SynXMLish	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^fu! SynXMLish(syns)$/;"	f
Syntax Highlighting Plugins Target	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^## Syntax Highlighting Plugins Target$/;"	i
SyntaxName	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^function! s:SyntaxName(lnum, col)$/;"	f
SyntaxName	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^function! s:SyntaxName(linenum, col)$/;"	f
SyntaxName	pack/plugins/start/sheerun-vim-polyglot/indent/swift.vim	/^function! s:SyntaxName()$/;"	f
SyntaxNameAtPosition	pack/plugins/start/sheerun-vim-polyglot/indent/swift.vim	/^function! s:SyntaxNameAtPosition(line, column)$/;"	f
TAGS_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set TAGS_FILE=%~2$/;"	v
TAGS_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set TAGS_FILE=tags$/;"	v
TAPTestLine_foldtext	pack/plugins/start/sheerun-vim-polyglot/syntax/tap.vim	/^function! TAPTestLine_foldtext()$/;"	f
TB	vimrc	/^    command! -range=% TB  <line1>,<line2>w !nc termbin.com 9999 | tr -d '\\n' | cat$/;"	c
TOCActivate	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^function! s:TOCActivate(close)$/;"	f
TOCClose	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^function! s:TOCClose()$/;"	f
TOCFindMatch	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^function! s:TOCFindMatch(strsearch,duplicates,files)$/;"	f
TOCFoldLevel	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^function! TOCFoldLevel(lnum)$/;"	f
TOCFoldText	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^function! TOCFoldText()$/;"	f
TOCOpenBuf	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^function! s:TOCOpenBuf(file)$/;"	f
TOCToggleNumbers	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^function! s:TOCToggleNumbers()$/;"	f
TODO	pack/plugins/start/romainl-vim-qf/README.md	/^## TODO$/;"	i
TODO	pack/plugins/start/romainl-vim-qlist/README.md	/^## TODO$/;"	i
TearDown	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function TearDown()$/;"	f
Terminal emulators	pack/colors/start/romainl-disciple/README.md	/^### Terminal emulators$/;"	k
Terminal multiplexers	pack/colors/start/romainl-disciple/README.md	/^### Terminal multiplexers$/;"	k
TerraformFoldText	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/terraform.vim	/^function! TerraformFoldText()$/;"	f
TerraformFolds	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/terraform.vim	/^function! TerraformFolds()$/;"	f
TerraformIndent	pack/plugins/start/sheerun-vim-polyglot/indent/terraform.vim	/^function! TerraformIndent(lnum)$/;"	f
Test	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mma.vim	/^	function! Test()$/;"	f
Test_add_lines	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines()$/;"	f
Test_add_lines_fish	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines_fish()$/;"	f
Test_add_tags	pack/plugins/start/fatih-vim-go/autoload/go/tags_test.vim	/^func Test_add_tags()$/;"	f
Test_edit_file_with_same_name_as_a_branch	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_edit_file_with_same_name_as_a_branch()$/;"	f
Test_file_added_to_git	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_file_added_to_git()$/;"	f
Test_filename_with_equals	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_equals()$/;"	f
Test_filename_with_square_brackets	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_square_brackets()$/;"	f
Test_follow_symlink	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_follow_symlink()$/;"	f
Test_hunk_outside_noop	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_outside_noop()$/;"	f
Test_hunk_stage	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage()$/;"	f
Test_hunk_stage_nearby_hunk	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_nearby_hunk()$/;"	f
Test_hunk_undo	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_undo()$/;"	f
Test_jump_to_declaration_godef	pack/plugins/start/fatih-vim-go/autoload/go/def_test.vim	/^func Test_jump_to_declaration_godef()$/;"	f
Test_jump_to_declaration_guru	pack/plugins/start/fatih-vim-go/autoload/go/def_test.vim	/^func Test_jump_to_declaration_guru()$/;"	f
Test_keep_alt	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_alt()$/;"	f
Test_keep_modified	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_modified()$/;"	f
Test_keep_op_marks	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_op_marks()$/;"	f
Test_modify_lines	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_modify_lines()$/;"	f
Test_no_modifications	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_no_modifications()$/;"	f
Test_orphaned_signs	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_orphaned_signs()$/;"	f
Test_remove_first_lines	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_first_lines()$/;"	f
Test_remove_lines	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_lines()$/;"	f
Test_remove_tags	pack/plugins/start/fatih-vim-go/autoload/go/tags_test.vim	/^func Test_remove_tags()$/;"	f
Test_run_fmt	pack/plugins/start/fatih-vim-go/autoload/go/fmt_test.vim	/^func Test_run_fmt()$/;"	f
Test_sign_column_always	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_sign_column_always()$/;"	f
Test_undo_nearby_hunk	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_undo_nearby_hunk()$/;"	f
Test_untracked_file_outside_repo	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_outside_repo()$/;"	f
Test_untracked_file_square_brackets_within_repo	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_square_brackets_within_repo()$/;"	f
Test_untracked_file_within_repo	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_within_repo()$/;"	f
Test_update_file	pack/plugins/start/fatih-vim-go/autoload/go/fmt_test.vim	/^func Test_update_file()$/;"	f
Testing	pack/plugins/start/ludovicchabant-vim-gutentags/CONTRIBUTING.md	/^## Testing$/;"	i
TextilePreview	pack/plugins/start/sheerun-vim-polyglot/ftplugin/textile.vim	/^command! -nargs=0 TextilePreview call TextileRenderBufferToPreview()$/;"	c
TextileRender	pack/plugins/start/sheerun-vim-polyglot/ftplugin/textile.vim	/^function! TextileRender(lines)$/;"	f
TextileRenderBufferToFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderBufferToFile()$/;"	f
TextileRenderBufferToPreview	pack/plugins/start/sheerun-vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderBufferToPreview()$/;"	f
TextileRenderBufferToTab	pack/plugins/start/sheerun-vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderBufferToTab()$/;"	f
TextileRenderFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/textile.vim	/^command! -nargs=0 TextileRenderFile call TextileRenderBufferToFile()$/;"	c
TextileRenderFile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderFile(lines, filename)$/;"	f
TextileRenderTab	pack/plugins/start/sheerun-vim-polyglot/ftplugin/textile.vim	/^command! -nargs=0 TextileRenderTab call TextileRenderBufferToTab()$/;"	c
Theme Options	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^### Theme Options$/;"	k
Theme_Options	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:Theme_Options(option)$/;"	f
Third party integration	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^## Third party integration$/;"	i
ToggleFolds	vimrc	/^function! ToggleFolds()$/;"	f
TokenizeLine	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:TokenizeLine(lnum, direction)$/;"	f
Transform	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:Transform(algorithm,type)$/;"	f
TransformOpfunc	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:TransformOpfunc(type)$/;"	f
TransformSetup	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:TransformSetup(algorithm)$/;"	f
Trim	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^function s:Trim(ln)$/;"	f
Trim	pack/plugins/start/sheerun-vim-polyglot/indent/qml.vim	/^function! Trim(line)$/;"	f
Trim	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:Trim(ln)$/;"	f
Troubleshooting	pack/plugins/start/lifepillar-vim-mucomplete/Readme.md	/^# Troubleshooting$/;"	h
Troubleshooting	pack/plugins/start/sheerun-vim-polyglot/README.md	/^## Troubleshooting$/;"	i
TxClear	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=0 -bar -bang TxClear     call tmuxify#pane_send_raw('C-l', <q-bang>)$/;"	c
TxCreate	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=? -bar -bang TxCreate    call tmuxify#pane_create(<q-bang>, <args>)$/;"	c
TxKill	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=0 -bar -bang TxKill      call tmuxify#pane_kill(<q-bang>)$/;"	c
TxRun	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=? -bar -bang TxRun       call tmuxify#pane_run(<q-bang>, <args>)$/;"	c
TxSend	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=? -bar -bang TxSend      call tmuxify#pane_send(<q-bang>, <args>)$/;"	c
TxSendKey	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=? -bar -bang TxSendKey   call tmuxify#pane_send_raw(<q-args>, <q-bang>)$/;"	c
TxSetPane	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=? -bar -bang TxSetPane   call tmuxify#pane_set(<q-bang>, <f-args>)$/;"	c
TxSetRunCmd	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=? -bar       TxSetRunCmd call tmuxify#set_run_command_for_filetype(<args>)$/;"	c
TxSigInt	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^command! -nargs=0 -bar -bang TxSigInt    call tmuxify#pane_send_raw('C-c', <q-bang>)$/;"	c
U	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^    nmap U <Plug>(RepeatUndoLine)$/;"	m
UPDATED_SOURCE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set UPDATED_SOURCE=%~2$/;"	v
UPDATED_SOURCE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set UPDATED_SOURCE=$/;"	v
UnexpectedToken	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^function! s:UnexpectedToken(token, stack)$/;"	f
UnimpairedMapTransform	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! UnimpairedMapTransform(algorithm, key)$/;"	f
Unlink	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang Unlink$/;"	c
Unlock	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:Unlock$/;"	l
UpdateMakePrg	pack/plugins/start/sheerun-vim-polyglot/compiler/coffee.vim	/^  function! s:UpdateMakePrg()$/;"	f
UpdateMakePrg	pack/plugins/start/sheerun-vim-polyglot/compiler/ls.vim	/^  function! s:UpdateMakePrg()$/;"	f
Updating	pack/plugins/start/sheerun-vim-polyglot/README.md	/^## Updating$/;"	i
Usage	pack/plugins/start/fatih-vim-go/README.md	/^## Usage$/;"	i
Usage	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^:Usage$/;"	l
Usage	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:Usage$/;"	l
User-config Options	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^## User-config Options$/;"	i
W	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^  command! -bar W Wall$/;"	c
Wall	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=? Wall$/;"	c
Wall	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:Wall() abort$/;"	f
What they say about Apprentice.	pack/colors/start/romainl-apprentice/README.md	/^## What they say about Apprentice.$/;"	i
What?	pack/plugins/start/ludovicchabant-vim-gutentags/README.md	/^## What?$/;"	i
Why?	pack/plugins/start/ludovicchabant-vim-gutentags/README.md	/^## Why?$/;"	i
WithPath	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! s:WithPath(func, ...)$/;"	f
Working with 8/16 colors	pack/colors/start/romainl-apprentice/README.md	/^### Working with 8\/16 colors$/;"	k
Wq	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
WrapSelection	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:WrapSelection(wrapper)$/;"	f
Write	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
Writing	pack/plugins/start/ludovicchabant-vim-gutentags/CONTRIBUTING.md	/^## Writing$/;"	i
Y	vimrc	/^nnoremap Y y\$$/;"	m
[<C-D>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> [<C-D>      :<C-U>exe <SID>jump('edit',v:count)<SID>foldopen<CR>$/;"	m
[<Space>	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nmap [<Space> <Plug>unimpairedBlankUp$/;"	m
[D	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^    nmap <silent> [D <Plug>QlistDefinefromtop$/;"	m
[I	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^    nmap <silent> [I <Plug>QlistIncludefromtop$/;"	m
[M	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'b','n')<CR>$/;"	m
[[	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> [[ :<c-u>call go#textobj#FunctionJump('n', 'prev')<cr>$/;"	m
[[	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> [[ :<c-u>call go#textobj#FunctionJump('o', 'prev')<cr>$/;"	m
[[	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap  <buffer> <silent> [[ :call <SID>LatexBoxNextSection(0,1,0)<CR>$/;"	m
[[	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^vnoremap <buffer> <silent> [[ :<c-u>call <SID>LatexBoxNextSection(0,1,1)<CR>$/;"	m
[[	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^nnoremap <silent> <buffer> [[ :<C-U>call <SID>sectionmovement('{{','b','n',v:count1)<CR>$/;"	m
[[	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['rubyModule','rubyClass'],'b','n')<CR>$/;"	m
[[	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^nnoremap <silent> <buffer> [[ :call rust#Jump('n', 'Back')<CR>$/;"	m
[[	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^onoremap <silent> <buffer> [[ :call rust#Jump('o', 'Back')<CR>$/;"	m
[[	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^noremap <script> <buffer> <silent> [[ :call <SID>NextSection(1)<cr>$/;"	m
[]	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap  <buffer> <silent> [] :call <SID>LatexBoxNextSection(1,1,0)<CR>$/;"	m
[]	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^vnoremap <buffer> <silent> [] :<c-u>call <SID>LatexBoxNextSection(1,1,1)<CR>$/;"	m
[]	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass'],'b','n')<CR>$/;"	m
[c	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    nmap [c <Plug>GitGutterPrevHunk$/;"	m
[d	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> [d          :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
[e	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nmap [e <Plug>unimpairedMoveUp$/;"	m
[f	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nmap [f <Plug>unimpairedDirectoryPrevious$/;"	m
[m	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'b','n')<CR>$/;"	m
[n	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nmap [n <Plug>unimpairedContextPrevious$/;"	m
[n	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^omap [n <Plug>unimpairedContextPrevious$/;"	m
[o	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nmap [o <Plug>unimpairedOPrevious$/;"	m
[ob	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap [ob :set background=light<CR>$/;"	m
[od	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap [od :diffthis<CR>$/;"	m
[ov	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap [ov :set virtualedit+=all<CR>$/;"	m
[ox	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap [ox :set cursorline cursorcolumn<CR>$/;"	m
[p	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nmap [p <Plug>unimpairedPutAbove$/;"	m
]<C-D>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> ]<C-D>      :<C-U>exe <SID>jump('edit',v:count)<SID>foldopen<CR>$/;"	m
]<Space>	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nmap ]<Space> <Plug>unimpairedBlankDown$/;"	m
]D	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^    nmap <silent> ]D <Plug>QlistDefinefromhere$/;"	m
]I	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^    nmap <silent> ]I <Plug>QlistIncludefromhere$/;"	m
]M	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'','n')<CR>$/;"	m
][	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap  <buffer> <silent> ][ :call <SID>LatexBoxNextSection(1,0,0)<CR>$/;"	m
][	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^vnoremap <buffer> <silent> ][ :<c-u>call <SID>LatexBoxNextSection(1,0,1)<CR>$/;"	m
][	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass'],'','n')<CR>$/;"	m
]]	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> ]] :<c-u>call go#textobj#FunctionJump('n', 'next')<cr>$/;"	m
]]	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> ]] :<c-u>call go#textobj#FunctionJump('o', 'next')<cr>$/;"	m
]]	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap  <buffer> <silent> ]] :call <SID>LatexBoxNextSection(0,0,0)<CR>$/;"	m
]]	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^vnoremap <buffer> <silent> ]] :<c-u>call <SID>LatexBoxNextSection(0,0,1)<CR>$/;"	m
]]	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^nnoremap <silent> <buffer> ]] :<C-U>call <SID>sectionmovement('{{','' ,'n',v:count1)<CR>$/;"	m
]]	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['rubyModule','rubyClass'],'','n')<CR>$/;"	m
]]	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^nnoremap <silent> <buffer> ]] :call rust#Jump('n', 'Forward')<CR>$/;"	m
]]	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^onoremap <silent> <buffer> ]] :call rust#Jump('o', 'Forward')<CR>$/;"	m
]]	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^noremap <script> <buffer> <silent> ]] :call <SID>NextSection(0)<cr>$/;"	m
]c	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    nmap ]c <Plug>GitGutterNextHunk$/;"	m
]d	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> ]d          :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
]e	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nmap ]e <Plug>unimpairedMoveDown$/;"	m
]f	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nmap ]f <Plug>unimpairedDirectoryNext$/;"	m
]m	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'','n')<CR>$/;"	m
]n	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nmap ]n <Plug>unimpairedContextNext$/;"	m
]n	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^omap ]n <Plug>unimpairedContextNext$/;"	m
]o	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nmap ]o <Plug>unimpairedONext$/;"	m
]ob	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap ]ob :set background=dark<CR>$/;"	m
]od	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap ]od :diffoff<CR>$/;"	m
]ov	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap ]ov :set virtualedit-=all<CR>$/;"	m
]ox	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap ]ox :set nocursorline nocursorcolumn<CR>$/;"	m
]p	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nmap ]p <Plug>unimpairedPutBelow$/;"	m
__init__	pack/plugins/start/wellle-tmux-complete-vim/rplugin/python3/deoplete/sources/tmuxcomplete.py	/^    def __init__(self, vim):$/;"	m	class:Source
_annotations	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^no_annotations = AnnExc("No annotations (.annot) file found")$/;"	m
_build_module	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:_build_module(sid) abort$/;"	f
_compare	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
_concat	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:_concat(lists) abort$/;"	f
_default_compare	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
_define_ansi_highlights	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:_define_ansi_highlights() abort$/;"	f
_false	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_false() abort$/;"	f
_file2module	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:_file2module(file) abort$/;"	f
_get_functions	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^  function! s:_get_functions(sid) abort$/;"	f
_get_module_path	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:_get_module_path(name) abort$/;"	f
_get_sid_by_script	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:_get_sid_by_script(path) abort$/;"	f
_handleOldOptions	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:_handleOldOptions() abort$/;"	f
_import	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:_import(name) abort$/;"	f
_is_absolute_path	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^  function! s:_is_absolute_path(path) abort$/;"	f
_is_available	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:_is_available() abort$/;"	f
_null	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_null() abort$/;"	f
_pad_with_char	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
_path2project_directory_git	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
_path2project_directory_others	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
_path2project_directory_svn	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
_redir	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:_redir(cmd) abort$/;"	f
_replace	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
_resolve	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_resolve(val, prefix) abort$/;"	f
_runtime_files	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^  function! s:_runtime_files(path) abort$/;"	f
_split_by_wcswidth	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
_split_by_wcswidth_once	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
_true	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_true() abort$/;"	f
_unify_path	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^  function! s:_unify_path(path) abort$/;"	f
_uniq	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^  function! s:_uniq(list) abort$/;"	f
_vital_created	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_vital_created(module) abort$/;"	f
_vital_depends	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_files	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:_vital_files(pattern) abort$/;"	f
_vital_loaded	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_warn_deprecated	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:_warn_deprecated(name, alternative) abort$/;"	f
_wcwidth	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
a$	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^onoremap <buffer> a$ :normal va$<CR>$/;"	m
a$	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^vmap <buffer> a$ <Plug>LatexBox_SelectInlineMathOuter$/;"	m
a:args	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let a:args.error_info_cb = funcref('s:error_info_cb')$/;"	v
a:args	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let a:args.error_info_cb = funcref('s:error_info_cb')$/;"	v
a:args	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^  let a:args.error_info_cb = funcref('s:error_info_cb')$/;"	v
aM	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> aM :<C-U>call <SID>wrap_a('[[','][')<CR>$/;"	m
abbreviate_from_dict	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:abbreviate_from_dict(cmd,dict)$/;"	f
absolutes	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^function! s:absolutes(first, ...) abort$/;"	f
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role = {}$/;"	v
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['composite'] = abstract_role['widget'] + ['aria-activedescendant']$/;"	v
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['input'] = abstract_role['widget']$/;"	v
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['landmark'] = role_attributes['region']$/;"	v
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['range'] = abstract_role['input'] + ['aria-valuemax', 'aria-valuemin', 'aria-valuenow', 'aria-valuetext']$/;"	v
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['roletype'] = ['aria-atomic', 'aria-busy', 'aria-controls', 'aria-describedby', 'aria-disabled', 'aria-dropeffect', 'aria-flowto', 'aria-grabbed', 'aria-haspopup', 'aria-hidden', 'aria-invalid', 'aria-label', 'aria-labelledby', 'aria-live', 'aria-owns', 'aria-relevant']$/;"	v
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['section'] = abstract_role['structure'] + ['aria-expanded']$/;"	v
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['sectionhead'] = abstract_role['structure'] + ['aria-expanded']$/;"	v
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['select'] = abstract_role['composite'] + role_attributes['group'] + abstract_role['input']$/;"	v
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['structure'] = abstract_role['roletype']$/;"	v
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['widget'] = abstract_role['roletype']$/;"	v
abstract_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['window'] = abstract_role['roletype'] + ['aria-expanded']$/;"	v
abutton_dec	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let abutton_dec = 'details\\\\|embed\\\\|iframe\\\\|keygen\\\\|label\\\\|menu\\\\|select\\\\|textarea'$/;"	v
ac	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    omap ac <Plug>GitGutterTextObjectOuterPending$/;"	m
accumulate_job_output	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:accumulate_job_output(id, line) abort$/;"	f
act_on_pumvisible	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:act_on_pumvisible()$/;"	f
act_on_textchanged	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  fun! s:act_on_textchanged() " Assumes pumvisible() is false$/;"	f
adapt_to_environment	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:adapt_to_environment()$/;"	f
add_db	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! s:add_db(db_file) abort$/;"	f
add_methods	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
ae	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^onoremap <buffer> ae :normal vae<CR>$/;"	m
ae	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^vmap <buffer> ae <Plug>LatexBox_SelectCurrentEnvOuter$/;"	m
ae	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  onoremap <silent> <buffer> ae :<C-U>call <SID>wrap_around()<CR>$/;"	m
af	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> af :<c-u>call go#textobj#Function('a')<cr>$/;"	m
al	vimrc	/^omap al :<c-u>normal val<cr>$/;"	m
all	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
allsteps	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^function! s:allsteps()$/;"	f
alternatePair	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^function s:alternatePair()$/;"	f
alternatePair	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:alternatePair(stop)$/;"	f
am	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> am :<C-U>call <SID>wrap_a('[m',']M')<CR>$/;"	m
and	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:and(xs) abort$/;"	f
any	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
apply_highlightings	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:apply_highlightings()$/;"	f
args	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^  let args = {$/;"	v
aria_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, drag_and_drop_attributes)$/;"	v
aria_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, live_region_attributes)$/;"	v
aria_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, relationship_attributes)$/;"	v
aria_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, widget_attributes)$/;"	v
aria_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = global_states_and_properties$/;"	v
aria_attributes_value	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes_value = {$/;"	v
asmfmt_autosave	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:asmfmt_autosave()$/;"	f
async_guru	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:async_guru(args) abort$/;"	f
attr	pack/plugins/start/sheerun-vim-polyglot/syntax/vue.vim	/^function! s:attr(name, value)$/;"	f
attribute_highlight	pack/plugins/start/sheerun-vim-polyglot/syntax/ansible.vim	/^fun! s:attribute_highlight(attributes)$/;"	f
attributes_value	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, event_attributes_value)$/;"	v
attributes_value	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, microdata_attributes_value)$/;"	v
attributes_value	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, rdfa_attributes_value)$/;"	v
attributes_value	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let attributes_value = {$/;"	v
auto_sameids	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:auto_sameids()$/;"	f
auto_type_info	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:auto_type_info()$/;"	f
autofill_tokens	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let autofill_tokens = ['on', 'off', 'name', 'honorific-prefix', 'given-name', 'additional-name', 'family-name', 'honorific-suffix', 'nickname', 'username', 'new-password', 'current-password', 'organization-title', 'organization', 'street-address', 'address-line1', 'address-line2', 'address-line3', 'address-level4', 'address-level3', 'address-level2', 'address-level1', 'country', 'country-name', 'postal-code', 'cc-name', 'cc-given-name', 'cc-additional-name', 'cc-family-name', 'cc-number', 'cc-exp', 'cc-exp-month', 'cc-exp-year', 'cc-csc', 'cc-type', 'transaction-currency', 'transaction-amount', 'language', 'bday', 'bday-day', 'bday-month', 'bday-year', 'sex', 'url', 'photo']$/;"	v
b:	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^      let b:{matchstr(s:type,'[^.]*')}_subtype = matchstr(s:type,'\\.\\zs.*')$/;"	v
b:LatexBox_FoldSections	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^let b:LatexBox_FoldSections = s:FoldSectionLevels()$/;"	v
b:LatexBox_loaded	pack/plugins/start/sheerun-vim-polyglot/ftplugin/tex_LatexBox.vim	/^	let b:LatexBox_loaded = 1$/;"	v
b:Xsl_SyntaxFold_by	pack/plugins/start/sheerun-vim-polyglot/syntax/xsl.vim	/^	let b:Xsl_SyntaxFold_by=''$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^	let b:browsefilter = "Clojure Source Files (*.clj)\\t*.clj\\n" .$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let b:browsefilter="eRuby Files (*.erb, *.rhtml)\\t*.erb;*.rhtml\\n" . s:browsefilter$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^  let b:browsefilter="Haml Files (*.haml)\\t*.haml\\nSass Files (*.sass)\\t*.sass\\n" . s:browsefilter$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^  let b:browsefilter = "\\n".b:browsefilter$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^  let b:browsefilter = ''$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^  let b:browsefilter="Liquid Files (*.liquid)\\t*.liquid" . b:browsefilter$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/perl.vim	/^    let b:browsefilter = "Perl Source Files (*.pl)\\t*.pl\\n" .$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ps1.vim	/^	let b:browsefilter =$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ps1xml.vim	/^  let b:browsefilter = $/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/pug.vim	/^  let b:browsefilter="Pug Files (*.pug)\\t*.pug\\n" . s:browsefilter$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/qml.vim	/^   let b:browsefilter =$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  let b:browsefilter = "Ruby Source Files (*.rb)\\t*.rb\\n" .$/;"	v
b:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/stylus.vim	/^  let b:browsefilter="Stylus Files (*.styl)\\t*.styl\\n" . s:browsefilter$/;"	v
b:c_minlines	pack/plugins/start/sheerun-vim-polyglot/syntax/c.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	pack/plugins/start/sheerun-vim-polyglot/syntax/c.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	pack/plugins/start/sheerun-vim-polyglot/syntax/c.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:crystal_no_expensive	pack/plugins/start/sheerun-vim-polyglot/syntax/crystal.vim	/^  let b:crystal_no_expensive = 1$/;"	v
b:cucumber_root	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^let b:cucumber_root = expand('%:p:h:s?.*[\\\/]\\%(features\\|stories\\)\\zs[\\\/].*??')$/;"	v
b:cucumber_steps_glob	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^  let b:cucumber_steps_glob = b:cucumber_root.'\/**\/*.rb'$/;"	v
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^let b:current_syntax = "go"$/;"	v
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/godefstack.vim	/^let b:current_syntax = "godefstack"$/;"	v
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/gohtmltmpl.vim	/^let b:current_syntax = "gohtmltmpl"$/;"	v
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/gotexttmpl.vim	/^let b:current_syntax = "gotexttmpl"$/;"	v
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/vimgo.vim	/^let b:current_syntax = "vimgo"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/after/syntax/coffee.vim	/^  let b:current_syntax=s:current_syntax$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/after/syntax/haml.vim	/^  let b:current_syntax = s:current_syntax_save$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/after/syntax/html.vim	/^   let b:current_syntax = s:pre_less_cur_syn$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/after/syntax/html.vim	/^  let b:current_syntax = s:current_syntax_save$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/after/syntax/jsx.vim	/^  let b:current_syntax=s:current_syntax$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/after/syntax/rspec.vim	/^let b:current_syntax = 'rspec'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ansible.vim	/^let b:current_syntax = "ansible"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ansible.vim	/^let b:current_syntax = ''$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ansible_hosts.vim	/^let b:current_syntax = "ansible_hosts"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ansible_template.vim	/^    let b:current_syntax = ''$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ansible_template.vim	/^let b:current_syntax = "ansible_template"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ansible_template.vim	/^let b:current_syntax = ''$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/apiblueprint.vim	/^let b:current_syntax = 'apiblueprint'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/applescript.vim	/^let b:current_syntax = "applescript"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/asciidoc.vim	/^let b:current_syntax = "asciidoc"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/blade.vim	/^let b:current_syntax = 'blade'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/c.vim	/^let b:current_syntax = "c"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/cabal.vim	/^let b:current_syntax = "cabal"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/caddyfile.vim	/^let b:current_syntax = "caddyfile"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/clojure.vim	/^let b:current_syntax = "clojure"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/coffee.vim	/^  let b:current_syntax = 'coffee'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/cpp.vim	/^let b:current_syntax = "cpp"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/cql.vim	/^let b:current_syntax = "cql"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/cryptol.vim	/^let b:current_syntax = "cryptol"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/crystal.vim	/^let b:current_syntax = 'crystal'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/css.vim	/^let b:current_syntax = "css"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/cucumber.vim	/^let b:current_syntax = "cucumber"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/dart.vim	/^let b:current_syntax = "dart"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/dockerfile.vim	/^let b:current_syntax = "dockerfile"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/dockerfile.vim	/^let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^let b:current_syntax = 'eelixir'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/elixir.vim	/^let b:current_syntax = "elixir"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/elm.vim	/^let b:current_syntax = "elm"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ember-script.vim	/^let b:current_syntax = 'ember-script'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/emblem.vim	/^let b:current_syntax = 'emblem'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/erlang.vim	/^let b:current_syntax = "erlang"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^let b:current_syntax = 'eruby'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/fish.vim	/^let b:current_syntax = 'fish'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/git.vim	/^let b:current_syntax = "git"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/gitcommit.vim	/^let b:current_syntax = "gitcommit"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/gitconfig.vim	/^let b:current_syntax = "gitconfig"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/gitrebase.vim	/^let b:current_syntax = "gitrebase"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/gitsendemail.vim	/^let b:current_syntax = "gitsendemail"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/glsl.vim	/^  let b:current_syntax = "glsl"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/gnuplot.vim	/^let b:current_syntax = "gnuplot"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^let b:current_syntax = "go"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/godefstack.vim	/^let b:current_syntax = "godefstack"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/gohtmltmpl.vim	/^let b:current_syntax = "gohtmltmpl"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/gotexttmpl.vim	/^let b:current_syntax = "gotexttmpl"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/graphql.vim	/^let b:current_syntax = "graphql"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/groovy.vim	/^let b:current_syntax = "groovy"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/haml.vim	/^let b:current_syntax = "haml"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/haskell.vim	/^let b:current_syntax = "haskell"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/haxe.vim	/^let b:current_syntax = "haxe"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/jasmine.vim	/^let b:current_syntax = "jasmine"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/jinja2.vim	/^let b:current_syntax = "jinja"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/json.vim	/^let b:current_syntax = "json"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^let b:current_syntax = 'jst'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/julia.vim	/^let b:current_syntax = "julia"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/kotlin.vim	/^let b:current_syntax = "kotlin"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/less.vim	/^let b:current_syntax = "less"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^let b:current_syntax = 'liquid'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/litcoffee.vim	/^let b:current_syntax = "litcoffee"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ls.vim	/^  let b:current_syntax = 'livescript'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ls.vim	/^let b:current_syntax = "ls"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/lua.vim	/^let b:current_syntax = "lua"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/mako.vim	/^let b:current_syntax = "html"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/markdown.vim	/^let b:current_syntax = "mkd"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/mason.vim	/^let b:current_syntax = "mason"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/mma.vim	/^let b:current_syntax = "mma"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/mustache.vim	/^let b:current_syntax = "mustache"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/nginx.vim	/^let b:current_syntax = "nginx"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^let b:current_syntax = "nim"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/nix.vim	/^let b:current_syntax = 'nix'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ocaml.vim	/^let b:current_syntax = "ocaml"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/octave.vim	/^let b:current_syntax = "octave"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/opencl.vim	/^let b:current_syntax = "opencl"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/perl.vim	/^let b:current_syntax = "perl"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/pgsql.vim	/^let b:current_syntax = "pgsql"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^let b:current_syntax = "php"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/plantuml.vim	/^let b:current_syntax = 'plantuml'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/pod.vim	/^let b:current_syntax = "pod"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/proto.vim	/^let b:current_syntax = "proto"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ps1.vim	/^let b:current_syntax = "ps1"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ps1xml.vim	/^let b:current_syntax = "ps1xml"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/pug.vim	/^let b:current_syntax = "pug"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/puppet.vim	/^let b:current_syntax = "puppet"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/purescript.vim	/^let b:current_syntax = "purescript"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/python.vim	/^let b:current_syntax = "python"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/qml.vim	/^let b:current_syntax = "qml"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/racket.vim	/^let b:current_syntax = "racket"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ragel.vim	/^let b:current_syntax = "ragel"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/raml.vim	/^let b:current_syntax = "raml"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/rhelp.vim	/^let   b:current_syntax = "rhelp"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/rnoweb.vim	/^let   b:current_syntax = "rnoweb"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ruby.vim	/^let b:current_syntax = "ruby"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/rust.vim	/^let b:current_syntax = "rust"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/scala.vim	/^let b:current_syntax = "scala"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/scala.vim	/^let b:current_syntax = 'scala'$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/scss.vim	/^let b:current_syntax = "scss"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/slim.vim	/^let b:current_syntax = "slim"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/stylus.vim	/^let b:current_syntax = "stylus"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/swift.vim	/^let b:current_syntax = "swift"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/sxhkdrc.vim	/^let b:current_syntax = "sxhkdrc"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/systemd.vim	/^let b:current_syntax = "systemd"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/tap.vim	/^let b:current_syntax="tapVerboseOutput"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/terraform.vim	/^let b:current_syntax = "terraform"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/thrift.vim	/^let b:current_syntax = "thrift"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/tmux.vim	/^let b:current_syntax = "tmux"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/toml.vim	/^let b:current_syntax = "toml"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2.vim	/^let b:current_syntax = "tt2"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2html.vim	/^let b:current_syntax = "tt2html"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2js.vim	/^let b:current_syntax = "tt2js"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/typescript.vim	/^let b:current_syntax = "typescript"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/vala.vim	/^let b:current_syntax = "vala"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/vbnet.vim	/^let b:current_syntax = "vbnet"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/velocity.vim	/^let b:current_syntax = "velocity"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/vimgo.vim	/^let b:current_syntax = "vimgo"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/vue.vim	/^let b:current_syntax = "vue"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/xs.vim	/^let b:current_syntax = "xs"$/;"	v
b:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/xsl.vim	/^let b:current_syntax = "xsl"$/;"	v
b:did_ftplugin	pack/plugins/start/fatih-vim-go/ftplugin/asm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/fatih-vim-go/ftplugin/gohtmltmpl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ansible_hosts.vim	/^  let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/blade.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/caddyfile.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/coffee.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/dart.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elixir.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/git.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitcommit.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/graphql.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/less.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ls.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mako.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mma.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/nix.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/opencl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/perl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ps1.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ps1xml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/qml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/r.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rhelp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rnoweb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/slim.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/toml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/typescript.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	pack/plugins/start/fatih-vim-go/indent/go.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^  let b:did_indent=s:did_indent$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/arduino.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/blade.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/cabal.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/caddyfile.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/cucumber.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/dart.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/eelixir.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/elm.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/ember-script.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^  let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/eruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/gitconfig.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/go.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/haml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/handlebars.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/json.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/jst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/kotlin.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/liquid.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/litcoffee.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/lua.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/nginx.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/nim.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/opencl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/perl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/plantuml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/proto.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/ps1.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/pug.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/puppet.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/purescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/python.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/qml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/racket.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/rust.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/slim.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/stylus.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/swift.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/terraform.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/tex.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/vala.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	pack/plugins/start/sheerun-vim-polyglot/indent/vue.vim	/^let b:did_indent = 1$/;"	v
b:did_indent_hbs	pack/plugins/start/sheerun-vim-polyglot/indent/handlebars.vim	/^let b:did_indent_hbs = 1$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'elixir'$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'javascript'$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'text'$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'yaml'$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = g:eelixir_default_subtype$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^eex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.eex\\|\\.eelixir\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let b:eelixir_subtype = matchstr(s:lines,'eelixir_subtype=\\zs\\w\\+')$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'elixir'$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'javascript'$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'text'$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'yaml'$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = g:eelixir_default_subtype$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^eex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.eex\\|\\.eelixir\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eelixir_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^  let b:eelixir_subtype = matchstr(s:lines,'eelixir_subtype=\\zs\\w\\+')$/;"	v
b:eelixir_subtype_indentexpr	pack/plugins/start/sheerun-vim-polyglot/indent/eelixir.vim	/^let b:eelixir_subtype_indentexpr = &l:indentexpr$/;"	v
b:endwise_addition	pack/plugins/start/sheerun-vim-polyglot/ftplugin/fish.vim	/^let b:endwise_addition = 'end'$/;"	v
b:endwise_addition	pack/plugins/start/sheerun-vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_addition = '\\=index(["note","legend"], submatch(0))!=-1 ? "end " . submatch(0) : "end"'$/;"	v
b:endwise_pattern	pack/plugins/start/sheerun-vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_pattern = '^\\s*\\zs\\<\\(loop\\|group\\|alt\\|note\\ze[^:]*$\\|legend\\)\\>.*$'$/;"	v
b:endwise_syngroups	pack/plugins/start/sheerun-vim-polyglot/ftplugin/fish.vim	/^let b:endwise_syngroups = 'fishKeyword,fishConditional,fishRepeat'$/;"	v
b:endwise_syngroups	pack/plugins/start/sheerun-vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_syngroups = 'plantumlKeyword'$/;"	v
b:endwise_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/fish.vim	/^let b:endwise_words = 'begin,function,if,switch,while,for'$/;"	v
b:endwise_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_words = 'loop,group,alt,note,legend'$/;"	v
b:erlang_syntax_synced	pack/plugins/start/sheerun-vim-polyglot/syntax/erlang.vim	/^let b:erlang_syntax_synced = 1$/;"	v
b:eruby_nest_level	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^  let b:eruby_nest_level = 1$/;"	v
b:eruby_nest_level	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^  let b:eruby_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\.\\%(erb\\|rhtml\\)\\>','@','g'),'[^@]','','g'))$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+\\%(\\ze+\\w\\+\\)\\=$')$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+\\%(\\ze+\\w\\+\\)\\=$')$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/nginx.vim	/^let b:eruby_subtype = ''$/;"	v
b:eruby_subtype_indentexpr	pack/plugins/start/sheerun-vim-polyglot/indent/eruby.vim	/^let b:eruby_subtype_indentexpr = &l:indentexpr$/;"	v
b:git_dir	pack/plugins/start/sheerun-vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = $GIT_DIR$/;"	v
b:git_dir	pack/plugins/start/sheerun-vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = matchstr(expand('%:p'),'.*\\.git[\\\/]worktrees[\\\/][^\\\/]\\+\\>')$/;"	v
b:git_dir	pack/plugins/start/sheerun-vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = matchstr(expand('%:p'),'.*\\.git\\>')$/;"	v
b:git_dir	pack/plugins/start/sheerun-vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = substitute(b:git_dir,'\\\\','\/','g')$/;"	v
b:git_dir	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitcommit.vim	/^  let b:git_dir = expand("%:p:h")$/;"	v
b:handlebars_subtype_indentexpr	pack/plugins/start/sheerun-vim-polyglot/indent/handlebars.vim	/^let b:handlebars_subtype_indentexpr = &l:indentexpr$/;"	v
b:html_indent_script1	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^let b:html_indent_script1 = 'inc'$/;"	v
b:html_indent_usestate	pack/plugins/start/sheerun-vim-polyglot/indent/eruby.vim	/^let b:html_indent_usestate = 0$/;"	v
b:html_indent_usestate	pack/plugins/start/sheerun-vim-polyglot/indent/handlebars.vim	/^let b:html_indent_usestate = 0$/;"	v
b:indent_use_syntax	pack/plugins/start/sheerun-vim-polyglot/indent/perl.vim	/^let b:indent_use_syntax = has("syntax")$/;"	v
b:jst_nest_level	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^  let b:jst_nest_level = 1$/;"	v
b:jst_nest_level	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^  let b:jst_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\.\\%(erb\\|rhtml\\)\\>','@','g'),'[^@]','','g'))$/;"	v
b:jst_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'haml'$/;"	v
b:jst_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'html'$/;"	v
b:jst_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'javascript'$/;"	v
b:jst_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'ruby'$/;"	v
b:jst_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'text'$/;"	v
b:jst_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'yaml'$/;"	v
b:jst_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = g:jst_default_subtype$/;"	v
b:jst_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.jst\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:jst_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^  let b:jst_subtype = matchstr(&filetype,'^jst\\.\\zs\\w\\+')$/;"	v
b:jst_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^  let b:jst_subtype = matchstr(s:lines,'jst_subtype=\\zs\\w\\+')$/;"	v
b:jst_subtype_indentexpr	pack/plugins/start/sheerun-vim-polyglot/indent/jst.vim	/^let b:jst_subtype_indentexpr = &l:indentexpr$/;"	v
b:jsx_js_indentexpr	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^let b:jsx_js_indentexpr = &indentexpr$/;"	v
b:jsx_pragma_found	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^  let b:jsx_pragma_found = search(s:jsx_pragma_pattern, 'npw')$/;"	v
b:liquid_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
b:liquid_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:liquid_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
b:liquid_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:liquid_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = s:subtype$/;"	v
b:liquid_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype_indentexpr	pack/plugins/start/sheerun-vim-polyglot/indent/liquid.vim	/^let b:liquid_subtype_indentexpr = &l:indentexpr$/;"	v
b:loaded_plantuml_plugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/plantuml.vim	/^let b:loaded_plantuml_plugin = 1$/;"	v
b:main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/twig.vim	/^  let b:main_syntax = 'twig'$/;"	v
b:main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/twig.vim	/^  let b:main_syntax = b:current_syntax$/;"	v
b:match_ignorecase	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/coffee.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/jsx.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	pack/plugins/start/sheerun-vim-polyglot/ftplugin/blade.vim	/^    let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elixir.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let b:match_ignorecase=0$/;"	v
b:match_ignorecase	pack/plugins/start/sheerun-vim-polyglot/ftplugin/plantuml.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_skip	pack/plugins/start/sheerun-vim-polyglot/ftplugin/blade.vim	/^    let b:match_skip = 'synIDattr(synID(line("."), col("."), 0), "name") !=# "bladeKeyword"'$/;"	v
b:match_skip	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^	let b:match_skip = 's:comment\\|string\\|regex\\|character'$/;"	v
b:match_skip	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^  let b:match_skip =$/;"	v
b:match_skip	pack/plugins/start/sheerun-vim-polyglot/ftplugin/perl.vim	/^let b:match_skip = 's:comment\\|string\\|perlQQ\\|perlShellCommand\\|perlHereDoc\\|perlSubstitution\\|perlTranslation\\|perlMatch\\|perlFormatField'$/;"	v
b:match_skip	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  let b:match_skip =$/;"	v
b:match_skip	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^let b:match_skip = 's:comment\\|string\\|rustArrow'$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/coffee.vim	/^  let b:match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/jsx.vim	/^  let b:match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/blade.vim	/^    let b:match_words .= ',' .$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^	let b:match_words = &matchpairs$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^  let b:match_words =$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elixir.vim	/^  let b:match_words = '\\:\\@<!\\<\\%(do\\|fn\\)\\:\\@!\\>' .$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/fish.vim	/^let b:match_words =$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^  let b:match_words .= ','$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^  let b:match_words .= '\\<\\%(if\\w*\\|unless\\|case\\)\\>:\\<\\%(elsif\\|else\\|when\\)\\>:\\<end\\%(if\\w*\\|unless\\|case\\)\\>,\\<\\%(for\\|tablerow\\)\\>:\\%({%\\s*\\)\\@<=empty\\>:\\<end\\%(for\\|tablerow\\)\\>,<\\(capture\\|comment\\|highlight\\)\\>:\\<end\\1\\>'$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^  let b:match_words = ''$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  let b:match_words = b:match_words$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let b:match_words = b:mw$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/perl.vim	/^let b:match_words = '\\<if\\>:\\<elsif\\>:\\<else\\>'$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/plantuml.vim	/^  let b:match_words =$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/pug.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  let b:match_words =$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/stylus.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^  let b:match_words = '<:>,' .$/;"	v
b:mw	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = ''$/;"	v
b:mw	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(for\\|while\\)\\>:\\<do\\>:\\<done\\>,'$/;"	v
b:mw	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(match\\|try\\)\\>:\\<with\\>'$/;"	v
b:mw	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(object\\|sig\\|struct\\|begin\\)\\>:\\<end\\>'$/;"	v
b:mw	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<if\\>:\\<then\\>:\\<else\\>'$/;"	v
b:mw	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<let\\>:\\<and\\>:\\(\\<in\\>\\|;;\\)'$/;"	v
b:qf_isLoc	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^let b:qf_isLoc = !empty(getloclist(0))$/;"	v
b:ragel_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/ragel.vim	/^      let b:ragel_subtype = 'cpp'$/;"	v
b:ragel_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/ragel.vim	/^      let b:ragel_subtype = 'objc'$/;"	v
b:ragel_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/ragel.vim	/^      let b:ragel_subtype = 'ruby'$/;"	v
b:ragel_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/ragel.vim	/^    let b:ragel_subtype = g:ragel_default_subtype$/;"	v
b:ragel_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/ragel.vim	/^    let b:ragel_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.rl\\|\\.ragel\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:ragel_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/ragel.vim	/^  let b:ragel_subtype = matchstr(s:lines, 'ragel_subtype=\\zs\\w\\+')$/;"	v
b:ran_once	pack/plugins/start/sheerun-vim-polyglot/indent/twig.vim	/^let b:ran_once = 1$/;"	v
b:ruby_no_expensive	pack/plugins/start/sheerun-vim-polyglot/syntax/haml.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	pack/plugins/start/sheerun-vim-polyglot/syntax/ruby.vim	/^  let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	pack/plugins/start/sheerun-vim-polyglot/syntax/slim.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:ruby_version	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^    let b:ruby_version = get(readfile(s:version_file, '', 1), '')$/;"	v
b:rust_last_args	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^	let b:rust_last_args = []$/;"	v
b:rust_last_rustc_args	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^	let b:rust_last_rustc_args = []$/;"	v
b:rust_original_delimitMate_excluded_regions	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^		let b:rust_original_delimitMate_excluded_regions = b:delimitMate_excluded_regions$/;"	v
b:rust_set_conceallevel	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^	let b:rust_set_conceallevel=1$/;"	v
b:rust_set_foldmethod	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^	let b:rust_set_foldmethod=1$/;"	v
b:spell_options	pack/plugins/start/sheerun-vim-polyglot/syntax/dart.vim	/^let b:spell_options = "contained"$/;"	v
b:spell_options	pack/plugins/start/sheerun-vim-polyglot/syntax/groovy.vim	/^let b:spell_options="contained"$/;"	v
b:spell_options	pack/plugins/start/sheerun-vim-polyglot/syntax/haxe.vim	/^let b:spell_options="contained"$/;"	v
b:sql_type_override	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^    let b:sql_type_override='mysql'$/;"	v
b:surround_35	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_35 = "<%# \\r %>"$/;"	v
b:surround_45	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_45 = "<% \\r %>"$/;"	v
b:surround_5	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_5 = "<% \\r %>\\n<% end %>"$/;"	v
b:surround_61	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_61 = "<%= \\r %>"$/;"	v
b:syng_str	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^let b:syng_str = get(b:,'syng_str','string\\|template\\|special')$/;"	v
b:syng_strcom	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^let b:syng_strcom = get(b:,'syng_strcom','string\\|comment\\|regex\\|special\\|doc\\|template\\%(braces\\)\\@!')$/;"	v
b:tt2_syn_inc_perl	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2.vim	/^    let b:tt2_syn_inc_perl = 1$/;"	v
b:tt2_syn_tags	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2.vim	/^    let b:tt2_syn_tags = '\\[% %]'$/;"	v
b:undo_ftplugin	pack/plugins/start/fatih-vim-go/ftplugin/asm.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^let b:undo_ftplugin = "setl fo< com< ofu<"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/javascript.vim	/^  let b:undo_ftplugin .= ' | setlocal iskeyword< suffixesadd<'$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/javascript.vim	/^  let b:undo_ftplugin = 'setlocal iskeyword< suffixesadd<'$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ansible_hosts.vim	/^let b:undo_ftplugin = "setl comments< commentstring< formatoptions<"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^		let b:undo_ftplugin .= ' | setlocal ' . s:setting . '<'$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^	let b:undo_ftplugin .= ' | setlocal path<'$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^	let b:undo_ftplugin .= ' | unlet! b:browsefilter'$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^	let b:undo_ftplugin .= ' | unlet! b:match_words b:match_skip'$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^let b:undo_ftplugin = 'setlocal iskeyword< define< formatoptions< comments< commentstring< lispwords<'$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^  let b:undo_ftplugin .=$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^let b:undo_ftplugin = "setl fo< com< cms< ofu<"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/dart.vim	/^let b:undo_ftplugin = 'setl et< fo< sw< sts< com< cms< inex< isf<'$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^let b:undo_ftplugin = "setl cms< " .$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/elixir.vim	/^let b:undo_ftplugin = 'setlocal sw< sts< et< isk< com< cms< path< inex< sua< '.$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^let b:undo_ftplugin = "setl cms< "$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/git.vim	/^let b:undo_ftplugin = "setl keywordprg< path< includeexpr<"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitcommit.vim	/^let b:undo_ftplugin = 'setl modeline< tabstop< formatoptions< tw< com< cms<'$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitcommit.vim	/^let b:undo_ftplugin = b:undo_ftplugin . "|delc DiffGitCached"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitconfig.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^  let b:undo_ftplugin = ""$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin . "|nunmap <buffer> K"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin."|setl com< cms< fo< ml<"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/less.vim	/^let b:undo_ftplugin = "setl cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^  let b:undo_ftplugin .= '|'$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^  let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^let b:undo_ftplugin .= 'setl cms< | unlet! b:browsefilter b:match_words'$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/perl.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isk< isf< kp< path<" .$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ps1.vim	/^let b:undo_ftplugin = "setlocal tw< cms< fo<" .$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ps1xml.vim	/^let b:undo_ftplugin = "setlocal tw< cms< fo<" .$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/pug.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/qml.vim	/^let b:undo_ftplugin =$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^let b:undo_ftplugin .= "| sil! cunmap <buffer> <Plug><cword>| sil! cunmap <buffer> <Plug><cfile>"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^let b:undo_ftplugin = "setl fo< inc< inex< sua< def< com< cms< path< tags< kp<"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^let b:undo_ftplugin = "$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/slim.vim	/^let b:undo_ftplugin = "setl isk<"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/stylus.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/toml.vim	/^let b:undo_ftplugin = ""$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/twig.vim	/^  let b:undo_ftplugin .= "|setlocal comments< formatoptions<"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/twig.vim	/^  let b:undo_ftplugin = "setlocal comments< formatoptions<"$/;"	v
b:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/typescript.vim	/^let b:undo_ftplugin = "setl fo< ofu< com< cms<"$/;"	v
b:undo_indent	pack/plugins/start/sheerun-vim-polyglot/indent/arduino.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	let b:undo_indent .= '| setlocal lisp<'$/;"	v
b:undo_indent	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^let b:undo_indent = 'setlocal autoindent< smartindent< expandtab< softtabstop< shiftwidth< indentexpr< indentkeys<'$/;"	v
b:undo_indent	pack/plugins/start/sheerun-vim-polyglot/indent/cucumber.vim	/^let b:undo_indent = 'setl ai< inde< indk<'$/;"	v
b:undo_indent	pack/plugins/start/sheerun-vim-polyglot/indent/dart.vim	/^let b:undo_indent = 'setl cin< cino<'$/;"	v
b:undo_indent	pack/plugins/start/sheerun-vim-polyglot/indent/gitconfig.vim	/^let b:undo_indent = 'setl ai< inde< indk<'$/;"	v
b:undo_indent	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^let b:undo_indent = 'setlocal indentexpr< smartindent< autoindent< indentkeys<'$/;"	v
b:undo_indent	pack/plugins/start/sheerun-vim-polyglot/indent/proto.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	pack/plugins/start/sheerun-vim-polyglot/indent/ps1.vim	/^let b:undo_indent = "setl si<"$/;"	v
b:undo_indent	pack/plugins/start/sheerun-vim-polyglot/indent/racket.vim	/^let b:undo_indent = "setl ai< si<"$/;"	v
b:undo_indent	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let b:undo_indent = 'setlocal indentexpr< smartindent< autoindent< indentkeys<'$/;"	v
b:vala_minlines	pack/plugins/start/sheerun-vim-polyglot/syntax/vala.vim	/^  let b:vala_minlines = 50$/;"	v
b:vala_minlines	pack/plugins/start/sheerun-vim-polyglot/syntax/vala.vim	/^  let b:vala_minlines = vala_minlines$/;"	v
badgood	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:badgood(args)$/;"	f
beep	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:beep()$/;"	f
binary_search	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
body_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let body_attributes = {'onafterprint': [], 'onbeforeprint': [], 'onbeforeunload': [], 'onblur': [], 'onerror': [], 'onfocus': [], 'onhashchange': [], 'onload': [], 'onmessage': [], 'onoffline': [], 'ononline': [], 'onpopstate': [], 'onredo': [], 'onresize': [], 'onstorage': [], 'onundo': [], 'onunload': []}$/;"	v
body_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let body_attributes = {}$/;"	v
bracket_type	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:bracket_type(char)$/;"	f
break	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
bsub	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^function! s:bsub(target,pattern,replacement)$/;"	f
buffer	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer_commit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_compare_age	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
buffer_containing_commit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_expand	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_getline	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getvar	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_name	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_path	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_repo	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_rev	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_setvar	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_sha1	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_spec	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  function! s:buffer_spec() dict abort$/;"	f
buffer_type	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_up	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_up(...) dict abort$/;"	f
build_command	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! s:build_command(base, capture_args, splitmode)$/;"	f
build_path	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^function! s:build_path(path) abort$/;"	f
c	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:c()$/;"	f
cS	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap cS  <Plug>CSurround$/;"	m
cache_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! s:cache_project_root(path) abort$/;"	f
callback_handlers_on_exit	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:callback_handlers_on_exit(job, exit_status, data) abort$/;"	f
callbacks	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let callbacks = go#job#Spawn(a:args)$/;"	v
callbacks	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let callbacks = go#job#Spawn(a:args)$/;"	v
callbacks	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^  let callbacks = go#job#Spawn(a:args)$/;"	v
camelcase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:camelcase(word)$/;"	f
can_complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:can_complete(i) " Is the i-th completion method applicable?$/;"	f
can_diffoff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
cbs	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^    let cbs.callback = a:args.callback$/;"	v
cbs	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^    let cbs.exit_cb = a:args.exit_cb$/;"	v
cbs.exit_cb	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^  function cbs.exit_cb(job, exitval) dict$/;"	f
cbs.show_errors	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^  function cbs.show_errors(listtype) dict$/;"	f
cd	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let cd = exists('*haslocaldir') && haslocaldir() ? 'lcd ' : 'cd '$/;"	v
cd	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let cd = exists('*haslocaldir') && haslocaldir() ? 'lcd ' : 'cd '$/;"	v
cd	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let cd = exists('*haslocaldir') && haslocaldir() ? 'lcd ' : 'cd '$/;"	v
cexpr	pack/plugins/start/sheerun-vim-polyglot/autoload/dart.vim	/^function! s:cexpr(errorformat, joined_lines) abort$/;"	f
cfile	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:cfile() abort$/;"	f
cgc	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^    nmap cgc <Plug>ChangeCommentary$/;"	m
changesurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:changesurround(...) " {{{1$/;"	f
channel_id	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:channel_id(channel) abort$/;"	f
char_range	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
charset	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let charset = [$/;"	v
check_for_string	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:check_for_string()$/;"	f
chomp	pack/plugins/start/fatih-vim-go/autoload/go/keyify.vim	/^function! s:chomp(string)$/;"	f
chomp	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
choose	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^function! s:choose(word)$/;"	f
chop	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f
clear	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:clear(list) abort$/;"	f
clearPack	get-plugins.go	/^func clearPack() {$/;"	f
clojure_check_for_string_worker	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:clojure_check_for_string_worker()$/;"	f
clojure_indent_pos	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:clojure_indent_pos()$/;"	f
clojure_is_method_special_case_worker	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:clojure_is_method_special_case_worker(position)$/;"	f
clojurecomplete#Complete	pack/plugins/start/sheerun-vim-polyglot/autoload/clojurecomplete.vim	/^function! clojurecomplete#Complete(findstart, base)$/;"	f
closematch	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
cmd_job	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function s:cmd_job(args) abort$/;"	f
cob	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap cob :set background=<C-R>=&background == 'dark' ? 'light' : 'dark'<CR><CR>$/;"	m
cod	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap cod :<C-R>=&diff ? 'diffoff' : 'diffthis'<CR><CR>$/;"	m
coerce	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:coerce(transformation)$/;"	f
coffee#CoffeeSetUpErrorFormat	pack/plugins/start/sheerun-vim-polyglot/autoload/coffee.vim	/^function! coffee#CoffeeSetUpErrorFormat()$/;"	f
coffee#CoffeeSetUpVariables	pack/plugins/start/sheerun-vim-polyglot/autoload/coffee.vim	/^function! coffee#CoffeeSetUpVariables()$/;"	f
color	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^type color struct {$/;"	t
colors	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^var colors = map[string]color{$/;"	v
colors_name	pack/colors/start/romainl-apprentice/colors/apprentice.vim	/^let colors_name = "apprentice"$/;"	v
colors_name	pack/colors/start/romainl-disciple/colors/disciple.vim	/^let colors_name = 'disciple'$/;"	v
colors_should_have_correct_format	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:colors_should_have_correct_format()$/;"	f
colour	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:colour(r, g, b)$/;"	f
combinations	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
command	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:command(definition) abort$/;"	f
commands.abbrev.process	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:commands.abbrev.process(bang,line1,line2,count,args)$/;"	f
commands.abstract.dispatch	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:commands.abstract.dispatch(bang,line1,line2,count,args)$/;"	f
commands.abstract.go	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:commands.abstract.go(bang,line1,line2,count,args)$/;"	f
commands.search.process	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:commands.search.process(bang,line1,line2,count,args)$/;"	f
commands.substitute.process	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:commands.substitute.process(bang,line1,line2,count,args)$/;"	f
common_head	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f
complete_descriptor	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! s:complete_descriptor(...) abort$/;"	f
complete_panes	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! s:complete_panes(...) abort$/;"	f
complete_sessions	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! s:complete_sessions(...) abort$/;"	f
complete_windows	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! s:complete_windows(...) abort$/;"	f
concat	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:concat(list) abort$/;"	f
configured_tree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:configured_tree(git_dir) abort$/;"	f
conj	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
cons	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
contains_multibyte	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
continues	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^function s:continues(ln,con)$/;"	f
continues	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:continues(ln,con)$/;"	f
copy_dir	pack/plugins/start/sheerun-vim-polyglot/build	/^copy_dir() {$/;"	f
core_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let core_attributes = {'accesskey': [], 'class': [], 'contenteditable': ['true', 'false', ''], 'contextmenu': [], 'dir': ['ltr', 'rtl'], 'draggable': ['true', 'false'], 'hidden': ['hidden', ''], 'id': [], 'is': [], 'lang': lang_tag, 'spellcheck': ['true', 'false', ''], 'style': [], 'tabindex': [], 'title': []}$/;"	v
count	pack/plugins/start/sheerun-vim-polyglot/indent/liquid.vim	/^function! s:count(string,pattern)$/;"	f
count_braces	pack/plugins/start/sheerun-vim-polyglot/indent/stylus.vim	/^function s:count_braces(lnum, count_open)$/;"	f
cov	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap cov :set <C-R>=(&virtualedit =~# "all") ? 'virtualedit-=all' : 'virtualedit+=all'<CR><CR>$/;"	m
coverage_browser_callback	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! s:coverage_browser_callback(coverfile, job, exit_status, data)$/;"	f
coverage_browser_handler	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! s:coverage_browser_handler(job, exit_status, data) abort$/;"	f
coverage_callback	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! s:coverage_callback(coverfile, job, exit_status, data)$/;"	f
coverage_handler	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! s:coverage_handler(job, exit_status, data) abort$/;"	f
coverage_job	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function s:coverage_job(args)$/;"	f
cox	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap cox :set <C-R>=&cursorline && &cursorcolumn ? 'nocursorline nocursorcolumn' : 'cursorline cursorcolumn'<CR><CR>$/;"	m
cpath	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:cpath(path) abort$/;"	f
cr	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^  nmap cr  <Plug>Coerce$/;"	m
create_cmd	pack/plugins/start/fatih-vim-go/autoload/go/tags.vim	/^func s:create_cmd(args) abort$/;"	f
create_dictionary	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:create_dictionary(lhs,rhs,opts)$/;"	f
crossorigin	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let crossorigin = ['anonymous', 'use-credentials']$/;"	v
cry_minlines	pack/plugins/start/sheerun-vim-polyglot/syntax/cryptol.vim	/^  let cry_minlines = 50$/;"	v
crystal_lang#complete	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#complete(findstart, base) abort$/;"	f
crystal_lang#context	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#context(file, pos, option_str) abort$/;"	f
crystal_lang#entrypoint_for	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#entrypoint_for(file_path) abort$/;"	f
crystal_lang#format	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#format(option_str) abort$/;"	f
crystal_lang#format_string	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#format_string(code, ...) abort$/;"	f
crystal_lang#get_spec_switched_path	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#get_spec_switched_path(absolute_path) abort$/;"	f
crystal_lang#impl	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#impl(file, pos, option_str) abort$/;"	f
crystal_lang#jump_to_definition	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#jump_to_definition(file, pos) abort$/;"	f
crystal_lang#run_all_spec	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#run_all_spec(...) abort$/;"	f
crystal_lang#run_current_spec	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#run_current_spec(...) abort$/;"	f
crystal_lang#switch_spec_file	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#switch_spec_file(...) abort$/;"	f
crystal_lang#tool	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#tool(name, file, pos, option_str) abort$/;"	f
crystal_lang#type_hierarchy	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#type_hierarchy(file, option_str) abort$/;"	f
crystal_minlines	pack/plugins/start/sheerun-vim-polyglot/syntax/crystal.vim	/^    let crystal_minlines = 500$/;"	v
cs	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap cs  <Plug>Csurround$/;"	m
ctrlp#decls#accept	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#accept(mode, str) abort$/;"	f
ctrlp#decls#cmd	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#cmd(mode, ...) abort$/;"	f
ctrlp#decls#enter	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#enter() abort$/;"	f
ctrlp#decls#exit	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#exit() abort$/;"	f
ctrlp#decls#init	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#init() abort$/;"	f
curhour	vimrc	/^        let curhour=system('date -u +%H')$/;"	v
current_char	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:current_char()$/;"	f
current_compiler	pack/plugins/start/fatih-vim-go/compiler/go.vim	/^let current_compiler = "go"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/cake.vim	/^let current_compiler = 'cake'$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/cargo.vim	/^let current_compiler = "cargo"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/coffee.vim	/^let current_compiler = 'coffee'$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/cryptol.vim	/^let current_compiler = "cryptol"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/cucumber.vim	/^let current_compiler = "cucumber"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/eruby.vim	/^let current_compiler = "eruby"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/eslint.vim	/^let current_compiler = "eslint"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/exunit.vim	/^let current_compiler = "exunit"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/fish.vim	/^let current_compiler = 'fish'$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/go.vim	/^let current_compiler = "go"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/haml.vim	/^let current_compiler = "haml"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/ls.vim	/^let current_compiler = 'ls'$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/nim.vim	/^let current_compiler = "nim"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/python.vim	/^let current_compiler = "python"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/rake.vim	/^let current_compiler = "rake"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/rspec.vim	/^let current_compiler = "rspec"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/ruby.vim	/^let current_compiler = "ruby"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/rubyunit.vim	/^let current_compiler = "rubyunit"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/rustc.vim	/^let current_compiler = "rustc"$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/sbt.vim	/^let current_compiler = 'sbt'$/;"	v
current_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/typescript.vim	/^let current_compiler = "typescript"$/;"	v
current_word	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:current_word()$/;"	f
cword.clear	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! s:cword.clear() "{{{$/;"	f
cword.init	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! s:cword.init() "{{{$/;"	f
cword.init_highlight	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! s:cword.init_highlight() "{{{$/;"	f
cword.refresh	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! s:cword.refresh() "{{{$/;"	f
cword.set	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! s:cword.set() "{{{$/;"	f
cycle	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitrebase.vim	/^function! s:cycle()$/;"	f
dart#analyzer	pack/plugins/start/sheerun-vim-polyglot/autoload/dart.vim	/^function! dart#analyzer(q_args) abort$/;"	f
dart#fmt	pack/plugins/start/sheerun-vim-polyglot/autoload/dart.vim	/^function! dart#fmt(q_args) abort$/;"	f
dart#resolveUri	pack/plugins/start/sheerun-vim-polyglot/autoload/dart.vim	/^function! dart#resolveUri(uri) abort$/;"	f
dart#tojs	pack/plugins/start/sheerun-vim-polyglot/autoload/dart.vim	/^function! dart#tojs(q_args) abort$/;"	f
dashcase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:dashcase(word)$/;"	f
decho	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:decho(msg) "{{{1$/;"	f
decode	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:decode(json, ...) abort$/;"	f
def_job	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function s:def_job(args) abort$/;"	f
default_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let default_role = {$/;"	v
default_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let default_role = {}$/;"	v
define_commands	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:define_commands() abort$/;"	f
did_cpp_syntax_inits	pack/plugins/start/sheerun-vim-polyglot/after/syntax/cpp.vim	/^    let did_cpp_syntax_inits = 1$/;"	v
did_cql_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/cql.vim	/^    let did_cql_syn_inits = 1$/;"	v
did_cry_syntax_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/cryptol.vim	/^    let did_cry_syntax_inits = 1$/;"	v
did_css_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/css.vim	/^    let did_css_syn_inits = 1$/;"	v
did_css_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/stylus.vim	/^    let did_css_syn_inits = 1$/;"	v
did_gnuplot_syntax_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/gnuplot.vim	/^    let did_gnuplot_syntax_inits = 1$/;"	v
did_groovy_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/groovy.vim	/^    let did_groovy_syn_inits = 1$/;"	v
did_haxe_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/haxe.vim	/^    let did_haxe_syn_inits = 1$/;"	v
did_javascript_syn_inits	pack/plugins/start/sheerun-vim-polyglot/extras/flow.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	pack/plugins/start/sheerun-vim-polyglot/extras/jsdoc.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_jinja_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/jinja2.vim	/^    let did_jinja_syn_inits = 1$/;"	v
did_lua_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/lua.vim	/^    let did_lua_syn_inits = 1$/;"	v
did_mako_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/mako.vim	/^    let did_mako_syn_inits = 1$/;"	v
did_mason_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/mason.vim	/^		let did_mason_syn_inits = 1$/;"	v
did_mma_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/mma.vim	/^		let did_mma_syn_inits = 1$/;"	v
did_nim_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^    let did_nim_syn_inits = 1$/;"	v
did_ocaml_syntax_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/ocaml.vim	/^    let did_ocaml_syntax_inits = 1$/;"	v
did_octave_syntax_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/octave.vim	/^    let did_octave_syntax_inits = 1$/;"	v
did_pgsql_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/pgsql.vim	/^    let did_pgsql_syn_inits = 1$/;"	v
did_pod_syntax_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/pod.vim	/^    let did_pod_syntax_inits = 1$/;"	v
did_proto_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/proto.vim	/^    let did_proto_syn_inits = 1$/;"	v
did_ps1_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/ps1.vim	/^		let did_ps1_syn_inits = 1$/;"	v
did_python_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/python.vim	/^    let did_python_syn_inits = 1$/;"	v
did_qml_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/qml.vim	/^    let did_qml_syn_inits = 1$/;"	v
did_racket_syntax_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/racket.vim	/^    let did_racket_syntax_inits = 1$/;"	v
did_rhelp_syntax_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/rhelp.vim	/^    let did_rhelp_syntax_inits = 1$/;"	v
did_tapverboseoutput_syntax_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/tap.vim	/^  let did_tapverboseoutput_syntax_inits = 1$/;"	v
did_thrift_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/thrift.vim	/^    let did_thrift_syn_inits = 1$/;"	v
did_twig_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/twig.vim	/^    let did_twig_syn_inits = 1$/;"	v
did_txt_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/textile.vim	/^        let did_txt_syn_inits = 1$/;"	v
did_typescript_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/typescript.vim	/^    let did_typescript_syn_inits = 1$/;"	v
did_vbnet_syntax_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/vbnet.vim	/^        let did_vbnet_syntax_inits = 1$/;"	v
did_velocity_syn_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/velocity.vim	/^    let did_velocity_syn_inits = 1$/;"	v
did_xs_syntax_inits	pack/plugins/start/sheerun-vim-polyglot/syntax/xs.vim	/^    let did_xs_syntax_inits = 1$/;"	v
diff_modifier	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diff_modifier(count) abort$/;"	f
diff_restore	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diff_restore() abort$/;"	f
diff_window_count	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
diffcomplete	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitcommit.vim	/^function! s:diffcomplete(A,L,P)$/;"	f
diffidx	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f
diffoff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff() abort$/;"	f
diffoff_all	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
diffthis	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diffthis() abort$/;"	f
dir	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let dir = getcwd()$/;"	v
dir	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let dir = getcwd()$/;"	v
dir	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let dir = getcwd()$/;"	v
dispatcher	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:dispatcher(bang,line1,line2,count,args)$/;"	f
doWhile	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^function s:doWhile()$/;"	f
document_structure	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let document_structure = [$/;"	v
document_structure	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let document_structure = ['article', 'cell', 'columnheader', 'definition', 'directory', 'document', 'feed', 'figure', 'group', 'heading', 'img', 'list', 'listitem', 'math', 'none', 'note', 'presentation', 'region', 'row', 'rowheader', 'separator', 'table', 'term']$/;"	v
dosurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
dotcase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:dotcase(word)$/;"	f
download	pack/plugins/start/sheerun-vim-polyglot/build	/^download() {$/;"	f
dprint	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! s:dprint(msg)$/;"	f
dpub_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let dpub_role = [$/;"	v
dpub_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let dpub_role = ['dpub-abstract', 'dpub-afterword', 'dpub-appendix', 'dpub-biblioentry', 'dpub-bibliography', 'dpub-biblioref', 'dpub-chapter', 'dpub-cover', 'dpub-epilogue', 'dpub-footnote', 'dpub-footnotes', 'dpub-foreword', 'dpub-glossary', 'dpub-glossdef', 'dpub-glossref', 'dpub-glossterm', 'dpub-index', 'dpub-locator', 'dpub-noteref', 'dpub-notice', 'dpub-pagebreak', 'dpub-pagelist', 'dpub-part', 'dpub-preface', 'dpub-prologue', 'dpub-pullquote', 'dpub-qna', 'dpub-subtitle', 'dpub-tip', 'dpub-title', 'dpub-toc']$/;"	v
drag_and_drop_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let drag_and_drop_attributes = {$/;"	v
ds	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap ds  <Plug>Dsurround$/;"	m
dstring	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f
echo	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:echo(str) abort$/;"	f
echo_error	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! s:echo_error(msg, ...) abort$/;"	f
echo_go_info	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:echo_go_info()$/;"	f
echorizer.eat	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function s:echorizer.eat() abort$/;"	f
echorizer.echo	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function s:echorizer.echo() abort$/;"	f
echorizer.echo_ansi	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function s:echorizer.echo_ansi(code) abort$/;"	f
egrep_pattern	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:egrep_pattern(dict,boundaries)$/;"	f
elapsed_time	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^  let elapsed_time = reltimestr(reltime(started))$/;"	v
elapsed_time	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^  let elapsed_time = substitute(elapsed_time, '^\\s*\\(.\\{-}\\)\\s*$', '\\1', '')$/;"	v
elixir#indent	pack/plugins/start/sheerun-vim-polyglot/indent/elixir.vim	/^function! elixir#indent(lnum)$/;"	f
elixir#indent#contains	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#contains(text, expr)$/;"	f
elixir#indent#debug	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#debug(str)$/;"	f
elixir#indent#do_handle_inside_curly_brace	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#do_handle_inside_curly_brace(pair_lnum, _pair_col, _lnum, _text, _prev_nb_lnum, _prev_nb_text)$/;"	f
elixir#indent#do_handle_inside_fn	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#do_handle_inside_fn(pair_lnum, _pair_col, lnum, text, prev_nb_lnum, prev_nb_text)$/;"	f
elixir#indent#do_handle_inside_keyword_block	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#do_handle_inside_keyword_block(pair_lnum, _pair_col, _lnum, text, prev_nb_lnum, prev_nb_text)$/;"	f
elixir#indent#do_handle_inside_parens	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#do_handle_inside_parens(pair_lnum, pair_col, _lnum, _text, prev_nb_lnum, prev_nb_text)$/;"	f
elixir#indent#do_handle_inside_square_brace	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#do_handle_inside_square_brace(pair_lnum, pair_col, _lnum, _text, _prev_nb_lnum, _prev_nb_text)$/;"	f
elixir#indent#ends_with	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#ends_with(text, expr, lnum)$/;"	f
elixir#indent#find_last_pos	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#find_last_pos(lnum, text, match)$/;"	f
elixir#indent#handle_following_trailing_binary_operator	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_following_trailing_binary_operator(lnum, text, prev_nb_lnum, prev_nb_text)$/;"	f
elixir#indent#handle_following_trailing_do	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_following_trailing_do(lnum, text, prev_nb_lnum, prev_nb_text)$/;"	f
elixir#indent#handle_inside_generic_block	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_inside_generic_block(lnum, _text, prev_nb_lnum, prev_nb_text)$/;"	f
elixir#indent#handle_inside_nested_construct	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_inside_nested_construct(lnum, text, prev_nb_lnum, prev_nb_text)$/;"	f
elixir#indent#handle_starts_with_binary_operator	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_binary_operator(lnum, text, prev_nb_lnum, prev_nb_text)$/;"	f
elixir#indent#handle_starts_with_close_bracket	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_close_bracket(lnum, text, _prev_nb_lnum, _prev_nb_text)$/;"	f
elixir#indent#handle_starts_with_comment	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_comment(_lnum, text, prev_nb_lnum, _prev_nb_text)$/;"	f
elixir#indent#handle_starts_with_end	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_end(lnum, text, _prev_nb_lnum, _prev_nb_text)$/;"	f
elixir#indent#handle_starts_with_mid_or_end_block_keyword	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_mid_or_end_block_keyword(lnum, text, _prev_nb_lnum, _prev_nb_text)$/;"	f
elixir#indent#handle_starts_with_pipe	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_pipe(lnum, text, prev_nb_lnum, prev_nb_text)$/;"	f
elixir#indent#handle_top_of_file	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_top_of_file(_lnum, _text, prev_nb_lnum, _prev_nb_text)$/;"	f
elixir#indent#is_string_or_comment	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#is_string_or_comment(line, col)$/;"	f
elixir#indent#keyword	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#keyword(expr)$/;"	f
elixir#indent#searchpair_back	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#searchpair_back(start, mid, end)$/;"	f
elixir#indent#searchpair_back_skip	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#searchpair_back_skip()$/;"	f
elixir#indent#searchpairpos_back	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#searchpairpos_back(start, mid, end)$/;"	f
elixir#indent#starts_with	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#starts_with(text, expr, lnum)$/;"	f
elixir#indent#starts_with_comment	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#starts_with_comment(text)$/;"	f
elixir#util#get_filename	pack/plugins/start/sheerun-vim-polyglot/autoload/elixir/util.vim	/^function! elixir#util#get_filename(word) abort$/;"	f
elm#io#system	pack/plugins/start/sheerun-vim-polyglot/autoload/elm/io.vim	/^function! elm#io#system(program, args)$/;"	f
enable_syntax	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! s:enable_syntax() abort$/;"	f
encode	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:encode(val) abort$/;"	f
ends_with	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:ends_with(str, suffix) abort$/;"	f
entries	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:entries(path)$/;"	f
error	pack/plugins/start/sheerun-vim-polyglot/autoload/dart.vim	/^function! s:error(text) abort$/;"	f
escape_file_searching	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
escape_pattern	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
escaped	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^function! s:escaped(first, last) abort$/;"	f
eunuch	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^augroup eunuch$/;"	a
event_attributes_value	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let event_attributes_value = {$/;"	v
event_handler_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let event_handler_attributes = {'onabort': [], 'onblur': [], 'oncanplay': [], 'oncanplaythrough': [], 'onchange': [], 'onclick': [], 'oncontextmenu': [], 'ondblclick': [], 'ondrag': [], 'ondragend': [], 'ondragenter': [], 'ondragleave': [], 'ondragover': [], 'ondragstart': [], 'ondrop': [], 'ondurationchange': [], 'onemptied': [], 'onended': [], 'onerror': [], 'onfocus': [], 'onformchange': [], 'onforminput': [], 'oninput': [], 'oninvalid': [], 'onkeydown': [], 'onkeypress': [], 'onkeyup': [], 'onload': [], 'onloadeddata': [], 'onloadedmetadata': [], 'onloadstart': [], 'onmousedown': [], 'onmousemove': [], 'onmouseout': [], 'onmouseover': [], 'onmouseup': [], 'onmousewheel': [], 'onpause': [], 'onplay': [], 'onplaying': [], 'onprogress': [], 'onratechange': [], 'onreadystatechange': [], 'onscroll': [], 'onseeked': [], 'onseeking': [], 'onselect': [], 'onshow': [], 'onstalled': [], 'onsubmit': [], 'onsuspend': [], 'ontimeupdate': [], 'onvolumechange': [], 'onwaiting': []}$/;"	v
exe	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:exe(cmd) "{{{1$/;"	f
exists	get-plugins.go	/^func exists(path string) (bool, error) {$/;"	f
exists	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:exists(name) abort$/;"	f
exit_cb	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^  function! s:exit_cb(job, exitval) closure$/;"	f
exit_cb	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  function! s:exit_cb(job, exitval) closure$/;"	f
exit_cb	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  function! s:exit_cb(job, exitval) closure$/;"	f
expand_braces	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:expand_braces(dict)$/;"	f
expand_modules	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:expand_modules(entry, all) abort$/;"	f
expected_256_only_colors_should_be_consistent	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:expected_256_only_colors_should_be_consistent()$/;"	f
expr_col	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^function s:expr_col()$/;"	f
extract	pack/plugins/start/sheerun-vim-polyglot/build	/^extract() {$/;"	f
extractafter	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:extractafter(str)$/;"	f
extractbefore	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:extractbefore(str)$/;"	f
extractopts	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:extractopts(list,opts)$/;"	f
filetypedetect	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^augroup filetypedetect$/;"	a
find	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
find_command	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:find_command(cmd,flags,word)$/;"	f
find_completion_start	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! s:find_completion_start() abort$/;"	f
find_index	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
find_indices	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
find_last_index	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
find_root_by_spec	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! s:find_root_by_spec(d) abort$/;"	f
fish#Complete	pack/plugins/start/sheerun-vim-polyglot/autoload/fish.vim	/^function! fish#Complete(findstart, base)$/;"	f
fish#Fold	pack/plugins/start/sheerun-vim-polyglot/autoload/fish.vim	/^function! fish#Fold()$/;"	f
fish#Format	pack/plugins/start/sheerun-vim-polyglot/autoload/fish.vim	/^function! fish#Format()$/;"	f
fish#Indent	pack/plugins/start/sheerun-vim-polyglot/autoload/fish.vim	/^function! fish#Indent()$/;"	f
fish#errorformat	pack/plugins/start/sheerun-vim-polyglot/autoload/fish.vim	/^function! fish#errorformat()$/;"	f
fix_auto_select	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:fix_auto_select() " Select the correct entry taking into account g:mucomplete#popup_direction$/;"	f
fixindent	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
fixstr	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! s:fixstr(line)$/;"	f
flatten	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
flow_elements	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let flow_elements = phrasing_elements + ['p', 'hr', 'pre', 'ul', 'ol', 'dl', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hgroup', 'address', 'blockquote', 'ins', 'del', 'element', 'object', 'main', 'map', 'noscript', 'section', 'nav', 'article', 'aside', 'header', 'footer', 'video', 'audio', 'figure', 'table', 'template', 'form', 'fieldset', 'menu', 'canvas', 'details']$/;"	v
fmt_autosave	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:fmt_autosave()$/;"	f
fmt_cmd	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! s:fmt_cmd(bin_name, source, target)$/;"	f
fnameescape	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:fnameescape(string) abort$/;"	f
fnameescape	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
fnameescape	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:fnameescape(file) abort$/;"	f
fnameescape	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^function! s:fnameescape(file) abort$/;"	f
foldable	pack/plugins/start/sheerun-vim-polyglot/syntax/ruby.vim	/^function! s:foldable(...) abort$/;"	f
foldl	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
foldl1	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
foldr	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
foldr1	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
format_for_log	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:format_for_log(data) abort$/;"	f
friendly_name	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^  let friendly_name = FriendlyName(test)$/;"	v
fugitive	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#buffer	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#can_diffoff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#can_diffoff(buf) abort$/;"	f
fugitive#cfile	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#cfile() abort$/;"	f
fugitive#cwindow	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#cwindow() abort$/;"	f
fugitive#detect	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#foldtext	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#git_commands	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_commands() abort$/;"	f
fugitive#git_version	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_version(...) abort$/;"	f
fugitive#head	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#reload_status	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#repo	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#statusline	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive_blame	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_foldtext	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_foldtext$/;"	a
fugitive_remove	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_status	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_statusline	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_statusline$/;"	a
fugitive_temp	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_temp$/;"	a
function	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:function(name)$/;"	f
function	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:function(name) abort$/;"	f
g:LatexBox_Folding	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^	let g:LatexBox_Folding=0$/;"	v
g:LatexBox_autojump	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_autojump = 0$/;"	v
g:LatexBox_bibtex_wild_spaces	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_bibtex_wild_spaces = 1$/;"	v
g:LatexBox_cite_pattern	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_cite_pattern = '\\C\\\\\\a*cite\\a*\\*\\?\\(\\[[^\\]]*\\]\\)*\\_\\s*{'$/;"	v
g:LatexBox_close_pats	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^	let g:LatexBox_close_pats = [ '\\\\}','}','\\\\)',')','\\\\\\]','\\]',$/;"	v
g:LatexBox_complete_inlineMath	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_complete_inlineMath = 0$/;"	v
g:LatexBox_completion_close_braces	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_completion_close_braces = 1$/;"	v
g:LatexBox_completion_commands	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_completion_commands = [$/;"	v
g:LatexBox_completion_environments	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_completion_environments = [$/;"	v
g:LatexBox_eq_env_patterns	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_eq_env_patterns = 'equation\\|gather\\|multiline\\|align\\|flalign\\|alignat\\|eqnarray'$/;"	v
g:LatexBox_fold_automatic	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^	let g:LatexBox_fold_automatic=1$/;"	v
g:LatexBox_fold_envs	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_envs=1$/;"	v
g:LatexBox_fold_envs_force	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_envs_force = []$/;"	v
g:LatexBox_fold_parts	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_parts=[$/;"	v
g:LatexBox_fold_preamble	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_preamble=1$/;"	v
g:LatexBox_fold_sections	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_sections=[$/;"	v
g:LatexBox_fold_text	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_text=1$/;"	v
g:LatexBox_fold_toc	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_toc=0$/;"	v
g:LatexBox_fold_toc_levels	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_toc_levels=1$/;"	v
g:LatexBox_ignore_warnings	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_ignore_warnings =$/;"	v
g:LatexBox_latexmk_async	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_latexmk_async = 0$/;"	v
g:LatexBox_latexmk_env	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_latexmk_env = ''$/;"	v
g:LatexBox_latexmk_options	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_latexmk_options = ''$/;"	v
g:LatexBox_latexmk_preview_continuously	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_latexmk_preview_continuously = 0$/;"	v
g:LatexBox_open_pats	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^	let g:LatexBox_open_pats  = [ '\\\\{','{','\\\\(','(','\\\\\\[','\\[',$/;"	v
g:LatexBox_output_type	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_output_type = 'pdf'$/;"	v
g:LatexBox_personal_latexmkrc	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_personal_latexmkrc = 0$/;"	v
g:LatexBox_quickfix	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_quickfix = 1$/;"	v
g:LatexBox_ref_pattern	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_ref_pattern = '\\C\\\\v\\?\\(eq\\|page\\|[cC]\\|labelc\\|name\\|auto\\)\\?ref\\*\\?\\_\\s*{'$/;"	v
g:LatexBox_show_warnings	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_show_warnings=1$/;"	v
g:LatexBox_split_length	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_split_length = 15$/;"	v
g:LatexBox_split_resize	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_split_resize = 0$/;"	v
g:LatexBox_split_side	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_split_side = "aboveleft"$/;"	v
g:LatexBox_split_type	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_split_type = "vnew"$/;"	v
g:LatexBox_split_width	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_split_width = 30$/;"	v
g:LatexBox_toc_hidehelp	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_toc_hidehelp = 0$/;"	v
g:LatexBox_viewer	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_viewer = s:viewer$/;"	v
g:NERDCustomDelimiters	pack/plugins/start/sheerun-vim-polyglot/ftplugin/caddyfile.vim	/^	let g:NERDCustomDelimiters = {'caddyfile': s:delimiters}$/;"	v
g:NERDCustomDelimiters	pack/plugins/start/sheerun-vim-polyglot/ftplugin/toml.vim	/^        let g:NERDCustomDelimiters.toml = s:delims$/;"	v
g:NERDCustomDelimiters	pack/plugins/start/sheerun-vim-polyglot/ftplugin/toml.vim	/^    let g:NERDCustomDelimiters = { 'toml': s:delims }$/;"	v
g:NERDDelimiterMap	pack/plugins/start/sheerun-vim-polyglot/ftplugin/caddyfile.vim	/^		let g:NERDDelimiterMap.caddyfile = s:delimiters$/;"	v
g:NERDDelimiterMap	pack/plugins/start/sheerun-vim-polyglot/ftplugin/toml.vim	/^        let g:NERDDelimiterMap.toml = s:delims$/;"	v
g:abolish_save_file	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^    let g:abolish_save_file = expand("~\/.vim\/after\/plugin\/abolish.vim")$/;"	v
g:abolish_save_file	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^    let g:abolish_save_file = expand("~\/vimfiles\/after\/plugin\/abolish.vim")$/;"	v
g:ale_linter_aliases	pack/plugins/start/sheerun-vim-polyglot/ftplugin/vue.vim	/^  let g:ale_linter_aliases = get(g:, 'ale_linter_aliases', {})$/;"	v
g:ale_linter_aliases	pack/plugins/start/sheerun-vim-polyglot/ftplugin/vue.vim	/^  let g:ale_linter_aliases.vue = get(g:ale_linter_aliases, 'vue', 'javascript')$/;"	v
g:ale_linters	pack/plugins/start/sheerun-vim-polyglot/ftplugin/vue.vim	/^  let g:ale_linters = get(g:, 'ale_linters', {})$/;"	v
g:ale_linters	pack/plugins/start/sheerun-vim-polyglot/ftplugin/vue.vim	/^  let g:ale_linters.vue = get(g:ale_linters, 'vue', ['eslint'])$/;"	v
g:aria_attributes_complete	pack/plugins/start/sheerun-vim-polyglot/autoload/htmlcomplete.vim	/^  let g:aria_attributes_complete = 1$/;"	v
g:autoloaded_tmuxify	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^let g:autoloaded_tmuxify = 1$/;"	v
g:cabal_indent_section	pack/plugins/start/sheerun-vim-polyglot/indent/cabal.vim	/^  let g:cabal_indent_section = 2$/;"	v
g:cabal_indent_section	pack/plugins/start/sheerun-vim-polyglot/indent/cabal.vim	/^  let g:cabal_indent_section = 4$/;"	v
g:clojure_align_multiline_strings	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^		let g:clojure_align_multiline_strings = 0$/;"	v
g:clojure_align_subforms	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^		let g:clojure_align_subforms = 0$/;"	v
g:clojure_fuzzy_indent	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^		let g:clojure_fuzzy_indent = 1$/;"	v
g:clojure_fuzzy_indent_blacklist	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^		let g:clojure_fuzzy_indent_blacklist = ['-fn$', '\\v^with-%(meta|out-str|loading-context)$']$/;"	v
g:clojure_fuzzy_indent_patterns	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^		let g:clojure_fuzzy_indent_patterns = ['^with', '^def', '^let']$/;"	v
g:clojure_maxlines	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^		let g:clojure_maxlines = 100$/;"	v
g:clojure_special_indent_words	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^		let g:clojure_special_indent_words = 'deftype,defrecord,reify,proxy,extend-type,extend-protocol,letfn'$/;"	v
g:colors_name	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let g:colors_name = "PaperColor"$/;"	v
g:colors_name	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^let g:colors_name = "nofrils-acme"$/;"	v
g:colors_name	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^let g:colors_name = "nofrils-dark"$/;"	v
g:colors_name	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^let g:colors_name = "nofrils-light"$/;"	v
g:colors_name	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^let g:colors_name = "nofrils-sepia"$/;"	v
g:colors_name	pack/colors/start/tomasr-molokai/colors/molokai.vim	/^let g:colors_name="molokai"$/;"	v
g:crystal_auto_format	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^let g:crystal_auto_format = get(g:, 'crystal_auto_format', 0)$/;"	v
g:crystal_compiler_command	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^let g:crystal_compiler_command = get(g:, 'crystal_compiler_command', 'crystal')$/;"	v
g:crystal_indent_access_modifier_style	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^  let g:crystal_indent_access_modifier_style = 'normal'$/;"	v
g:ctrlp_ext_vars	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^  let g:ctrlp_ext_vars = [s:go_decls_var]$/;"	v
g:ctrlp_ext_vars	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^  let g:ctrlp_ext_vars = add(g:ctrlp_ext_vars, s:go_decls_var)$/;"	v
g:cucumber_languages	pack/plugins/start/sheerun-vim-polyglot/syntax/cucumber.vim	/^let g:cucumber_languages = {$/;"	v
g:did_ocaml_switch	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  let g:did_ocaml_switch = 1$/;"	v
g:did_ruby_ftplugin_functions	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^let g:did_ruby_ftplugin_functions = 1$/;"	v
g:eelixir_default_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let g:eelixir_default_subtype = "html"$/;"	v
g:eelixir_default_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^  let g:eelixir_default_subtype = "html"$/;"	v
g:elixir_use_markdown_for_docs	pack/plugins/start/sheerun-vim-polyglot/syntax/elixir.vim	/^  let g:elixir_use_markdown_for_docs = 0$/;"	v
g:erlang_indent_searchpair_timeout	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^let g:erlang_indent_searchpair_timeout = 2000$/;"	v
g:erlang_unexpected_token_indent	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^  let g:erlang_unexpected_token_indent = -1$/;"	v
g:eruby_default_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eruby_default_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:filetype_euphoria	pack/plugins/start/sheerun-vim-polyglot/config.vim	/^let g:filetype_euphoria = 'elixir'$/;"	v
g:filetype_euphoria	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^let g:filetype_euphoria = 'elixir'$/;"	v
g:fugitive_browse_handlers	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_browse_handlers = []$/;"	v
g:fugitive_git_executable	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:fullDefMatcher	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^let g:fullDefMatcher = '^\\s*' . s:defMatcher . '\\s\\+' . s:funcNameMatcher . '\\s*' . s:typeSpecMatcher . '\\?\\s*' . s:defArgMatcher . '\\?\\s*' . s:returnTypeMatcher . '\\?\\s*[={]'$/;"	v
g:gitgutter_eager	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_eager = 0$/;"	v
g:gitgutter_realtime	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_realtime = 0$/;"	v
g:gitgutter_sign_removed_first_line	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_removed_first_line = '_^'$/;"	v
g:go_alternate_mode	pack/plugins/start/fatih-vim-go/autoload/go/alternate.vim	/^  let g:go_alternate_mode = "edit"$/;"	v
g:go_auto_type_info	vimrc	/^let g:go_auto_type_info=0$/;"	v
g:go_autodetect_gopath	vimrc	/^let g:go_autodetect_gopath=1$/;"	v
g:go_bin_path	vimrc	/^let g:go_bin_path=$HOME."\/go\/bin"$/;"	v
g:go_def_mapping_enabled	vimrc	/^let g:go_def_mapping_enabled=1$/;"	v
g:go_def_mode	vimrc	/^let g:go_def_mode='guru'$/;"	v
g:go_def_reuse_buffer	vimrc	/^let g:go_def_reuse_buffer=1$/;"	v
g:go_doc_command	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^  let g:go_doc_command = "godoc"$/;"	v
g:go_doc_command	vimrc	/^let g:go_doc_command="godoc"$/;"	v
g:go_doc_options	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^  let g:go_doc_options = ""$/;"	v
g:go_errcheck_bin	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_errcheck_bin = "errcheck"$/;"	v
g:go_fmt_autosave	vimrc	/^let g:go_fmt_autosave=1$/;"	v
g:go_fmt_command	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_fmt_command = "gofmt"$/;"	v
g:go_fmt_command	vimrc	/^let g:go_fmt_command="goimports"$/;"	v
g:go_fmt_experimental	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_fmt_experimental = 0$/;"	v
g:go_fmt_experimental	vimrc	/^let g:go_fmt_experimental=1$/;"	v
g:go_fmt_fail_silently	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_fmt_fail_silently = 0$/;"	v
g:go_fmt_options	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_fmt_options = ''$/;"	v
g:go_goimports_bin	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_goimports_bin = "goimports"$/;"	v
g:go_golint_bin	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_golint_bin = "golint"$/;"	v
g:go_gorename_bin	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let g:go_gorename_bin = "gorename"$/;"	v
g:go_gorename_prefill	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let g:go_gorename_prefill = 1$/;"	v
g:go_gotags_bin	pack/plugins/start/fatih-vim-go/ftplugin/go/tagbar.vim	/^  let g:go_gotags_bin = "gotags"$/;"	v
g:go_highlight_array_whitespace_error	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_array_whitespace_error = 0$/;"	v
g:go_highlight_array_whitespace_error	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_array_whitespace_error = 0$/;"	v
g:go_highlight_array_whitespace_error	vimrc	/^let g:go_highlight_array_whitespace_error=1$/;"	v
g:go_highlight_build_constraints	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_build_constraints = 0$/;"	v
g:go_highlight_build_constraints	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_build_constraints = 0$/;"	v
g:go_highlight_build_constraints	vimrc	/^let g:go_highlight_build_constraints=1$/;"	v
g:go_highlight_chan_whitespace_error	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_chan_whitespace_error = 0$/;"	v
g:go_highlight_chan_whitespace_error	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_chan_whitespace_error = 0$/;"	v
g:go_highlight_chan_whitespace_error	vimrc	/^let g:go_highlight_chan_whitespace_error=1$/;"	v
g:go_highlight_extra_types	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_extra_types = 0$/;"	v
g:go_highlight_extra_types	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_extra_types = 0$/;"	v
g:go_highlight_extra_types	vimrc	/^let g:go_highlight_extra_types=1$/;"	v
g:go_highlight_fields	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_fields = 0$/;"	v
g:go_highlight_fields	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_fields = 0$/;"	v
g:go_highlight_fields	vimrc	/^let g:go_highlight_fields=1$/;"	v
g:go_highlight_format_strings	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_format_strings = 1$/;"	v
g:go_highlight_format_strings	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_format_strings = 1$/;"	v
g:go_highlight_format_strings	vimrc	/^let g:go_highlight_format_strings=1$/;"	v
g:go_highlight_functions	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_functions = 0$/;"	v
g:go_highlight_functions	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_functions = 0$/;"	v
g:go_highlight_functions	vimrc	/^let g:go_highlight_functions=1$/;"	v
g:go_highlight_generate_tags	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_generate_tags = 0$/;"	v
g:go_highlight_generate_tags	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_generate_tags = 0$/;"	v
g:go_highlight_generate_tags	vimrc	/^let g:go_highlight_generate_tags=1$/;"	v
g:go_highlight_methods	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_methods = 0$/;"	v
g:go_highlight_methods	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_methods = 0$/;"	v
g:go_highlight_methods	vimrc	/^let g:go_highlight_methods=1$/;"	v
g:go_highlight_operators	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_operators = 0$/;"	v
g:go_highlight_operators	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_operators = 0$/;"	v
g:go_highlight_operators	vimrc	/^let g:go_highlight_operators=1$/;"	v
g:go_highlight_space_tab_error	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_space_tab_error = 0$/;"	v
g:go_highlight_space_tab_error	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_space_tab_error = 0$/;"	v
g:go_highlight_space_tab_error	vimrc	/^let g:go_highlight_space_tab_error=1$/;"	v
g:go_highlight_string_spellcheck	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_string_spellcheck = 1$/;"	v
g:go_highlight_string_spellcheck	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_string_spellcheck = 1$/;"	v
g:go_highlight_string_spellcheck	vimrc	/^let g:go_highlight_string_spellcheck=1$/;"	v
g:go_highlight_trailing_whitespace_error	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_trailing_whitespace_error = 0$/;"	v
g:go_highlight_trailing_whitespace_error	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_trailing_whitespace_error = 0$/;"	v
g:go_highlight_trailing_whitespace_error	vimrc	/^let g:go_highlight_trailing_whitespace_error=1$/;"	v
g:go_highlight_types	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_types = 0$/;"	v
g:go_highlight_types	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^  let g:go_highlight_types = 0$/;"	v
g:go_highlight_types	vimrc	/^let g:go_highlight_types=1$/;"	v
g:go_info_mode	vimrc	/^let g:go_info_mode='guru'$/;"	v
g:go_jump_to_error	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^  let g:go_jump_to_error = 1$/;"	v
g:go_jump_to_error	vimrc	/^let g:go_jump_to_error=0$/;"	v
g:go_list_type	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^  let g:go_list_type = ""$/;"	v
g:go_loaded_gosnippets	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^let g:go_loaded_gosnippets = 1$/;"	v
g:go_loaded_install	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^let g:go_loaded_install = 1$/;"	v
g:go_metalinter_autosave_enabled	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_metalinter_autosave_enabled = ['vet', 'golint']$/;"	v
g:go_metalinter_command	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_metalinter_command = ""$/;"	v
g:go_metalinter_enabled	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_metalinter_enabled = ['vet', 'golint', 'errcheck']$/;"	v
g:go_metalinter_excludes	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_metalinter_excludes = []$/;"	v
g:go_play_open_browser	pack/plugins/start/fatih-vim-go/autoload/go/play.vim	/^  let g:go_play_open_browser = 1$/;"	v
g:go_snippet_engine	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^  let g:go_snippet_engine = "ultisnips"$/;"	v
g:go_template_autocreate	vimrc	/^let g:go_template_autocreate=0$/;"	v
g:go_term_mode	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^  let g:go_term_mode = 'vsplit'$/;"	v
g:go_textobj_enabled	pack/plugins/start/fatih-vim-go/autoload/go/textobj.vim	/^  let g:go_textobj_enabled = 1$/;"	v
g:go_textobj_enabled	vimrc	/^let g:go_textobj_enabled=1$/;"	v
g:go_textobj_include_function_doc	pack/plugins/start/fatih-vim-go/autoload/go/textobj.vim	/^  let g:go_textobj_include_function_doc = 1$/;"	v
g:gutentags_add_default_project_roots	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_default_project_roots = get(g:, 'gutentags_add_default_project_roots', 1)$/;"	v
g:gutentags_auto_add_cscope	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_auto_add_cscope = 1$/;"	v
g:gutentags_auto_add_gtags_cscope	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_auto_add_gtags_cscope = 1$/;"	v
g:gutentags_background_update	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_background_update = get(g:, 'gutentags_background_update', 1)$/;"	v
g:gutentags_cache_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = ''$/;"	v
g:gutentags_cache_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':p')$/;"	v
g:gutentags_cache_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':s?[\/\\\\]$??')$/;"	v
g:gutentags_cscope_executable	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_executable = 'cscope'$/;"	v
g:gutentags_ctags_auto_set_tags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_auto_set_tags = get(g:, 'gutentags_ctags_auto_set_tags', 1)$/;"	v
g:gutentags_ctags_check_tagfile	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_check_tagfile = get(g:, 'gutentags_ctags_check_tagfile', 0)$/;"	v
g:gutentags_ctags_exclude	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude = get(g:, 'gutentags_ctags_exclude', [])$/;"	v
g:gutentags_ctags_exclude_wildignore	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude_wildignore = get(g:, 'gutentags_ctags_exclude_wildignore', 1)$/;"	v
g:gutentags_ctags_executable	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_executable = get(g:, 'gutentags_ctags_executable', 'ctags')$/;"	v
g:gutentags_ctags_executable	vimrc	/^    let g:gutentags_ctags_executable="ctags-exuberant"$/;"	v
g:gutentags_ctags_extra_args	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_extra_args = get(g:, 'gutentags_ctags_extra_args', [])$/;"	v
g:gutentags_ctags_options_file	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_options_file = get(g:, 'gutentags_ctags_options_file', '.gutctags')$/;"	v
g:gutentags_ctags_post_process_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_post_process_cmd = get(g:, 'gutentags_ctags_post_process_cmd', '')$/;"	v
g:gutentags_ctags_tagfile	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_tagfile = get(g:, 'gutentags_ctags_tagfile', 'tags')$/;"	v
g:gutentags_debug	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_debug = get(g:, 'gutentags_debug', 0)$/;"	v
g:gutentags_define_advanced_commands	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_define_advanced_commands = get(g:, 'gutentags_define_advanced_commands', 0)$/;"	v
g:gutentags_enabled	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_enabled = get(g:, 'gutentags_enabled', 1)$/;"	v
g:gutentags_exclude_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_project_root = get(g:, 'gutentags_exclude_project_root', ['\/usr\/local'])$/;"	v
g:gutentags_fake	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_fake = get(g:, 'gutentags_fake', 0)$/;"	v
g:gutentags_file_list_command	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_file_list_command = get(g:, 'gutentags_file_list_command', '')$/;"	v
g:gutentags_generate_on_empty_buffer	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_empty_buffer = get(g:, 'gutentags_generate_on_empty_buffer', 0)$/;"	v
g:gutentags_generate_on_missing	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_missing = get(g:, 'gutentags_generate_on_missing', 1)$/;"	v
g:gutentags_generate_on_new	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_new = get(g:, 'gutentags_generate_on_new', 1)$/;"	v
g:gutentags_generate_on_write	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_write = get(g:, 'gutentags_generate_on_write', 1)$/;"	v
g:gutentags_gtags_cscope_executable	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_cscope_executable = 'gtags-cscope'$/;"	v
g:gutentags_gtags_dbpath	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_dbpath = ''$/;"	v
g:gutentags_gtags_executable	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_executable = 'gtags'$/;"	v
g:gutentags_gtags_options_file	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_options_file = '.gutgtags'$/;"	v
g:gutentags_init_user_func	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_init_user_func = get(g:, 'gutentags_init_user_func', $/;"	v
g:gutentags_modules	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_modules = get(g:, 'gutentags_modules', ['ctags'])$/;"	v
g:gutentags_pause_after_update	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_pause_after_update = get(g:, 'gutentags_pause_after_update', 0)$/;"	v
g:gutentags_plat_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . "\\\\plat\\\\win32\\\\"$/;"	v
g:gutentags_plat_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . '\/plat\/unix\/'$/;"	v
g:gutentags_project_info	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_info = get(g:, 'gutentags_project_info', [])$/;"	v
g:gutentags_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_project_root += ['.git', '.hg', '.svn', '.bzr', '_darcs', '_FOSSIL_', '.fslckout']$/;"	v
g:gutentags_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root = get(g:, 'gutentags_project_root', [])$/;"	v
g:gutentags_project_root_finder	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root_finder = get(g:, 'gutentags_project_root_finder', '')$/;"	v
g:gutentags_res_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . "\\\\res\\\\"$/;"	v
g:gutentags_res_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . '\/res\/'$/;"	v
g:gutentags_resolve_symlinks	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_resolve_symlinks = get(g:, 'gutentags_resolve_symlinks', 0)$/;"	v
g:gutentags_scopefile	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_scopefile = 'cscope.out'$/;"	v
g:gutentags_script_ext	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.cmd'$/;"	v
g:gutentags_script_ext	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.sh'$/;"	v
g:gutentags_trace	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_trace = get(g:, 'gutentags_trace', 0)$/;"	v
g:haml_self_closing_tags	pack/plugins/start/sheerun-vim-polyglot/indent/haml.vim	/^  let g:haml_self_closing_tags = 'base|link|meta|br|hr|img|input'$/;"	v
g:haml_self_closing_tags	pack/plugins/start/sheerun-vim-polyglot/indent/slim.vim	/^  let g:haml_self_closing_tags = 'meta|link|img|hr|br'$/;"	v
g:haskell_indent_case	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_case = 2$/;"	v
g:haskell_indent_do	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_do = 3$/;"	v
g:haskell_indent_guard	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_guard = 2$/;"	v
g:haskell_indent_if	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_if = 3$/;"	v
g:haskell_indent_in	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_in = 1$/;"	v
g:haskell_indent_let	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_let = 4$/;"	v
g:haskell_indent_where	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_where = 6$/;"	v
g:html5_aria_attributes_complete	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_aria_attributes_complete = 1$/;"	v
g:html5_event_handler_attributes_complete	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_event_handler_attributes_complete = 1$/;"	v
g:html5_microdata_attributes_complete	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_microdata_attributes_complete = 1$/;"	v
g:html5_rdfa_attributes_complete	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_rdfa_attributes_complete = 1$/;"	v
g:jinja_syntax_html	pack/plugins/start/sheerun-vim-polyglot/syntax/jinja2.vim	/^   let g:jinja_syntax_html=1$/;"	v
g:jst_default_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^  let g:jst_default_subtype = "html"$/;"	v
g:jsx_ext_required	pack/plugins/start/sheerun-vim-polyglot/config.vim	/^  let g:jsx_ext_required = 0$/;"	v
g:jsx_ext_required	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^  let g:jsx_ext_required = 0$/;"	v
g:jsx_ext_required	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^  let g:jsx_ext_required = 1$/;"	v
g:jsx_pragma_required	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^  let g:jsx_pragma_required = 0$/;"	v
g:latexmk_running_pids	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:latexmk_running_pids = {}$/;"	v
g:less_html_style_tags	pack/plugins/start/sheerun-vim-polyglot/after/syntax/html.vim	/^  let g:less_html_style_tags = 1$/;"	v
g:liquid_default_subtype	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
g:liquid_default_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
g:liquid_highlight_types	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^  let g:liquid_highlight_types = []$/;"	v
g:loaded_abolish	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let g:loaded_abolish = 1$/;"	v
g:loaded_commentary	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^let g:loaded_commentary = 1$/;"	v
g:loaded_eunuch	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^let g:loaded_eunuch = 1$/;"	v
g:loaded_fugitive	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_gitgutter	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^let g:loaded_gitgutter = 1$/;"	v
g:loaded_gutentags	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:loaded_gutentags = 1$/;"	v
g:loaded_haskellvim_cabal	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cabal.vim	/^let g:loaded_haskellvim_cabal = 1$/;"	v
g:loaded_haskellvim_haskell	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haskell.vim	/^let g:loaded_haskellvim_haskell = 1$/;"	v
g:loaded_mucomplete	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^let g:loaded_mucomplete = 1$/;"	v
g:loaded_mustache_handlebars	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^let g:loaded_mustache_handlebars = 1$/;"	v
g:loaded_qf	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^let g:loaded_qf = 1$/;"	v
g:loaded_qlist	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^let g:loaded_qlist = 1$/;"	v
g:loaded_quickhl	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^let g:loaded_quickhl = 1$/;"	v
g:loaded_repeat	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^let g:loaded_repeat = 1$/;"	v
g:loaded_rsi	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^let g:loaded_rsi = 1$/;"	v
g:loaded_surround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_tmuxify	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^let g:loaded_tmuxify = 1$/;"	v
g:loaded_unimpaired	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^let g:loaded_unimpaired = 1$/;"	v
g:loaded_vinegar	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^let g:loaded_vinegar = 1$/;"	v
g:main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/dart.vim	/^  let g:main_syntax = 'dart'$/;"	v
g:move_key_modifier	vimrc	/^let g:move_key_modifier='C'$/;"	v
g:mucomplete#can_complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  let g:mucomplete#can_complete = extend({$/;"	v
g:mucomplete#can_complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  let g:mucomplete#can_complete = mucomplete#compat#can_complete()$/;"	v
g:mucomplete#chains	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let g:mucomplete#chains = extend({$/;"	v
g:mucomplete#enable_auto_at_startup	vimrc	/^let g:mucomplete#enable_auto_at_startup=0$/;"	v
g:mustache_operators	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  let g:mustache_operators = 1$/;"	v
g:netrw_altfile	vimrc	/^let g:netrw_altfile=1$/;"	v
g:netrw_banner	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^  let g:netrw_banner = 0$/;"	v
g:netrw_list_hide	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^let g:netrw_list_hide =$/;"	v
g:netrw_sort_sequence	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^let g:netrw_sort_sequence = '[\\\/]$,*,\\%(' . join(map(split(&suffixes, ','), 'escape(v:val, ".*$~")'), '\\|') . '\\)[*@]\\=$'$/;"	v
g:nofrils_heavycomments	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^    let g:nofrils_heavycomments = 0$/;"	v
g:nofrils_heavycomments	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^    let g:nofrils_heavycomments = 0$/;"	v
g:nofrils_heavycomments	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^    let g:nofrils_heavycomments = 0$/;"	v
g:nofrils_heavycomments	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^    let g:nofrils_heavycomments = 0$/;"	v
g:nofrils_heavycomments	vimrc	/^let g:nofrils_heavycomments=0 " bright comments off$/;"	v
g:nofrils_heavylinenumbers	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^    let g:nofrils_heavylinenumbers = 0$/;"	v
g:nofrils_heavylinenumbers	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^    let g:nofrils_heavylinenumbers = 0$/;"	v
g:nofrils_heavylinenumbers	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^    let g:nofrils_heavylinenumbers = 0$/;"	v
g:nofrils_heavylinenumbers	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^    let g:nofrils_heavylinenumbers = 0$/;"	v
g:nofrils_heavylinenumbers	vimrc	/^let g:nofrils_heavylinenumbers=0 " heavy line numbers off$/;"	v
g:nofrils_strbackgrounds	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^    let g:nofrils_strbackgrounds = 0$/;"	v
g:nofrils_strbackgrounds	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^    let g:nofrils_strbackgrounds = 0$/;"	v
g:nofrils_strbackgrounds	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^    let g:nofrils_strbackgrounds = 0$/;"	v
g:nofrils_strbackgrounds	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^    let g:nofrils_strbackgrounds = 0$/;"	v
g:nofrils_strbackgrounds	vimrc	/^let g:nofrils_strbackgrounds=0 " to turn off highlighted string backgrounds$/;"	v
g:php_syntax_extensions_disabled	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^    let g:php_syntax_extensions_disabled = []$/;"	v
g:php_syntax_extensions_enabled	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^    let g:php_syntax_extensions_enabled = ["bcmath", "bz2", "core", "curl", "date", "dom", "ereg", "gd", "gettext", "hash", "iconv", "json", "libxml", "mbstring", "mcrypt", "mhash", "mysql", "mysqli", "openssl", "pcre", "pdo", "pgsql", "phar", "reflection", "session", "simplexml", "soap", "sockets", "spl", "sqlite3", "standard", "tokenizer", "wddx", "xml", "xmlreader", "xmlwriter", "zip", "zlib"]$/;"	v
g:plantuml_executable_script	pack/plugins/start/sheerun-vim-polyglot/ftplugin/plantuml.vim	/^  let g:plantuml_executable_script='plantuml'$/;"	v
g:pug_self_closing_tags	pack/plugins/start/sheerun-vim-polyglot/indent/pug.vim	/^  let g:pug_self_closing_tags = 'meta|link|img|hr|br|input'$/;"	v
g:puppet_align_hashes	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/puppet.vim	/^    let g:puppet_align_hashes = 1$/;"	v
g:purescript_indent_case	pack/plugins/start/sheerun-vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_case = 5$/;"	v
g:purescript_indent_do	pack/plugins/start/sheerun-vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_do = 3$/;"	v
g:purescript_indent_if	pack/plugins/start/sheerun-vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_if = 3$/;"	v
g:purescript_indent_let	pack/plugins/start/sheerun-vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_let = 4$/;"	v
g:purescript_indent_where	pack/plugins/start/sheerun-vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_where = 6$/;"	v
g:quickhl_debug	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^  let g:quickhl_debug = 0$/;"	v
g:quickhl_manual_colors	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^  let g:quickhl_manual_colors = [$/;"	v
g:quickhl_manual_colors	vimrc	/^let g:quickhl_manual_colors=['gui=bold ctermfg=16 ctermbg=153 guifg=#ffffff guibg=#0a7383', 'gui=bold ctermfg=black ctermbg=2 guibg=#4070a0 guifg=#ffffff', 'gui=bold ctermfg=black ctermbg=3 guibg=#40a070 guifg=#ffffff', 'gui=bold ctermfg=7 ctermbg=4 guibg=#70a040 guifg=#ffffff', 'gui=bold ctermfg=black ctermbg=5 guibg=#0070e0 guifg=#ffffff', 'gui=bold ctermfg=black ctermbg=6 guibg=#007020 guifg=#ffffff', 'gui=bold ctermfg=7 ctermbg=21 guibg=#d4a00d guifg=#ffffff', 'gui=bold ctermfg=7 ctermbg=22 guibg=#06287e guifg=#ffffff', 'gui=bold ctermfg=black ctermbg=45 guibg=#5b3674 guifg=#ffffff', 'gui=bold ctermfg=7 ctermbg=16 guibg=#4c8f2f guifg=#ffffff', 'gui=bold ctermfg=black ctermbg=50 guibg=#1060a0 guifg=#ffffff', 'gui=bold ctermfg=7 ctermbg=56 guibg=#a0b0c0 guifg=black', 'gui=bold ctermfg=black ctermbg=1 guibg=#a07040 guifg=#ffffff']$/;"	v
g:raco_command	pack/plugins/start/sheerun-vim-polyglot/autoload/racket.vim	/^  let g:raco_command = system("which raco")$/;"	v
g:ragel_default_subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/ragel.vim	/^  let g:ragel_default_subtype = 'c'$/;"	v
g:repeat_reg	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^let g:repeat_reg = ['', '']$/;"	v
g:repeat_tick	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^let g:repeat_tick = -1$/;"	v
g:ruby_default_path	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^      let g:ruby_default_path = map(split($RUBYLIB,':'), 'v:val ==# "." ? "" : v:val')$/;"	v
g:ruby_default_path	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^      let g:ruby_default_path = s:query_path($HOME)$/;"	v
g:ruby_indent_access_modifier_style	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_access_modifier_style = 'normal'$/;"	v
g:ruby_indent_assignment_style	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_assignment_style = 'hanging'$/;"	v
g:ruby_indent_block_style	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_block_style = 'expression'$/;"	v
g:ruby_version_paths	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^      let g:ruby_version_paths[b:ruby_version] = s:query_path(fnamemodify(s:version_file, ':p:h'))$/;"	v
g:ruby_version_paths	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  let g:ruby_version_paths = {}$/;"	v
g:rubycomplete_buffer_loading	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_buffer_loading = 0$/;"	v
g:rubycomplete_classes_in_global	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_classes_in_global = 0$/;"	v
g:rubycomplete_include_object	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_object = 0$/;"	v
g:rubycomplete_include_objectspace	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_objectspace = 0$/;"	v
g:rubycomplete_rails	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_rails = 0$/;"	v
g:rustfmt_autosave	pack/plugins/start/sheerun-vim-polyglot/autoload/rustfmt.vim	/^  let g:rustfmt_autosave = 0$/;"	v
g:rustfmt_command	pack/plugins/start/sheerun-vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_command = "rustfmt"$/;"	v
g:rustfmt_fail_silently	pack/plugins/start/sheerun-vim-polyglot/autoload/rustfmt.vim	/^  let g:rustfmt_fail_silently = 0$/;"	v
g:rustfmt_options	pack/plugins/start/sheerun-vim-polyglot/autoload/rustfmt.vim	/^  let g:rustfmt_options = ""$/;"	v
g:skip_loading_mswin	vimrc	/^let g:skip_loading_mswin=1 " Just in case :)$/;"	v
g:tagbar_type_scala	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala/tagbar.vim	/^  let g:tagbar_type_scala.deffile = expand('<sfile>:p:h:h:h') . '\/ctags\/scala.ctags'$/;"	v
g:tagbar_type_scala	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala/tagbar.vim	/^let g:tagbar_type_scala = {$/;"	v
g:terraform_align	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/terraform.vim	/^  let g:terraform_align = 0$/;"	v
g:testname	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let g:testname = expand('%')$/;"	v
g:testname	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let g:testname = expand('%')$/;"	v
g:tmuxcomplete#loaded	pack/plugins/start/wellle-tmux-complete-vim/plugin/tmuxcomplete.vim	/^let g:tmuxcomplete#loaded = '0.1.1' " version number$/;"	v
g:tmuxify_custom_command	vimrc	/^let g:tmuxify_custom_command='tmux split-window -d -l 10'$/;"	v
g:tmuxify_global_maps	vimrc	/^let g:tmuxify_global_maps=1$/;"	v
g:tmuxify_map_prefix	vimrc	/^let g:tmuxify_map_prefix=''$/;"	v
g:typescript_compiler_binary	pack/plugins/start/sheerun-vim-polyglot/compiler/typescript.vim	/^  let g:typescript_compiler_binary = "tsc"$/;"	v
g:typescript_compiler_options	pack/plugins/start/sheerun-vim-polyglot/compiler/typescript.vim	/^  let g:typescript_compiler_options = ""$/;"	v
g:unimpaired_html_entities	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^let g:unimpaired_html_entities = {$/;"	v
g:vim_ember_script	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^  let g:vim_ember_script = 1$/;"	v
g:vim_emblem	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^  let g:vim_emblem = 1$/;"	v
g:vim_json_syntax_conceal	pack/plugins/start/sheerun-vim-polyglot/config.vim	/^  let g:vim_json_syntax_conceal = 0$/;"	v
g:vim_json_syntax_conceal	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^  let g:vim_json_syntax_conceal = 0$/;"	v
g:vim_json_syntax_conceal	pack/plugins/start/sheerun-vim-polyglot/ftplugin/json.vim	/^	let g:vim_json_syntax_conceal = 1$/;"	v
g:vim_json_syntax_concealcursor	pack/plugins/start/sheerun-vim-polyglot/ftplugin/json.vim	/^	let g:vim_json_syntax_concealcursor = ""$/;"	v
g:vim_json_warnings	pack/plugins/start/sheerun-vim-polyglot/ftplugin/json.vim	/^	let g:vim_json_warnings = 1$/;"	v
g:vim_markdown_folding_disabled	vimrc	/^let g:vim_markdown_folding_disabled=0$/;"	v
g:vim_markdown_frontmatter	vimrc	/^let g:vim_markdown_frontmatter=1$/;"	v
g:xmldata_aria	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let g:xmldata_aria = {$/;"	v
g:xmldata_html5	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let g:xmldata_html5 = {$/;"	v
g<LeftMouse>	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> g<LeftMouse> <LeftMouse>:GoDef<cr>$/;"	m
gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/rplugin/python3/deoplete/sources/tmuxcomplete.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gc	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gc <Plug>(crystal-show-context)$/;"	m
gc	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^  nmap gc  <Plug>Commentary$/;"	m
gc	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^  omap gc  <Plug>Commentary$/;"	m
gcc	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^  nmap gcc <Plug>CommentaryLine$/;"	m
gcu	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^  nmap gcu <Plug>Commentary<Plug>Commentary$/;"	m
gd	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> gd :GoDef<cr>$/;"	m
gd	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gd <Plug>(crystal-jump-to-definition)$/;"	m
general	vimrc	/^augroup general$/;"	a
generate_color_palettes	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:generate_color_palettes()$/;"	f
generate_vim_highlightings	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:generate_vim_highlightings()$/;"	f
getHLStack	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^function! s:getHLStack(line, col)$/;"	f
getNesting	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^function! s:getNesting(hlstack)$/;"	f
get_browser_command	pack/plugins/start/fatih-vim-go/autoload/go/play.vim	/^function! s:get_browser_command() abort$/;"	f
get_browser_command	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! s:get_browser_command() abort$/;"	f
get_ctags_executable	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:get_ctags_executable(proj_dir) abort$/;"	f
get_echorizer	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:get_echorizer(str) abort$/;"	f
get_indentexpr	pack/plugins/start/sheerun-vim-polyglot/indent/vue.vim	/^function! s:get_indentexpr(language)$/;"	f
get_last_status	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:get_last_status() abort$/;"	f
get_line_trimmed	pack/plugins/start/sheerun-vim-polyglot/indent/rust.vim	/^function! s:get_line_trimmed(lnum)$/;"	f
get_pane_descriptor_from_id	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! s:get_pane_descriptor_from_id(pane_id) abort$/;"	f
get_saved_states	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! s:get_saved_states() abort$/;"	f
get_unix_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! s:get_unix_cmd(for_job, proj_options, db_path) abort$/;"	f
get_visual_content	pack/plugins/start/fatih-vim-go/autoload/go/play.vim	/^function! s:get_visual_content() abort$/;"	f
get_visual_selection	pack/plugins/start/fatih-vim-go/autoload/go/play.vim	/^function! s:get_visual_selection() abort$/;"	f
get_win32_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! s:get_win32_cmd(for_job, proj_options, db_path) abort$/;"	f
getchar	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
getchar	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:getchar()$/;"	f
getchar_safe	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
getword	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/spel.vim	/^  fun! s:getword()$/;"	f
git_command	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:git_command() abort$/;"	f
git_diff	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff()$/;"	f
git_diff_staged	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff_staged()$/;"	f
git_root_path	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let git_root_path = system("git rev-parse --show-toplevel | tr -d '\\\\n'")$/;"	v
gitdiffcached	pack/plugins/start/sheerun-vim-polyglot/ftplugin/gitcommit.vim	/^function! s:gitdiffcached(bang,gitdir,...)$/;"	f
gitgutter	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^augroup gitgutter$/;"	a
gitgutter#all	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#all() abort$/;"	f
gitgutter#async#available	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#available()$/;"	f
gitgutter#async#execute	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#execute(cmd) abort$/;"	f
gitgutter#async#handle_diff_job_nvim	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#handle_diff_job_nvim(job_id, data, event) dict abort$/;"	f
gitgutter#async#handle_diff_job_vim	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#handle_diff_job_vim(channel, line) abort$/;"	f
gitgutter#async#handle_diff_job_vim_close	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#handle_diff_job_vim_close(channel) abort$/;"	f
gitgutter#debug#debug	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#debug()$/;"	f
gitgutter#debug#git_version	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#git_version()$/;"	f
gitgutter#debug#grep_version	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#grep_version()$/;"	f
gitgutter#debug#log	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#log(message, ...) abort$/;"	f
gitgutter#debug#option	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#option(name)$/;"	f
gitgutter#debug#output	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#output(text)$/;"	f
gitgutter#debug#separator	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#separator()$/;"	f
gitgutter#debug#vim_version	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#vim_version()$/;"	f
gitgutter#diff#adjust_hunk_summary	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#adjust_hunk_summary(diff_for_hunk, staging) abort$/;"	f
gitgutter#diff#discard_hunks	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#discard_hunks(diff, keep_header) abort$/;"	f
gitgutter#diff#generate_diff_for_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#generate_diff_for_hunk(diff, type) abort$/;"	f
gitgutter#diff#is_added	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_added(from_count, to_count) abort$/;"	f
gitgutter#diff#is_modified	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_modified(from_count, to_count) abort$/;"	f
gitgutter#diff#is_modified_and_added	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_modified_and_added(from_count, to_count) abort$/;"	f
gitgutter#diff#is_modified_and_removed	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_modified_and_removed(from_count, to_count) abort$/;"	f
gitgutter#diff#is_removed	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_removed(from_count, to_count) abort$/;"	f
gitgutter#diff#parse_diff	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_diff(diff) abort$/;"	f
gitgutter#diff#parse_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_hunk(line) abort$/;"	f
gitgutter#diff#process_added	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_added(modifications, from_count, to_count, to_line) abort$/;"	f
gitgutter#diff#process_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_hunk(hunk) abort$/;"	f
gitgutter#diff#process_hunks	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_hunks(hunks) abort$/;"	f
gitgutter#diff#process_modified	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_modified(modifications, from_count, to_count, to_line) abort$/;"	f
gitgutter#diff#process_modified_and_added	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_modified_and_added(modifications, from_count, to_count, to_line) abort$/;"	f
gitgutter#diff#process_modified_and_removed	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_modified_and_removed(modifications, from_count, to_count, to_line) abort$/;"	f
gitgutter#diff#process_removed	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_removed(modifications, from_count, to_count, to_line) abort$/;"	f
gitgutter#diff#run_diff	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#run_diff(realtime, preserve_full_diff) abort$/;"	f
gitgutter#disable	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#disable() abort$/;"	f
gitgutter#enable	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#enable() abort$/;"	f
gitgutter#handle_diff	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#handle_diff(diff) abort$/;"	f
gitgutter#highlight#define_highlights	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_highlights() abort$/;"	f
gitgutter#highlight#define_sign_column_highlight	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_column_highlight() abort$/;"	f
gitgutter#highlight#define_sign_line_highlights	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_line_highlights() abort$/;"	f
gitgutter#highlight#define_sign_text	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_text() abort$/;"	f
gitgutter#highlight#define_sign_text_highlights	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_text_highlights() abort$/;"	f
gitgutter#highlight#define_signs	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_signs() abort$/;"	f
gitgutter#highlight#get_background_colors	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#get_background_colors(group) abort$/;"	f
gitgutter#highlight#match_highlight	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#match_highlight(highlight, pattern) abort$/;"	f
gitgutter#hunk#current_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#current_hunk() abort$/;"	f
gitgutter#hunk#cursor_in_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#cursor_in_hunk(hunk) abort$/;"	f
gitgutter#hunk#hunks	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#hunks() abort$/;"	f
gitgutter#hunk#increment_lines_added	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_added(count) abort$/;"	f
gitgutter#hunk#increment_lines_modified	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_modified(count) abort$/;"	f
gitgutter#hunk#increment_lines_removed	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_removed(count) abort$/;"	f
gitgutter#hunk#line_adjustment_for_current_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#line_adjustment_for_current_hunk() abort$/;"	f
gitgutter#hunk#next_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#next_hunk(count) abort$/;"	f
gitgutter#hunk#prev_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#prev_hunk(count) abort$/;"	f
gitgutter#hunk#reset	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#reset() abort$/;"	f
gitgutter#hunk#set_hunks	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#set_hunks(hunks) abort$/;"	f
gitgutter#hunk#summary	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#summary(bufnr) abort$/;"	f
gitgutter#hunk#text_object	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#text_object(inner) abort$/;"	f
gitgutter#line_highlights_disable	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#line_highlights_disable() abort$/;"	f
gitgutter#line_highlights_enable	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#line_highlights_enable() abort$/;"	f
gitgutter#line_highlights_toggle	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#line_highlights_toggle() abort$/;"	f
gitgutter#preview_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#preview_hunk() abort$/;"	f
gitgutter#process_buffer	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#process_buffer(bufnr, realtime) abort$/;"	f
gitgutter#sign#add_dummy_sign	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#add_dummy_sign() abort$/;"	f
gitgutter#sign#clear_signs	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#clear_signs() abort$/;"	f
gitgutter#sign#find_current_signs	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#find_current_signs() abort$/;"	f
gitgutter#sign#next_sign_id	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#next_sign_id() abort$/;"	f
gitgutter#sign#obsolete_gitgutter_signs_to_remove	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#obsolete_gitgutter_signs_to_remove(new_gitgutter_signs_line_numbers) abort$/;"	f
gitgutter#sign#remove_dummy_sign	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#remove_dummy_sign(force) abort$/;"	f
gitgutter#sign#remove_signs	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#remove_signs(sign_ids, all_signs) abort$/;"	f
gitgutter#sign#reset	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#reset()$/;"	f
gitgutter#sign#update_signs	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#update_signs(modified_lines) abort$/;"	f
gitgutter#sign#upsert_new_gitgutter_signs	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#upsert_new_gitgutter_signs(modified_lines) abort$/;"	f
gitgutter#signs_disable	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#signs_disable() abort$/;"	f
gitgutter#signs_enable	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#signs_enable() abort$/;"	f
gitgutter#signs_toggle	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#signs_toggle() abort$/;"	f
gitgutter#stage_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#stage_hunk() abort$/;"	f
gitgutter#toggle	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#toggle() abort$/;"	f
gitgutter#undo_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#undo_hunk() abort$/;"	f
gitgutter#utility#bufnr	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#bufnr()$/;"	f
gitgutter#utility#command_in_directory_of_file	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#command_in_directory_of_file(cmd) abort$/;"	f
gitgutter#utility#dedup	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#dedup(list)$/;"	f
gitgutter#utility#directory_of_file	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#directory_of_file() abort$/;"	f
gitgutter#utility#exists_file	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#exists_file() abort$/;"	f
gitgutter#utility#extension	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#extension() abort$/;"	f
gitgutter#utility#file	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#file()$/;"	f
gitgutter#utility#file_relative_to_repo_root	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#file_relative_to_repo_root() abort$/;"	f
gitgutter#utility#filename	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#filename() abort$/;"	f
gitgutter#utility#full_path_to_directory_of_file	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#full_path_to_directory_of_file() abort$/;"	f
gitgutter#utility#getbufvar	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#getbufvar(buffer, varname, ...)$/;"	f
gitgutter#utility#git_supports_command_line_config_override	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#git_supports_command_line_config_override() abort$/;"	f
gitgutter#utility#has_fresh_changes	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#has_fresh_changes() abort$/;"	f
gitgutter#utility#has_unsaved_changes	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#has_unsaved_changes() abort$/;"	f
gitgutter#utility#highlight_name_for_change	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#highlight_name_for_change(text) abort$/;"	f
gitgutter#utility#is_active	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#is_active() abort$/;"	f
gitgutter#utility#is_file_buffer	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#is_file_buffer() abort$/;"	f
gitgutter#utility#not_git_dir	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#not_git_dir() abort$/;"	f
gitgutter#utility#restore_shell	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#restore_shell() abort$/;"	f
gitgutter#utility#save_last_seen_change	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#save_last_seen_change() abort$/;"	f
gitgutter#utility#set_buffer	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#set_buffer(bufnr) abort$/;"	f
gitgutter#utility#setbufvar	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#setbufvar(buffer, varname, val)$/;"	f
gitgutter#utility#shell_error	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#shell_error() abort$/;"	f
gitgutter#utility#shellescape	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#shellescape(arg) abort$/;"	f
gitgutter#utility#stringify	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#stringify(list) abort$/;"	f
gitgutter#utility#strip_trailing_new_line	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#strip_trailing_new_line(line) abort$/;"	f
gitgutter#utility#system	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#system(cmd, ...) abort$/;"	f
gitgutter#utility#use_known_shell	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#use_known_shell() abort$/;"	f
gitgutter#utility#using_xolox_shell	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#using_xolox_shell() abort$/;"	f
gitgutter#utility#warn	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn(message) abort$/;"	f
gitgutter#utility#warn_once	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn_once(message, key) abort$/;"	f
github_url	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:github_url(opts, ...) abort$/;"	f
gj	vimrc	/^nnoremap gj j$/;"	m
gk	vimrc	/^nnoremap gk k$/;"	m
glob	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
global	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^let global = get(g:, 'tmuxify_global_maps', 0) ? '!' : ''$/;"	v
global_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, event_handler_attributes)$/;"	v
global_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, microdata_attributes)$/;"	v
global_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, rdfa_attributes)$/;"	v
global_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, {'role': role})$/;"	v
global_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let global_attributes = extend(core_attributes, xml_attributes)$/;"	v
global_states_and_properties	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let global_states_and_properties = {$/;"	v
globpath	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:globpath(path, expr) abort$/;"	f
go	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^function! s:go(type,...) abort$/;"	f
go#alternate#Switch	pack/plugins/start/fatih-vim-go/autoload/go/alternate.vim	/^function! go#alternate#Switch(bang, cmd) abort$/;"	f
go#asmfmt#Format	pack/plugins/start/fatih-vim-go/autoload/go/asmfmt.vim	/^function! go#asmfmt#Format() abort$/;"	f
go#asmfmt#ToggleAsmFmtAutoSave	pack/plugins/start/fatih-vim-go/autoload/go/asmfmt.vim	/^function! go#asmfmt#ToggleAsmFmtAutoSave() abort$/;"	f
go#cmd#Build	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#Build(bang, ...) abort$/;"	f
go#cmd#BuildTags	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#BuildTags(bang, ...) abort$/;"	f
go#cmd#Generate	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#Generate(bang, ...) abort$/;"	f
go#cmd#Install	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#Install(bang, ...) abort$/;"	f
go#cmd#Run	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#Run(bang, ...) abort$/;"	f
go#cmd#RunTerm	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#RunTerm(bang, mode, files) abort$/;"	f
go#cmd#Test	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#Test(bang, compile, ...) abort$/;"	f
go#cmd#TestFunc	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#TestFunc(bang, ...) abort$/;"	f
go#cmd#autowrite	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#autowrite() abort$/;"	f
go#complete#Complete	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! go#complete#Complete(findstart, base) abort$/;"	f
go#complete#GetInfo	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! go#complete#GetInfo() abort$/;"	f
go#complete#Info	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! go#complete#Info(auto) abort$/;"	f
go#complete#ToggleAutoTypeInfo	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! go#complete#ToggleAutoTypeInfo() abort$/;"	f
go#coverage#Browser	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#Browser(bang, ...) abort$/;"	f
go#coverage#Buffer	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#Buffer(bang, ...) abort$/;"	f
go#coverage#BufferToggle	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#BufferToggle(bang, ...) abort$/;"	f
go#coverage#Clear	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#Clear() abort$/;"	f
go#coverage#genmatch	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#genmatch(cov) abort$/;"	f
go#coverage#overlay	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#overlay(file) abort$/;"	f
go#coverage#parsegocoverline	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#parsegocoverline(line) abort$/;"	f
go#def#Jump	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#Jump(mode) abort$/;"	f
go#def#SelectStackEntry	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#SelectStackEntry() abort$/;"	f
go#def#Stack	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#Stack(...) abort$/;"	f
go#def#StackClear	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#StackClear(...) abort$/;"	f
go#def#StackPop	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#StackPop(...) abort$/;"	f
go#def#StackUI	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#StackUI() abort$/;"	f
go#def#jump_to_declaration	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#jump_to_declaration(out, mode, bin_name) abort$/;"	f
go#doc#Open	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! go#doc#Open(newmode, mode, ...) abort$/;"	f
go#doc#OpenBrowser	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! go#doc#OpenBrowser(...) abort$/;"	f
go#fmt#Format	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! go#fmt#Format(withGoimport) abort$/;"	f
go#fmt#ToggleFmtAutoSave	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! go#fmt#ToggleFmtAutoSave() abort$/;"	f
go#fmt#run	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! go#fmt#run(bin_name, source, target)$/;"	f
go#fmt#update_file	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! go#fmt#update_file(source, target)$/;"	f
go#guru#AutoToogleSameIds	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#AutoToogleSameIds() abort$/;"	f
go#guru#Callees	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Callees(selected) abort$/;"	f
go#guru#Callers	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Callers(selected) abort$/;"	f
go#guru#Callstack	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Callstack(selected) abort$/;"	f
go#guru#ChannelPeers	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#ChannelPeers(selected) abort$/;"	f
go#guru#ClearSameIds	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#ClearSameIds() abort$/;"	f
go#guru#Describe	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Describe(selected) abort$/;"	f
go#guru#DescribeInfo	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#DescribeInfo() abort$/;"	f
go#guru#Freevars	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Freevars(selected) abort$/;"	f
go#guru#Implements	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Implements(selected) abort$/;"	f
go#guru#Referrers	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Referrers(selected) abort$/;"	f
go#guru#SameIds	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#SameIds() abort$/;"	f
go#guru#SameIdsTimer	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#SameIdsTimer() abort$/;"	f
go#guru#Scope	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Scope(...) abort$/;"	f
go#guru#ToggleSameIds	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#ToggleSameIds() abort$/;"	f
go#guru#Whicherrs	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Whicherrs(selected) abort$/;"	f
go#impl#Complete	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! go#impl#Complete(arglead, cmdline, cursorpos) abort$/;"	f
go#impl#Impl	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! go#impl#Impl(...) abort$/;"	f
go#import#SwitchImport	pack/plugins/start/fatih-vim-go/autoload/go/import.vim	/^function! go#import#SwitchImport(enabled, localname, path, bang) abort$/;"	f
go#job#Spawn	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^function go#job#Spawn(args)$/;"	f
go#jobcontrol#AddHandler	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! go#jobcontrol#AddHandler(handler) abort$/;"	f
go#jobcontrol#RemoveHandler	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! go#jobcontrol#RemoveHandler(id) abort$/;"	f
go#jobcontrol#Spawn	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! go#jobcontrol#Spawn(bang, desc, args) abort$/;"	f
go#keyify#Keyify	pack/plugins/start/fatih-vim-go/autoload/go/keyify.vim	/^function! go#keyify#Keyify()$/;"	f
go#lint#Errcheck	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#Errcheck(...) abort$/;"	f
go#lint#Golint	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#Golint(...) abort$/;"	f
go#lint#Gometa	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#Gometa(autosave, ...) abort$/;"	f
go#lint#ToggleMetaLinterAutoSave	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#ToggleMetaLinterAutoSave() abort$/;"	f
go#lint#Vet	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#Vet(bang, ...) abort$/;"	f
go#list#Clean	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Clean(listtype) abort$/;"	f
go#list#Get	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Get(listtype) abort$/;"	f
go#list#JumpToFirst	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#JumpToFirst(listtype) abort$/;"	f
go#list#Parse	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Parse(listtype, items) abort$/;"	f
go#list#ParseFormat	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#ParseFormat(listtype, errformat, items, title) abort$/;"	f
go#list#Populate	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Populate(listtype, items, title) abort$/;"	f
go#list#PopulateWin	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#PopulateWin(winnr, items) abort$/;"	f
go#list#Type	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Type(listtype) abort$/;"	f
go#list#Window	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Window(listtype, ...) abort$/;"	f
go#package#Complete	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#Complete(ArgLead, CmdLine, CursorPos) abort$/;"	f
go#package#CompleteMembers	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#CompleteMembers(package, member) abort$/;"	f
go#package#FromPath	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#FromPath(arg) abort$/;"	f
go#package#ImportPath	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#ImportPath(arg) abort$/;"	f
go#package#Paths	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#Paths() abort$/;"	f
go#path#BinPath	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#BinPath() abort$/;"	f
go#path#CheckBinPath	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#CheckBinPath(binpath) abort$/;"	f
go#path#Default	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#Default() abort$/;"	f
go#path#Detect	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#Detect() abort$/;"	f
go#path#GoPath	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#GoPath(...) abort$/;"	f
go#path#HasPath	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#HasPath(path) abort$/;"	f
go#play#Share	pack/plugins/start/fatih-vim-go/autoload/go/play.vim	/^function! go#play#Share(count, line1, line2) abort$/;"	f
go#rename#Rename	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^function! go#rename#Rename(bang, ...) abort$/;"	f
go#statusline#Clear	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^function! go#statusline#Clear(timer_id) abort$/;"	f
go#statusline#Show	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^function! go#statusline#Show() abort$/;"	f
go#statusline#Update	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^function! go#statusline#Update(status_dir, status) abort$/;"	f
go#tags#Add	pack/plugins/start/fatih-vim-go/autoload/go/tags.vim	/^function! go#tags#Add(start, end, count, ...) abort$/;"	f
go#tags#Remove	pack/plugins/start/fatih-vim-go/autoload/go/tags.vim	/^function! go#tags#Remove(start, end, count, ...) abort$/;"	f
go#tags#run	pack/plugins/start/fatih-vim-go/autoload/go/tags.vim	/^function! go#tags#run(start, end, offset, mode, fname, test_mode, ...) abort$/;"	f
go#template#ToggleAutoCreate	pack/plugins/start/fatih-vim-go/autoload/go/template.vim	/^function! go#template#ToggleAutoCreate() abort$/;"	f
go#template#create	pack/plugins/start/fatih-vim-go/autoload/go/template.vim	/^function! go#template#create() abort$/;"	f
go#term#new	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! go#term#new(bang, cmd) abort$/;"	f
go#term#newmode	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! go#term#newmode(bang, cmd, mode) abort$/;"	f
go#textobj#Function	pack/plugins/start/fatih-vim-go/autoload/go/textobj.vim	/^function! go#textobj#Function(mode) abort$/;"	f
go#textobj#FunctionJump	pack/plugins/start/fatih-vim-go/autoload/go/textobj.vim	/^function! go#textobj#FunctionJump(mode, direction) abort$/;"	f
go#tool#Deps	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Deps() abort$/;"	f
go#tool#ExecuteInDir	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#ExecuteInDir(cmd) abort$/;"	f
go#tool#Exists	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Exists(importpath) abort$/;"	f
go#tool#Files	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Files() abort$/;"	f
go#tool#FilterValids	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#FilterValids(items) abort$/;"	f
go#tool#Imports	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Imports() abort$/;"	f
go#tool#Info	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Info(auto) abort$/;"	f
go#tool#OpenBrowser	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#OpenBrowser(url) abort$/;"	f
go#tool#PackageName	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#PackageName() abort$/;"	f
go#tool#ParseErrors	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#ParseErrors(lines) abort$/;"	f
go#ui#CloseWindow	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^function! go#ui#CloseWindow() abort$/;"	f
go#ui#GetReturnWindow	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^function! go#ui#GetReturnWindow() abort$/;"	f
go#ui#OpenDefinition	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^function! go#ui#OpenDefinition(filter) abort$/;"	f
go#ui#OpenWindow	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^function! go#ui#OpenWindow(title, content, filetype) abort$/;"	f
go#util#AddTags	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#AddTags(line1, line2, ...) abort$/;"	f
go#util#EchoError	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoError(msg)$/;"	f
go#util#EchoInfo	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoInfo(msg)$/;"	f
go#util#EchoProgress	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoProgress(msg)$/;"	f
go#util#EchoSuccess	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoSuccess(msg)$/;"	f
go#util#EchoWarning	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoWarning(msg)$/;"	f
go#util#GetLines	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#GetLines()$/;"	f
go#util#IsWin	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#IsWin() abort$/;"	f
go#util#Join	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Join(...) abort$/;"	f
go#util#LineEnding	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#LineEnding() abort$/;"	f
go#util#Offset	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Offset(line, col) abort$/;"	f
go#util#OffsetCursor	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#OffsetCursor() abort$/;"	f
go#util#PathListSep	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#PathListSep() abort$/;"	f
go#util#PathSep	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#PathSep() abort$/;"	f
go#util#ShellError	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#ShellError() abort$/;"	f
go#util#Shellescape	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^fu! go#util#Shellescape(arg)$/;"	f
go#util#Shelljoin	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Shelljoin(arglist, ...) abort$/;"	f
go#util#Shelllist	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Shelllist(arglist, ...) abort$/;"	f
go#util#StripPathSep	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#StripPathSep(path) abort$/;"	f
go#util#StripTrailingSlash	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#StripTrailingSlash(paths) abort$/;"	f
go#util#System	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#System(str, ...) abort$/;"	f
go#util#Windo	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Windo(command) abort$/;"	f
go#util#camelcase	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#camelcase(word) abort$/;"	f
go#util#env	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#env(key) abort$/;"	f
go#util#goarch	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#goarch() abort$/;"	f
go#util#goos	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#goos() abort$/;"	f
go#util#gopath	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#gopath() abort$/;"	f
go#util#goroot	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#goroot() abort$/;"	f
go#util#has_job	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#has_job() abort$/;"	f
go#util#osarch	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#osarch() abort$/;"	f
go#util#snakecase	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#snakecase(word) abort$/;"	f
go#util#snippetcase	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#snippetcase(word) abort$/;"	f
go_packages	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! s:go_packages(dirs) abort$/;"	f
gocodeAutocomplete	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeAutocomplete() abort$/;"	f
gocodeCommand	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeCommand(cmd, preargs, args) abort$/;"	f
gocodeCurrentBuffer	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeCurrentBuffer() abort$/;"	f
gocodeCurrentBufferOpt	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeCurrentBufferOpt(filename) abort$/;"	f
gocodeEnableOptions	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeEnableOptions() abort$/;"	f
godocNotFound	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! s:godocNotFound(content) abort$/;"	f
godocWord	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! s:godocWord(args) abort$/;"	f
gofiletype_post	pack/plugins/start/fatih-vim-go/ftdetect/gofiletype.vim	/^function! s:gofiletype_post()$/;"	f
gofiletype_post	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^function! s:gofiletype_post()$/;"	f
gofiletype_pre	pack/plugins/start/fatih-vim-go/ftdetect/gofiletype.vim	/^function! s:gofiletype_pre(type)$/;"	f
gofiletype_pre	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^function! s:gofiletype_pre(type)$/;"	f
gogetdoc	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! s:gogetdoc(json) abort$/;"	f
grep_command	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:grep_command(args,bang,flags,word)$/;"	f
grey_colour	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:grey_colour(n)$/;"	f
grey_level	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:grey_level(n)$/;"	f
grey_number	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:grey_number(x)$/;"	f
groovy_minlines	pack/plugins/start/sheerun-vim-polyglot/syntax/groovy.vim	/^  let groovy_minlines = 10$/;"	v
group_by	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
gsa	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gsa <Plug>(crystal-spec-run-all)$/;"	m
gsc	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gsc <Plug>(crystal-spec-run-current)$/;"	m
gss	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gss <Plug>(crystal-spec-switch)$/;"	m
gsub	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
guru_cmd	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:guru_cmd(args) range abort$/;"	f
gutentags#add_progress	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#add_progress(module, file) abort$/;"	f
gutentags#chdir	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#chdir(path)$/;"	f
gutentags#cscope#command_terminated	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#command_terminated(job_id, data, event) abort$/;"	f
gutentags#cscope#generate	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#generate(proj_dir, tags_file, write_mode) abort$/;"	f
gutentags#cscope#init	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#init(project_root) abort$/;"	f
gutentags#ctags#generate	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#generate(proj_dir, tags_file, write_mode) abort$/;"	f
gutentags#ctags#init	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#init(project_root) abort$/;"	f
gutentags#delete_lock_files	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#delete_lock_files() abort$/;"	f
gutentags#fake	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#fake(...)$/;"	f
gutentags#get_cachefile	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_cachefile(root_dir, filename) abort$/;"	f
gutentags#get_execute_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_execute_cmd() abort$/;"	f
gutentags#get_execute_cmd_suffix	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_execute_cmd_suffix() abort$/;"	f
gutentags#get_plat_file	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_plat_file(filename) abort$/;"	f
gutentags#get_project_file_list_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_file_list_cmd(path) abort$/;"	f
gutentags#get_project_info	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_info(path) abort$/;"	f
gutentags#get_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_root(path) abort$/;"	f
gutentags#get_res_file	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_res_file(filename) abort$/;"	f
gutentags#gtags_cscope#generate	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#generate(proj_dir, db_file, write_mode) abort$/;"	f
gutentags#gtags_cscope#init	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#init(project_root) abort$/;"	f
gutentags#gtags_cscope#on_job_exit	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#gtags_cscope#on_job_out	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#on_job_out(job, data) abort$/;"	f
gutentags#inprogress	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#inprogress()$/;"	f
gutentags#is_path_rooted	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#is_path_rooted(path) abort$/;"	f
gutentags#normalizepath	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#normalizepath(path)$/;"	f
gutentags#rescan	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#rescan(...)$/;"	f
gutentags#setup_gutentags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#setup_gutentags() abort$/;"	f
gutentags#shellslash	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#shellslash(path)$/;"	f
gutentags#statusline	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline(...) abort$/;"	f
gutentags#stripslash	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#stripslash(path)$/;"	f
gutentags#throw	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#throw(message)$/;"	f
gutentags#throwerr	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#throwerr(message)$/;"	f
gutentags#toggletrace	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#toggletrace(...)$/;"	f
gutentags#trace	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#trace(message, ...)$/;"	f
gutentags#validate_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#validate_cmd(cmd) abort$/;"	f
gutentags_detect	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^augroup gutentags_detect$/;"	a
has	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
has_common_items	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
has_index	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
has_vimproc	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:has_vimproc() abort$/;"	f
has_webapi	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! s:has_webapi()$/;"	f
hash	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:hash(str) abort$/;"	f
haskell#formatImport	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haskell.vim	/^function! haskell#formatImport(line1, line2)$/;"	f
haskell#sortImports	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haskell.vim	/^function! haskell#sortImports(line1, line2)$/;"	f
haxe_minlines	pack/plugins/start/sheerun-vim-polyglot/syntax/haxe.vim	/^  let haxe_minlines = 5000$/;"	v
hi	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^function! s:hi()$/;"	f
hi	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^function! s:hi()$/;"	f
htmlcomplete#CheckDoctype	pack/plugins/start/sheerun-vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#CheckDoctype() " {{{$/;"	f
htmlcomplete#CompleteTags	pack/plugins/start/sheerun-vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#CompleteTags(findstart, base)$/;"	f
htmlcomplete#DetectOmniFlavor	pack/plugins/start/sheerun-vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#DetectOmniFlavor()$/;"	f
htmlcomplete#LoadAria	pack/plugins/start/sheerun-vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadAria() " {{{$/;"	f
htmlcomplete#LoadData	pack/plugins/start/sheerun-vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadData() " {{{$/;"	f
i	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^      let i += 1$/;"	v
i	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^    let i = 0$/;"	v
i$	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^onoremap <buffer> i$ :normal vi$<CR>$/;"	m
i$	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^vmap <buffer> i$ <Plug>LatexBox_SelectInlineMathInner$/;"	m
i%	vimrc	/^omap i% :<c-u>normal vi%<cr>$/;"	m
i3_ftdetect	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^augroup i3_ftdetect$/;"	a
iM	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> iM :<C-U>call <SID>wrap_i('[[','][')<CR>$/;"	m
ic	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    omap ic <Plug>GitGutterTextObjectInnerPending$/;"	m
iconv	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
ie	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^onoremap <buffer> ie :normal vie<CR>$/;"	m
ie	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/mappings.vim	/^vmap <buffer> ie <Plug>LatexBox_SelectCurrentEnvInner$/;"	m
ie	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  onoremap <silent> <buffer> ie :<C-U>call <SID>wrap_inside()<CR>$/;"	m
if	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> if :<c-u>call go#textobj#Function('i')<cr>$/;"	m
ignored_region	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:ignored_region()$/;"	f
il	vimrc	/^omap il :<c-u>normal vil<cr>$/;"	m
im	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> im :<C-U>call <SID>wrap_i('[m',']M')<CR>$/;"	m
import	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:import(name, ...) abort$/;"	f
indentGuard	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^function! s:indentGuard(pos, prevline)$/;"	f
indentMatching	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^function! s:indentMatching(char)$/;"	f
init	pack/plugins/start/wellle-tmux-complete-vim/plugin/tmuxcomplete.vim	/^function! s:init()$/;"	f
input_helper	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
input_safe	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
inputreplacement	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:inputreplacement()$/;"	f
inputtarget	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:inputtarget()$/;"	f
insert	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
insert_entry	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:insert_entry() " Select and insert a pop-up entry, overriding noselect and noinsert$/;"	f
insidePlantUMLTags	pack/plugins/start/sheerun-vim-polyglot/indent/plantuml.vim	/^function! s:insidePlantUMLTags(lnum) abort$/;"	f
instaweb_url	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:instaweb_url(opts) abort$/;"	f
interface_list	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! s:interface_list(pkg) abort$/;"	f
intersect	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
isAnsible	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^function! s:isAnsible()$/;"	f
isInBlock	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^function! s:isInBlock(hlstack)$/;"	f
isSYN	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^function! s:isSYN(grp, line, col)$/;"	f
is_available	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:is_available() abort$/;"	f
is_cmdwin	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:is_cmdwin() "{{{1$/;"	f
is_cygwin	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
is_dict	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
is_float	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
is_funcref	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
is_job_started	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:is_job_started(id) abort$/;"	f
is_list	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
is_mac	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:is_mac() abort$/;"	f
is_method_special_case	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:is_method_special_case(position)$/;"	f
is_number	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
is_numeric	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
is_paren	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:is_paren()$/;"	f
is_reader_conditional_special_case	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:is_reader_conditional_special_case(position)$/;"	f
is_string	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
is_string_comment	pack/plugins/start/sheerun-vim-polyglot/indent/rust.vim	/^function! s:is_string_comment(lnum, col)$/;"	f
is_unix	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:is_unix() abort$/;"	f
is_windows	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:is_windows() abort$/;"	f
iscontOne	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^function s:iscontOne(i,num,cont)$/;"	f
iscontOne	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:iscontOne(i,num,cont)$/;"	f
j	vimrc	/^nnoremap j gj$/;"	m
job_buffer	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:job_buffer(id) abort$/;"	f
job_finished	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:job_finished(id) abort$/;"	f
job_output	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:job_output(id) abort$/;"	f
job_started	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:job_started(id, ...) abort$/;"	f
jobdir	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let jobdir = fnameescape(expand("%:p:h"))$/;"	v
jobdir	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let jobdir = fnameescape(expand("%:p:h"))$/;"	v
jump	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^function! s:jump(command,count)$/;"	f
jump_to_declaration_cb	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! s:jump_to_declaration_cb(mode, bin_name, job, exit_status, data) abort$/;"	f
jump_to_impl	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! s:jump_to_impl(impl) abort$/;"	f
justify_equal_spacing	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
k	vimrc	/^nnoremap k gk$/;"	m
kill_all_latexmk_processes	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:kill_all_latexmk_processes()$/;"	f
kill_latexmk_process	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:kill_latexmk_process(pid)$/;"	f
l:start_options	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^    let l:start_options.in_io = "file"$/;"	v
l:start_options	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^    let l:start_options.in_name = l:tmpname$/;"	v
l:start_options	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^    let l:start_options.in_io = "file"$/;"	v
l:start_options	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^    let l:start_options.in_name = l:tmpname$/;"	v
l:tmpname	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^    let l:tmpname = tempname()$/;"	v
l:tmpname	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^    let l:tmpname = tempname()$/;"	v
label_col	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:label_col()$/;"	f
landmark_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let landmark_role = [$/;"	v
landmark_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let landmark_role = ['application', 'banner', 'complementary', 'contentinfo', 'form', 'main', 'navigation', 'search']$/;"	v
lang_tag	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let lang_tag = [$/;"	v
language	pack/plugins/start/sheerun-vim-polyglot/indent/vue.vim	/^    let language.indentexpr = s:get_indentexpr(language.name)$/;"	v
levenshtein_distance	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
linechars	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
lines	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:lines(str) abort$/;"	f
lines.gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^function! s:lines.gather_candidates(args, context)$/;"	f
linkreltypes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['amphtml']$/;"	v
linkreltypes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['apple-touch-icon', 'apple-touch-icon-precomposed', 'apple-touch-startup-image']$/;"	v
linkreltypes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['canonical']$/;"	v
linkreltypes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['chrome-webstore-item']$/;"	v
linkreltypes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['hub']$/;"	v
linkreltypes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['import']$/;"	v
linkreltypes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['manifest']$/;"	v
linkreltypes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['pgpkey']$/;"	v
linkreltypes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['search']$/;"	v
linkreltypes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['sitemap']$/;"	v
linkreltypes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['webmention']$/;"	v
linkreltypes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linktypes$/;"	v
linktypes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let linktypes = ['alternate', 'author', 'bookmark', 'dns-prefetch', 'external', 'help', 'icon', 'license', 'next', 'nofollow', 'noreferrer', 'noopener', 'pingback', 'preconnect', 'prefetch', 'preload', 'prerender', 'prev', 'search', 'stylesheet', 'tag']$/;"	v
lint_job	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function s:lint_job(args)$/;"	f
live_region_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let live_region_attributes = {$/;"	v
livescript_compiler	pack/plugins/start/sheerun-vim-polyglot/compiler/ls.vim	/^  let livescript_compiler = 'lsc'$/;"	v
livescript_compiler	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ls.vim	/^  let livescript_compiler = 'lsc'$/;"	v
livescript_make_options	pack/plugins/start/sheerun-vim-polyglot/compiler/ls.vim	/^  let livescript_make_options = ''$/;"	v
load	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:load(...) dict abort$/;"	f
log_contains_error	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:log_contains_error(file)$/;"	f
looking_at	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^function s:looking_at()$/;"	f
looking_at	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:looking_at()$/;"	f
main	get-plugins.go	/^func main() {$/;"	f
main	get-plugins.go	/^package main$/;"	p
main	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^func main() {$/;"	f
main	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/def/jump.go	/^func main() {$/;"	f
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/def/jump.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/hello.go	/^  func main() {$/;"	f
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/hello.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/hello_golden.go	/^func main() {$/;"	f
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/hello_golden.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/templates/hello_world.go	/^func main() {$/;"	f
main	pack/plugins/start/fatih-vim-go/templates/hello_world.go	/^package main$/;"	p
main_syntax	pack/plugins/start/fatih-vim-go/syntax/gohtmltmpl.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ansible.vim	/^  let main_syntax = 'yaml'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ansible_template.vim	/^  let main_syntax = 'jinja2'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/blade.vim	/^    let main_syntax = 'blade'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/css.vim	/^  let main_syntax = 'css'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^  let main_syntax = 'eelixir'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/emblem.vim	/^  let main_syntax = 'emblem'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^  let main_syntax = 'eruby'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/gohtmltmpl.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/groovy.vim	/^  let main_syntax='groovy'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/haml.vim	/^  let main_syntax = 'haml'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/haxe.vim	/^  let main_syntax='haxe'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/jinja2.vim	/^  let main_syntax = 'jinja'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/json.vim	/^  let main_syntax = 'json'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^  let main_syntax = 'jst'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^  let main_syntax = 'liquid'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/lua.vim	/^  let main_syntax = 'lua'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/mako.vim	/^  let main_syntax = "html"$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/mason.vim	/^	let main_syntax = 'mason'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^  let main_syntax = 'php'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/pug.vim	/^  let main_syntax = 'pug'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/qml.vim	/^  let main_syntax = 'qml'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/scala.vim	/^  let main_syntax = 'scala'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/scss.vim	/^  let main_syntax = 'scss'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/slim.vim	/^  let main_syntax = 'slim'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/stylus.vim	/^  let main_syntax = 'css'$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/typescript.vim	/^  let main_syntax = "typescript"$/;"	v
main_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/velocity.vim	/^  let main_syntax = 'html'$/;"	v
manual._inject_keywords	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual._inject_keywords(keywords) "{{{$/;"	f
manual.add	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.add(pattern, escaped) "{{{$/;"	f
manual.clear	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.clear() "{{{$/;"	f
manual.del	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.del(pattern, escaped) "{{{$/;"	f
manual.del_by_index	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.del_by_index(idx) "{{{$/;"	f
manual.dump	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.dump() "{{{$/;"	f
manual.index_of	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.index_of(pattern) "{{{$/;"	f
manual.init	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.init() "{{{$/;"	f
manual.init_highlight	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.init_highlight() "{{{$/;"	f
manual.inject_keywords	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.inject_keywords() "{{{$/;"	f
manual.is_locked	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.is_locked() "{{{$/;"	f
manual.list	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.list() "{{{$/;"	f
manual.next_index	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.next_index() "{{{$/;"	f
manual.read_colors	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.read_colors(list) "{{{$/;"	f
manual.refresh	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.refresh() "{{{$/;"	f
manual.reset	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.reset() "{{{$/;"	f
manual.set	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.set() "{{{$/;"	f
manual.show_colors	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.show_colors() "{{{$/;"	f
manual_update_tags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! s:manual_update_tags(bang) abort$/;"	f
map	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^function! s:map(mode, flags, map) abort$/;"	f
map_accum	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
mapleader	vimrc	/^let mapleader="\\<space>"$/;"	v
match_one	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:match_one(patterns, string)$/;"	f
match_pairs	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:match_pairs(open, close, stopat)$/;"	f
max_by	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
message	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let message = 'Executed ' . s:done . (s:done > 1 ? ' tests' : ' test') . '. Total test time: '. total_elapsed_time .'s'$/;"	v
metadata_elements	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let metadata_elements = ['link', 'style', 'meta', 'script', 'noscript', 'command']$/;"	v
metalinter_autosave	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:metalinter_autosave()$/;"	f
microdata_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let microdata_attributes = {'itemid': [], 'itemscope': ['itemscope', ''], 'itemtype': [], 'itemprop': [], 'itemref': []}$/;"	v
microdata_attributes_value	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let microdata_attributes_value = {$/;"	v
min_by	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
mixedcase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:mixedcase(word)$/;"	f
mucomplete#compat#can_complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#can_complete()$/;"	f
mucomplete#compat#default	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#default(t)$/;"	f
mucomplete#compat#dict	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#dict(t)$/;"	f
mucomplete#compat#omni	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#omni(t)$/;"	f
mucomplete#compat#path	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#path(t)$/;"	f
mucomplete#compat#spel	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#spel(t)$/;"	f
mucomplete#compat#tags	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#tags(t)$/;"	f
mucomplete#compat#thes	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#thes(t)$/;"	f
mucomplete#compat#ulti	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#ulti(t)$/;"	f
mucomplete#compat#user	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#user(t)$/;"	f
mucomplete#compat#yes_you_can	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#yes_you_can(t)$/;"	f
mucomplete#cycle	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#cycle(dir)$/;"	f
mucomplete#cycle_or_select	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#cycle_or_select(dir)$/;"	f
mucomplete#disable_auto	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  fun! mucomplete#disable_auto()$/;"	f
mucomplete#enable_auto	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  fun! mucomplete#enable_auto()$/;"	f
mucomplete#init	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#init(dir, tab_completion) " Initialize\/reset internal state$/;"	f
mucomplete#path#complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/path.vim	/^  fun! mucomplete#path#complete() abort$/;"	f
mucomplete#popup_exit	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#popup_exit(ctrl)$/;"	f
mucomplete#spel#complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/spel.vim	/^fun! mucomplete#spel#complete() abort$/;"	f
mucomplete#tab_complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#tab_complete(dir)$/;"	f
mucomplete#toggle_auto	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  fun! mucomplete#toggle_auto()$/;"	f
mucomplete#ultisnips#complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/ultisnips.vim	/^fun! mucomplete#ultisnips#complete() abort$/;"	f
mustNotError	get-plugins.go	/^func mustNotError(err error) {$/;"	f
neocomplcache#sources#tmuxcomplete#define	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplcache/sources/tmuxcomplete.vim	/^function! neocomplcache#sources#tmuxcomplete#define()$/;"	f
neocomplete#sources#tmuxcomplete#define	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplete/sources/tmuxcomplete.vim	/^function! neocomplete#sources#tmuxcomplete#define()$/;"	f
next_method	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:next_method()$/;"	f
nim_highlight_builtins	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^  let nim_highlight_builtins     = 1$/;"	v
nim_highlight_builtins	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^  let nim_highlight_builtins = 1$/;"	v
nim_highlight_exceptions	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^  let nim_highlight_exceptions   = 1$/;"	v
nim_highlight_exceptions	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^  let nim_highlight_exceptions = 1$/;"	v
nim_highlight_numbers	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^  let nim_highlight_numbers      = 1$/;"	v
nim_highlight_numbers	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^  let nim_highlight_numbers = 1$/;"	v
nim_highlight_space_errors	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^  let nim_highlight_space_errors = 1$/;"	v
nim_highlight_special_vars	pack/plugins/start/sheerun-vim-polyglot/syntax/nim.vim	/^  let nim_highlight_special_vars = 1$/;"	v
nofrilsTheme	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^type nofrilsTheme struct {$/;"	t
normalize_options	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:normalize_options(flags)$/;"	f
nr2byte	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f
nr2enc_char	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
nr2hex	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f
nsplit	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
o	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^    nnoremap <buffer> o <CR><C-w>p$/;"	m
object.clone	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:object.clone(...)$/;"	f
old_gopath	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let old_gopath = $GOPATH$/;"	v
old_gopath	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let old_gopath = $GOPATH$/;"	v
old_gopath	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let old_gopath = $GOPATH$/;"	v
on_exit	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:on_exit(job_id, exit_status, event) dict abort$/;"	f
on_exit	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! s:on_exit(job_id, exit_status, event) dict abort$/;"	f
on_stderr	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:on_stderr(job_id, data, event) dict abort$/;"	f
on_stderr	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! s:on_stderr(job_id, data, event) dict abort$/;"	f
on_stdout	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:on_stdout(job_id, data, event) dict abort$/;"	f
on_stdout	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! s:on_stdout(job_id, data, event) dict abort$/;"	f
opendir	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^function! s:opendir(cmd) abort$/;"	f
opfunc	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:opfunc(type,...) " {{{1$/;"	f
opfunc2	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:opfunc2(arg)$/;"	f
option_map	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:option_map(letter, option, mode) abort$/;"	f
or	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:or(xs) abort$/;"	f
os	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^import os$/;"	m
os.path	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^import os.path$/;"	m
others	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:others(p)$/;"	f
output	pack/plugins/start/sheerun-vim-polyglot/build	/^output() {$/;"	f
p	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^    nnoremap <buffer> p :call qf#preview#PreviewFileUnderCursor()<CR>$/;"	m
pad_between_letters	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
pad_both_sides	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
pad_left	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
pad_right	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
padding_by_displaywidth	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
palettes_should_have_color00_to_color15	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:palettes_should_have_color00_to_color15()$/;"	f
parse_cino	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^function s:parse_cino(f)$/;"	f
parse_errors	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! s:parse_errors(filename, content) abort$/;"	f
parse_errors	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^function s:parse_errors(exit_val, bang, out)$/;"	f
parse_guru_output	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:parse_guru_output(exit_val, output, title) abort$/;"	f
parse_substitute	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:parse_substitute(bang,line1,line2,count,args)$/;"	f
parse_subvert	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:parse_subvert(bang,line1,line2,count,args)$/;"	f
partition	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
path2directory	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
path2project_directory	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
pattern	pack/plugins/start/sheerun-vim-polyglot/syntax/cucumber.vim	/^function! s:pattern(key)$/;"	f
pattern	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:pattern(dict,boundaries)$/;"	f
perlpath	pack/plugins/start/sheerun-vim-polyglot/ftplugin/perl.vim	/^	    let perlpath = system("perl -e 'print join(q\/,\/,@INC)'")$/;"	v
perlpath	pack/plugins/start/sheerun-vim-polyglot/ftplugin/perl.vim	/^	    let perlpath = system('perl -e "print join(q\/,\/,@INC)"')$/;"	v
perlpath	pack/plugins/start/sheerun-vim-polyglot/ftplugin/perl.vim	/^	let perlpath = ".,,"$/;"	v
perlpath	pack/plugins/start/sheerun-vim-polyglot/ftplugin/perl.vim	/^	let perlpath = substitute(perlpath,',.$',',,','')$/;"	v
permutations	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
php_folding	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^  let php_folding = 0$/;"	v
php_html_in_heredoc	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^    let php_html_in_heredoc=1$/;"	v
php_html_in_heredoc	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^  let php_html_in_heredoc=0$/;"	v
php_html_in_strings	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^  let php_html_in_strings=0$/;"	v
php_html_load	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^  let php_html_load=1$/;"	v
php_phpdoc_folding	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^  let php_phpdoc_folding = 0$/;"	v
php_sql_heredoc	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^  let php_sql_heredoc=1$/;"	v
php_sync_method	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^    let php_sync_method=-1$/;"	v
php_sync_method	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^    let php_sync_method=php_minlines$/;"	v
phrasing_elements	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let phrasing_elements = ['a', 'em', 'strong', 'small', 'mark', 'abbr', 'dfn', 'i', 'b', 'u', 'code', 'var', 'samp', 'kbd', 'sup', 'sub', 'q', 'cite', 'span', 'bdo', 'bdi', 'br', 'wbr', 'ins', 'del', 'img', 'picture', 'embed', 'object', 'iframe', 'map', 'area', 'script', 'noscript', 'ruby', 'video', 'audio', 'input', 'textarea', 'select', 'button', 'label', 'output', 'datalist', 'keygen', 'progress', 'command', 'canvas', 'time', 'meter', 'data', 'content', 'shadow']$/;"	v
plugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^augroup plugin-ft-crystal$/;"	a
pop	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:pop(list) abort$/;"	f
prefix	pack/plugins/start/sheerun-vim-polyglot/ftplugin/tex_LatexBox.vim	/^	let prefix = expand('<sfile>:p:h') . '\/latex-box\/'$/;"	v
previous_token	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^function s:previous_token()$/;"	f
previous_token	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:previous_token()$/;"	f
prevnonblanknoncomment	pack/plugins/start/sheerun-vim-polyglot/indent/stylus.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
process	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:process(string)$/;"	f
process_options_file	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:process_options_file(proj_dir, path) abort$/;"	f
product	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:product(lists) abort$/;"	f
puppetalign	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/puppet.vim	/^    function! s:puppetalign()$/;"	f
push	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
putline	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:putline(how, map) abort$/;"	f
python#utils#fix_qflist	pack/plugins/start/sheerun-vim-polyglot/autoload/python/utils.vim	/^function! python#utils#fix_qflist() " {{{$/;"	f
python_highlight_builtins	pack/plugins/start/sheerun-vim-polyglot/syntax/python.vim	/^    let python_highlight_builtins = 1$/;"	v
python_highlight_doctests	pack/plugins/start/sheerun-vim-polyglot/syntax/python.vim	/^    let python_highlight_doctests = 1$/;"	v
python_highlight_exceptions	pack/plugins/start/sheerun-vim-polyglot/syntax/python.vim	/^    let python_highlight_exceptions = 1$/;"	v
python_highlight_indent_errors	pack/plugins/start/sheerun-vim-polyglot/syntax/python.vim	/^    let python_highlight_indent_errors = 1$/;"	v
python_highlight_space_errors	pack/plugins/start/sheerun-vim-polyglot/syntax/python.vim	/^    let python_highlight_space_errors = 1$/;"	v
python_highlight_string_formatting	pack/plugins/start/sheerun-vim-polyglot/syntax/python.vim	/^    let python_highlight_string_formatting = 1$/;"	v
q	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> q :call <SID>TOCClose()<CR>$/;"	m
qf	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^augroup qf$/;"	a
qf#GetEntryPath	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#GetEntryPath(line) abort$/;"	f
qf#GetList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#GetList()$/;"	f
qf#IsLocWindow	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#IsLocWindow(nmbr)$/;"	f
qf#IsLocWindowOpen	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#IsLocWindowOpen(nmbr) abort$/;"	f
qf#IsQfWindow	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#IsQfWindow(nmbr)$/;"	f
qf#IsQfWindowOpen	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#IsQfWindowOpen() abort$/;"	f
qf#OpenLoclist	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#OpenLoclist()$/;"	f
qf#OpenQuickfix	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#OpenQuickfix()$/;"	f
qf#PreviewFileUnderCursor	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#PreviewFileUnderCursor()$/;"	f
qf#SetList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#SetList(newlist, ...)$/;"	f
qf#do#DoList	pack/plugins/start/romainl-vim-qf/autoload/qf/do.vim	/^function! qf#do#DoList(line, cmd)$/;"	f
qf#filegroup#NextFile	pack/plugins/start/romainl-vim-qf/autoload/qf/filegroup.vim	/^function! qf#filegroup#NextFile() abort$/;"	f
qf#filegroup#PreviousFile	pack/plugins/start/romainl-vim-qf/autoload/qf/filegroup.vim	/^function! qf#filegroup#PreviousFile() abort$/;"	f
qf#filter#FilterList	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! qf#filter#FilterList(pat, reject)$/;"	f
qf#filter#RestoreList	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! qf#filter#RestoreList()$/;"	f
qf#filter#ReuseTitle	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! qf#filter#ReuseTitle()$/;"	f
qf#namedlist#CompleteList	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^function! qf#namedlist#CompleteList(ArgLead, CmdLine, CursorPos)$/;"	f
qf#namedlist#ListLists	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^function! qf#namedlist#ListLists()$/;"	f
qf#namedlist#LoadList	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^function! qf#namedlist#LoadList(add, ...)$/;"	f
qf#namedlist#RemoveList	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^function! qf#namedlist#RemoveList(bang, ...)$/;"	f
qf#namedlist#SaveList	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^function! qf#namedlist#SaveList(add, name) abort$/;"	f
qf#preview#PreviewFileUnderCursor	pack/plugins/start/romainl-vim-qf/autoload/qf/preview.vim	/^function! qf#preview#PreviewFileUnderCursor()$/;"	f
qf#statusline#SetStatusline	pack/plugins/start/romainl-vim-qf/autoload/qf/statusline.vim	/^function! qf#statusline#SetStatusline()$/;"	f
qf#toggle#ToggleLocWindow	pack/plugins/start/romainl-vim-qf/autoload/qf/toggle.vim	/^function! qf#toggle#ToggleLocWindow(stay) abort$/;"	f
qf#toggle#ToggleQfWindow	pack/plugins/start/romainl-vim-qf/autoload/qf/toggle.vim	/^function! qf#toggle#ToggleQfWindow(stay) abort$/;"	f
qf#wrap#WrapCommand	pack/plugins/start/romainl-vim-qf/autoload/qf/wrap.vim	/^function! qf#wrap#WrapCommand(direction, prefix)$/;"	f
query_path	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^function! s:query_path(root) abort$/;"	f
quickhl#cword#disable	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! quickhl#cword#disable() "{{{$/;"	f
quickhl#cword#enable	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! quickhl#cword#enable() "{{{$/;"	f
quickhl#cword#init_highlight	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! quickhl#cword#init_highlight() "{{{$/;"	f
quickhl#cword#refresh	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! quickhl#cword#refresh() "{{{$/;"	f
quickhl#cword#toggle	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! quickhl#cword#toggle() "{{{$/;"	f
quickhl#escape	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl.vim	/^function! quickhl#escape(pattern) "{{{$/;"	f
quickhl#get_selected_text	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl.vim	/^function! quickhl#get_selected_text() "{{{$/;"	f
quickhl#manual#add	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#add(pattern, escaped) "{{{$/;"	f
quickhl#manual#add_or_del	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#add_or_del(pattern) "{{{$/;"	f
quickhl#manual#colors	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#colors() "{{{$/;"	f
quickhl#manual#del	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#del(pattern, escaped) "{{{$/;"	f
quickhl#manual#disable	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#disable() "{{{$/;"	f
quickhl#manual#dump	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#dump() "{{{$/;"	f
quickhl#manual#enable	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#enable() "{{{$/;"	f
quickhl#manual#init_highlight	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#init_highlight() "{{{$/;"	f
quickhl#manual#list	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#list() "{{{$/;"	f
quickhl#manual#lock	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#lock() "{{{$/;"	f
quickhl#manual#lock_toggle	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#lock_toggle() "{{{$/;"	f
quickhl#manual#lock_window	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#lock_window() "{{{$/;"	f
quickhl#manual#lock_window_toggle	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#lock_window_toggle() "{{{$/;"	f
quickhl#manual#refresh	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#refresh() "{{{$/;"	f
quickhl#manual#reset	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#reset() "{{{$/;"	f
quickhl#manual#status	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#status() "{{{$/;"	f
quickhl#manual#this	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#this(mode) "{{{$/;"	f
quickhl#manual#this_motion	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#this_motion(motion_wise) " {{{$/;"	f
quickhl#manual#unlock	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#unlock() "{{{$/;"	f
quickhl#manual#unlock_window	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#unlock_window() "{{{$/;"	f
quickhl#our_match	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl.vim	/^function! quickhl#our_match(pattern) "{{{$/;"	f
quickhl#tag#disable	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! quickhl#tag#disable() "{{{$/;"	f
quickhl#tag#enable	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! quickhl#tag#enable() "{{{$/;"	f
quickhl#tag#init_highlight	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! quickhl#tag#init_highlight() "{{{$/;"	f
quickhl#tag#refresh	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! quickhl#tag#refresh() "{{{$/;"	f
quickhl#tag#toggle	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! quickhl#tag#toggle() "{{{$/;"	f
quickhl#warn	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl.vim	/^function! quickhl#warn(error) "{{{$/;"	f
quickhl#windo	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl.vim	/^function! quickhl#windo(func, obj) "{{{$/;"	f
r	pack/plugins/start/sheerun-vim-polyglot/ftplugin/r.vim	/^vnoremap <buffer> r :w >> ~\/.r-pipe<CR>$/;"	m
r	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rhelp.vim	/^vnoremap <buffer> r :w >> ~\/.r-pipe<CR>$/;"	m
r	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rnoweb.vim	/^vnoremap <buffer> r :w >> ~\/.r-pipe<CR>$/;"	m
rdfa_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let rdfa_attributes = {'about': [], 'content': [], 'datatype': [], 'prefix': [], 'profile': [], 'property': [], 'resource': [], 'rel': relrev, 'rev': relrev, 'typeof': [], 'vocab': []}$/;"	v
rdfa_attributes_value	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let rdfa_attributes_value = {$/;"	v
re	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^import re$/;"	m
recall	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:recall() abort$/;"	f
redraw	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:redraw()$/;"	f
register_language	pack/plugins/start/sheerun-vim-polyglot/syntax/vue.vim	/^function! s:register_language(language, tag, ...)$/;"	f
reindent	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:reindent() " {{{1$/;"	f
relationship_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let relationship_attributes = {$/;"	v
relatives	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^function! s:relatives(first, ...) abort$/;"	f
relrev	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let relrev = ['chapter', 'contents', 'copyright', 'first', 'glossary', 'help', 'icon', 'index', 'last', 'license', 'meta', 'next', 'p3pv1', 'prev', 'role', 'section', 'stylesheet', 'subsection', 'start', 'top', 'up']$/;"	v
rename_job	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^function s:rename_job(args)$/;"	f
repeat#invalidate	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^function! repeat#invalidate()$/;"	f
repeat#run	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^function! repeat#run(count)$/;"	f
repeat#set	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^function! repeat#set(sequence,...)$/;"	f
repeat#setreg	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^function! repeat#setreg(sequence,register)$/;"	f
repeat#wrap	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^function! repeat#wrap(command,count)$/;"	f
repeatPlugin	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^augroup repeatPlugin$/;"	a
replace	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f
replace_first	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
repo	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo_aliases	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_aliases() dict abort$/;"	f
repo_bare	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_config(conf) dict abort$/;"	f
repo_dir	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dirglob	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_git_chomp	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
repo_head_ref	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
repo_keywordprg	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_rev_parse	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_tree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
reset_summary	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:reset_summary() abort$/;"	f
reverse	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^func reverse(vcr vimColorRow) vimColorRow {$/;"	f
reverse	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:reverse(str) abort$/;"	f
rgb_colour	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:rgb_colour(x, y, z)$/;"	f
rgb_level	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:rgb_level(n)$/;"	f
rgb_number	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:rgb_number(x)$/;"	f
robertmeta's vimrc	README.md	/^# robertmeta's vimrc$/;"	h
role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role = extend(role, dpub_role)$/;"	v
role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role = extend(role, landmark_role)$/;"	v
role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role = extend(widget_role, document_structure)$/;"	v
role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let role = extend(role, dpub_role)$/;"	v
role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let role = extend(role, landmark_role)$/;"	v
role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let role = extend(widget_role, document_structure)$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes = {}$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['alert'] = role_attributes['region']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['alertdialog'] = role_attributes['alert'] + role_attributes['dialog']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['application'] = abstract_role['landmark'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['article'] = role_attributes['document'] + role_attributes['region'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['banner'] = abstract_role['landmark'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['button'] = role_attributes['region'] + role_attributes['menuitemcheckbox']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['cell'] = abstract_role['section'] + ['aria-colindex', 'aria-colspan', 'aria-rowindex', 'aria-rowspan']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['checkbox'] = abstract_role['input'] + ['aria-checked'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['columnheader'] = role_attributes['gridcell'] + abstract_role['sectionhead'] + ['aria-sort']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['combobox'] = abstract_role['select'] + ['aria-expanded', 'aria-required'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['complementary'] = abstract_role['landmark'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['contentinfo'] = abstract_role['landmark'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['default'] = abstract_role['roletype']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['definition'] = abstract_role['section'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['dialog'] = abstract_role['window']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['directory'] = role_attributes['list'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['document'] = abstract_role['structure'] + ['aria-expanded'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['feed'] = role_attributes['list']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['figure'] = abstract_role['section'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['form'] = abstract_role['landmark'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['grid'] = abstract_role['composite'] + role_attributes['region'] + ['aria-level', 'aria-multiselectable', 'aria-readonly']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['gridcell'] = abstract_role['section'] + abstract_role['widget']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['group'] = abstract_role['section']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['heading'] = abstract_role['sectionhead'] + ['aria-level'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['img'] = abstract_role['section'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['link'] = abstract_role['widget'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['list'] = role_attributes['region'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['listbox'] = role_attributes['list'] + abstract_role['select'] + ['aria-multiselectable', 'aria-required']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['listitem'] = abstract_role['section']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['log'] = role_attributes['region'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['main'] = abstract_role['landmark'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['marquee'] = role_attributes['region'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['math'] = abstract_role['section'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menu'] =  role_attributes['list'] + abstract_role['select'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menubar'] = role_attributes['menu'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menuitem'] = abstract_role['input'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menuitemcheckbox'] = role_attributes['menuitem'] + role_attributes['checkbox']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menuitemradio'] = role_attributes['menuitemcheckbox'] + role_attributes['radio']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['navigation'] = abstract_role['landmark'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['none'] = role_attributes['presentation']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['note'] = abstract_role['section'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['option'] = abstract_role['input'] + ['aria-checked', 'aria-posinset', 'aria-selected', 'aria-setsize']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['presentation'] = abstract_role['structure']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['progressbar'] = abstract_role['widget'] + ['aria-valuemax', 'aria-valuemin', 'aria-valuenow', 'aria-valuetext']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['radio'] = role_attributes['checkbox'] + role_attributes['option']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['radiogroup'] = abstract_role['select'] + ['aria-required']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['region'] = abstract_role['section']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['row'] = role_attributes['group'] + ['aria-level', 'aria-selected']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['rowheader'] = role_attributes['gridcell'] + abstract_role['sectionhead']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['scrollbar'] = abstract_role['range'] + ['aria-controls', 'aria-orientation', 'aria-valuemax', 'aria-valuemin', 'aria-valuenow']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['search'] = abstract_role['landmark']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['searchbox'] = role_attributes['textbox']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['separator'] = abstract_role['structure'] + ['aria-expanded'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['slider'] = abstract_role['range'] + ['aria-valuemax', 'aria-valuemin', 'aria-valuenow']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['spinbutton'] = abstract_role['composite'] + abstract_role['range'] + ['aria-required'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['status'] = abstract_role['composite'] + role_attributes['region']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['switch'] = role_attributes['checkbox']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tab'] = abstract_role['sectionhead'] + abstract_role['widget'] + ['aria-selected']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['table'] = abstract_role['section'] + ['aria-colcount', 'aria-rowcount']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tablist'] = abstract_role['composite'] + role_attributes['directory']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tabpanel'] = role_attributes['region']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['term'] = abstract_role['section']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['textbox'] = abstract_role['input'] + ['aria-autocomplete', 'aria-multiline', 'aria-readonly', 'aria-required']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['timer'] = role_attributes['status'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['toolbar'] = role_attributes['group'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tooltip'] = abstract_role['section'] $/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tree'] = abstract_role['select'] + ['aria-multiselectable', 'aria-required']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['treegrid'] = role_attributes['grid'] + role_attributes['tree']$/;"	v
role_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['treeitem'] = role_attributes['listitem'] + role_attributes['option']$/;"	v
root_dirs	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! s:root_dirs() abort$/;"	f
ruby_minlines	pack/plugins/start/sheerun-vim-polyglot/syntax/ruby.vim	/^    let ruby_minlines = 500$/;"	v
rubycomplete#Complete	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! rubycomplete#Complete(findstart, base)$/;"	f
rubycomplete#Init	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^function! rubycomplete#Init()$/;"	f
run_cmd	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! s:run_cmd(cmd) abort$/;"	f
run_guru	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:run_guru(args) abort$/;"	f
run_spec	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^function! s:run_spec(root, path, ...) abort$/;"	f
rust	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^augroup rust.vim$/;"	a
rust#AppendCmdLine	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! rust#AppendCmdLine(text)$/;"	f
rust#CompleteExpand	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! rust#CompleteExpand(lead, line, pos)$/;"	f
rust#Emit	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! rust#Emit(type, args)$/;"	f
rust#Expand	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! rust#Expand(bang, args)$/;"	f
rust#Jump	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! rust#Jump(mode, function) range$/;"	f
rust#Play	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! rust#Play(count, line1, line2, ...) abort$/;"	f
rust#Run	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! rust#Run(bang, args)$/;"	f
rustfmt#Format	pack/plugins/start/sheerun-vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#Format()$/;"	f
rustfmt#FormatRange	pack/plugins/start/sheerun-vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#FormatRange(line1, line2)$/;"	f
s	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^    nnoremap <buffer> s <C-w><CR>$/;"	m
s	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> s :call <SID>TOCToggleNumbers()<CR>$/;"	m
s:BEGIN_BLOCK	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:BEGIN_BLOCK = s:BEGIN_BLOCK_KEYWORD . '\\|' . s:COMPOUND_EXPRESSION$/;"	v
s:BEGIN_BLOCK_KEYWORD	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:BEGIN_BLOCK_KEYWORD = '\\C^\\%(if\\|unless\\|else\\|for\\|while\\|until\\|'$/;"	v
s:BEGIN_BLOCK_OP	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:BEGIN_BLOCK_OP = '[([{:=]$'$/;"	v
s:BRACKET_CONTINUATION	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:BRACKET_CONTINUATION = '^\\s*[}\\])]\\s*' . s:CONTINUATION_OP$/;"	v
s:BRACKET_PAIRS	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:BRACKET_PAIRS = {']': '\\[', '}': '{', ')': '('}$/;"	v
s:BREAK_BLOCK_OP	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:BREAK_BLOCK_OP = '\\C^\\%(return\\|break\\|continue\\|throw\\)\\>'$/;"	v
s:C	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^let s:C = s:V.import('ColorEcho')$/;"	v
s:COLORS	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^let s:COLORS = {$/;"	v
s:COMPOUND_ASSIGNMENT	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^let s:COMPOUND_ASSIGNMENT = '[:=]\\s*\\%(if\\|unless\\|for\\|while\\|until\\|'$/;"	v
s:COMPOUND_EXPRESSION	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:COMPOUND_EXPRESSION = '\\C\\%([^-]-\\|[^+]+\\|[^\/]\/\\|[:=*%&|^<>]\\)\\s*'$/;"	v
s:CONTAINED_THEN	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:CONTAINED_THEN = '\\C[(\\[].\\{-}\\<then\\>.\\{-\\}[)\\]]'$/;"	v
s:CONTINUATION	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:CONTINUATION = s:CONTINUATION_OP . '\\|' . s:BEGIN_BLOCK_OP$/;"	v
s:CONTINUATION	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^let s:CONTINUATION = '\\<\\%(is\\|isnt\\|and\\|or\\|do\\)\\>$'$/;"	v
s:CONTINUATION_BLOCK	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^let s:CONTINUATION_BLOCK = '[([{:=]$'$/;"	v
s:CONTINUATION_OP	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:CONTINUATION_OP = '\\C\\%(\\<\\%(is\\|isnt\\|and\\|or\\)\\>\\|'$/;"	v
s:ConvBackPats	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/motion.vim	/^let s:ConvBackPats = map([$/;"	v
s:DEFAULT_LEVEL	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = '-1'$/;"	v
s:DEFAULT_LEVEL	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = 'indent(prevnlnum)'$/;"	v
s:DOT_ACCESS	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:DOT_ACCESS	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:ELSE_COND	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:ELSE_COND = '\\C^\\s*else\\s\\+\\<\\%(if\\|unless\\)\\>'$/;"	v
s:FUNCTION	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:FUNCTION = '[-=]>$'$/;"	v
s:INDENT_AFTER_KEYWORD	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^let s:INDENT_AFTER_KEYWORD = '^\\%(if\\|unless\\|else\\|for\\|while\\|until\\|'$/;"	v
s:INDENT_AFTER_OPERATOR	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^let s:INDENT_AFTER_OPERATOR = '\\%([([{:=]\\|[-=]>\\)$'$/;"	v
s:J	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^let s:J = s:V.import('Web.JSON')$/;"	v
s:KEYWORD_PAIRS	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:KEYWORD_PAIRS = [$/;"	v
s:LabelCache	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^let s:LabelCache = {}$/;"	v
s:MAX_LOOKBACK	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:MAX_LOOKBACK	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:MODE_16_COLOR	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:MODE_16_COLOR = 0$/;"	v
s:MODE_256_COLOR	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:MODE_256_COLOR = 1$/;"	v
s:MODE_TRUE_COLOR	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:MODE_TRUE_COLOR = 2$/;"	v
s:MODE_TRUE_OR_256_COLOR	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:MODE_TRUE_OR_256_COLOR = 3 " for code generation purpose, not for theme usage$/;"	v
s:N	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:N = 0              " Length of the current completion chain$/;"	v
s:OUTDENT_AFTER	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^let s:OUTDENT_AFTER = '^\\%(return\\|break\\|continue\\|throw\\)\\>'$/;"	v
s:P	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^let s:P = s:V.import('Process')$/;"	v
s:POSTFIX_CONDITION	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:POSTFIX_CONDITION = '\\C\\S\\s\\+\\zs\\<\\%(if\\|unless\\|when\\|while\\|until\\)\\>'$/;"	v
s:POSTFIX_CONDITION	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^let s:POSTFIX_CONDITION = '\\S\\s\\+\\zs\\<\\%(if\\|unless\\)\\>'$/;"	v
s:SID	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^let s:SID = s:GetSID()$/;"	v
s:SINGLE_LINE_ELSE	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:SINGLE_LINE_ELSE = '\\C^else\\s\\+\\%(\\<\\%(if\\|unless\\)\\>\\)\\@!'$/;"	v
s:SINGLE_LINE_ELSE	pack/plugins/start/sheerun-vim-polyglot/indent/ls.vim	/^let s:SINGLE_LINE_ELSE = '^else\\s\\+\\%(\\<\\%(if\\|unless\\)\\>\\)\\@!'$/;"	v
s:SYNTAX_COMMENT	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:SYNTAX_COMMENT = 'coffee\\%(Comment\\|BlockComment\\|HeregexComment\\)'$/;"	v
s:SYNTAX_STRING	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:SYNTAX_STRING = 'coffee\\%(String\\|AssignString\\|Embed\\|Regex\\|Heregex\\|'$/;"	v
s:SYNTAX_STRING_COMMENT	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^let s:SYNTAX_STRING_COMMENT = s:SYNTAX_STRING . '\\|' . s:SYNTAX_COMMENT$/;"	v
s:ShiftWidth	pack/plugins/start/sheerun-vim-polyglot/indent/coffee.vim	/^  let s:ShiftWidth = function('shiftwidth')$/;"	v
s:TRANSPARENT_BACKGROUND	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:TRANSPARENT_BACKGROUND = s:Theme_Options('transparent_background') == 1$/;"	v
s:TYPE_DICT	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_LIST	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_STRING	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:TYPE_STRING = type("")$/;"	v
s:V	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^let s:V = vital#of('crystal')$/;"	v
s:_unify_path_cache	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^let s:_unify_path_cache = {}$/;"	v
s:_vital_files_cache	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^let s:_vital_files_cache = []$/;"	v
s:_vital_files_cache_runtimepath	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^let s:_vital_files_cache_runtimepath = ''$/;"	v
s:abstract_prototype	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:access_modifier_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:access_modifier_regex = '\\C^\\s*\\%(public\\|protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:access_modifier_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:access_modifier_regex = '\\C^\\s*\\%(public\\|protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:added_db_files	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^let s:added_db_files = {}$/;"	v
s:added_dbs	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^let s:added_dbs = []$/;"	v
s:align_map	pack/plugins/start/sheerun-vim-polyglot/indent/elm.vim	/^let s:align_map = {$/;"	v
s:all_tokens	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^let s:all_tokens = {}$/;"	v
s:anon_func_end	pack/plugins/start/sheerun-vim-polyglot/indent/lua.vim	/^let s:anon_func_end = '\\<end\\%(\\s*[)}]\\)\\+'$/;"	v
s:anon_func_start	pack/plugins/start/sheerun-vim-polyglot/indent/lua.vim	/^let s:anon_func_start = '\\S\\+\\s*[({].*\\<function\\s*(.*)\\s*$'$/;"	v
s:array_entry	pack/plugins/start/sheerun-vim-polyglot/indent/ansible.vim	/^let s:array_entry = '\\v^\\s*-\\s' " - foo$/;"	v
s:attributes	pack/plugins/start/sheerun-vim-polyglot/indent/haml.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:attributes	pack/plugins/start/sheerun-vim-polyglot/indent/pug.vim	/^let s:attributes = '\\%((.\\{-\\})\\)'$/;"	v
s:attributes	pack/plugins/start/sheerun-vim-polyglot/indent/slim.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:auto	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:auto = 0           " Is autocompletion enabled?$/;"	v
s:available	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^let s:available = has('nvim') || ($/;"	v
s:backslash_continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:backslash_continuation_regex = '%\\@<!\\\\\\s*$'$/;"	v
s:baseIndentExpr	pack/plugins/start/sheerun-vim-polyglot/indent/twig.vim	/^let s:baseIndentExpr=&indentexpr$/;"	v
s:beflet	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^let s:beflet = '^\\s*\\(initializer\\|method\\|try\\)\\|\\(\\<\\(begin\\|do\\|else\\|in\\|then\\|try\\)\\|->\\|<-\\|=\\|;\\|(\\)\\s*$'$/;"	v
s:block_continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:block_continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:block_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:block_regex =$/;"	v
s:block_regex	pack/plugins/start/sheerun-vim-polyglot/indent/json.vim	/^let s:block_regex = '\\%({\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)*|\\)\\=' . s:line_term$/;"	v
s:block_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:block_regex =$/;"	v
s:block_regex	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:block_regex = '\\%([{[]\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)*|\\)\\=' . s:line_term$/;"	v
s:bracket_continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:bracket_continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:bracket_switch_continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:bracket_switch_continuation_regex = '^\\([^(]\\+\\zs).\\+\\)\\+'.s:continuation_regex$/;"	v
s:bracket_switch_continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:bracket_switch_continuation_regex = '^\\([^(]\\+\\zs).\\+\\)\\+'.s:continuation_regex$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/pug.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/pug.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/stylus.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	pack/plugins/start/sheerun-vim-polyglot/ftplugin/stylus.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:bstfile	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^let s:bstfile = expand('<sfile>:p:h') . '\/vimcomplete'$/;"	v
s:buf_nr	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^let s:buf_nr = -1$/;"	v
s:buf_nr	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^let s:buf_nr = -1$/;"	v
s:buffer_prototype	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:bufnr	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^let s:bufnr       = bufnr('')$/;"	v
s:c_flag	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:c_flag = gitgutter#utility#git_supports_command_line_config_override()$/;"	v
s:cache_module_path	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^let s:cache_module_path = {}$/;"	v
s:cache_sid	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^let s:cache_sid = {}$/;"	v
s:cancel_auto	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:cancel_auto = 0    " Used to detect whether the user leaves the pop-up menu with ctrl-y, ctrl-e, or enter.$/;"	v
s:channel_log	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:channel_log = s:plugin_dir.'channel.log'$/;"	v
s:clojure_syntax_keywords	pack/plugins/start/sheerun-vim-polyglot/syntax/clojure.vim	/^let s:clojure_syntax_keywords = {$/;"	v
s:close_pat	pack/plugins/start/sheerun-vim-polyglot/indent/tex.vim	/^let s:close_pat = '\\\\\\@<!\\%(\\\\end\\|\\\\right\\a\\@!\\|\\\\)\\|\\\\\\]\\|}\\)'$/;"	v
s:close_patt	pack/plugins/start/sheerun-vim-polyglot/indent/lua.vim	/^let s:close_patt = '\\%(\\<\\%(end\\|until\\)\\>\\|)\\|}\\)'$/;"	v
s:cmp	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/ultisnips.vim	/^let s:cmp = 'stridx(v:val, l:pat)' . (get(g:, 'mucomplete#ultisnips#match_at_start', 1) ? '==0' : '>=0')$/;"	v
s:coffeeIndentExpr	pack/plugins/start/sheerun-vim-polyglot/after/indent/html.vim	/^let s:coffeeIndentExpr = &l:indentexpr$/;"	v
s:colorful_term	vimrc	/^let s:colorful_term=(&term=~"xterm") || (&term=~"screen")$/;"	v
s:comma_first	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:comma_first = '^\\s*,'$/;"	v
s:comma_last	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:comma_last = ',\\s*$'$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands = {}$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.abbrev     = s:commands.abstract.clone()$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.abbrev.options = {"buffer":0,"cmdline":0,"delete":0}$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.abstract = s:object.clone()$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.delete   = s:commands.abbrev.clone()$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.delete.options.delete = 1$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.search = s:commands.abstract.clone()$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.search.options = {"word": 0, "variable": 0, "flags": ""}$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.substitute = s:commands.abstract.clone()$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.substitute.options = {"word": 0, "variable": 0, "flags": "g"}$/;"	v
s:commands	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:commands = []$/;"	v
s:comment	pack/plugins/start/sheerun-vim-polyglot/indent/ansible.vim	/^let s:comment = '\\v^\\s*#' " # comment$/;"	v
s:common_efm	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:common_efm = ''$/;"	v
s:compl_mappings	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:compl_mappings = extend({$/;"	v
s:compl_methods	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:compl_methods = [] " Current completion chain$/;"	v
s:compl_text	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:compl_text = ''    " Text to be completed$/;"	v
s:completion_type	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^let s:completion_type = ''$/;"	v
s:conceal	pack/plugins/start/sheerun-vim-polyglot/syntax/markdown.vim	/^  let s:conceal = ' conceal'$/;"	v
s:conceal	pack/plugins/start/sheerun-vim-polyglot/syntax/markdown.vim	/^let s:conceal = ''$/;"	v
s:concealends	pack/plugins/start/sheerun-vim-polyglot/syntax/markdown.vim	/^  let s:concealends = ' concealends'$/;"	v
s:concealends	pack/plugins/start/sheerun-vim-polyglot/syntax/markdown.vim	/^let s:concealends = ''$/;"	v
s:const	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^let s:const = {}$/;"	v
s:const	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^let s:const.false = function('s:_false')$/;"	v
s:const	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^let s:const.null = function('s:_null')$/;"	v
s:const	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^let s:const.true = function('s:_true')$/;"	v
s:continuable_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:continuable_regex =$/;"	v
s:continuable_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:continuable_regex =$/;"	v
s:continuation	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^let s:continuation = get(g:,'javascript_continuation',$/;"	v
s:continuation	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:continuation = get(g:,'typescript_continuation',$/;"	v
s:continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:continuation_regex =$/;"	v
s:continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:continuation_regex =$/;"	v
s:continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)' . s:line_term$/;"	v
s:countdown	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:countdown = 0      " Keeps track of how many other completion attempts to try$/;"	v
s:coverage_browser_handler_jobs	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^let s:coverage_browser_handler_jobs = {}$/;"	v
s:coverage_handler_jobs	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^let s:coverage_handler_jobs = {}$/;"	v
s:cpo_orig	pack/plugins/start/sheerun-vim-polyglot/syntax/plantuml.vim	/^let s:cpo_orig=&cpo$/;"	v
s:cpo_sav	pack/plugins/start/sheerun-vim-polyglot/indent/eruby.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	pack/plugins/start/sheerun-vim-polyglot/syntax/clojure.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	pack/plugins/start/sheerun-vim-polyglot/syntax/puppet.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	pack/plugins/start/sheerun-vim-polyglot/syntax/ruby.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/compiler/cucumber.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/compiler/eruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/compiler/exunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/compiler/haml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/compiler/nim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/compiler/rake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/compiler/rspec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/compiler/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/compiler/rubyunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/compiler/rustc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/compiler/sbt.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mma.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/ftplugin/plantuml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/ftplugin/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/indent/eelixir.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/indent/json.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/indent/perl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/indent/swift.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/syntax/c.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/syntax/css.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/syntax/elixir.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/syntax/erlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/syntax/mma.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/syntax/perl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/syntax/pod.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/syntax/raml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpoptions_save	pack/plugins/start/sheerun-vim-polyglot/ftplugin/qml.vim	/^let s:cpoptions_save = &cpoptions$/;"	v
s:cposet	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let s:cposet=&cpoptions$/;"	v
s:crystal_deindent_keywords	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:crystal_deindent_keywords =$/;"	v
s:crystal_indent_keywords	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:crystal_indent_keywords =$/;"	v
s:cssindent	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^let s:cssindent = &indentexpr$/;"	v
s:ctrlx_out	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:ctrlx_out = "\\<plug>(MUcompleteOut)"$/;"	v
s:current_dir	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^let s:current_dir = expand('%:p:h')$/;"	v
s:current_file	pack/plugins/start/fatih-vim-go/autoload/go/template.vim	/^let s:current_file = expand("<sfile>")$/;"	v
s:current_fileencodings	pack/plugins/start/fatih-vim-go/ftdetect/gofiletype.vim	/^let s:current_fileencodings = ''$/;"	v
s:current_fileencodings	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^let s:current_fileencodings = ''$/;"	v
s:current_fileformats	pack/plugins/start/fatih-vim-go/ftdetect/gofiletype.vim	/^let s:current_fileformats = ''$/;"	v
s:current_fileformats	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^let s:current_fileformats = ''$/;"	v
s:current_syntax	pack/plugins/start/sheerun-vim-polyglot/after/syntax/coffee.vim	/^  let s:current_syntax=b:current_syntax$/;"	v
s:current_syntax	pack/plugins/start/sheerun-vim-polyglot/after/syntax/jsx.vim	/^  let s:current_syntax=b:current_syntax$/;"	v
s:current_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/dockerfile.vim	/^let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax_save	pack/plugins/start/sheerun-vim-polyglot/after/syntax/haml.vim	/^  let s:current_syntax_save = b:current_syntax$/;"	v
s:current_syntax_save	pack/plugins/start/sheerun-vim-polyglot/after/syntax/html.vim	/^  let s:current_syntax_save = b:current_syntax$/;"	v
s:cword	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^let s:cword = {$/;"	v
s:decIndent	pack/plugins/start/sheerun-vim-polyglot/indent/plantuml.vim	/^let s:decIndent = '^\\s*\\%(end\\|else\\|}\\)'$/;"	v
s:defArgMatcher	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^let s:defArgMatcher = '\\%((\\_.\\{-})\\)'$/;"	v
s:defMatcher	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^let s:defMatcher = '\\%(\\%(private\\|protected\\)\\%(\\[[^\\]]*\\]\\)\\?\\s\\+\\|abstract\\s\\+\\|override\\s\\+\\)*\\<def\\>'$/;"	v
s:default_dir	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:default_dir = { 'c-p' : -1, 'keyp': -1 }$/;"	v
s:default_settings	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^let s:default_settings = {$/;"	v
s:delimitMate_extra_excluded_regions	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^	let s:delimitMate_extra_excluded_regions = ',rustLifetimeCandidate,rustGenericLifetimeCandidate'$/;"	v
s:delimiters	pack/plugins/start/sheerun-vim-polyglot/ftplugin/caddyfile.vim	/^let s:delimiters = {'left': '#'}$/;"	v
s:delims	pack/plugins/start/sheerun-vim-polyglot/ftplugin/toml.vim	/^let s:delims = { 'left': '#' }$/;"	v
s:dictionary_entry	pack/plugins/start/sheerun-vim-polyglot/indent/ansible.vim	/^let s:dictionary_entry = '\\v^\\s*[^:-]+:\\s*$' " with_items:$/;"	v
s:did_indent	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^  let s:did_indent=b:did_indent$/;"	v
s:dir	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:dir = 1            " Direction to search for the next completion method (1=fwd, -1=bwd)$/;"	v
s:dir	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^		let s:dir = fnameescape(s:dir)$/;"	v
s:dir	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^		let s:dir = substitute(s:dir, '\\ ', '\\\\ ', 'g')$/;"	v
s:dir	pack/plugins/start/sheerun-vim-polyglot/ftplugin/clojure.vim	/^		let s:dir = substitute(s:dir, '\\', '\\\\\\\\', 'g')$/;"	v
s:dir_for_worktree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:dir_for_worktree = {}$/;"	v
s:directives_end	pack/plugins/start/sheerun-vim-polyglot/indent/blade.vim	/^    let s:directives_end .= '\\|' . join(values(g:blade_custom_directives_pairs), '\\|')$/;"	v
s:directives_end	pack/plugins/start/sheerun-vim-polyglot/indent/blade.vim	/^let s:directives_end = 'else\\|end\\|empty\\|show\\|stop\\|append\\|overwrite'$/;"	v
s:directives_start	pack/plugins/start/sheerun-vim-polyglot/indent/blade.vim	/^    let s:directives_start .= '\\|' . join(keys(g:blade_custom_directives_pairs), '\\|')$/;"	v
s:directives_start	pack/plugins/start/sheerun-vim-polyglot/indent/blade.vim	/^let s:directives_start = 'if\\|else\\|unless\\|for\\|while\\|empty\\|push\\|section\\|can\\|hasSection\\|verbatim\\|php\\|' .$/;"	v
s:done	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^  let s:done += 1$/;"	v
s:done	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:done = 0$/;"	v
s:done	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^  let s:done += 1$/;"	v
s:done	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:done = 0$/;"	v
s:dot_continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:dot_continuation_regex = '%\\@<!\\.\\s*\\%(#.*\\)\\=$'$/;"	v
s:dotfiles	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^let s:dotfiles = '\\(^\\|\\s\\s\\)\\zs\\.\\S\\+'$/;"	v
s:dummy_sign_id	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:dummy_sign_id = s:first_sign_id - 1$/;"	v
s:echorizer	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^let s:echorizer = {$/;"	v
s:ed	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2.vim	/^        let s:ed = strpart(s:str,0,stridx(s:str,' '))$/;"	v
s:end_end_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>\\|{%\\s*\\<\\%(end\\)\\>'$/;"	v
s:end_end_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_middle_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:end_middle_regex =$/;"	v
s:end_middle_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\|when\\|elsif\\):\\@!\\>'$/;"	v
s:end_skip_expr	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:end_skip_expr	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:end_start_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:end_start_regex =$/;"	v
s:end_start_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:end_start_regex =$/;"	v
s:endtag	pack/plugins/start/sheerun-vim-polyglot/after/indent/jsx.vim	/^let s:endtag = '^\\s*\\\/\\?>\\s*;\\='$/;"	v
s:env_cache	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^let s:env_cache = {}$/;"	v
s:envbeginpattern	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^let s:envbeginpattern = s:notcomment . s:notbslash . '\\\\begin\\s*{.\\{-}}'$/;"	v
s:envendpattern	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^let s:envendpattern = s:notcomment . s:notbslash . '\\\\end\\s*{.\\{-}}'$/;"	v
s:errored	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^      let s:errored = 0$/;"	v
s:errored	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:errored = 0$/;"	v
s:errors	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^      let s:errors += 1$/;"	v
s:errors	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^  let s:errors += 1$/;"	v
s:errors	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:errors = 0$/;"	v
s:escape	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^let s:escape = 'substitute(escape(v:val, ".$~"), "*", ".*", "g")'$/;"	v
s:exit_code	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^let s:exit_code = 0$/;"	v
s:extra_syntax	pack/plugins/start/sheerun-vim-polyglot/syntax/ansible_template.vim	/^  let s:extra_syntax = split(g:ansible_extra_syntaxes)$/;"	v
s:fail	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^      let s:fail += 1$/;"	v
s:fail	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:fail = 0$/;"	v
s:fail	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^    let s:fail += 1$/;"	v
s:fail	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:fail = 0$/;"	v
s:file	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^let s:file = ''$/;"	v
s:file_name	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^let s:file_name = ''$/;"	v
s:first_sign_id	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:first_sign_id = 3000$/;"	v
s:foldable_groups	pack/plugins/start/sheerun-vim-polyglot/syntax/ruby.vim	/^let s:foldable_groups = split($/;"	v
s:folded	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^let s:folded = '\\(% Fake\\|\\\\\\(document\\|begin\\|end\\|paragraph\\|'$/;"	v
s:foldparts	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^let s:foldparts = '^\\s*\\\\\\%(' . join(g:LatexBox_fold_parts, '\\|') . '\\)'$/;"	v
s:ft	pack/plugins/start/sheerun-vim-polyglot/syntax/c.vim	/^let s:ft = matchstr(&ft, '^\\([^.]\\)\\+')$/;"	v
s:funcNameMatcher	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^let s:funcNameMatcher = '\\w\\+'$/;"	v
s:git_versions	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:globpath_third_arg	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^let s:globpath_third_arg = v:version > 702 || v:version == 702 && has('patch51')$/;"	v
s:go_decls_var	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^let s:go_decls_var = {$/;"	v
s:go_stack	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^let s:go_stack = []$/;"	v
s:go_stack_level	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^let s:go_stack_level = 0$/;"	v
s:goarch	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goarch = '*'$/;"	v
s:goarch	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goarch = g:golang_goarch$/;"	v
s:goarch	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^let s:goarch = $GOARCH$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goos = '*'$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goos = 'darwin'$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goos = 'windows'$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goos = g:golang_goos$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^let s:goos = $GOOS$/;"	v
s:got_fmt_error	pack/plugins/start/fatih-vim-go/autoload/go/asmfmt.vim	/^let s:got_fmt_error = 0$/;"	v
s:got_fmt_error	pack/plugins/start/sheerun-vim-polyglot/autoload/rustfmt.vim	/^let s:got_fmt_error = 0$/;"	v
s:grep_available	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^  let s:grep_available = 1$/;"	v
s:grep_available	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^  let s:grep_available = executable('grep')$/;"	v
s:grep_command	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^      let s:grep_command .= ' --color=never'$/;"	v
s:grep_command	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^    let s:grep_command = 'grep'$/;"	v
s:grep_command	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^  let s:grep_command = g:gitgutter_grep_command$/;"	v
s:handlers	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^let s:handlers = {}$/;"	v
s:hash_colors	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:htmlIndentExpr	pack/plugins/start/sheerun-vim-polyglot/after/indent/html.vim	/^let s:htmlIndentExpr = &l:indentexpr$/;"	v
s:html_indent	pack/plugins/start/sheerun-vim-polyglot/indent/vue.vim	/^let s:html_indent = s:get_indentexpr('html')$/;"	v
s:html_indent_tags	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^let s:html_indent_tags = '[a-z_][a-z0-9_.-]*'$/;"	v
s:html_noindent_tags	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^    let s:html_noindent_tags = s:html_noindent_tags.'\\|'.join(g:html_exclude_tags, '\\|')$/;"	v
s:html_noindent_tags	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^let s:html_noindent_tags = join(s:no_tags, '\\|')$/;"	v
s:htmlindent	pack/plugins/start/sheerun-vim-polyglot/indent/blade.vim	/^let s:htmlindent = &indentexpr$/;"	v
s:hunk_re	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:hunk_re = '^@@ -\\(\\d\\+\\),\\?\\(\\d*\\) +\\(\\d\\+\\),\\?\\(\\d*\\) @@'$/;"	v
s:i	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:i = 0              " Index of the current completion method in the completion chain$/;"	v
s:i	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  let s:i = g:omlet_indent_struct$/;"	v
s:i	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  let s:i = matchstr(s:m,'\\d\\+')$/;"	v
s:i	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  let s:i = s:idef$/;"	v
s:id	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:idef	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  let s:idef = 2$/;"	v
s:idef	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  let s:idef = g:omlet_indent$/;"	v
s:idef	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  let s:idef = matchstr(s:m,'\\d\\+')$/;"	v
s:incIndent	pack/plugins/start/sheerun-vim-polyglot/indent/plantuml.vim	/^let s:incIndent =$/;"	v
s:indent	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:indent = ''$/;"	v
s:indent	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:indent = max(map(copy(s:tests), {_, val -> len(FriendlyName(val))}))$/;"	v
s:indent_access_modifier_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:indent_access_modifier_regex = '\\C^\\s*\\%(protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:indent_if_final	pack/plugins/start/sheerun-vim-polyglot/indent/elm.vim	/^let s:indent_if_final = ['=', 'do', '->', 'of', 'where']$/;"	v
s:indent_next	pack/plugins/start/sheerun-vim-polyglot/indent/elm.vim	/^let s:indent_next = ['let', 'in', 'where', 'do', 'if']$/;"	v
s:indent_self	pack/plugins/start/sheerun-vim-polyglot/indent/elm.vim	/^let s:indent_self = ['=']$/;"	v
s:initial_go_path	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^let s:initial_go_path = ""$/;"	v
s:insertcharpre	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:insertcharpre = 0  " Was a non-whitespace character inserted?$/;"	v
s:is_cygwin	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_dark	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:is_dark=(&background == 'dark')$/;"	v
s:is_mac	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_unix	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_windows	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:iskeyword_save	pack/plugins/start/sheerun-vim-polyglot/syntax/php.vim	/^let s:iskeyword_save = &iskeyword$/;"	v
s:job_db_files	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^let s:job_db_files = []$/;"	v
s:jobs	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^let s:jobs = {}$/;"	v
s:jobs	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^let s:jobs = {}$/;"	v
s:jobs	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^let s:jobs = {}$/;"	v
s:js_keywords	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:js_keywords = '^\\s*\\(break\\|case\\|catch\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|finally\\|for\\|function\\|if\\|in\\|instanceof\\|new\\|return\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\)'$/;"	v
s:jsindent	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^let s:jsindent = &indentexpr$/;"	v
s:jsx_pragma_pattern	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^  let s:jsx_pragma_pattern = '\\%^\\_s*\\\/\\*\\*\\%(\\_.\\%(\\*\\\/\\)\\@!\\)*@jsx\\_.\\{-}\\*\\\/'$/;"	v
s:keepcpo	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	pack/plugins/start/sheerun-vim-polyglot/syntax/cucumber.vim	/^let s:keepcpo= &cpo$/;"	v
s:key_value	pack/plugins/start/sheerun-vim-polyglot/indent/ansible.vim	/^let s:key_value = '\\v^\\s*[^:-]+:\\s*\\S' " apt: name=package$/;"	v
s:known_files	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^let s:known_files = []$/;"	v
s:known_projects	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^let s:known_projects = {}$/;"	v
s:language_options	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let s:language_options = s:options['language']$/;"	v
s:language_options	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:language_options = {}$/;"	v
s:languages	pack/plugins/start/sheerun-vim-polyglot/indent/vue.vim	/^let s:languages = [$/;"	v
s:last_changedtick	pack/plugins/start/sheerun-vim-polyglot/indent/erlang.vim	/^let s:last_changedtick = -1$/;"	v
s:last_saved_list	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^let s:last_saved_list = ''$/;"	v
s:last_status	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^let s:last_status = ""$/;"	v
s:leading_operator_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:leading_operator_regex = '^\\s*[.]'$/;"	v
s:leading_operator_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:leading_operator_regex = '^\\s*[.]'$/;"	v
s:letlim	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^let s:letlim = '\\(\\<\\(sig\\|struct\\)\\|;;\\)\\s*$'$/;"	v
s:letpat	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^let s:letpat = '^\\s*\\(let\\|type\\|module\\|class\\|open\\|exception\\|val\\|include\\|external\\)\\>'$/;"	v
s:lim	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^let s:lim = '^\\s*\\(exception\\|external\\|include\\|let\\|module\\|open\\|type\\|val\\)\\>'$/;"	v
s:line_term	pack/plugins/start/sheerun-vim-polyglot/indent/json.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:line_term	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:lines	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let s:lines = join(getline(1, 5) + [getline('$')], "\\n")$/;"	v
s:lines	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	pack/plugins/start/sheerun-vim-polyglot/ftplugin/liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	pack/plugins/start/sheerun-vim-polyglot/syntax/eelixir.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	pack/plugins/start/sheerun-vim-polyglot/syntax/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	pack/plugins/start/sheerun-vim-polyglot/syntax/jst.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	pack/plugins/start/sheerun-vim-polyglot/syntax/ragel.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:lines = deepcopy(s:words)$/;"	v
s:lines	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:lines.description = 'lines in the current tmux session'$/;"	v
s:lines	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:lines.name = 'tmuxcomplete\/lines'$/;"	v
s:list_close_pat	pack/plugins/start/sheerun-vim-polyglot/indent/tex.vim	/^let s:list_close_pat	= '\\\\\\@<!\\\\end{\\%(' . join(s:list_envs, '\\|') . '\\)}'$/;"	v
s:list_envs	pack/plugins/start/sheerun-vim-polyglot/indent/tex.vim	/^let s:list_envs = ['itemize', 'enumerate', 'description']$/;"	v
s:list_open_pat	pack/plugins/start/sheerun-vim-polyglot/indent/tex.vim	/^let s:list_open_pat = '\\\\\\@<!\\\\begin{\\%(' . join(s:list_envs, '\\|') . '\\)}'$/;"	v
s:loaded	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^let s:loaded = {}$/;"	v
s:log_file	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:log_file    = s:plugin_dir.'gitgutter.log'$/;"	v
s:logs	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:logs = []$/;"	v
s:m	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let s:m = matchstr(s:modeline,'default\\s*=\\s*\\d\\+')$/;"	v
s:m	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let s:m = matchstr(s:modeline,'struct\\s*=\\s*\\d\\+')$/;"	v
s:manual	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^let s:manual = {$/;"	v
s:map_prefix	pack/plugins/start/mhinz-vim-tmuxify/plugin/tmuxify.vim	/^let s:map_prefix = get(g:, 'tmuxify_map_prefix', '<leader>m')$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^let s:match_words = ""$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^let s:match_words = ""$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^let s:match_words = ""$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/pug.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/pug.vim	/^let s:match_words = ""$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/stylus.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	pack/plugins/start/sheerun-vim-polyglot/ftplugin/stylus.vim	/^let s:match_words = ""$/;"	v
s:maxoff	pack/plugins/start/sheerun-vim-polyglot/indent/python.vim	/^let s:maxoff = 50$/;"	v
s:maybe_in_progress	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^    let s:maybe_in_progress[module] = {}$/;"	v
s:maybe_in_progress	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^let s:maybe_in_progress = {}$/;"	v
s:messages	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:messages = []$/;"	v
s:metachar	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl.vim	/^let s:metachar = '\\\/~ .*^[''$'$/;"	v
s:middle_patt	pack/plugins/start/sheerun-vim-polyglot/indent/lua.vim	/^let s:middle_patt = '\\<\\%(else\\|elseif\\)\\>'$/;"	v
s:mode	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let s:mode = s:MODE_16_COLOR$/;"	v
s:mode	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let s:mode = s:MODE_256_COLOR$/;"	v
s:mode	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let s:mode = s:MODE_TRUE_COLOR$/;"	v
s:modeline	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  let s:modeline = ""$/;"	v
s:modeline	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^  let s:modeline = getline(".")$/;"	v
s:module	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^let s:module = '\\<\\%(begin\\|sig\\|struct\\|object\\)\\>'$/;"	v
s:molokai_original	pack/colors/start/tomasr-molokai/colors/molokai.vim	/^    let s:molokai_original = 0$/;"	v
s:molokai_original	pack/colors/start/tomasr-molokai/colors/molokai.vim	/^    let s:molokai_original = g:molokai_original$/;"	v
s:msl_regex	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:msl_regex = '\\%([\\\\*+\/.:([]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)' . s:line_term$/;"	v
s:named_lists	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^let s:named_lists = {}$/;"	v
s:named_module_entry	pack/plugins/start/sheerun-vim-polyglot/indent/ansible.vim	/^let s:named_module_entry = '\\v^\\s*-\\s*(name|hosts|role):\\s*\\S' " - name: 'do stuff'$/;"	v
s:need_trans	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:netrw_up	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^let s:netrw_up = ''$/;"	v
s:new_log_session	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:new_log_session = 1$/;"	v
s:next_sign_id	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:next_sign_id  = s:first_sign_id$/;"	v
s:no_tags	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^let s:no_tags = []$/;"	v
s:nomodeline	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' : ''$/;"	v
s:non_bracket_continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:non_bracket_continuation_regex = '\\%([\\\\.,:*\/%+]\\|\\<and\\|\\<or\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:non_bracket_continuation_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:non_bracket_continuation_regex =$/;"	v
s:notbslash	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^let s:notbslash = '\\%(\\\\\\@<!\\%(\\\\\\\\\\)*\\)\\@<='$/;"	v
s:notcomment	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/folding.vim	/^let s:notcomment = '\\%(\\%(\\\\\\@<!\\%(\\\\\\\\\\)*\\)\\@<=%.*\\)\\@<!'$/;"	v
s:obj	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^let s:obj = '^\\s*\\(constraint\\|inherit\\|initializer\\|method\\|val\\)\\>\\|\\<\\(object\\|object\\s*(.*)\\)\\s*$'$/;"	v
s:object	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:object = {}$/;"	v
s:old_cpo	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^let s:old_cpo = &cpo$/;"	v
s:old_style	pack/plugins/start/sheerun-vim-polyglot/syntax/erlang.vim	/^let s:old_style = (exists("g:erlang_old_style_highlight") &&$/;"	v
s:omittable	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^let s:omittable = [ $/;"	v
s:one_line_scope_regex	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:one_line_scope_regex = '\\<\\%(if\\|else\\|for\\|while\\)\\>[^{;]*' . s:line_term$/;"	v
s:oneline	pack/plugins/start/sheerun-vim-polyglot/syntax/markdown.vim	/^    let s:oneline = ' oneline'$/;"	v
s:oneline	pack/plugins/start/sheerun-vim-polyglot/syntax/markdown.vim	/^    let s:oneline = ''$/;"	v
s:open_pat	pack/plugins/start/sheerun-vim-polyglot/indent/tex.vim	/^let s:open_pat = '\\\\\\@<!\\%(\\\\begin\\|\\\\left\\a\\@!\\|\\\\(\\|\\\\\\[\\|{\\)'$/;"	v
s:open_patt	pack/plugins/start/sheerun-vim-polyglot/indent/lua.vim	/^let s:open_patt = '\\%(\\<\\%(function\\|if\\|repeat\\|do\\)\\>\\|(\\|{\\)'$/;"	v
s:opfirst	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^let s:opfirst = '^' . get(g:,'javascript_opfirst',$/;"	v
s:opfirst	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:opfirst = '^' . get(g:,'typescript_opfirst',$/;"	v
s:options	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let s:options = g:PaperColor_Theme_Options$/;"	v
s:options	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:options = {}$/;"	v
s:optionsEnabled	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^let s:optionsEnabled = 0$/;"	v
s:packages	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^let s:packages = [$/;"	v
s:palette	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^    let s:palette = s:selected_theme['dark'].palette$/;"	v
s:palette	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^    let s:palette = s:selected_theme['light'].palette$/;"	v
s:pat	pack/plugins/start/sheerun-vim-polyglot/compiler/coffee.vim	/^let s:pat = '^' . current_compiler$/;"	v
s:pat	pack/plugins/start/sheerun-vim-polyglot/compiler/ls.vim	/^let s:pat = '^' . current_compiler$/;"	v
s:pathsep	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:pathsep = exists('+shellslash') && !&shellslash ? '\\\\' : '\/'$/;"	v
s:pathsep	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^let s:pathsep = exists('+shellslash') && !&shellslash ? '\\\\' : '\/'$/;"	v
s:phpindent	pack/plugins/start/sheerun-vim-polyglot/indent/blade.vim	/^let s:phpindent = &indentexpr$/;"	v
s:plugin_dir	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:plugin_dir  = expand('<sfile>:p:h:h:h').'\/'$/;"	v
s:pre_less_cur_syn	pack/plugins/start/sheerun-vim-polyglot/after/syntax/html.vim	/^   let s:pre_less_cur_syn = b:current_syntax$/;"	v
s:ps1xml_cpo_save	pack/plugins/start/sheerun-vim-polyglot/syntax/ps1xml.vim	/^let s:ps1xml_cpo_save = &cpo$/;"	v
s:radix_chars	pack/plugins/start/sheerun-vim-polyglot/syntax/clojure.vim	/^let s:radix_chars = "0123456789abcdefghijklmnopqrstuvwxyz"$/;"	v
s:repo_prototype	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:repos = {}$/;"	v
s:returnTypeMatcher	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^let s:returnTypeMatcher = '\\%(:\\s*\\w\\+' . s:typeSpecMatcher . '\\?\\)'$/;"	v
s:ruby_deindent_keywords	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:ruby_deindent_keywords =$/;"	v
s:ruby_indent_keywords	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:ruby_indent_keywords =$/;"	v
s:ruby_path	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_path = s:build_path(s:ruby_paths)$/;"	v
s:ruby_path	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_path = type(g:ruby_path) == type([]) ? join(g:ruby_path, ',') : g:ruby_path$/;"	v
s:ruby_paths	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_default_path$/;"	v
s:ruby_paths	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_version_paths[b:ruby_version]$/;"	v
s:rubycomplete_debug	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^let s:rubycomplete_debug = 0$/;"	v
s:rubycomplete_rails_loaded	pack/plugins/start/sheerun-vim-polyglot/autoload/rubycomplete.vim	/^let s:rubycomplete_rails_loaded = 0$/;"	v
s:runner_exe	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^let s:runner_exe = gutentags#get_plat_file('update_scopedb')$/;"	v
s:runner_exe	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let s:runner_exe = gutentags#get_plat_file('update_tags')$/;"	v
s:running_windows	vimrc	/^let s:running_windows=has("win16") || has("win32") || has("win64")$/;"	v
s:s	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^let s:s = line2byte(line('.'))+col('.')-1$/;"	v
s:save_cpo	pack/plugins/start/fatih-vim-go/compiler/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/path.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/spel.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/do.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/filegroup.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/preview.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/statusline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/toggle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/wrap.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/after/indent/objc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/autoload/crystal_lang.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/compiler/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/ftplugin/crystal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/ftplugin/perl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/ftplugin/pug.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/ftplugin/rust.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/ftplugin/stylus.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/ftplugin/toml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/indent/ansible.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplcache/sources/tmuxcomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplete/sources/tmuxcomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:scalar_value	pack/plugins/start/sheerun-vim-polyglot/indent/ansible.vim	/^let s:scalar_value = '\\v:\\s*[>|\\|]\\s*$' " shell: >$/;"	v
s:script	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^let s:script = expand('<sfile>:h:h') . "\/sh\/tmuxcomplete"$/;"	v
s:script_path	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:script_path = fnamemodify(resolve(expand('<sfile>:p')), ':h')$/;"	v
s:select_dir	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:select_dir = extend({ 'c-p' : -1, 'keyp': -1 }, get(g:, 'mucomplete#popup_direction', {}))$/;"	v
s:selected_theme	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:selected_theme = s:themes[s:theme_name]$/;"	v
s:self_file	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^let s:self_file = expand('<sfile>')$/;"	v
s:self_version	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:skipPatterns	pack/plugins/start/sheerun-vim-polyglot/indent/julia.vim	/^let s:skipPatterns = '\\<julia\\%(Comment\\)\\>'$/;"	v
s:skip_expr	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:skip_expr =$/;"	v
s:skip_expr	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^let s:skip_expr = "s:syn_at(line('.'),col('.')) =~? b:syng_strcom"$/;"	v
s:skip_expr	pack/plugins/start/sheerun-vim-polyglot/indent/lua.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ 'luaComment\\\\|luaString'"$/;"	v
s:skip_expr	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:skip_expr =$/;"	v
s:skip_expr	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ '".s:syng_strcom."'"$/;"	v
s:skip_expr	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),0),'name') =~? '".s:syng_strcom."'"$/;"	v
s:sock_type	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^let s:sock_type = (has('win32') || has('win64')) ? 'tcp' : 'unix'$/;"	v
s:source	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplcache/sources/tmuxcomplete.vim	/^let s:source = {$/;"	v
s:source	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplete/sources/tmuxcomplete.vim	/^let s:source = {$/;"	v
s:spell_cluster	pack/plugins/start/sheerun-vim-polyglot/syntax/ruby.vim	/^let s:spell_cluster = exists('ruby_spellcheck_strings') ? ',@Spell' : ''$/;"	v
s:splat_regex	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:splat_regex = '[[,(]\\s*\\*\\s*\\%(#.*\\)\\=$'$/;"	v
s:splat_regex	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:splat_regex = '[[,(]\\s*\\*\\s*\\%(#.*\\)\\=$'$/;"	v
s:st	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2.vim	/^        let s:st = strpart(s:str,0,stridx(s:str,' '))$/;"	v
s:statuses	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^let s:statuses = {}$/;"	v
s:str	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2.vim	/^        let s:str = substitute(s:str,'[^ ]* ','',"")$/;"	v
s:str	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2.vim	/^    let s:str = b:tt2_syn_tags . ' '$/;"	v
s:str	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2.vim	/^    let s:str = substitute(s:str,' \\+',' ','g')$/;"	v
s:str	pack/plugins/start/sheerun-vim-polyglot/syntax/tt2.vim	/^    let s:str = substitute(s:str,'^ \\+','','g')$/;"	v
s:subtype	pack/plugins/start/sheerun-vim-polyglot/syntax/liquid.vim	/^  let s:subtype = exists('b:liquid_subtype') ? b:liquid_subtype : ''$/;"	v
s:supports_star	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:supports_star = v:version > 703 || (v:version == 703 && has("patch596"))$/;"	v
s:syng_com	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^let s:syng_com = 'comment\\|doc'$/;"	v
s:syng_com	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:syng_com = 'comment\\|doc'$/;"	v
s:syng_linecom	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:syng_linecom = 'linecomment\\c'$/;"	v
s:syng_multiline	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:syng_multiline = 'comment\\c'$/;"	v
s:syng_str	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:syng_str = 'string\\|template\\|special'$/;"	v
s:syng_strcom	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:syng_strcom = '\\<crystal\\%(Regexp\\|RegexpDelimiter\\|RegexpEscape' .$/;"	v
s:syng_strcom	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:syng_strcom = s:syng_stringdoc +$/;"	v
s:syng_strcom	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:syng_strcom = 'string\\|regex\\|comment\\c'$/;"	v
s:syng_strcom	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^let s:syng_strcom = 'string\\|comment\\|regex\\|special\\|doc\\|template\\%(braces\\)\\@!'$/;"	v
s:syng_string	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:syng_string =$/;"	v
s:syng_string	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:syng_string =$/;"	v
s:syng_string	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:syng_string = 'regex\\c'$/;"	v
s:syng_stringdoc	pack/plugins/start/sheerun-vim-polyglot/indent/crystal.vim	/^let s:syng_stringdoc =$/;"	v
s:syng_stringdoc	pack/plugins/start/sheerun-vim-polyglot/indent/ruby.vim	/^let s:syng_stringdoc = s:syng_string + ['Documentation']$/;"	v
s:tag	pack/plugins/start/sheerun-vim-polyglot/indent/haml.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag	pack/plugins/start/sheerun-vim-polyglot/indent/pug.vim	/^let s:tag = '\\([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag	pack/plugins/start/sheerun-vim-polyglot/indent/slim.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^let s:tag = {$/;"	v
s:tags	pack/plugins/start/sheerun-vim-polyglot/indent/html.vim	/^let s:tags = []$/;"	v
s:temp_buffer	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:temp_buffer = tempname()$/;"	v
s:temp_files	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:temp_index	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:temp_index = tempname()$/;"	v
s:ternary	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:ternary = '^\\s\\+[?|:]'$/;"	v
s:ternary_q	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:ternary_q = '^\\s\\+?'$/;"	v
s:test_compile_handlers	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^let s:test_compile_handlers = {}$/;"	v
s:test_repo	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^let s:test_repo   = s:current_dir.'\/test-repo'$/;"	v
s:tests	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^  let s:tests = filter(s:tests, 'v:val =~ argv(1)')$/;"	v
s:tests	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:tests = split(substitute(@q, 'function \\(\\k*()\\)', '\\1', 'g'))$/;"	v
s:tests	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:tests = split(substitute(@q, 'function \\(\\k*()\\)', '\\1', 'g'))$/;"	v
s:theme_name	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let s:theme_name = tolower(g:PaperColor_Theme)$/;"	v
s:theme_name	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:theme_name = 'default'$/;"	v
s:theme_options	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let s:theme_options = s:options['theme']$/;"	v
s:theme_options	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:theme_options = {}$/;"	v
s:themes	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:themes = {}$/;"	v
s:themes	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:themes['default'] = {$/;"	v
s:themes	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:themes['default'].dark = {$/;"	v
s:themes	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:themes['default'].light = {$/;"	v
s:timer_id	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^let s:timer_id = 0$/;"	v
s:to_HEX	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:to_HEX = {$/;"	v
s:toggle	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^let s:toggle = 0$/;"	v
s:topLev	pack/plugins/start/sheerun-vim-polyglot/after/indent/objc.vim	/^let s:topLev = '^\\s*@\\%(class\\|end\\|implementation\\|interface\\|protocol\\|\\)\\>'$/;"	v
s:type	pack/plugins/start/sheerun-vim-polyglot/indent/ocaml.vim	/^let s:type = '^\\s*\\%(class\\|let\\|type\\)\\>.*='$/;"	v
s:typeSpecMatcher	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^let s:typeSpecMatcher = '\\%(\\s*\\[\\_[^\\]]*\\]\\)'$/;"	v
s:type_length	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/complete.vim	/^let s:type_length=0$/;"	v
s:uname	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^      let s:uname = system('echo -n $(uname -s)')$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eelixir.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/eruby.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/haml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/pug.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/pug.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/stylus.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	pack/plugins/start/sheerun-vim-polyglot/ftplugin/stylus.vim	/^let s:undo_ftplugin = ""$/;"	v
s:unix_redir	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:update_queue	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^    let s:update_queue[module] = []$/;"	v
s:update_queue	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^let s:update_queue = {}$/;"	v
s:using_xolox_shell	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^let s:using_xolox_shell = -1$/;"	v
s:vala_cpo_save	pack/plugins/start/sheerun-vim-polyglot/syntax/vala.vim	/^let s:vala_cpo_save = &cpo$/;"	v
s:var_stmt	pack/plugins/start/sheerun-vim-polyglot/indent/solidity.vim	/^let s:var_stmt = '^\\s*var'$/;"	v
s:version_file	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^  let s:version_file = findfile('.ruby-version', '.;')$/;"	v
s:viewer	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^		  let s:viewer = 'open'$/;"	v
s:viewer	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^		  let s:viewer = 'xdg-open'$/;"	v
s:viewer	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^	let s:viewer = ''$/;"	v
s:win_sep	pack/plugins/start/sheerun-vim-polyglot/ftplugin/dart.vim	/^let s:win_sep = (has('win32') || has('win64')) ? '\/' : ''$/;"	v
s:words	pack/plugins/start/sheerun-vim-polyglot/autoload/clojurecomplete.vim	/^let s:words = ["*","*'","*1","*2","*3","*agent*","*allow-unresolved-vars*","*assert*","*clojure-version*","*command-line-args*","*compile-files*","*compile-path*","*compiler-options*","*data-readers*","*default-data-reader-fn*","*e","*err*","*file*","*flush-on-newline*","*fn-loader*","*in*","*math-context*","*ns*","*out*","*print-dup*","*print-length*","*print-level*","*print-meta*","*print-readably*","*read-eval*","*source-path*","*suppress-read*","*unchecked-math*","*use-context-classloader*","*verbose-defrecords*","*warn-on-reflection*","+","+'","-","-'","->","->>","->ArrayChunk","->Eduction","->Vec","->VecNode","->VecSeq","-cache-protocol-fn","-reset-methods",".","..","\/","<","<=","=","==",">",">=","EMPTY-NODE","Throwable->map","accessor","aclone","add-classpath","add-watch","agent","agent-error","agent-errors","aget","alength","alias","all-ns","alter","alter-meta!","alter-var-root","amap","ancestors","and","apply","areduce","array-map","as->","aset","aset-boolean","aset-byte","aset-char","aset-double","aset-float","aset-int","aset-long","aset-short","assert","assoc!","assoc","assoc-in","associative?","atom","await","await-for","await1","bases","bean","bigdec","bigint","biginteger","binding","bit-and","bit-and-not","bit-clear","bit-flip","bit-not","bit-or","bit-set","bit-shift-left","bit-shift-right","bit-test","bit-xor","boolean","boolean-array","booleans","bound-fn","bound-fn*","bound?","butlast","byte","byte-array","bytes","case","cast","cat","catch","char","char-array","char-escape-string","char-name-string","char?","chars","chunk","chunk-append","chunk-buffer","chunk-cons","chunk-first","chunk-next","chunk-rest","chunked-seq?","class","class?","clear-agent-errors","clojure-version","coll?","comment","commute","comp","comparator","compare","compare-and-set!","compile","complement","completing","concat","cond","cond->","cond->>","condp","conj!","conj","cons","constantly","construct-proxy","contains?","count","counted?","create-ns","create-struct","cycle","dec","dec'","decimal?","declare","dedupe","def","default-data-readers","definline","definterface","defmacro","defmethod","defmulti","defn","defn-","defonce","defprotocol","defrecord","defstruct","deftype","delay","delay?","deliver","denominator","deref","derive","descendants","destructure","disj!","disj","dissoc!","dissoc","distinct","distinct?","do","doall","dorun","doseq","dosync","dotimes","doto","double","double-array","doubles","drop","drop-last","drop-while","eduction","empty","empty?","ensure","ensure-reduced","enumeration-seq","error-handler","error-mode","eval","even?","every-pred","every?","ex-data","ex-info","extend","extend-protocol","extend-type","extenders","extends?","false?","ffirst","file-seq","filter","filterv","finally","find","find-keyword","find-ns","find-protocol-impl","find-protocol-method","find-var","first","flatten","float","float-array","float?","floats","flush","fn","fn","fn?","fnext","fnil","for","force","format","frequencies","future","future-call","future-cancel","future-cancelled?","future-done?","future?","gen-class","gen-interface","gensym","get","get-in","get-method","get-proxy-class","get-thread-bindings","get-validator","group-by","hash","hash-combine","hash-map","hash-ordered-coll","hash-set","hash-unordered-coll","identical?","identity","if","if-let","if-not","if-some","ifn?","import","in-ns","inc","inc'","init-proxy","instance?","int","int-array","integer?","interleave","intern","interpose","into","into-array","ints","io!","isa?","iterate","iterator-seq","juxt","keep","keep-indexed","key","keys","keyword","keyword?","last","lazy-cat","lazy-seq","let","let","letfn","line-seq","list","list*","list?","load","load-file","load-reader","load-string","loaded-libs","locking","long","long-array","longs","loop","loop","macroexpand","macroexpand-1","make-array","make-hierarchy","map","map-entry?","map-indexed","map?","mapcat","mapv","max","max-key","memfn","memoize","merge","merge-with","meta","method-sig","methods","min","min-key","mix-collection-hash","mod","monitor-enter","monitor-exit","munge","name","namespace","namespace-munge","neg?","new","newline","next","nfirst","nil?","nnext","not","not-any?","not-empty","not-every?","not=","ns","ns-aliases","ns-imports","ns-interns","ns-map","ns-name","ns-publics","ns-refers","ns-resolve","ns-unalias","ns-unmap","nth","nthnext","nthrest","num","number?","numerator","object-array","odd?","or","parents","partial","partition","partition-all","partition-by","pcalls","peek","persistent!","pmap","pop!","pop","pop-thread-bindings","pos?","pr","pr-str","prefer-method","prefers","primitives-classnames","print","print-ctor","print-dup","print-method","print-simple","print-str","printf","println","println-str","prn","prn-str","promise","proxy","proxy-call-with-super","proxy-mappings","proxy-name","proxy-super","push-thread-bindings","pvalues","quot","quote","rand","rand-int","rand-nth","random-sample","range","ratio?","rational?","rationalize","re-find","re-groups","re-matcher","re-matches","re-pattern","re-seq","read","read-line","read-string","reader-conditional","reader-conditional?","realized?","record?","recur","reduce","reduce-kv","reduced","reduced?","reductions","ref","ref-history-count","ref-max-history","ref-min-history","ref-set","refer","refer-clojure","reify","release-pending-sends","rem","remove","remove-all-methods","remove-method","remove-ns","remove-watch","repeat","repeatedly","replace","replicate","require","reset!","reset-meta!","resolve","rest","restart-agent","resultset-seq","reverse","reversible?","rseq","rsubseq","run!","satisfies?","second","select-keys","send","send-off","send-via","seq","seq?","seque","sequence","sequential?","set!","set","set-agent-send-executor!","set-agent-send-off-executor!","set-error-handler!","set-error-mode!","set-validator!","set?","short","short-array","shorts","shuffle","shutdown-agents","slurp","some","some->","some->>","some-fn","some?","sort","sort-by","sorted-map","sorted-map-by","sorted-set","sorted-set-by","sorted?","special-symbol?","spit","split-at","split-with","str","string?","struct","struct-map","subs","subseq","subvec","supers","swap!","symbol","symbol?","sync","tagged-literal","tagged-literal?","take","take-last","take-nth","take-while","test","the-ns","thread-bound?","throw","time","to-array","to-array-2d","trampoline","transduce","transient","tree-seq","true?","try","type","unchecked-add","unchecked-add-int","unchecked-byte","unchecked-char","unchecked-dec","unchecked-dec-int","unchecked-divide-int","unchecked-double","unchecked-float","unchecked-inc","unchecked-inc-int","unchecked-int","unchecked-long","unchecked-multiply","unchecked-multiply-int","unchecked-negate","unchecked-negate-int","unchecked-remainder-int","unchecked-short","unchecked-subtract","unchecked-subtract-int","underive","unquote","unquote-splicing","unreduced","unsigned-bit-shift-right","update","update-in","update-proxy","use","val","vals","var","var-get","var-set","var?","vary-meta","vec","vector","vector-of","vector?","volatile!","volatile?","vreset!","vswap!","when","when-first","when-let","when-not","when-some","while","with-bindings","with-bindings*","with-in-str","with-loading-context","with-local-vars","with-meta","with-open","with-out-str","with-precision","with-redefs","with-redefs-fn","xml-seq","zero?","zipmap"]$/;"	v
s:words	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:words = {$/;"	v
s:worktree_for_dir	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:worktree_for_dir = {}$/;"	v
s:yes_you_can	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  let s:yes_you_can = function('mucomplete#compat#yes_you_can')$/;"	v
s:yes_you_can	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  let s:yes_you_can = { _ -> 1 } " Try always$/;"	v
s:z	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^let s:z = has('patch-7.4.984') ? 'z' : ''$/;"	v
same_ids_highlight	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:same_ids_highlight(exit_val, output) abort$/;"	f
save_pos	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:save_pos(f,...)$/;"	f
scala#ConditionalConfirm	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#ConditionalConfirm(msg)$/;"	f
scala#CountBrackets	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#CountBrackets(line, openBracket, closedBracket)$/;"	f
scala#CountCurlies	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#CountCurlies(line)$/;"	f
scala#CountParens	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#CountParens(line)$/;"	f
scala#CurlyMatcher	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#CurlyMatcher()$/;"	f
scala#GetDirForFuzzyFinder	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetDirForFuzzyFinder(from, addon)$/;"	f
scala#GetLine	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#GetLine(lnum)$/;"	f
scala#GetLineAndColumnThatMatchesBracket	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesBracket(openBracket, closedBracket)$/;"	f
scala#GetLineAndColumnThatMatchesCurly	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesCurly()$/;"	f
scala#GetLineAndColumnThatMatchesParen	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesParen()$/;"	f
scala#GetLineThatMatchesBracket	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#GetLineThatMatchesBracket(openBracket, closedBracket)$/;"	f
scala#GetLineThatMatchesCurly	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#GetLineThatMatchesCurly()$/;"	f
scala#GetLineThatMatchesParen	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#GetLineThatMatchesParen()$/;"	f
scala#GetMainDirForFuzzyFinder	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetMainDirForFuzzyFinder(from)$/;"	f
scala#GetPrevCodeLine	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#GetPrevCodeLine(lnum)$/;"	f
scala#GetRootDirForFuzzyFinder	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetRootDirForFuzzyFinder(from)$/;"	f
scala#GetTestDirForFuzzyFinder	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetTestDirForFuzzyFinder(from)$/;"	f
scala#InvertBracketType	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#InvertBracketType(openBracket, closedBracket)$/;"	f
scala#IsParentCase	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#IsParentCase()$/;"	f
scala#LineCompletesBrackets	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesBrackets(openBracket, closedBracket)$/;"	f
scala#LineCompletesDefValr	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesDefValr(lnum, line)$/;"	f
scala#LineCompletesIfElse	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesIfElse(lnum, line)$/;"	f
scala#LineCompletesXML	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesXML(lnum, line)$/;"	f
scala#LineEndsInIncomplete	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#LineEndsInIncomplete(line)$/;"	f
scala#LineIsAClosingXML	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#LineIsAClosingXML(line)$/;"	f
scala#LineIsCompleteIf	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#LineIsCompleteIf(line)$/;"	f
scala#MatchesIncompleteDefValr	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#MatchesIncompleteDefValr(line)$/;"	f
scala#NumberOfBraceGroups	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#NumberOfBraceGroups(line)$/;"	f
scala#SanitizeDirForFuzzyFinder	pack/plugins/start/sheerun-vim-polyglot/ftplugin/scala.vim	/^    function! scala#SanitizeDirForFuzzyFinder(dir)$/;"	f
scala#SpecificLineCompletesBrackets	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#SpecificLineCompletesBrackets(lnum, openBracket, closedBracket)$/;"	f
scala#Test	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#Test(lnum, line, openBracket, closedBracket)$/;"	f
scala#Testhelper	pack/plugins/start/sheerun-vim-polyglot/indent/scala.vim	/^function! scala#Testhelper(lnum, line, openBracket, closedBracket, iteration)$/;"	f
scan	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f
scss_indent#GetIndent	pack/plugins/start/sheerun-vim-polyglot/autoload/scss_indent.vim	/^fun! scss_indent#GetIndent(lnum)$/;"	f
search	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:search(pattern) abort$/;"	f
searchsyn	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^function! s:searchsyn(pattern, syn, flags, mode) abort$/;"	f
sectionmovement	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^function! s:sectionmovement(pattern,flags,mode,count)$/;"	f
seek	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^function! s:seek(file) abort$/;"	f
send	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:send(self,func,...)$/;"	f
separator	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:separator()$/;"	f
set	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^function! s:set(var, default) abort$/;"	f
set_color_variables	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:set_color_variables()$/;"	f
set_default	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
set_default	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^function! s:set_default(dict) "{{{$/;"	f
set_highlightings_variable	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:set_highlightings_variable()$/;"	f
setf	pack/plugins/start/sheerun-vim-polyglot/ftdetect/polyglot.vim	/^function! s:setf(filetype) abort$/;"	f
setup_paste	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:setup_paste() abort$/;"	f
setup_vim_server	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:setup_vim_server()$/;"	f
setup_vinegar	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^function! s:setup_vinegar() abort$/;"	f
shellesc	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellescape	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^  function! s:shellescape(...) abort$/;"	f
shellescape	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^  function! s:shellescape(command) abort$/;"	f
shellslash	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:shellslash(path) abort$/;"	f
shift	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:shift(list) abort$/;"	f
show_errors	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! s:show_errors(errors) abort$/;"	f
signs	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function s:signs(filename)$/;"	f
skip_func	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^function s:skip_func()$/;"	f
skip_func	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:skip_func()$/;"	f
slash	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^function! s:slash() abort$/;"	f
smart_execute_command	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
snakecase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:snakecase(word)$/;"	f
sort	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
sort	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:sort(a,b)$/;"	f
sort_by	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
source.gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplcache/sources/tmuxcomplete.vim	/^function! s:source.gather_candidates(context)$/;"	f
source.gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplete/sources/tmuxcomplete.vim	/^function! s:source.gather_candidates(context)$/;"	f
spacecase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:spacecase(word)$/;"	f
span	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
spawn	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:spawn(bang, desc, args) abort$/;"	f
spawn	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
split3	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
split_by_displaywidth	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
split_leftright	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
stage_info	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:stage_info(lnum) abort$/;"	f
start_options	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  let start_options = {$/;"	v
start_options	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  let start_options = {$/;"	v
start_options	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^  let start_options = {$/;"	v
start_options	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^  let start_options = {$/;"	v
start_options	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let start_options = {$/;"	v
start_options	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let start_options = {$/;"	v
started	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^  let started = reltime()$/;"	v
starts_with	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:starts_with(str, prefix) abort$/;"	f
status_dir	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let status_dir =  expand('%:p:h')$/;"	v
statusbump	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:statusbump() abort$/;"	f
stepmatch	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^function! s:stepmatch(receiver,target)$/;"	f
steps	pack/plugins/start/sheerun-vim-polyglot/ftplugin/cucumber.vim	/^function! s:steps(lnum)$/;"	f
strchars	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  function! s:strchars(str) abort$/;"	f
string	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^import string$/;"	m
string_decode	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:string_decode(str)$/;"	f
string_encode	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:string_encode(str)$/;"	f
stripComment	pack/plugins/start/sheerun-vim-polyglot/indent/haskell.vim	/^function! s:stripComment(line)$/;"	f
strip_namespace_and_macro_chars	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:strip_namespace_and_macro_chars(word)$/;"	f
strip_white_space	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^function! s:strip_white_space(l,r,line) abort$/;"	f
strwidthpart	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart_reverse	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
sub	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
subesc	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:subesc(pattern)$/;"	f
substitute_command	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:substitute_command(cmd,bad,good,flags)$/;"	f
substitute_last	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
substitute_path_separator	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
subvert_dispatcher	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:subvert_dispatcher(bang,line1,line2,count,args)$/;"	f
summary	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let summary = [$/;"	v
surroundings	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^function! s:surroundings() abort$/;"	f
sw	pack/plugins/start/fatih-vim-go/indent/go.vim	/^  func s:sw()$/;"	f
sw	pack/plugins/start/sheerun-vim-polyglot/indent/caddyfile.vim	/^	func s:sw()$/;"	f
sw	pack/plugins/start/sheerun-vim-polyglot/indent/go.vim	/^  func s:sw()$/;"	f
sw	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^  function s:sw()$/;"	f
sw	pack/plugins/start/sheerun-vim-polyglot/indent/mako.vim	/^let sw=2    " default shiftwidth of 2 spaces$/;"	v
sw	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^  function s:sw()$/;"	f
syn	pack/plugins/start/sheerun-vim-polyglot/indent/cucumber.vim	/^function! s:syn(lnum)$/;"	f
syn_at	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^function s:syn_at(l,c)$/;"	f
syn_at	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:syn_at(l,c)$/;"	f
syn_id_name	pack/plugins/start/sheerun-vim-polyglot/indent/clojure.vim	/^	function! s:syn_id_name()$/;"	f
sync_guru	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:sync_guru(args) abort$/;"	f
synid	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^function! s:synid() abort$/;"	f
syntax_available	pack/plugins/start/sheerun-vim-polyglot/syntax/vue.vim	/^function! s:syntax_available(language)$/;"	f
syntax_keyword	pack/plugins/start/sheerun-vim-polyglot/syntax/clojure.vim	/^function! s:syntax_keyword(dict)$/;"	f
system	pack/plugins/start/sheerun-vim-polyglot/autoload/rust.vim	/^function! s:system(pwd, cmd)$/;"	f
system	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:system(str, ...) abort$/;"	f
t	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^    nnoremap <buffer> t <C-w><CR><C-w>T$/;"	m
tag.clear	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! s:tag.clear() "{{{$/;"	f
tag.init	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! s:tag.init() "{{{$/;"	f
tag.init_highlight	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! s:tag.init_highlight() "{{{$/;"	f
tag.refresh	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! s:tag.refresh() "{{{$/;"	f
tag.set	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! s:tag.set() "{{{$/;"	f
take_while	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
template_autocreate	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:template_autocreate()$/;"	f
tern_col	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:tern_col(p)$/;"	f
tern_skip	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:tern_skip(p)$/;"	f
terraformalign	pack/plugins/start/sheerun-vim-polyglot/after/ftplugin/terraform.vim	/^  function! s:terraformalign()$/;"	f
test_compile	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! s:test_compile(test_file, job, exit_status, data) abort$/;"	f
test_compile_handler	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! s:test_compile_handler(job, exit_status, data) abort$/;"	f
test_report	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:test_report(test, verbose)$/;"	f
textobject	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^function! s:textobject(inner) abort$/;"	f
throw	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:throw(msg)$/;"	f
throw	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:throw(string) abort$/;"	f
time	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^import time$/;"	m
titlecase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:titlecase(word)$/;"	f
tmux-complete.vim	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^# tmux-complete.vim$/;"	h
tmuxcomplete#complete	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#complete(findstart, base)$/;"	f
tmuxcomplete#completions	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#completions(base, capture_args, splitmode)$/;"	f
tmuxcomplete#findstartWORD	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#findstartWORD(line, max)$/;"	f
tmuxcomplete#findstartword	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#findstartword(line, max)$/;"	f
tmuxcomplete#gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#gather_candidates()$/;"	f
tmuxcomplete#getcommand	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#getcommand(base, splitmode)$/;"	f
tmuxcomplete#grepargs	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#grepargs(base)$/;"	f
tmuxcomplete#init	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#init()$/;"	f
tmuxcomplete#list	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#list(splitmode, scrollback)$/;"	f
tmuxify#get_associated_pane	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#get_associated_pane(...) abort$/;"	f
tmuxify#pane_command	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#pane_command(bang, ...) abort$/;"	f
tmuxify#pane_create	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#pane_create(bang, ...) abort$/;"	f
tmuxify#pane_kill	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#pane_kill(bang) abort$/;"	f
tmuxify#pane_run	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#pane_run(bang, ...) abort$/;"	f
tmuxify#pane_send	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#pane_send(bang, ...) abort$/;"	f
tmuxify#pane_send_raw	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#pane_send_raw(cmd, bang) abort$/;"	f
tmuxify#pane_set	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#pane_set(bang, ...) abort$/;"	f
tmuxify#set_run_command_for_filetype	pack/plugins/start/mhinz-vim-tmuxify/autoload/tmuxify.vim	/^function! tmuxify#set_run_command_for_filetype(...) abort$/;"	f
toBool	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:toBool(val) abort$/;"	f
to_256	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:to_256(rgb)$/;"	f
toggle	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:toggle(op) abort$/;"	f
token	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^function s:token()$/;"	f
token	pack/plugins/start/sheerun-vim-polyglot/indent/typescript.vim	/^function s:token()$/;"	f
topindent	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^function s:topindent(lnum)$/;"	f
total_elapsed_time	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let total_elapsed_time = reltimestr(reltime(total_started))$/;"	v
total_elapsed_time	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let total_elapsed_time = substitute(total_elapsed_time, '^\\s*\\(.\\{-}\\)\\s*$', '\\1', '')$/;"	v
total_started	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let total_started = reltime()$/;"	v
trim	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:trim(str) abort$/;"	f
trim_bracket	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:trim_bracket(val) abort$/;"	f
trim_end	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:trim_end(str) abort$/;"	f
trim_start	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:trim_start(str) abort$/;"	f
truncate	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate_skipping	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
try_completion	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:try_completion() " Assumes s:i in [0, s:N - 1]$/;"	f
u	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^    nmap u <Plug>(RepeatUndo)$/;"	m
uniq	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^  function! s:uniq(list)$/;"	f
uniq	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
uniq	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:uniq(list)$/;"	f
uniq_by	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
unite#sources#tmuxcomplete#define	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^function! unite#sources#tmuxcomplete#define()$/;"	f
unknown_coercion	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:unknown_coercion(letter,word)$/;"	f
unload	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! s:unload() abort$/;"	f
unplanned	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## unplanned$/;"	i
unshift	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
updatePlugin	get-plugins.go	/^func updatePlugin(wg *sync.WaitGroup, org, plugin string) {$/;"	f
update_readme	pack/plugins/start/sheerun-vim-polyglot/build	/^update_readme() {$/;"	f
update_tags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! s:update_tags(bufno, module, write_mode, queue_mode) abort$/;"	f
uppercase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:uppercase(word)$/;"	f
url_decode	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:url_decode(str)$/;"	f
url_encode	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:url_encode(str)$/;"	f
use_raw_list	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%FILE_LIST_CMD_IS_ABSOLUTE%"]==["1"] set use_raw_list=1$/;"	v
use_raw_list	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%PROJECT_ROOT%"]==["."] set use_raw_list=1$/;"	v
use_raw_list	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        set use_raw_list=0$/;"	v
v	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^    nnoremap <expr> <buffer> v &splitright ? "\\<C-w>\\<CR>\\<C-w>L\\<C-w>p\\<C-w>J\\<C-w>p" : "\\<C-w>\\<CR>\\<C-w>H\\<C-w>p\\<C-w>J\\<C-w>p"$/;"	m
verify_completion	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:verify_completion()$/;"	f
vim	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^augroup vim-go$/;"	a
vim	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^augroup vim-go-hi$/;"	a
vim	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ocaml.vim	/^import vim$/;"	m
vim	pack/plugins/start/sheerun-vim-polyglot/syntax/go.vim	/^augroup vim-go-hi$/;"	a
vim-go [![Build Status](http://img.shields.io/travis/fatih/vim-go.svg?style=flat-square)](https://travis-ci.org/fatih/vim-go)	pack/plugins/start/fatih-vim-go/README.md	/^# vim-go [![Build Status](http:\/\/img.shields.io\/travis\/fatih\/vim-go.svg?style=flat-square)](https:\/\/travis-ci.org\/fatih\/vim-go)$/;"	h
vim-polyglot [![Build Status][travis-img-url]][travis-url] [![Maintenance](https://img.shields.io/maintenance/yes/2017.svg?maxAge=2592000)]()	pack/plugins/start/sheerun-vim-polyglot/README.md	/^# vim-polyglot [![Build Status][travis-img-url]][travis-url] [![Maintenance](https:\/\/img.shields.io\/maintenance\/yes\/2017.svg?maxAge=2592000)]()$/;"	h
vim-qf	pack/plugins/start/romainl-vim-qf/README.md	/^# vim-qf$/;"	h
vim-qlist	pack/plugins/start/romainl-vim-qlist/README.md	/^# vim-qlist$/;"	h
vim-tmuxify	pack/plugins/start/mhinz-vim-tmuxify/README.md	/^# vim-tmuxify$/;"	h
vimColorRow	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^type vimColorRow struct {$/;"	t
vinegar	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^augroup vinegar$/;"	a
vital#	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal.vim	/^function! vital#{s:self_version}#new() abort$/;"	f
vital#of	pack/plugins/start/sheerun-vim-polyglot/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
warn	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:warn(str) abort$/;"	f
warning	pack/plugins/start/sheerun-vim-polyglot/ftplugin/latex-box/common.vim	/^		let warning = escape(substitute(w, '[\\,]', '%\\\\\\\\&', 'g'), ' ')$/;"	v
wcswidth	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
widget_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let widget_attributes = {$/;"	v
widget_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/aria.vim	/^let widget_role = [$/;"	v
widget_role	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^    let widget_role = ['alert', 'alertdialog', 'button', 'checkbox', 'combobox', 'dialog', 'gridcell', 'link', 'log', 'marquee', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'option', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'searchbox', 'slider', 'spinbutton', 'status', 'switch', 'tab', 'tabpanel', 'textbox', 'timer', 'tooltip', 'treeitem', 'combobox', 'grid', 'listbox', 'menu', 'menubar', 'radiogroup', 'tablist', 'tree', 'treegrid']$/;"	v
winshell	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:winshell() abort$/;"	f
withName	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^func withName(name string, vcr vimColorRow) vimColorRow {$/;"	f
with_index	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
words	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:words()$/;"	f
words.gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^function! s:words.gather_candidates(args, context)$/;"	f
wrap	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f
wrap	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:wrap(string,char,type,removed,special)$/;"	f
wrap_a	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^function! s:wrap_a(back,forward) abort$/;"	f
wrap_around	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^function! s:wrap_around()$/;"	f
wrap_i	pack/plugins/start/sheerun-vim-polyglot/ftplugin/ruby.vim	/^function! s:wrap_i(back,forward) abort$/;"	f
wrap_inside	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^function! s:wrap_inside()$/;"	f
wrapreg	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:wrapreg(reg,char,removed,special)$/;"	f
writeToFile	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:writeToFile(message, file)$/;"	f
write_out	pack/plugins/start/fatih-vim-go/autoload/go/tags.vim	/^func s:write_out(out) abort$/;"	f
write_triggered_update_tags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! s:write_triggered_update_tags(bufno) abort$/;"	f
xml_attributes	pack/plugins/start/sheerun-vim-polyglot/autoload/xml/html5.vim	/^let xml_attributes = {'xml:lang': lang_tag, 'xml:space': ['preserve'], 'xml:base': [], 'xmlns': ['http:\/\/www.w3.org\/1999\/xhtml', 'http:\/\/www.w3.org\/1998\/Math\/MathML', 'http:\/\/www.w3.org\/2000\/svg', 'http:\/\/www.w3.org\/1999\/xlink']}$/;"	v
xml_decode	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:xml_decode(str)$/;"	f
xml_encode	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:xml_encode(str)$/;"	f
xml_entity_decode	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:xml_entity_decode(str)$/;"	f
yO	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> yO  :call <SID>setup_paste()<CR>O$/;"	m
yS	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap yS  <Plug>YSurround$/;"	m
ySS	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap ySS <Plug>YSsurround$/;"	m
ySs	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap ySs <Plug>YSsurround$/;"	m
yo	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> yo  :call <SID>setup_paste()<CR>o$/;"	m
ys	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap ys  <Plug>Ysurround$/;"	m
yss	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap yss <Plug>Yssurround$/;"	m
zip	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:zip(...) abort$/;"	f
zip_fill	pack/plugins/start/sheerun-vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
{	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^nnoremap <silent> <buffer> { :call qf#filegroup#PreviousFile()<CR>$/;"	m
{s	pack/plugins/start/sheerun-vim-polyglot/indent/javascript.vim	/^  function s:{s:__}(...)$/;"	f
{{	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{ {{}}<left><left>$/;"	m
{{!	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{! {{!}}<left><left>$/;"	m
{{#	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{# {{#}}<cr>{{\/}}<up><left><left>$/;"	m
{{<	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{< {{<}}<left><left>$/;"	m
{{>	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{> {{>}}<left><left>$/;"	m
{{if	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{if {{#if }}<cr>{{\/if}}<up><left>$/;"	m
{{ife	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{ife {{#if }}<cr>{{else}}<cr>{{\/if}}<up><up><left>$/;"	m
{{{	pack/plugins/start/sheerun-vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{{ {{{}}}<left><left><left>$/;"	m
}	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^nnoremap <silent> <buffer> } :call qf#filegroup#NextFile()<CR>$/;"	m
“True Color” terminal emulators	pack/colors/start/romainl-apprentice/README.md	/^### “True Color” terminal emulators$/;"	k

!	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^  nmap <buffer> ! .!$/;"	m
!	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^  xmap <buffer> ! .!$/;"	m
![Apprentice](http://romainl.github.io/Apprentice/images/logo.png)	pack/colors/start/romainl-apprentice/README.md	/^# ![Apprentice](http:\/\/romainl.github.io\/Apprentice\/images\/logo.png)$/;"	h
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/4b9aa92/
$GOPATH	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^  let $GOPATH = s:gopath$/;"	v
$TMPDIR	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^    let $TMPDIR = '\/tmp'$/;"	v
$TMPDIR	pack/plugins/start/w0rp-ale/test/.config/nvim/init.vim	/^let $TMPDIR = ''$/;"	v
$TMPDIR	pack/plugins/start/w0rp-ale/test/vimrc	/^let $TMPDIR = ''$/;"	v
%%	vimrc	/^        cnoremap %% <c-r>=fnameescape(expand('%'))<cr>$/;"	m
-	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^        nnoremap <buffer> <silent> -    :<C-U>exe <SID>BlameJump('')<CR>$/;"	m
-	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> -     :<C-U>exe <SID>Edit('edit',0,<SID>buffer().up(v:count1))<Ba/;"	m
-	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> - :<C-U>silent execute <SID>StageToggle(line('.'),line('.')+v:cou/;"	m
-	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    xnoremap <buffer> <silent> - :<C-U>silent execute <SID>StageToggle(line("'<"),line("'>"))<CR/;"	m
-	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^  nmap - <Plug>VinegarUp$/;"	m
-	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^  nmap <buffer> - <Plug>VinegarUp$/;"	m
.	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer>          .     : <C-R>=fnameescape(<SID>recall())<CR><Home>$/;"	m
.	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^    nmap . <Plug>(RepeatDot)$/;"	m
.	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^  nnoremap <buffer> . :<C-U> <C-R>=<SID>escaped(line('.'), line('.') - 1 + v:count1)<CR><Home>$/;"	m
.	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^  xnoremap <buffer> . <Esc>: <C-R>=<SID>escaped(line("'<"), line("'>"))<CR><Home>$/;"	m
.	vimrc	/^        vnoremap . :norm.<CR>$/;"	m
0.0 (Mar 24, 2014)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 0.0 (Mar 24, 2014)$/;"	i
1. Guidelines	pack/plugins/start/w0rp-ale/CONTRIBUTING.md	/^## 1. Guidelines$/;"	i
1. Supported Languages and Tools	pack/plugins/start/w0rp-ale/README.md	/^## 1. Supported Languages and Tools$/;"	i
1.0 (Dec 24, 2014)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.0 (Dec 24, 2014)$/;"	i
1.0 Release Candidate	pack/colors/start/nlknguyen-papercolor-theme/ROADMAP.md	/^# 1.0 Release Candidate$/;"	h
1.0.1 (Feb 9, 2015)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.0.1 (Feb 9, 2015)$/;"	i
1.0.2 (Feb 17, 2015)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.0.2 (Feb 17, 2015)$/;"	i
1.0.3 (Mar 7, 2015)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.0.3 (Mar 7, 2015)$/;"	i
1.0.4 (Apr 28, 2015)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.0.4 (Apr 28, 2015)$/;"	i
1.0.5 (May 26, 2015)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.0.5 (May 26, 2015)$/;"	i
1.1 (Jul 25, 2015)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.1 (Jul 25, 2015)$/;"	i
1.10 (November 24, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.10 (November 24, 2016)$/;"	i
1.11 - (January 9, 2017)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.11 - (January 9, 2017)$/;"	i
1.12 - (March 29, 2017)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.12 - (March 29, 2017)$/;"	i
1.13 - (June 6, 2017)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.13 - (June 6, 2017)$/;"	i
1.14 - (August 6, 2017)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.14 - (August 6, 2017)$/;"	i
1.15 - (October 3, 2017)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.15 - (October 3, 2017)$/;"	i
1.2 (Oct 2, 2015)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.2 (Oct 2, 2015)$/;"	i
1.3 (Nov 22, 2015)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.3 (Nov 22, 2015)$/;"	i
1.4 (Jan 18, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.4 (Jan 18, 2016)$/;"	i
1.5 (Mar 16, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.5 (Mar 16, 2016)$/;"	i
1.6 (April 25, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.6 (April 25, 2016)$/;"	i
1.7 (June 7, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.7 (June 7, 2016)$/;"	i
1.7.1 (June 7, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.7.1 (June 7, 2016)$/;"	i
1.8 (July 31, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.8 (July 31, 2016)$/;"	i
1.9 (September 13, 2016)	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## 1.9 (September 13, 2016)$/;"	i
2. Creating Issues	pack/plugins/start/w0rp-ale/CONTRIBUTING.md	/^## 2. Creating Issues$/;"	i
2. Usage	pack/plugins/start/w0rp-ale/README.md	/^## 2. Usage$/;"	i
2.i Linting	pack/plugins/start/w0rp-ale/README.md	/^### 2.i Linting$/;"	k
2.ii Fixing	pack/plugins/start/w0rp-ale/README.md	/^### 2.ii Fixing$/;"	k
2.iii Completion	pack/plugins/start/w0rp-ale/README.md	/^### 2.iii Completion$/;"	k
256color-ready terminal emulators	pack/colors/start/romainl-apprentice/README.md	/^### 256color-ready terminal emulators$/;"	k
3. Creating Pull Requests	pack/plugins/start/w0rp-ale/CONTRIBUTING.md	/^## 3. Creating Pull Requests$/;"	i
3. Installation	pack/plugins/start/w0rp-ale/README.md	/^## 3. Installation$/;"	i
3.i. Adding a New Linter	pack/plugins/start/w0rp-ale/CONTRIBUTING.md	/^### 3.i. Adding a New Linter$/;"	k
3.i. Installation with Vim package management	pack/plugins/start/w0rp-ale/README.md	/^### 3.i. Installation with Vim package management$/;"	k
3.ii. Adding New Options	pack/plugins/start/w0rp-ale/CONTRIBUTING.md	/^### 3.ii. Adding New Options$/;"	k
3.ii. Installation with Pathogen	pack/plugins/start/w0rp-ale/README.md	/^### 3.ii. Installation with Pathogen$/;"	k
3.iii. Installation with Vundle	pack/plugins/start/w0rp-ale/README.md	/^### 3.iii. Installation with Vundle$/;"	k
4. Contributing	pack/plugins/start/w0rp-ale/README.md	/^## 4. Contributing$/;"	i
4. Writing Documentation	pack/plugins/start/w0rp-ale/CONTRIBUTING.md	/^## 4. Writing Documentation$/;"	i
4.i Documenting New Linters	pack/plugins/start/w0rp-ale/CONTRIBUTING.md	/^### 4.i Documenting New Linters$/;"	k
4.ii Editing the Online Documentation	pack/plugins/start/w0rp-ale/CONTRIBUTING.md	/^### 4.ii Editing the Online Documentation$/;"	k
4.iii Documenting Linter Options	pack/plugins/start/w0rp-ale/CONTRIBUTING.md	/^### 4.iii Documenting Linter Options$/;"	k
5. FAQ	pack/plugins/start/w0rp-ale/README.md	/^## 5. FAQ$/;"	i
5. In Case of Busses	pack/plugins/start/w0rp-ale/CONTRIBUTING.md	/^## 5. In Case of Busses$/;"	i
5.i. How do I disable particular linters?	pack/plugins/start/w0rp-ale/README.md	/^### 5.i. How do I disable particular linters?$/;"	k
5.ii. How can I keep the sign gutter open?	pack/plugins/start/w0rp-ale/README.md	/^### 5.ii. How can I keep the sign gutter open?$/;"	k
5.iii. How can I change the signs ALE uses?	pack/plugins/start/w0rp-ale/README.md	/^### 5.iii. How can I change the signs ALE uses?$/;"	k
5.iv. How can I change or disable the highlights ALE uses?	pack/plugins/start/w0rp-ale/README.md	/^### 5.iv. How can I change or disable the highlights ALE uses?$/;"	k
5.ix. How can I navigate between errors quickly?	pack/plugins/start/w0rp-ale/README.md	/^### 5.ix. How can I navigate between errors quickly?$/;"	k
5.v. How can I show errors or warnings in my statusline?	pack/plugins/start/w0rp-ale/README.md	/^### 5.v. How can I show errors or warnings in my statusline?$/;"	k
5.vi. How can I show errors or warnings in my lightline?	pack/plugins/start/w0rp-ale/README.md	/^### 5.vi. How can I show errors or warnings in my lightline?$/;"	k
5.vii. How can I change the format for echo messages?	pack/plugins/start/w0rp-ale/README.md	/^### 5.vii. How can I change the format for echo messages?$/;"	k
5.viii. How can I execute some code when ALE stops linting?	pack/plugins/start/w0rp-ale/README.md	/^### 5.viii. How can I execute some code when ALE stops linting?$/;"	k
5.x. How can I run linters only when I save files?	pack/plugins/start/w0rp-ale/README.md	/^### 5.x. How can I run linters only when I save files?$/;"	k
5.xi. How can I use the quickfix list instead of the loclist?	pack/plugins/start/w0rp-ale/README.md	/^### 5.xi. How can I use the quickfix list instead of the loclist?$/;"	k
5.xii. How can I check JSX files with both stylelint and eslint?	pack/plugins/start/w0rp-ale/README.md	/^### 5.xii. How can I check JSX files with both stylelint and eslint?$/;"	k
5.xiii. Will this plugin eat all of my laptop battery power?	pack/plugins/start/w0rp-ale/README.md	/^### 5.xiii. Will this plugin eat all of my laptop battery power?$/;"	k
::	vimrc	/^        cnoremap :: <c-r>=fnameescape(expand('%:p:h'))<cr>\/$/;"	m
;f	vimrc	/^        inoremap <silent> ;f <c-x><c-f>$/;"	m
;i	vimrc	/^        inoremap <silent> ;i <c-x><c-i>$/;"	m
;l	vimrc	/^        inoremap <silent> ;l <c-x><c-l>$/;"	m
;n	vimrc	/^        inoremap <silent> ;n <c-x><c-n>$/;"	m
;o	vimrc	/^        inoremap <silent> ;o <c-x><c-o>$/;"	m
;p	vimrc	/^        inoremap <silent> ;p <c-x><c-p>$/;"	m
;t	vimrc	/^        inoremap <silent> ;t <c-x><c-]>$/;"	m
;u	vimrc	/^        inoremap <silent> ;u <c-x><c-u>$/;"	m
<C-A>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^cnoremap        <C-A> <Home>$/;"	m
<C-A>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^inoremap        <C-A> <C-O>^$/;"	m
<C-B>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^cnoremap        <C-B> <Left>$/;"	m
<C-B>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^inoremap <expr> <C-B> getline('.')=~'^\\s*$'&&col('.')>strlen(getline('.'))?"0\\<Lt>C-D>\\<Lt>Es/;"	m
<C-D>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^cnoremap <expr> <C-D> getcmdpos()>strlen(getcmdline())?"\\<Lt>C-D>":"\\<Lt>Del>"$/;"	m
<C-D>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^inoremap <expr> <C-D> col('.')>strlen(getline('.'))?"\\<Lt>C-D>":"\\<Lt>Del>"$/;"	m
<C-E>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^inoremap <expr> <C-E> col('.')>strlen(getline('.'))<bar><bar>pumvisible()?"\\<Lt>C-E>":"\\<Lt>En/;"	m
<C-F>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^cnoremap <expr> <C-F> getcmdpos()>strlen(getcmdline())?&cedit:"\\<Lt>Right>"$/;"	m
<C-F>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^inoremap <expr> <C-F> col('.')>strlen(getline('.'))?"\\<Lt>C-F>":"\\<Lt>Right>"$/;"	m
<C-G>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  cmap <script> <C-G> <C-C>$/;"	m
<C-G>S	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^    imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>s	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^    imap      <C-G>s <Plug>Isurround$/;"	m
<C-LeftMouse>	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-LeftMouse> <LeftMouse>:GoDef<cr>$/;"	m
<C-N>	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> <C-N> :<C-U>execute <SID>StageNext(v:count1)<CR>$/;"	m
<C-P>	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> <C-P> :<C-U>execute <SID>StagePrevious(v:count1)<CR>$/;"	m
<C-R>	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^    nmap <C-R> <Plug>(RepeatRedo)$/;"	m
<C-R><C-F>	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^    cmap <buffer> <C-R><C-F> <Plug><cfile>$/;"	m
<C-R><C-G>	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^      cnoremap <buffer> <expr> <C-R><C-G> fnameescape(<SID>recall())$/;"	m
<C-S>	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^      imap    <C-S> <Plug>Isurround$/;"	m
<C-T>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^cmap   <script> <C-T> <SID>transposition<SID>transpose$/;"	m
<C-W><C-F>	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nmap <buffer> <silent> <C-W><C-F> <SID>:sfind <Plug><cfile><CR>$/;"	m
<C-W>f	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nmap <buffer> <silent> <C-W>f     <SID>:sfind <Plug><cfile><CR>$/;"	m
<C-W>gf	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nmap <buffer> <silent> <C-W>gf  <SID>:tabfind <Plug><cfile><CR>$/;"	m
<C-X><C-A>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^cnoremap   <C-X><C-A> <C-A>$/;"	m
<C-X><C-A>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^inoremap   <C-X><C-A> <C-A>$/;"	m
<C-]>	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-]> :GoDef<cr>$/;"	m
<C-t>	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-t> :<C-U>call go#def#StackPop(v:count1)<cr>$/;"	m
<C-w><C-]>	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-w><C-]> :<C-u>call go#def#Jump("split")<CR>$/;"	m
<C-w>]	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-w>] :<C-u>call go#def#Jump("split")<CR>$/;"	m
<CR>	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^  noremap <buffer> <silent> <CR>  :<C-U>call go#def#SelectStackEntry()<CR>$/;"	m
<CR>	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^  noremap <buffer> <silent> <CR> :<C-U>close<CR>$/;"	m
<CR>	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^        nnoremap <buffer> <silent> <CR> :<C-U>exe <SID>BlameCommit("exe 'norm q'<Bar>edit")<CR>$/;"	m
<CR>	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  nnoremap <buffer> <silent> <CR>    :<C-U>exe <SID>GF("edit")<CR>$/;"	m
<Esc>	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^  noremap <buffer> <silent> <Esc> :<C-U>call go#ui#CloseWindow()<CR>$/;"	m
<Esc>	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^  noremap <buffer> <silent> <Esc> :<C-U>close<CR>$/;"	m
<F1>	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^        nnoremap <buffer> <silent> <F1> :help fugitive-:Gblame<CR>$/;"	m
<F1>	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> <F1> :help fugitive-:Gstatus<CR>$/;"	m
<F31>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map <F31> <M-d>$/;"	m
<F31>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map! <F31> <M-d>$/;"	m
<F32>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map <F32> <M-n>$/;"	m
<F32>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map! <F32> <M-n>$/;"	m
<F33>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map <F33> <M-p>$/;"	m
<F33>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map! <F33> <M-p>$/;"	m
<F34>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map <F34> <M-BS>$/;"	m
<F34>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map! <F34> <M-BS>$/;"	m
<F35>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map <F35> <M-BS>$/;"	m
<F35>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^  map! <F35> <M-BS>$/;"	m
<Leader>hp	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hp <Plug>GitGutterPreviewHunk$/;"	m
<Leader>hr	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hr <Plug>GitGutterUndoHunk:echomsg '<Leader>hr is deprecated. Use <Leader>hu'<C/;"	m
<Leader>hs	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hs <Plug>GitGutterStageHunk$/;"	m
<Leader>hu	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hu <Plug>GitGutterUndoHunk$/;"	m
<M-BS>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap!        <M-BS> <C-W>$/;"	m
<M-b>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap!        <M-b> <S-Left>$/;"	m
<M-d>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^cnoremap        <M-d> <S-Right><C-W>$/;"	m
<M-d>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap!        <M-d> <C-O>dw$/;"	m
<M-f>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap!        <M-f> <S-Right>$/;"	m
<M-n>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap!        <M-n> <Down>$/;"	m
<M-p>	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap!        <M-p> <Up>$/;"	m
<Plug>(RepeatDot)	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatDot)      :<C-U>exe repeat#run(v:count)<CR>$/;"	m
<Plug>(RepeatRedo)	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatRedo)     :<C-U>call repeat#wrap("\\<Lt>C-R>",v:count)<CR>$/;"	m
<Plug>(RepeatUndo)	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatUndo)     :<C-U>call repeat#wrap('u',v:count)<CR>$/;"	m
<Plug>(RepeatUndoLine)	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatUndoLine) :<C-U>call repeat#wrap('U',v:count)<CR>$/;"	m
<Plug>(ale_detail)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_detail) :ALEDetail<Return>$/;"	m
<Plug>(ale_disable)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_disable) :ALEDisable<Return>$/;"	m
<Plug>(ale_disable_buffer)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_disable_buffer) :ALEDisableBuffer<Return>$/;"	m
<Plug>(ale_enable)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_enable) :ALEEnable<Return>$/;"	m
<Plug>(ale_enable_buffer)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_enable_buffer) :ALEEnableBuffer<Return>$/;"	m
<Plug>(ale_first)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_first) :ALEFirst<Return>$/;"	m
<Plug>(ale_fix)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_fix) :ALEFix<Return>$/;"	m
<Plug>(ale_last)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_last) :ALELast<Return>$/;"	m
<Plug>(ale_lint)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_lint) :ALELint<Return>$/;"	m
<Plug>(ale_next)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next) :ALENext<Return>$/;"	m
<Plug>(ale_next_wrap)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_wrap) :ALENextWrap<Return>$/;"	m
<Plug>(ale_previous)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous) :ALEPrevious<Return>$/;"	m
<Plug>(ale_previous_wrap)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_wrap) :ALEPreviousWrap<Return>$/;"	m
<Plug>(ale_reset)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_reset) :ALEReset<Return>$/;"	m
<Plug>(ale_reset_buffer)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_reset_buffer) :ALEResetBuffer<Return>$/;"	m
<Plug>(ale_toggle)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_toggle) :ALEToggle<Return>$/;"	m
<Plug>(ale_toggle_buffer)	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_toggle_buffer) :ALEToggleBuffer<Return>$/;"	m
<Plug>(go-alternate-edit)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-alternate-edit) :<C-u>call go#alternate#Switch(0, "edit")<CR>$/;"	m
<Plug>(go-alternate-split)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-alternate-split) :<C-u>call go#alternate#Switch(0, "split")<CR>$/;"	m
<Plug>(go-alternate-vertical)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-alternate-vertical) :<C-u>call go#alternate#Switch(0, "vsplit")<CR>$/;"	m
<Plug>(go-build)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-build) :<C-u>call go#cmd#Build(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-callees)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-callees) :<C-u>call go#guru#Callees(-1)<CR>$/;"	m
<Plug>(go-callers)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-callers) :<C-u>call go#guru#Callers(-1)<CR>$/;"	m
<Plug>(go-callstack)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-callstack) :<C-u>call go#guru#Callstack(-1)<CR>$/;"	m
<Plug>(go-channelpeers)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-channelpeers) :<C-u>call go#guru#ChannelPeers(-1)<CR>$/;"	m
<Plug>(go-coverage)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage) :<C-u>call go#coverage#Buffer(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-coverage-browser)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage-browser) :<C-u>call go#coverage#Browser(!g:go_jump_to_error/;"	m
<Plug>(go-coverage-clear)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage-clear) :<C-u>call go#coverage#Clear()<CR>$/;"	m
<Plug>(go-coverage-toggle)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage-toggle) :<C-u>call go#coverage#BufferToggle(!g:go_jump_to_e/;"	m
<Plug>(go-def)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def) :<C-u>call go#def#Jump('')<CR>$/;"	m
<Plug>(go-def-pop)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-pop) :<C-u>call go#def#StackPop()<CR>$/;"	m
<Plug>(go-def-split)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-split) :<C-u>call go#def#Jump("split")<CR>$/;"	m
<Plug>(go-def-stack)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-stack) :<C-u>call go#def#Stack()<CR>$/;"	m
<Plug>(go-def-stack-clear)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-stack-clear) :<C-u>call go#def#StackClear()<CR>$/;"	m
<Plug>(go-def-tab)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-tab) :<C-u>call go#def#Jump("tab")<CR>$/;"	m
<Plug>(go-def-vertical)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-vertical) :<C-u>call go#def#Jump("vsplit")<CR>$/;"	m
<Plug>(go-deps)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-deps) :<C-u>call go#tool#Deps()<CR>$/;"	m
<Plug>(go-describe)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-describe) :<C-u>call go#guru#Describe(-1)<CR>$/;"	m
<Plug>(go-doc)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc) :<C-u>call go#doc#Open("new", "split")<CR>$/;"	m
<Plug>(go-doc-browser)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-browser) :<C-u>call go#doc#OpenBrowser()<CR>$/;"	m
<Plug>(go-doc-split)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-split) :<C-u>call go#doc#Open("new", "split")<CR>$/;"	m
<Plug>(go-doc-tab)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-tab) :<C-u>call go#doc#Open("tabnew", "tabe")<CR>$/;"	m
<Plug>(go-doc-vertical)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-vertical) :<C-u>call go#doc#Open("vnew", "vsplit")<CR>$/;"	m
<Plug>(go-files)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-files) :<C-u>call go#tool#Files()<CR>$/;"	m
<Plug>(go-freevars)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^xnoremap <silent> <Plug>(go-freevars) :<C-u>call go#guru#Freevars(0)<CR>$/;"	m
<Plug>(go-generate)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-generate) :<C-u>call go#cmd#Generate(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-implements)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-implements) :<C-u>call go#guru#Implements(-1)<CR>$/;"	m
<Plug>(go-import)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-import) :<C-u>call go#import#SwitchImport(1, '', expand('<cword>'), /;"	m
<Plug>(go-imports)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-imports) :<C-u>call go#fmt#Format(1)<CR>$/;"	m
<Plug>(go-info)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-info) :<C-u>call go#tool#Info(0)<CR>$/;"	m
<Plug>(go-install)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-install) :<C-u>call go#cmd#Install(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-lint)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-lint) :<C-u>call go#lint#Golint()<CR>$/;"	m
<Plug>(go-metalinter)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-metalinter) :<C-u>call go#lint#Gometa(0)<CR>$/;"	m
<Plug>(go-referrers)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-referrers) :<C-u>call go#guru#Referrers(-1)<CR>$/;"	m
<Plug>(go-rename)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-rename) :<C-u>call go#rename#Rename(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-run)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-run) :<C-u>call go#cmd#Run(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-run-split)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^  nnoremap <silent> <Plug>(go-run-split) :<C-u>call go#cmd#RunTerm(!g:go_jump_to_error, 'split',/;"	m
<Plug>(go-run-tab)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^  nnoremap <silent> <Plug>(go-run-tab) :<C-u>call go#cmd#RunTerm(!g:go_jump_to_error, 'tabe', []/;"	m
<Plug>(go-run-vertical)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^  nnoremap <silent> <Plug>(go-run-vertical) :<C-u>call go#cmd#RunTerm(!g:go_jump_to_error, 'vspl/;"	m
<Plug>(go-sameids)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-sameids) :<C-u>call go#guru#SameIds()<CR>$/;"	m
<Plug>(go-sameids-toggle)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-sameids-toggle) :<C-u>call go#guru#ToggleSameIds()<CR>$/;"	m
<Plug>(go-test)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test) :<C-u>call go#test#Test(!g:go_jump_to_error, 0)<CR>$/;"	m
<Plug>(go-test-compile)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test-compile) :<C-u>call go#test#Test(!g:go_jump_to_error, 1)<CR>$/;"	m
<Plug>(go-test-func)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test-func) :<C-u>call go#test#Func(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-vet)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-vet) :<C-u>call go#lint#Vet(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-whicherrs)	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-whicherrs) :<C-u>call go#guru#Whicherrs(-1)<CR>$/;"	m
<Plug>(quickhl-cword-disable)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-cword-disable) :call quickhl#cword#disable()<CR>$/;"	m
<Plug>(quickhl-cword-enable)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-cword-enable)  :call quickhl#cword#enable()<CR>$/;"	m
<Plug>(quickhl-cword-toggle)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-cword-toggle)  :call quickhl#cword#toggle()<CR>$/;"	m
<Plug>(quickhl-manual-clear)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-manual-clear)  :call quickhl#manual#clear_this('n')<CR>$/;"	m
<Plug>(quickhl-manual-clear)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^vnoremap <silent> <Plug>(quickhl-manual-clear)  :call quickhl#manual#clear_this('v')<CR>$/;"	m
<Plug>(quickhl-manual-reset)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-manual-reset)  :call quickhl#manual#reset()<CR>$/;"	m
<Plug>(quickhl-manual-reset)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^vnoremap <silent> <Plug>(quickhl-manual-reset)  :call quickhl#manual#reset()<CR>$/;"	m
<Plug>(quickhl-manual-this)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-manual-this) :call quickhl#manual#this('n')<CR>$/;"	m
<Plug>(quickhl-manual-this)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^vnoremap <silent> <Plug>(quickhl-manual-this) :call quickhl#manual#this('v')<CR>$/;"	m
<Plug>(quickhl-manual-this-whole-word)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-manual-this-whole-word) :call quickhl#manual#this_whole_word('n/;"	m
<Plug>(quickhl-manual-this-whole-word)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^vnoremap <silent> <Plug>(quickhl-manual-this-whole-word) :call quickhl#manual#this_whole_word('v/;"	m
<Plug>(quickhl-manual-toggle)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-manual-toggle) :call quickhl#manual#lock_toggle()<CR>$/;"	m
<Plug>(quickhl-manual-toggle)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^vnoremap <silent> <Plug>(quickhl-manual-toggle) :call quickhl#manual#lock_toggle()<CR>$/;"	m
<Plug>(quickhl-tag-disable)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-tag-disable)    :call quickhl#tag#disable()<CR>$/;"	m
<Plug>(quickhl-tag-enable)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-tag-enable)     :call quickhl#tag#enable()<CR>$/;"	m
<Plug>(quickhl-tag-toggle)	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^nnoremap <silent> <Plug>(quickhl-tag-toggle)     :call quickhl#tag#toggle()<CR>$/;"	m
<Plug><cfile>	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  cnoremap <buffer> <expr> <Plug><cfile> fugitive#cfile()$/;"	m
<Plug><cfile>	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^  cnoremap <buffer><expr> <Plug><cfile> get(<SID>relatives('.'),0,"\\022\\006")$/;"	m
<Plug>CSurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>CSurround  :<C-U>call <SID>changesurround(1)<CR>$/;"	m
<Plug>ChangeCommentary	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>ChangeCommentary c:<C-U>call <SID>textobject(1)<CR>$/;"	m
<Plug>Coerce	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^nnoremap <silent> <Plug>Coerce :<C-U>call <SID>coerce(nr2char(getchar()))<CR>$/;"	m
<Plug>Commentary	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>Commentary     :<C-U>set opfunc=<SID>go<CR>g@$/;"	m
<Plug>Commentary	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^onoremap <silent> <Plug>Commentary        :<C-U>call <SID>textobject(0)<CR>$/;"	m
<Plug>Commentary	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^xnoremap <silent> <Plug>Commentary     :<C-U>call <SID>go(line("'<"),line("'>"))<CR>$/;"	m
<Plug>CommentaryLine	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>CommentaryLine :<C-U>set opfunc=<SID>go<Bar>exe 'norm! 'v:count1.'g@_'<C/;"	m
<Plug>CommentaryUndo	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^nmap <silent> <Plug>CommentaryUndo <Plug>Commentary<Plug>Commentary$/;"	m
<Plug>Csurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>Dsurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>GitGutterNextHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterNextHunk &diff ? ']c' : ":\\<C-U>execute v:count1 . 'Git/;"	m
<Plug>GitGutterPrevHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterPrevHunk &diff ? '[c' : ":\\<C-U>execute v:count1 . 'Git/;"	m
<Plug>GitGutterPreviewHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterPreviewHunk :GitGutterPreviewHunk<CR>$/;"	m
<Plug>GitGutterStageHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterStageHunk   :GitGutterStageHunk<CR>$/;"	m
<Plug>GitGutterTextObjectInnerPending	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>GitGutterTextObjectInnerPending :<C-U>call gitgutter#hunk#text_object(1)/;"	m
<Plug>GitGutterTextObjectInnerVisual	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^xnoremap <silent> <Plug>GitGutterTextObjectInnerVisual  :<C-U>call gitgutter#hunk#text_object(1)/;"	m
<Plug>GitGutterTextObjectOuterPending	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>GitGutterTextObjectOuterPending :<C-U>call gitgutter#hunk#text_object(0)/;"	m
<Plug>GitGutterTextObjectOuterVisual	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^xnoremap <silent> <Plug>GitGutterTextObjectOuterVisual  :<C-U>call gitgutter#hunk#text_object(0)/;"	m
<Plug>GitGutterUndoHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterUndoHunk    :GitGutterUndoHunk<CR>$/;"	m
<Plug>ISurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>Isurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>QfCnext	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nmap <silent>        <Plug>QfCnext     <Plug>qf_qf_next$/;"	m
<Plug>QfCprevious	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nmap <silent>        <Plug>QfCprevious <Plug>qf_qf_previous$/;"	m
<Plug>QfCtoggle	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nmap <silent>        <Plug>QfCtoggle   <Plug>qf_qf_toggle$/;"	m
<Plug>QfLnext	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nmap <silent>        <Plug>QfLnext     <Plug>qf_loc_next$/;"	m
<Plug>QfLprevious	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nmap <silent>        <Plug>QfLprevious <Plug>qf_loc_previous$/;"	m
<Plug>QfLtoggle	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nmap <silent>        <Plug>QfLtoggle   <Plug>qf_loc_toggle$/;"	m
<Plug>QfSwitch	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nmap <silent> <expr> <Plug>QfSwitch    &filetype ==# 'qf' ? '<C-w>p' : '<C-w>b'$/;"	m
<Plug>QlistDefinefromhere	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^nnoremap <silent> <Plug>QlistDefinefromhere        :call <sid>Qlist("d", 0, 1, 0)<CR>$/;"	m
<Plug>QlistDefinefromherevisual	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^xnoremap <silent> <Plug>QlistDefinefromherevisual  :<C-u>call <sid>Qlist("d", 1, 1, 0)<CR>$/;"	m
<Plug>QlistDefinefromtop	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^nnoremap <silent> <Plug>QlistDefinefromtop         :call <sid>Qlist("d", 0, 0, 0)<CR>$/;"	m
<Plug>QlistDefinefromtopvisual	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^xnoremap <silent> <Plug>QlistDefinefromtopvisual   :<C-u>call <sid>Qlist("d", 1, 0, 0)<CR>$/;"	m
<Plug>QlistIncludefromhere	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^nnoremap <silent> <Plug>QlistIncludefromhere       :call <sid>Qlist("i", 0, 1, 0)<CR>$/;"	m
<Plug>QlistIncludefromherevisual	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^xnoremap <silent> <Plug>QlistIncludefromherevisual :<C-u>call <sid>Qlist("i", 1, 1, 0)<CR>$/;"	m
<Plug>QlistIncludefromtop	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^nnoremap <silent> <Plug>QlistIncludefromtop        :call <sid>Qlist("i", 0, 0, 0)<CR>$/;"	m
<Plug>QlistIncludefromtopvisual	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^xnoremap <silent> <Plug>QlistIncludefromtopvisual  :<C-u>call <sid>Qlist("i", 1, 0, 0)<CR>$/;"	m
<Plug>SurroundRepeat	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>SurroundRepeat .$/;"	m
<Plug>VSurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 /;"	m
<Plug>VgSurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 /;"	m
<Plug>VinegarSplitUp	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^nnoremap <silent> <Plug>VinegarSplitUp :call <SID>opendir('split')<CR>$/;"	m
<Plug>VinegarTabUp	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^nnoremap <silent> <Plug>VinegarTabUp :call <SID>opendir('tabedit')<CR>$/;"	m
<Plug>VinegarUp	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^nnoremap <silent> <Plug>VinegarUp :call <SID>opendir('edit')<CR>$/;"	m
<Plug>VinegarVerticalSplitUp	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^nnoremap <silent> <Plug>VinegarVerticalSplitUp :call <SID>opendir('vsplit')<CR>$/;"	m
<Plug>YSsurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSsurround :<C-U>call <SID>opfunc2(v:count1)<CR>$/;"	m
<Plug>YSurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSurround  :<C-U>set opfunc=<SID>opfunc2<CR>g@$/;"	m
<Plug>Yssurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Yssurround :<C-U>call <SID>opfunc(v:count1)<CR>$/;"	m
<Plug>Ysurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Ysurround  :<C-U>set opfunc=<SID>opfunc<CR>g@$/;"	m
<Plug>qf_loc_next	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent>        <Plug>qf_loc_next        :<C-u> call qf#wrap#WrapCommand('down', 'l')<C/;"	m
<Plug>qf_loc_previous	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent>        <Plug>qf_loc_previous    :<C-u> call qf#wrap#WrapCommand('up', 'l')<CR>$/;"	m
<Plug>qf_loc_stay_toggle	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent>        <Plug>qf_loc_stay_toggle :<C-u> call qf#toggle#ToggleLocWindow(1)<CR>$/;"	m
<Plug>qf_loc_toggle	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent>        <Plug>qf_loc_toggle      :<C-u> call qf#toggle#ToggleLocWindow(0)<CR>$/;"	m
<Plug>qf_qf_next	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent>        <Plug>qf_qf_next         :<C-u> call qf#wrap#WrapCommand('down', 'c')<C/;"	m
<Plug>qf_qf_previous	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent>        <Plug>qf_qf_previous     :<C-u> call qf#wrap#WrapCommand('up', 'c')<CR>$/;"	m
<Plug>qf_qf_stay_toggle	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent>        <Plug>qf_qf_stay_toggle  :<C-u> call qf#toggle#ToggleQfWindow(1)<CR>$/;"	m
<Plug>qf_qf_switch	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent> <expr> <Plug>qf_qf_switch       &filetype ==# 'qf' ? '<C-w>p' : '<C-w>b'$/;"	m
<Plug>qf_qf_toggle	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^nnoremap <silent>        <Plug>qf_qf_toggle       :<C-u> call qf#toggle#ToggleQfWindow(0)<CR>$/;"	m
<Plug>unimpairedBlankDown	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedBlankDown :<C-U>call <SID>BlankDown(v:count1)<CR>$/;"	m
<Plug>unimpairedBlankUp	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedBlankUp   :<C-U>call <SID>BlankUp(v:count1)<CR>$/;"	m
<Plug>unimpairedContextNext	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedContextNext     :call <SID>Context(0)<CR>$/;"	m
<Plug>unimpairedContextNext	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^onoremap <silent> <Plug>unimpairedContextNext     :call <SID>ContextMotion(0)<CR>$/;"	m
<Plug>unimpairedContextPrevious	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedContextPrevious :call <SID>Context(1)<CR>$/;"	m
<Plug>unimpairedContextPrevious	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^onoremap <silent> <Plug>unimpairedContextPrevious :call <SID>ContextMotion(1)<CR>$/;"	m
<Plug>unimpairedDirectoryNext	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedDirectoryNext     :<C-U>edit <C-R>=<SID>fnameescape(fnamemodif/;"	m
<Plug>unimpairedDirectoryPrevious	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedDirectoryPrevious :<C-U>edit <C-R>=<SID>fnameescape(fnamemodif/;"	m
<Plug>unimpairedMoveDown	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedMoveDown          :<C-U>call <SID>Move('+',v:count1,'Down')<CR/;"	m
<Plug>unimpairedMoveSelectionDown	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^noremap  <silent> <Plug>unimpairedMoveSelectionDown :<C-U>call <SID>MoveSelectionDown(v:count1)</;"	m
<Plug>unimpairedMoveSelectionUp	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^noremap  <silent> <Plug>unimpairedMoveSelectionUp   :<C-U>call <SID>MoveSelectionUp(v:count1)<CR/;"	m
<Plug>unimpairedMoveUp	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedMoveUp            :<C-U>call <SID>Move('--',v:count1,'Up')<CR>$/;"	m
<Plug>unimpairedONext	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nmap <silent> <Plug>unimpairedONext     <Plug>unimpairedDirectoryNext:echohl WarningMSG<Bar>echo/;"	m
<Plug>unimpairedOPrevious	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nmap <silent> <Plug>unimpairedOPrevious <Plug>unimpairedDirectoryPrevious:echohl WarningMSG<Bar>/;"	m
<Plug>unimpairedPaste	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedPaste :call <SID>setup_paste()<CR>$/;"	m
<Plug>unimpairedPutAbove	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedPutAbove :call <SID>putline('[p', 'Above')<CR>$/;"	m
<Plug>unimpairedPutBelow	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedPutBelow :call <SID>putline(']p', 'Below')<CR>$/;"	m
<S-h>	vimrc	/^        nnoremap <S-h> :call ToggleHiddenAll()$/;"	m
<SID>:	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^nnoremap <SID>: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>transpose	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap! <expr> <SID>transpose "\\<BS>\\<Right>".matchstr(getcmdline()[0 : getcmdpos()-2], '.$')$/;"	m
<SID>transposition	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^noremap! <expr> <SID>transposition getcmdpos()>strlen(getcmdline())?"\\<Left>":getcmdpos()>1?'':/;"	m
<backspace>	vimrc	/^        nnoremap <silent> <backspace> :noh<cr>:QuickhlManualReset<cr>$/;"	m
<c-e>	pack/plugins/start/lifepillar-vim-mucomplete/troubleshooting_vimrc.vim	/^inoremap <expr> <c-e> mucomplete#popup_exit("\\<c-e>")$/;"	m
<c-h>	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^    imap <unique> <c-h> <plug>(MUcompleteCycBwd)$/;"	m
<c-j>	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^    imap <unique> <c-j> <plug>(MUcompleteCycFwd)$/;"	m
<c-r><c-l>	vimrc	/^        cnoremap <c-r><c-l> <c-r>=getline('.')<cr>$/;"	m
<c-y>	pack/plugins/start/lifepillar-vim-mucomplete/troubleshooting_vimrc.vim	/^inoremap <expr> <c-y> mucomplete#popup_exit("\\<c-y>")$/;"	m
<cr>	pack/plugins/start/lifepillar-vim-mucomplete/troubleshooting_vimrc.vim	/^inoremap <expr>  <cr> mucomplete#popup_exit("\\<cr>")$/;"	m
<down>	vimrc	/^        nmap <silent> <down> <esc>:cnext<cr>$/;"	m
<f5>	vimrc	/^        inoremap <f5> <c-r>=strftime("%c")<cr>$/;"	m
<f5>	vimrc	/^        nnoremap <f5> "=strftime("%c")<cr>P$/;"	m
<leader>"	vimrc	/^        nnoremap <leader>" :split<cr>$/;"	m
<leader>%	vimrc	/^        nnoremap <leader>% :vsplit<cr>$/;"	m
<leader>A	vimrc	/^        nnoremap <leader>A :argadd **\/*$/;"	m
<leader>B	vimrc	/^        nnoremap <leader>B :ls<cr>:b<space>$/;"	m
<leader>G	vimrc	/^        nnoremap <leader>G :grep <c-r><c-w><cr>$/;"	m
<leader>L	vimrc	/^        nnoremap <leader>L :lgrep <c-r><c-w><cr>$/;"	m
<leader>R	vimrc	/^        nnoremap <leader>R :call system('tmux split -v -p 20\\; last-pane')<cr>$/;"	m
<leader>S	vimrc	/^        nnoremap <leader>S :QuickhlManualAdd<space>$/;"	m
<leader>W	vimrc	/^        nnoremap <leader>W <c-w>W$/;"	m
<leader>a	vimrc	/^        nnoremap <leader>a :argadd <c-r>=fnameescape(expand('%:p:h'))<cr>\/*<C-d>$/;"	m
<leader>b	vimrc	/^        nnoremap <leader>b :b <C-d>$/;"	m
<leader>c	vimrc	/^        nnoremap <leader>c <esc>:close<cr>$/;"	m
<leader>e	vimrc	/^        nnoremap <leader>e :e <c-r>=fnameescape(expand('%:p:h'))<cr>\/*<C-d>$/;"	m
<leader>f	vimrc	/^        nnoremap <leader>f :find *$/;"	m
<leader>g	vimrc	/^        nnoremap <leader>g :grep<space>$/;"	m
<leader>i	vimrc	/^        nnoremap <leader>i :Ilist<space>$/;"	m
<leader>l	vimrc	/^        nnoremap <leader>l :lgrep<space>$/;"	m
<leader>m	vimrc	/^        nnoremap <leader>m :make<cr>$/;"	m
<leader>o	vimrc	/^        nnoremap <leader>o <c-w>o$/;"	m
<leader>p	vimrc	/^        nnoremap <leader>p :find *$/;"	m
<leader>q	vimrc	/^        nnoremap <leader>q :b#<cr>$/;"	m
<leader>r	vimrc	/^        nnoremap <leader>r :let cmds = input('command: ') \\| call system('tmux send-keys -t +1 /;"	m
<leader>s	vimrc	/^        nmap <leader>s <Plug>(quickhl-manual-this)$/;"	m
<leader>s	vimrc	/^        xmap <leader>s <Plug>(quickhl-manual-this)$/;"	m
<leader>t	vimrc	/^        nnoremap <leader>t :ltag<space>\/ \\| lop<left><left><left><left><left><left>$/;"	m
<leader>vs	vimrc	/^        nnoremap <leader>vs :<C-u>let @z=&so<cr>:set so=0 noscb<cr>:bo vs<cr>Ljzt:setl scb<cr><C/;"	m
<leader>w	vimrc	/^        nnoremap <leader>w <c-w>w$/;"	m
<leader>x	vimrc	/^        nnoremap <leader>x :TxSigInt!<cr>$/;"	m
<leader>z	vimrc	/^        nnoremap <leader>z :call ToggleFolds()<cr>$/;"	m
<left>	vimrc	/^        nmap <silent> <left> <esc>:lprev<cr>$/;"	m
<plug>(MUcompleteBwd)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^imap <expr> <silent> <plug>(MUcompleteBwd) mucomplete#tab_complete(-1)$/;"	m
<plug>(MUcompleteBwdKey)	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^    inoremap <silent> <plug>(MUcompleteBwdKey) <c-h>$/;"	m
<plug>(MUcompleteCtd)	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^inoremap <silent>        <plug>(MUcompleteCtd) <c-d>$/;"	m
<plug>(MUcompleteCycBwd)	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^imap     <silent> <expr> <plug>(MUcompleteCycBwd) mucomplete#cycle(-1)$/;"	m
<plug>(MUcompleteCycFwd)	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^imap     <silent> <expr> <plug>(MUcompleteCycFwd) mucomplete#cycle( 1)$/;"	m
<plug>(MUcompleteFwd)	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^imap <expr> <silent> <plug>(MUcompleteFwd) mucomplete#tab_complete( 1)$/;"	m
<plug>(MUcompleteFwdKey)	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^    inoremap <silent> <plug>(MUcompleteFwdKey) <c-j>$/;"	m
<plug>(MUcompleteOut)	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^inoremap <silent>        <plug>(MUcompleteOut) <c-g><c-g>$/;"	m
<plug>(MUcompleteTab)	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^inoremap <silent>        <plug>(MUcompleteTab) <tab>$/;"	m
<plug>(MUcompleteTry)	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^imap     <silent> <expr> <plug>(MUcompleteTry) <sid>try_completion()$/;"	m
<plug>(MUcompleteVerify)	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^imap     <silent> <expr> <plug>(MUcompleteVerify) <sid>verify_completion()$/;"	m
<right>	vimrc	/^        nmap <silent> <right> <esc>:lnext<cr>$/;"	m
<s-tab>	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    imap <unique> <s-tab> <plug>(MUcompleteBwd)$/;"	m
<tab>	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    imap <unique> <tab> <plug>(MUcompleteFwd)$/;"	m
<up>	vimrc	/^        nmap <silent> <up> <esc>:cprev<cr>$/;"	m
@	vimrc	/^        xnoremap @ :<C-u>call ExecuteMacroOverVisualRange()<CR>$/;"	m
A	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^        nnoremap <buffer> <silent> A    :<C-u>exe "vertical resize ".(<SID>linechars('.\\{-\\}\\/;"	m
ALEBufferFixGroup	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^augroup ALEBufferFixGroup$/;"	a
ALECleanupGroup	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^augroup ALECleanupGroup$/;"	a
ALECompletionGroup	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^    augroup ALECompletionGroup$/;"	a
ALECursorGroup	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^    augroup ALECursorGroup$/;"	a
ALEDetail	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEDetail :call ale#cursor#ShowCursorDetail()$/;"	c
ALEDisable	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEDisable :call ale#toggle#Disable()$/;"	c
ALEDisableBuffer	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEDisableBuffer :call ale#toggle#DisableBuffer(bufnr(''))$/;"	c
ALEEnable	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEEnable :call ale#toggle#Enable()$/;"	c
ALEEnableBuffer	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEEnableBuffer :call ale#toggle#EnableBuffer(bufnr(''))$/;"	c
ALEFirst	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEFirst :call ale#loclist_jumping#JumpToIndex(0)$/;"	c
ALEFix	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEFix :call ale#fix#Fix()$/;"	c
ALEFixSuggest	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEFixSuggest :call ale#fix#registry#Suggest(&filetype)$/;"	c
ALEGetStatusLine	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^function! ALEGetStatusLine() abort$/;"	f
ALEHighlightBufferGroup	pack/plugins/start/w0rp-ale/autoload/ale/highlight.vim	/^augroup ALEHighlightBufferGroup$/;"	a
ALEInfo	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEInfo :call ale#debugging#Info()$/;"	c
ALEInfoToClipboard	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEInfoToClipboard :call ale#debugging#InfoToClipboard()$/;"	c
ALELast	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALELast :call ale#loclist_jumping#JumpToIndex(-1)$/;"	c
ALELint	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALELint :call ale#Queue(0, 'lint_file')$/;"	c
ALELint	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^function! ALELint(delay) abort$/;"	f
ALENext	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALENext :call ale#loclist_jumping#Jump('after', 0)$/;"	c
ALENextWrap	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALENextWrap :call ale#loclist_jumping#Jump('after', 1)$/;"	c
ALEPatternOptionsGroup	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^    augroup ALEPatternOptionsGroup$/;"	a
ALEPrevious	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEPrevious :call ale#loclist_jumping#Jump('before', 0)$/;"	c
ALEPreviousWrap	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEPreviousWrap :call ale#loclist_jumping#Jump('before', 1)$/;"	c
ALEReset	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEReset :call ale#toggle#Reset()$/;"	c
ALEResetBuffer	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEResetBuffer :call ale#toggle#ResetBuffer(bufnr(''))$/;"	c
ALERunOnEnterGroup	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^    augroup ALERunOnEnterGroup$/;"	a
ALERunOnFiletypeChangeGroup	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^    augroup ALERunOnFiletypeChangeGroup$/;"	a
ALERunOnInsertLeave	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^    augroup ALERunOnInsertLeave$/;"	a
ALERunOnSaveGroup	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^    augroup ALERunOnSaveGroup$/;"	a
ALERunOnTextChangedGroup	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^    augroup ALERunOnTextChangedGroup$/;"	a
ALEToggle	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEToggle :call ale#toggle#Toggle()$/;"	c
ALEToggleBuffer	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^command! -bar ALEToggleBuffer :call ale#toggle#ToggleBuffer(bufnr(''))$/;"	c
Abolish	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^  let Abolish = {}$/;"	v
Abolish	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^command! -nargs=+ -bang -bar -range=0 -complete=custom,s:Complete Abolish$/;"	c
Abolished	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! Abolished()$/;"	f
Align	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^function Align(left, right)$/;"	f
All terminal emulators	pack/colors/start/romainl-apprentice/README.md	/^### All terminal emulators$/;"	k
Anti-features	pack/plugins/start/romainl-vim-qf/README.md	/^### Anti-features$/;"	k
AsmFmt	pack/plugins/start/fatih-vim-go/ftplugin/asm.vim	/^command! -nargs=0 AsmFmt call go#asmfmt#Format()$/;"	c
Asynchronous Lint Engine [![Travis CI Build Status](https://travis-ci.org/w0rp/ale.svg?branch=master)](https://travis-ci.org/w0rp/ale) [![AppVeyor Build Status](https://ci.appveyor.com/api/projects/status/github/w0rp/ale?svg=true)](https://ci.appveyor.com/project/w0rp/ale)	pack/plugins/start/w0rp-ale/README.md	/^# Asynchronous Lint Engine [![Travis CI Build Status](https:\/\/travis-ci.org\/w0rp\/ale.svg?bra/;"	h
Attr	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^	Attr string \/\/ only used for underline currently$/;"	m	struct:vimColorRow
AutoMkdir	vimrc	/^        augroup AutoMkdir$/;"	a
AutoMkdir	vimrc	/^        function! <SID>AutoMkdir() abort$/;"	f
BG	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^	BG   color$/;"	m	struct:vimColorRow
BreakHere	vimrc	/^        command! BreakHere :call BreakHere()$/;"	c
BreakHere	vimrc	/^        function! BreakHere()$/;"	f
But fear no longer!	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^## But fear no longer!$/;"	i
C	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^        nnoremap <buffer> <silent> C    :<C-u>exe "vertical resize ".(<SID>linechars('^\\S\\+')+/;"	m
C	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> C     :<C-U>exe <SID>Edit('edit',0,<SID>buffer().containing_commi/;"	m
C	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> C :<C-U>Gcommit<CR>$/;"	m
CSCOPE_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -R$/;"	v
CSCOPE_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -i %TAGS_FILE%.files$/;"	v
CSCOPE_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=$/;"	v
CSCOPE_EXE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_EXE=%~2$/;"	v
CSCOPE_EXE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_EXE=cscope$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% --append "%UPDATED_SOURCE%"$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% -L %TAGS_FILE%.files$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% "%PROJECT_ROOT%"$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% %~2$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --exclude=%2$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --options=%2$/;"	v
CTAGS_ARGS	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_ARGS=$/;"	v
CTAGS_EXE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_EXE=%~2$/;"	v
CTAGS_EXE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_EXE=ctags$/;"	v
Chmod	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=1 Chmod :$/;"	c
Color Format	pack/colors/start/nlknguyen-papercolor-theme/DESIGN.md	/^# Color Format$/;"	h
Color Names	pack/colors/start/nlknguyen-papercolor-theme/DESIGN.md	/^# Color Names$/;"	h
Color Ranges	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^### Color Ranges$/;"	k
CommentRow	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^	CommentRow      vimColorRow$/;"	m	struct:nofrilsTheme
Commentary	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^command! -range -bar Commentary call s:go(<line1>,<line2>)$/;"	c
Compatibility	pack/plugins/start/lifepillar-vim-mucomplete/Readme.md	/^# Compatibility$/;"	h
CompilerSet	pack/plugins/start/fatih-vim-go/compiler/go.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
Config	pack/plugins/start/t9md-vim-quickhl/README.md	/^# Config$/;"	h
Configuration (**MUST** fill this out):	pack/plugins/start/fatih-vim-go/.github/ISSUE_TEMPLATE.md	/^### Configuration (**MUST** fill this out):$/;"	k
Contributing	pack/plugins/start/ludovicchabant-vim-gutentags/CONTRIBUTING.md	/^# Contributing$/;"	h
Contributing to ALE	pack/plugins/start/w0rp-ale/CONTRIBUTING.md	/^# Contributing to ALE$/;"	h
Create your own theme	pack/colors/start/nlknguyen-papercolor-theme/DESIGN.md	/^# Create your own theme$/;"	h
Customize Current Theme Colors	pack/colors/start/nlknguyen-papercolor-theme/DESIGN.md	/^# Customize Current Theme Colors$/;"	h
D	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^        nnoremap <buffer> <silent> D    :<C-u>exe "vertical resize ".(<SID>linechars('.\\{-\\}\\/;"	m
D	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> D :<C-U>execute <SID>StageDiff('Gdiff')<CR>$/;"	m
DB_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set DB_FILE=%~2$/;"	v
DB_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^set DB_FILE=cscope.out$/;"	v
DJANGO_SETTINGS_MODULE	pack/plugins/start/w0rp-ale/test/command_callback/python_paths/namespace_package_pytest/pytest.ini	/^DJANGO_SETTINGS_MODULE=foo.settings$/;"	k	section:pytest
DONE	pack/plugins/start/romainl-vim-qf/README.md	/^## DONE$/;"	i
DONE	pack/plugins/start/romainl-vim-qlist/README.md	/^## DONE$/;"	i
Delete	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang Delete$/;"	c
Derivative works	pack/colors/start/romainl-apprentice/README.md	/^## Derivative works$/;"	i
Disciple	pack/colors/start/romainl-disciple/README.md	/^# Disciple$/;"	h
Dlist	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^command! -nargs=1 -bar -bang Dlist call <sid>Qlist("d", 1, 0, '<bang>' == '!', <f-args>)$/;"	c
Documentation	pack/plugins/start/romainl-vim-qf/README.md	/^## Documentation$/;"	i
Dofile	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=1 Dofile call qf#do#DoList(0, <q-args>)$/;"	c
Doline	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=1 Doline call qf#do#DoList(1, <q-args>)$/;"	c
DoneParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^:DoneParseArgs$/;"	l
DoneParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:DoneParseArgs$/;"	l
Eatchar	ftplugin/go.vim	/^func! Eatchar(pat)$/;"	f
Enabling Apprentice.	pack/colors/start/romainl-apprentice/README.md	/^## Enabling Apprentice.$/;"	i
Enabling Disciple.	pack/colors/start/romainl-disciple/README.md	/^## Enabling Disciple.$/;"	i
Exception	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^function Exception()$/;"	f
ExecuteMacroOverVisualRange	vimrc	/^        function! ExecuteMacroOverVisualRange()$/;"	f
Extended Colors	pack/colors/start/nlknguyen-papercolor-theme/DESIGN.md	/^## Extended Colors$/;"	i
FG	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^	FG   color$/;"	m	struct:vimColorRow
FILE_LIST_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD_IS_ABSOLUTE=1$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD_IS_ABSOLUTE=0$/;"	v
FadedRow	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^	FadedRow        vimColorRow$/;"	m	struct:nofrilsTheme
Features	pack/plugins/start/fatih-vim-go/README.md	/^## Features$/;"	i
Features	pack/plugins/start/romainl-vim-qf/README.md	/^## Features$/;"	i
Filter	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=1 -bang Filter call qf#filter#FilterList(<q-args>, expand("<bang>") == "/;"	c
Find	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -complete=file -nargs=+ Find   exe s:Grep(<q-bang>, <q-args>, 'find')$/;"	c
Foo	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/imports/goimports.go	/^func Foo(log *logging.TestLogger) {$/;"	f
Foo	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/imports/goimports_golden.go	/^func Foo(log *logging.TestLogger) {$/;"	f
Foo	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports.go	/^func Foo(log *logging.TestLogger) {$/;"	f
Foo	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports_golden.go	/^func Foo(log *logging.TestLogger) {$/;"	f
FriendlyName	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^function FriendlyName(test_name)$/;"	f
GVim/MacVim	pack/colors/start/romainl-apprentice/README.md	/^### GVim\/MacVim$/;"	k
GVim/MacVim	pack/colors/start/romainl-disciple/README.md	/^### GVim\/MacVim$/;"	k
GetGoHTMLTmplIndent	pack/plugins/start/fatih-vim-go/indent/gohtmltmpl.vim	/^function! GetGoHTMLTmplIndent(lnum)$/;"	f
Getting Started	pack/plugins/start/lifepillar-vim-mucomplete/Readme.md	/^# Getting Started$/;"	h
GitGutter	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutter    call gitgutter#process_buffer(bufnr(''), 0)$/;"	c
GitGutterAll	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterAll call gitgutter#all()$/;"	c
GitGutterDebug	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterDebug call gitgutter#debug#debug()$/;"	c
GitGutterDisable	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterDisable call gitgutter#disable()$/;"	c
GitGutterEnable	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterEnable  call gitgutter#enable()$/;"	c
GitGutterGetHunkSummary	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunkSummary()$/;"	f
GitGutterGetHunks	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunks()$/;"	f
GitGutterLineHighlightsDisable	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterLineHighlightsDisable call gitgutter#line_highlights_disable()$/;"	c
GitGutterLineHighlightsEnable	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterLineHighlightsEnable  call gitgutter#line_highlights_enable()$/;"	c
GitGutterLineHighlightsToggle	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterLineHighlightsToggle  call gitgutter#line_highlights_toggle()$/;"	c
GitGutterNextHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar -count=1 GitGutterNextHunk call gitgutter#hunk#next_hunk(<count>)$/;"	c
GitGutterPrevHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar -count=1 GitGutterPrevHunk call gitgutter#hunk#prev_hunk(<count>)$/;"	c
GitGutterPreviewHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterPreviewHunk call gitgutter#preview_hunk()$/;"	c
GitGutterRevertHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterRevertHunk  echomsg 'GitGutterRevertHunk is deprecated. Use GitGutterUndoH/;"	c
GitGutterSignsDisable	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterSignsDisable call gitgutter#signs_disable()$/;"	c
GitGutterSignsEnable	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterSignsEnable  call gitgutter#signs_enable()$/;"	c
GitGutterSignsToggle	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterSignsToggle  call gitgutter#signs_toggle()$/;"	c
GitGutterStageHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterStageHunk   call gitgutter#stage_hunk()$/;"	c
GitGutterToggle	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterToggle  call gitgutter#toggle()$/;"	c
GitGutterUndoHunk	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^command -bar GitGutterUndoHunk    call gitgutter#undo_hunk()$/;"	c
Global features (available from any window)	pack/plugins/start/romainl-vim-qf/README.md	/^### Global features (available from any window)$/;"	k
GoAddTags	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range GoAddTags call go#tags#Add(<line1>, <line2>, <count>, <f-args>)$/;"	c
GoAlternate	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -bang GoAlternate call go#alternate#Switch(<bang>0, '')$/;"	c
GoAsmFmtAutoSaveToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoAsmFmtAutoSaveToggle call go#asmfmt#ToggleAsmFmtAutoSave()$/;"	c
GoAutoTypeInfoToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoAutoTypeInfoToggle call go#complete#ToggleAutoTypeInfo()$/;"	c
GoBuild	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoBuild call go#cmd#Build(<bang>0,<f-args>)$/;"	c
GoBuildTags	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -bang GoBuildTags call go#cmd#BuildTags(<bang>0, <f-args>)$/;"	c
GoCallees	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallees call go#guru#Callees(<count>)$/;"	c
GoCallers	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallers call go#guru#Callers(<count>)$/;"	c
GoCallstack	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallstack call go#guru#Callstack(<count>)$/;"	c
GoChannelPeers	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoChannelPeers call go#guru#ChannelPeers(<count>)$/;"	c
GoCoverage	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverage call go#coverage#Buffer(<bang>0, <f-args>)$/;"	c
GoCoverageBrowser	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverageBrowser call go#coverage#Browser(<bang>0, <f-args>)$/;"	c
GoCoverageClear	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverageClear call go#coverage#Clear()$/;"	c
GoCoverageToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverageToggle call go#coverage#BufferToggle(<bang>0, <f-args>)$/;"	c
GoDecls	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -complete=file GoDecls call go#decls#Decls(0, <q-args>)$/;"	c
GoDeclsDir	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -complete=dir GoDeclsDir call go#decls#Decls(1, <q-args>)$/;"	c
GoDef	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range GoDef :call go#def#Jump('')$/;"	c
GoDefPop	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoDefPop :call go#def#StackPop(<f-args>)$/;"	c
GoDefStack	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoDefStack :call go#def#Stack(<f-args>)$/;"	c
GoDefStackClear	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoDefStackClear :call go#def#StackClear(<f-args>)$/;"	c
GoDeps	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoDeps echo go#tool#Deps()$/;"	c
GoDescribe	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoDescribe call go#guru#Describe(<count>)$/;"	c
GoDoc	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range -complete=customlist,go#package#Complete GoDoc call go#doc#Open('new', /;"	c
GoDocBrowser	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range -complete=customlist,go#package#Complete GoDocBrowser call go#doc#OpenB/;"	c
GoDrop	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -complete=customlist,go#package#Complete GoDrop call go#import#SwitchImport(0,/;"	c
GoErrCheck	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -complete=customlist,go#package#Complete GoErrCheck call go#lint#Errcheck(<f-a/;"	c
GoFiles	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -complete=customlist,go#tool#ValidFiles GoFiles echo go#tool#Files(<f-args>)$/;"	c
GoFillStruct	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFillStruct call go#fillstruct#FillStruct()$/;"	c
GoFmt	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFmt call go#fmt#Format(-1)$/;"	c
GoFmtAutoSaveToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFmtAutoSaveToggle call go#fmt#ToggleFmtAutoSave()$/;"	c
GoFreevars	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoFreevars call go#guru#Freevars(<count>)$/;"	c
GoGenerate	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoGenerate call go#cmd#Generate(<bang>0,<f-args>)$/;"	c
GoGuruScope	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -complete=customlist,go#package#Complete GoGuruScope call go#guru#Scope(<f-arg/;"	c
GoImpl	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -buffer -complete=customlist,go#impl#Complete GoImpl call go#impl#Impl(<f-args/;"	c
GoImplements	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoImplements call go#guru#Implements(<count>)$/;"	c
GoImport	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=1 -bang -complete=customlist,go#package#Complete GoImport call go#import#SwitchI/;"	c
GoImportAs	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang -complete=customlist,go#package#Complete GoImportAs call go#import#Switc/;"	c
GoImports	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoImports call go#fmt#Format(1)$/;"	c
GoIndent	pack/plugins/start/fatih-vim-go/indent/go.vim	/^function! GoIndent(lnum)$/;"	f
GoInfo	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoInfo call go#tool#Info(0)$/;"	c
GoInstall	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoInstall call go#cmd#Install(<bang>0, <f-args>)$/;"	c
GoInstallBinaries	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^command! -nargs=* -complete=customlist,s:complete GoInstallBinaries call s:GoInstallBinaries(-1,/;"	c
GoKeyify	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoKeyify call go#keyify#Keyify()$/;"	c
GoLint	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoLint call go#lint#Golint(<f-args>)$/;"	c
GoMetaLinter	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoMetaLinter call go#lint#Gometa(0, <f-args>)$/;"	c
GoMetaLinterAutoSaveToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoMetaLinterAutoSaveToggle call go#lint#ToggleMetaLinterAutoSave()$/;"	c
GoPath	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^command! -nargs=? -complete=dir GoPath call go#path#GoPath(<f-args>)$/;"	c
GoPlay	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 -range=% GoPlay call go#play#Share(<count>, <line1>, <line2>)$/;"	c
GoReferrers	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoReferrers call go#guru#Referrers(<count>)$/;"	c
GoRemoveTags	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range GoRemoveTags call go#tags#Remove(<line1>, <line2>, <count>, <f-args>)$/;"	c
GoRename	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -complete=customlist,go#rename#Complete GoRename call go#rename#Rename(<bang>0/;"	c
GoRun	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang -complete=file GoRun call go#cmd#Run(<bang>0,<f-args>)$/;"	c
GoSameIds	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIds call go#guru#SameIds()$/;"	c
GoSameIdsAutoToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIdsAutoToggle call go#guru#AutoToogleSameIds()$/;"	c
GoSameIdsClear	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIdsClear call go#guru#ClearSameIds()$/;"	c
GoSameIdsToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIdsToggle call go#guru#ToggleSameIds()$/;"	c
GoTemplateAutoCreateToggle	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoTemplateAutoCreateToggle call go#template#ToggleAutoCreate()$/;"	c
GoTest	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTest call go#test#Test(<bang>0, 0, <f-args>)$/;"	c
GoTestCompile	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTestCompile call go#test#Test(<bang>0, 1, <f-args>)$/;"	c
GoTestFunc	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTestFunc call go#test#Func(<bang>0, <f-args>)$/;"	c
GoUpdateBinaries	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^command! -nargs=* -complete=customlist,s:complete GoUpdateBinaries  call s:GoInstallBinaries(1, /;"	c
GoVet	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoVet call go#lint#Vet(<bang>0, <f-args>)$/;"	c
GoWhicherrs	pack/plugins/start/fatih-vim-go/ftplugin/go/commands.vim	/^command! -range=% GoWhicherrs call go#guru#Whicherrs(<count>)$/;"	c
GuiCode	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^	GuiCode  string$/;"	m	struct:color
Gutentags	pack/plugins/start/ludovicchabant-vim-gutentags/README.md	/^# Gutentags$/;"	h
GutentagsToggleEnabled	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleEnabled :let g:gutentags_enabled=!g:gutentags_enabled$/;"	c
GutentagsToggleFake	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleFake    :call gutentags#fake()$/;"	c
GutentagsToggleTrace	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleTrace   :call gutentags#toggletrace()$/;"	c
GutentagsUnlock	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^command! GutentagsUnlock :call gutentags#delete_lock_files()$/;"	c
GutentagsUpdate	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^    command! -buffer -bang GutentagsUpdate :call s:manual_update_tags(<bang>0)$/;"	c
HeavyCommentRow	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^	HeavyCommentRow vimColorRow$/;"	m	struct:nofrilsTheme
HeavyLineRow	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^	HeavyLineRow    vimColorRow$/;"	m	struct:nofrilsTheme
HeavyStringRow	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^	HeavyStringRow  vimColorRow$/;"	m	struct:nofrilsTheme
Highlight on the fly.	pack/plugins/start/t9md-vim-quickhl/README.md	/^# Highlight on the fly.$/;"	h
How?	pack/plugins/start/ludovicchabant-vim-gutentags/README.md	/^## How?$/;"	i
INDEX_WHOLE_PROJECT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        set INDEX_WHOLE_PROJECT=0$/;"	v
INDEX_WHOLE_PROJECT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set INDEX_WHOLE_PROJECT=1$/;"	v
Ilist	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^command! -nargs=1 -bar -bang Ilist call <sid>Qlist("i", 1, 0, '<bang>' == '!', <f-args>)$/;"	c
Inclusive support	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^## Inclusive support$/;"	i
Install	pack/plugins/start/fatih-vim-go/README.md	/^## Install$/;"	i
Installation	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^## Installation$/;"	i
Installation	pack/colors/start/tomasr-molokai/README.md	/^## Installation$/;"	i
Installation	pack/plugins/start/romainl-vim-qf/README.md	/^## Installation$/;"	i
Installation	pack/plugins/start/romainl-vim-qlist/README.md	/^## Installation$/;"	i
Installation	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^## Installation$/;"	i
Installing Apprentice.	pack/colors/start/romainl-apprentice/README.md	/^## Installing Apprentice.$/;"	i
Installing Disciple.	pack/colors/start/romainl-disciple/README.md	/^## Installing Disciple.$/;"	i
K	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> K :GoDoc<cr>$/;"	m
Keep	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=? Keep call qf#filter#FilterList(<q-args>, 0)$/;"	c
LOG_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^set LOG_FILE=$/;"	v
LOG_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set LOG_FILE=$/;"	v
Language-specific options	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^### Language-specific options$/;"	k
Languages and Plugins	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^### Languages and Plugins$/;"	k
License	pack/plugins/start/fatih-vim-go/README.md	/^## License$/;"	i
Lightline and Airline themes	pack/colors/start/romainl-apprentice/README.md	/^## Lightline and Airline themes$/;"	i
ListLists	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer ListLists call qf#namedlist#ListLists()$/;"	c
LoadList	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=+ -complete=customlist,qf#namedlist#CompleteList LoadList    call qf#nam/;"	c
LoadListAdd	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=+ -complete=customlist,qf#namedlist#CompleteList LoadListAdd call qf#nam/;"	c
Local features (available only in location/quickfix windows)	pack/plugins/start/romainl-vim-qf/README.md	/^### Local features (available only in location\/quickfix windows)$/;"	k
Locate	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -complete=file -nargs=+ Locate exe s:Grep(<q-bang>, <q-args>, 'locate')$/;"	c
Log	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^function Log(msg)$/;"	f
LoopParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^:LoopParseArgs$/;"	l
LoopParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:LoopParseArgs$/;"	l
MUcomplete	pack/plugins/start/lifepillar-vim-mucomplete/Readme.md	/^# MUcomplete$/;"	h
MUcomplete in action	pack/plugins/start/lifepillar-vim-mucomplete/Readme.md	/^# MUcomplete in action$/;"	h
MUcompleteAuto	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  augroup MUcompleteAuto$/;"	a
MUcompleteAuto	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^    augroup MUcompleteAuto$/;"	a
MUcompleteAutoOff	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^  command -bar -nargs=0 MUcompleteAutoOff call mucomplete#disable_auto()$/;"	c
MUcompleteAutoOn	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^  command -bar -nargs=0 MUcompleteAutoOn call mucomplete#enable_auto()$/;"	c
MUcompleteAutoToggle	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^  command -bar -nargs=0 MUcompleteAutoToggle call mucomplete#toggle_auto()$/;"	c
Mkdir	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -nargs=? -complete=dir Mkdir$/;"	c
Molokai Color Scheme for Vim	pack/colors/start/tomasr-molokai/README.md	/^# Molokai Color Scheme for Vim$/;"	h
Motivation	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^## Motivation$/;"	i
Move	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=1 -bang -complete=file Move :$/;"	c
Name	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^	Name            string$/;"	m	struct:nofrilsTheme
Name	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^	Name string$/;"	m	struct:vimColorRow
Neovim terminal theme	pack/colors/start/romainl-apprentice/README.md	/^## Neovim terminal theme$/;"	i
NofrilsAcme	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsAcme :colo nofrils-acme$/;"	c
NofrilsAcme	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsAcme :colo nofrils-acme$/;"	c
NofrilsAcme	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsAcme :colo nofrils-acme$/;"	c
NofrilsAcme	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsAcme :colo nofrils-acme$/;"	c
NofrilsDark	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsDark :colo nofrils-dark$/;"	c
NofrilsDark	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsDark :colo nofrils-dark$/;"	c
NofrilsDark	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsDark :colo nofrils-dark$/;"	c
NofrilsDark	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsDark :colo nofrils-dark$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsFocusCode :call NofrilsFocusCode()$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^function! NofrilsFocusCode()$/;"	f
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsFocusCode :call NofrilsFocusCode()$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^function! NofrilsFocusCode()$/;"	f
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsFocusCode :call NofrilsFocusCode()$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^function! NofrilsFocusCode()$/;"	f
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsFocusCode :call NofrilsFocusCode()$/;"	c
NofrilsFocusCode	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^function! NofrilsFocusCode()$/;"	f
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsFocusComments :call NofrilsFocusComments()$/;"	c
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^function! NofrilsFocusComments()$/;"	f
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsFocusComments :call NofrilsFocusComments()$/;"	c
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^function! NofrilsFocusComments()$/;"	f
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsFocusComments :call NofrilsFocusComments()$/;"	c
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^function! NofrilsFocusComments()$/;"	f
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsFocusComments :call NofrilsFocusComments()$/;"	c
NofrilsFocusComments	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^function! NofrilsFocusComments()$/;"	f
NofrilsFocusNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsFocusNormal :call NofrilsNormal()$/;"	c
NofrilsFocusNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsFocusNormal :call NofrilsNormal()$/;"	c
NofrilsFocusNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsFocusNormal :call NofrilsNormal()$/;"	c
NofrilsFocusNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsFocusNormal :call NofrilsNormal()$/;"	c
NofrilsLight	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsLight :colo nofrils-light$/;"	c
NofrilsLight	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsLight :colo nofrils-light$/;"	c
NofrilsLight	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsLight :colo nofrils-light$/;"	c
NofrilsLight	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsLight :colo nofrils-light$/;"	c
NofrilsNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^function! NofrilsNormal()$/;"	f
NofrilsNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^function! NofrilsNormal()$/;"	f
NofrilsNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^function! NofrilsNormal()$/;"	f
NofrilsNormal	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^function! NofrilsNormal()$/;"	f
NofrilsSepia	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^command! NofrilsSepia :colo nofrils-sepia$/;"	c
NofrilsSepia	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^command! NofrilsSepia :colo nofrils-sepia$/;"	c
NofrilsSepia	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^command! NofrilsSepia :colo nofrils-sepia$/;"	c
NofrilsSepia	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^command! NofrilsSepia :colo nofrils-sepia$/;"	c
NoneRow	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^	NoneRow         vimColorRow$/;"	m	struct:nofrilsTheme
NormalRow	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^	NormalRow       vimColorRow$/;"	m	struct:nofrilsTheme
O	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^        nnoremap <silent> <buffer> O <CR>:cclose<CR>$/;"	m
O	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^        nnoremap <silent> <buffer> O <CR>:lclose<CR>$/;"	m
O	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^        nnoremap <buffer> <silent> O    :<C-U>exe <SID>BlameCommit("tabedit")<CR>$/;"	m
O	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> O     :<C-U>exe <SID>GF("tabedit")<CR>$/;"	m
P	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^        nnoremap <buffer> <silent> P    :<C-U>exe <SID>BlameJump('^'.v:count1)<CR>$/;"	m
P	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> P     :<C-U>exe <SID>Edit('edit',0,<SID>buffer().commit().'^'.v:c/;"	m
P	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> P :<C-U>execute <SID>StagePatch(line('.'),line('.')+v:count1-1)<C/;"	m
P	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    xnoremap <buffer> <silent> P :<C-U>execute <SID>StagePatch(line("'<"),line("'>"))<CR>$/;"	m
PAUSE_BEFORE_EXIT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set PAUSE_BEFORE_EXIT=1$/;"	v
PAUSE_BEFORE_EXIT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set PAUSE_BEFORE_EXIT=0$/;"	v
POST_PROCESS_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set POST_PROCESS_CMD=%~2$/;"	v
POST_PROCESS_CMD	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set POST_PROCESS_CMD=$/;"	v
PROJECT_ROOT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set PROJECT_ROOT=%~2$/;"	v
PROJECT_ROOT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set PROJECT_ROOT=$/;"	v
PROJ_ROOT	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^    set PROJ_ROOT=%~2$/;"	v
PaperColor	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^command! -nargs=0 PaperColor :call g:PaperColor()$/;"	c
PaperColor	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! g:PaperColor()$/;"	f
ParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^:ParseArgs$/;"	l
ParseArgs	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:ParseArgs$/;"	l
PasteForStatusline	vimrc	/^        function! PasteForStatusline()$/;"	f
Preparing your environment.	pack/colors/start/romainl-apprentice/README.md	/^## Preparing your environment.$/;"	i
Preparing your environment.	pack/colors/start/romainl-disciple/README.md	/^## Preparing your environment.$/;"	i
Profile script for µcomplete	pack/plugins/start/lifepillar-vim-mucomplete/test/Readme.md	/^# Profile script for µcomplete$/;"	h
Pushing	pack/plugins/start/ludovicchabant-vim-gutentags/CONTRIBUTING.md	/^## Pushing$/;"	i
QuickhlCword	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^  augroup QuickhlCword$/;"	a
QuickhlCwordDisable	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlCwordDisable :call quickhl#cword#disable()$/;"	c
QuickhlCwordEnable	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlCwordEnable  :call quickhl#cword#enable()$/;"	c
QuickhlCwordToggle	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlCwordToggle  :call quickhl#cword#toggle()$/;"	c
QuickhlManual	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^  augroup QuickhlManual$/;"	a
QuickhlManualAdd	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! -bang -nargs=1 QuickhlManualAdd     :call quickhl#manual#add(<q-args>,<bang>0)$/;"	c
QuickhlManualColors	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command!                QuickhlManualColors  :call quickhl#manual#colors()$/;"	c
QuickhlManualDelete	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! -bang -nargs=* QuickhlManualDelete  :call quickhl#manual#del(<q-args>,<bang>0)$/;"	c
QuickhlManualDisable	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command!                QuickhlManualDisable       :call quickhl#manual#disable()$/;"	c
QuickhlManualEnable	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command!                QuickhlManualEnable       :call quickhl#manual#enable()$/;"	c
QuickhlManualList	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command!                QuickhlManualList    :call quickhl#manual#list()$/;"	c
QuickhlManualLock	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command!                QuickhlManualLock    :call quickhl#manual#lock()$/;"	c
QuickhlManualLockToggle	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlManualLockToggle        :call quickhl#manual#lock_toggle()$/;"	c
QuickhlManualLockWindow	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlManualLockWindow        :call quickhl#manual#lock_window()$/;"	c
QuickhlManualLockWindowToggle	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlManualLockWindowToggle  :call quickhl#manual#lock_window_toggle()$/;"	c
QuickhlManualReset	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command!                QuickhlManualReset   :call quickhl#manual#reset()$/;"	c
QuickhlManualUnlock	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlManualUnlock            :call quickhl#manual#unlock()$/;"	c
QuickhlManualUnlockWindow	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlManualUnlockWindow      :call quickhl#manual#unlock_window()$/;"	c
QuickhlTag	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^  augroup QuickhlTag$/;"	a
QuickhlTagDisable	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlTagDisable  :call quickhl#tag#disable()$/;"	c
QuickhlTagEnable	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlTagEnable   :call quickhl#tag#enable()$/;"	c
QuickhlTagToggle	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^command! QuickhlTagToggle   :call quickhl#tag#toggle()$/;"	c
R	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> R :<C-U>edit<CR>$/;"	m
Random	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^function Random(min, max)$/;"	f
Redir	vimrc	/^        command! -nargs=1 Redir silent call Redir(<f-args>)$/;"	c
Redir	vimrc	/^        function! Redir(cmd)$/;"	f
Reject	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=? Reject call qf#filter#FilterList(<q-args>, 1)$/;"	c
Related Projects Based On PaperColor	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^# Related Projects Based On PaperColor$/;"	h
Remove	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang Remove$/;"	c
RemoveList	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=* -bang -complete=customlist,qf#namedlist#CompleteList RemoveList call q/;"	c
Rename	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=1 -bang -complete=custom,s:Rename_complete Rename$/;"	c
Restore	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -bar Restore call qf#filter#RestoreList()$/;"	c
Rows	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^	Rows            []vimColorRow$/;"	m	struct:nofrilsTheme
Run these commands in the "Git for Windows" Bash terminal	pack/plugins/start/w0rp-ale/README.md	/^# Run these commands in the "Git for Windows" Bash terminal$/;"	h
RunTest	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^function RunTest(test)$/;"	f
S	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^  command -nargs=1 -bang -bar -range=0 -complete=custom,s:SubComplete S$/;"	c
S	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> S     :<C-U>exe <SID>GF("vsplit")<CR>$/;"	m
S	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  xmap S   <Plug>VSurround$/;"	m
SaveList	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=? -complete=customlist,qf#namedlist#CompleteList SaveList    call qf#nam/;"	c
SaveListAdd	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^command! -buffer -nargs=? -complete=customlist,qf#namedlist#CompleteList SaveListAdd call qf#nam/;"	c
Screenshots	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^## Screenshots$/;"	i
SetUp	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function SetUp()$/;"	f
Settings	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^## Settings$/;"	i
ShowUsage	pack/plugins/start/ludovicchabant-vim-gutentags/plat/unix/update_scopedb.sh	/^ShowUsage() {$/;"	f
ShowUsage	pack/plugins/start/ludovicchabant-vim-gutentags/plat/unix/update_tags.sh	/^ShowUsage() {$/;"	f
Shuffle	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^function Shuffle(list)$/;"	f
Slug	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^	Slug            string$/;"	m	struct:nofrilsTheme
Source	pack/plugins/start/wellle-tmux-complete-vim/rplugin/python3/deoplete/sources/tmuxcomplete.py	/^class Source(Base):$/;"	c
Standard	pack/colors/start/nlknguyen-papercolor-theme/DESIGN.md	/^## Standard$/;"	i
StripTrailingWhitespace	vimrc	/^        command! StripTrailingWhitespace :call StripTrailingWhitespace()$/;"	c
StripTrailingWhitespace	vimrc	/^        function! StripTrailingWhitespace()$/;"	f
Subvert	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^command! -nargs=1 -bang -bar -range=0 -complete=custom,s:SubComplete Subvert$/;"	c
SudoEdit	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -complete=file -nargs=? SudoEdit$/;"	c
SudoWrite	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar SudoWrite$/;"	c
Syntax Highlighting Plugins Target	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^## Syntax Highlighting Plugins Target$/;"	i
TAGS_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set TAGS_FILE=%~2$/;"	v
TAGS_FILE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set TAGS_FILE=tags$/;"	v
TB	vimrc	/^                command! -range=% TB <line1>,<line2>w !nc termbin.com 9999 | tr -d '\\n' | cat$/;"	c
TODO	pack/plugins/start/romainl-vim-qf/README.md	/^## TODO$/;"	i
TODO	pack/plugins/start/romainl-vim-qlist/README.md	/^## TODO$/;"	i
Table of Contents	pack/plugins/start/w0rp-ale/README.md	/^## Table of Contents$/;"	i
TearDown	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function TearDown()$/;"	f
TermCode	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^	TermCode string$/;"	m	struct:color
Terminal emulators	pack/colors/start/romainl-disciple/README.md	/^### Terminal emulators$/;"	k
Terminal multiplexers	pack/colors/start/romainl-disciple/README.md	/^### Terminal multiplexers$/;"	k
TestHelloWorld	pack/plugins/start/fatih-vim-go/templates/hello_world_test.go	/^func TestHelloWorld(t *testing.T) {$/;"	f
Test_add_lines	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines()$/;"	f
Test_add_lines_fish	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines_fish()$/;"	f
Test_add_tags	pack/plugins/start/fatih-vim-go/autoload/go/tags_test.vim	/^func! Test_add_tags() abort$/;"	f
Test_edit_file_with_same_name_as_a_branch	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_edit_file_with_same_name_as_a_branch()$/;"	f
Test_file_added_to_git	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_file_added_to_git()$/;"	f
Test_filename_with_equals	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_equals()$/;"	f
Test_filename_with_square_brackets	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_square_brackets()$/;"	f
Test_fillstruct	pack/plugins/start/fatih-vim-go/autoload/go/fillstruct_test.vim	/^func! Test_fillstruct() abort$/;"	f
Test_follow_symlink	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_follow_symlink()$/;"	f
Test_goimports	pack/plugins/start/fatih-vim-go/autoload/go/fmt_test.vim	/^func! Test_goimports() abort$/;"	f
Test_hunk_outside_noop	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_outside_noop()$/;"	f
Test_hunk_stage	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage()$/;"	f
Test_hunk_stage_nearby_hunk	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_nearby_hunk()$/;"	f
Test_hunk_undo	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_undo()$/;"	f
Test_jump_to_declaration_godef	pack/plugins/start/fatih-vim-go/autoload/go/def_test.vim	/^func! Test_jump_to_declaration_godef() abort$/;"	f
Test_jump_to_declaration_guru	pack/plugins/start/fatih-vim-go/autoload/go/def_test.vim	/^func! Test_jump_to_declaration_guru() abort$/;"	f
Test_keep_alt	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_alt()$/;"	f
Test_keep_modified	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_modified()$/;"	f
Test_keep_op_marks	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_op_marks()$/;"	f
Test_modify_lines	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_modify_lines()$/;"	f
Test_no_modifications	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_no_modifications()$/;"	f
Test_orphaned_signs	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_orphaned_signs()$/;"	f
Test_remove_first_lines	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_first_lines()$/;"	f
Test_remove_lines	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_lines()$/;"	f
Test_remove_tags	pack/plugins/start/fatih-vim-go/autoload/go/tags_test.vim	/^func! Test_remove_tags() abort$/;"	f
Test_run_fmt	pack/plugins/start/fatih-vim-go/autoload/go/fmt_test.vim	/^func! Test_run_fmt() abort$/;"	f
Test_sign_column_always	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_sign_column_always()$/;"	f
Test_undo_nearby_hunk	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_undo_nearby_hunk()$/;"	f
Test_untracked_file_outside_repo	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_outside_repo()$/;"	f
Test_untracked_file_square_brackets_within_repo	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_square_brackets_within_repo()$/;"	f
Test_untracked_file_within_repo	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_within_repo()$/;"	f
Test_update_file	pack/plugins/start/fatih-vim-go/autoload/go/fmt_test.vim	/^func! Test_update_file() abort$/;"	f
Testing	pack/plugins/start/ludovicchabant-vim-gutentags/CONTRIBUTING.md	/^## Testing$/;"	i
Theme Options	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^### Theme Options$/;"	k
Third party integration	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^## Third party integration$/;"	i
ToggleFolds	vimrc	/^        function! ToggleFolds()$/;"	f
ToggleHiddenAll	vimrc	/^        function! ToggleHiddenAll()$/;"	f
Troubleshooting	pack/plugins/start/lifepillar-vim-mucomplete/Readme.md	/^# Troubleshooting$/;"	h
U	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> U :<C-U>execute <SID>StageUndo()<CR>$/;"	m
U	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^    nmap U <Plug>(RepeatUndoLine)$/;"	m
UPDATED_SOURCE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^    set UPDATED_SOURCE=%~2$/;"	v
UPDATED_SOURCE	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^set UPDATED_SOURCE=$/;"	v
UnimpairedMapTransform	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! UnimpairedMapTransform(algorithm, key) abort$/;"	f
Unlink	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang Unlink$/;"	c
Unlock	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:Unlock$/;"	l
Usage	pack/plugins/start/fatih-vim-go/README.md	/^## Usage$/;"	i
Usage	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_scopedb.cmd	/^:Usage$/;"	l
Usage	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^:Usage$/;"	l
User-config Options	pack/colors/start/nlknguyen-papercolor-theme/README.md	/^## User-config Options$/;"	i
VADER_OUTPUT_FILE	pack/plugins/start/w0rp-ale/run-tests.bat	/^set VADER_OUTPUT_FILE=%~dp0\\vader_output$/;"	v
W	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^  command! -bar W Wall$/;"	c
Wall	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=? Wall$/;"	c
What did you do? (required. The issue will be **closed** when not provided.)	pack/plugins/start/fatih-vim-go/.github/ISSUE_TEMPLATE.md	/^### What did you do? (required. The issue will be **closed** when not provided.)$/;"	k
What did you expect to happen?	pack/plugins/start/fatih-vim-go/.github/ISSUE_TEMPLATE.md	/^### What did you expect to happen?$/;"	k
What happened instead?	pack/plugins/start/fatih-vim-go/.github/ISSUE_TEMPLATE.md	/^### What happened instead?$/;"	k
What they say about Apprentice.	pack/colors/start/romainl-apprentice/README.md	/^## What they say about Apprentice.$/;"	i
What?	pack/plugins/start/ludovicchabant-vim-gutentags/README.md	/^## What?$/;"	i
Why?	pack/plugins/start/ludovicchabant-vim-gutentags/README.md	/^## Why?$/;"	i
Working with 8/16 colors	pack/colors/start/romainl-apprentice/README.md	/^### Working with 8\/16 colors$/;"	k
Writing	pack/plugins/start/ludovicchabant-vim-gutentags/CONTRIBUTING.md	/^## Writing$/;"	i
Y	vimrc	/^        nnoremap Y y\$$/;"	m
[D	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^    nmap <silent> [D <Plug>QlistDefinefromtop$/;"	m
[D	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^    xmap <silent> [D <Plug>QlistDefinefromtopvisual$/;"	m
[I	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^    nmap <silent> [I <Plug>QlistIncludefromtop$/;"	m
[I	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^    xmap <silent> [I <Plug>QlistIncludefromtopvisual$/;"	m
[[	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> [[ :<c-u>call go#textobj#FunctionJump('n', 'prev')<cr>$/;"	m
[[	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> [[ :<c-u>call go#textobj#FunctionJump('o', 'prev')<cr>$/;"	m
[[	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  xnoremap <buffer> <silent> [[ :<c-u>call go#textobj#FunctionJump('v', 'prev')<cr>$/;"	m
[c	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    nmap [c <Plug>GitGutterPrevHunk$/;"	m
]D	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^    nmap <silent> ]D <Plug>QlistDefinefromhere$/;"	m
]D	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^    xmap <silent> ]D <Plug>QlistDefinefromherevisual$/;"	m
]I	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^    nmap <silent> ]I <Plug>QlistIncludefromhere$/;"	m
]I	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^    xmap <silent> ]I <Plug>QlistIncludefromherevisual$/;"	m
]]	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> ]] :<c-u>call go#textobj#FunctionJump('n', 'next')<cr>$/;"	m
]]	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> ]] :<c-u>call go#textobj#FunctionJump('o', 'next')<cr>$/;"	m
]]	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  xnoremap <buffer> <silent> ]] :<c-u>call go#textobj#FunctionJump('v', 'next')<cr>$/;"	m
]c	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    nmap ]c <Plug>GitGutterNextHunk$/;"	m
__init__	pack/plugins/start/wellle-tmux-complete-vim/rplugin/python3/deoplete/sources/tmuxcomplete.py	/^    def __init__(self, vim):$/;"	m	class:Source
a	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^        nnoremap <buffer> <silent> a :<C-U>let b:fugitive_display_format += v:count1<Bar>exe <SI/;"	m
a	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> a :<C-U>let b:fugitive_display_format += 1<Bar>exe <SID>BufReadIn/;"	m
ac	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    omap ac <Plug>GitGutterTextObjectOuterPending$/;"	m
ac	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    xmap ac <Plug>GitGutterTextObjectOuterVisual$/;"	m
af	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> af :<c-u>call go#textobj#Function('a')<cr>$/;"	m
af	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  xnoremap <buffer> <silent> af :<c-u>call go#textobj#Function('a')<cr>$/;"	m
ale#CallWithCooldown	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#CallWithCooldown(timestamp_key, func, arglist) abort$/;"	f
ale#Escape	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#Escape(str) abort$/;"	f
ale#FileTooLarge	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#FileTooLarge() abort$/;"	f
ale#GetLocItemMessage	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#GetLocItemMessage(item, format_string) abort$/;"	f
ale#Has	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#Has(feature) abort$/;"	f
ale#Lint	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#Lint(...) abort$/;"	f
ale#Queue	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#Queue(delay, ...) abort$/;"	f
ale#ResetErrorDelays	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#ResetErrorDelays() abort$/;"	f
ale#ResetLintFileMarkers	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#ResetLintFileMarkers() abort$/;"	f
ale#Set	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#Set(variable_name, default) abort$/;"	f
ale#ShouldDoNothing	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#ShouldDoNothing(buffer) abort$/;"	f
ale#Var	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! ale#Var(buffer, variable_name) abort$/;"	f
ale#balloon#Disable	pack/plugins/start/w0rp-ale/autoload/ale/balloon.vim	/^function! ale#balloon#Disable() abort$/;"	f
ale#balloon#Enable	pack/plugins/start/w0rp-ale/autoload/ale/balloon.vim	/^function! ale#balloon#Enable() abort$/;"	f
ale#balloon#Expr	pack/plugins/start/w0rp-ale/autoload/ale/balloon.vim	/^function! ale#balloon#Expr() abort$/;"	f
ale#balloon#MessageForPos	pack/plugins/start/w0rp-ale/autoload/ale/balloon.vim	/^function! ale#balloon#MessageForPos(bufnr, lnum, col) abort$/;"	f
ale#c#FindCompileCommands	pack/plugins/start/w0rp-ale/autoload/ale/c.vim	/^function! ale#c#FindCompileCommands(buffer) abort$/;"	f
ale#c#FindLocalHeaderPaths	pack/plugins/start/w0rp-ale/autoload/ale/c.vim	/^function! ale#c#FindLocalHeaderPaths(buffer) abort$/;"	f
ale#c#FindProjectRoot	pack/plugins/start/w0rp-ale/autoload/ale/c.vim	/^function! ale#c#FindProjectRoot(buffer) abort$/;"	f
ale#c#IncludeOptions	pack/plugins/start/w0rp-ale/autoload/ale/c.vim	/^function! ale#c#IncludeOptions(include_paths) abort$/;"	f
ale#command#FormatCommand	pack/plugins/start/w0rp-ale/autoload/ale/command.vim	/^function! ale#command#FormatCommand(buffer, command, pipe_file_if_needed) abort$/;"	f
ale#completion#Disable	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#Disable() abort$/;"	f
ale#completion#Done	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#Done() abort$/;"	f
ale#completion#Enable	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#Enable() abort$/;"	f
ale#completion#Filter	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#Filter(suggestions, prefix) abort$/;"	f
ale#completion#GetCompletions	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#GetCompletions() abort$/;"	f
ale#completion#GetPrefix	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#GetPrefix(filetype, line, column) abort$/;"	f
ale#completion#HandleTSServerLSPResponse	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#HandleTSServerLSPResponse(conn_id, response) abort$/;"	f
ale#completion#OmniFunc	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#OmniFunc(findstart, base) abort$/;"	f
ale#completion#ParseTSServerCompletionEntryDetails	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#ParseTSServerCompletionEntryDetails(response) abort$/;"	f
ale#completion#ParseTSServerCompletions	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#ParseTSServerCompletions(response) abort$/;"	f
ale#completion#Queue	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#Queue() abort$/;"	f
ale#completion#Show	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! ale#completion#Show(response, completion_parser) abort$/;"	f
ale#cursor#EchoCursorWarning	pack/plugins/start/w0rp-ale/autoload/ale/cursor.vim	/^function! ale#cursor#EchoCursorWarning(...) abort$/;"	f
ale#cursor#EchoCursorWarningWithDelay	pack/plugins/start/w0rp-ale/autoload/ale/cursor.vim	/^function! ale#cursor#EchoCursorWarningWithDelay() abort$/;"	f
ale#cursor#ShowCursorDetail	pack/plugins/start/w0rp-ale/autoload/ale/cursor.vim	/^function! ale#cursor#ShowCursorDetail() abort$/;"	f
ale#cursor#TruncatedEcho	pack/plugins/start/w0rp-ale/autoload/ale/cursor.vim	/^function! ale#cursor#TruncatedEcho(message) abort$/;"	f
ale#debugging#Info	pack/plugins/start/w0rp-ale/autoload/ale/debugging.vim	/^function! ale#debugging#Info() abort$/;"	f
ale#debugging#InfoToClipboard	pack/plugins/start/w0rp-ale/autoload/ale/debugging.vim	/^function! ale#debugging#InfoToClipboard() abort$/;"	f
ale#engine#Cleanup	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#Cleanup(buffer) abort$/;"	f
ale#engine#CreateDirectory	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#CreateDirectory(buffer) abort$/;"	f
ale#engine#EscapeCommandPart	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#EscapeCommandPart(command_part) abort$/;"	f
ale#engine#FixLocList	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#FixLocList(buffer, linter_name, loclist) abort$/;"	f
ale#engine#GetLoclist	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#GetLoclist(buffer) abort$/;"	f
ale#engine#HandleLSPResponse	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#engine#InitBufferInfo	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#InitBufferInfo(buffer) abort$/;"	f
ale#engine#IsCheckingBuffer	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#IsCheckingBuffer(buffer) abort$/;"	f
ale#engine#IsExecutable	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#IsExecutable(buffer, executable) abort$/;"	f
ale#engine#ManageDirectory	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#ManageDirectory(buffer, directory) abort$/;"	f
ale#engine#ManageFile	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#ManageFile(buffer, filename) abort$/;"	f
ale#engine#ProcessChain	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#ProcessChain(buffer, linter, chain_index, input) abort$/;"	f
ale#engine#RemoveManagedFiles	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#RemoveManagedFiles(buffer) abort$/;"	f
ale#engine#ResetExecutableCache	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#ResetExecutableCache() abort$/;"	f
ale#engine#RunLinters	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#RunLinters(buffer, linters, should_lint_file) abort$/;"	f
ale#engine#SetResults	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#SetResults(buffer, loclist) abort$/;"	f
ale#engine#WaitForJobs	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! ale#engine#WaitForJobs(deadline) abort$/;"	f
ale#events#EnterEvent	pack/plugins/start/w0rp-ale/autoload/ale/events.vim	/^function! ale#events#EnterEvent(buffer) abort$/;"	f
ale#events#FileChangedEvent	pack/plugins/start/w0rp-ale/autoload/ale/events.vim	/^function! ale#events#FileChangedEvent(buffer) abort$/;"	f
ale#events#FileTypeEvent	pack/plugins/start/w0rp-ale/autoload/ale/events.vim	/^function! ale#events#FileTypeEvent(buffer, new_filetype) abort$/;"	f
ale#events#QuitEvent	pack/plugins/start/w0rp-ale/autoload/ale/events.vim	/^function! ale#events#QuitEvent(buffer) abort$/;"	f
ale#events#QuitRecently	pack/plugins/start/w0rp-ale/autoload/ale/events.vim	/^function! ale#events#QuitRecently(buffer) abort$/;"	f
ale#events#SaveEvent	pack/plugins/start/w0rp-ale/autoload/ale/events.vim	/^function! ale#events#SaveEvent(buffer) abort$/;"	f
ale#filetypes#GuessExtension	pack/plugins/start/w0rp-ale/autoload/ale/filetypes.vim	/^function! ale#filetypes#GuessExtension(filetype) abort$/;"	f
ale#filetypes#LoadExtensionMap	pack/plugins/start/w0rp-ale/autoload/ale/filetypes.vim	/^function! ale#filetypes#LoadExtensionMap() abort$/;"	f
ale#fix#ApplyFixes	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! ale#fix#ApplyFixes(buffer, output) abort$/;"	f
ale#fix#ApplyQueuedFixes	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! ale#fix#ApplyQueuedFixes() abort$/;"	f
ale#fix#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! ale#fix#Fix(...) abort$/;"	f
ale#fix#InitBufferData	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! ale#fix#InitBufferData(buffer, fixing_flag) abort$/;"	f
ale#fix#ManageDirectory	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! ale#fix#ManageDirectory(buffer, directory) abort$/;"	f
ale#fix#RemoveManagedFiles	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! ale#fix#RemoveManagedFiles(buffer) abort$/;"	f
ale#fix#registry#Add	pack/plugins/start/w0rp-ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#Add(name, func, filetypes, desc) abort$/;"	f
ale#fix#registry#Clear	pack/plugins/start/w0rp-ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#Clear() abort$/;"	f
ale#fix#registry#GetFunc	pack/plugins/start/w0rp-ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#GetFunc(name) abort$/;"	f
ale#fix#registry#ResetToDefaults	pack/plugins/start/w0rp-ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#ResetToDefaults() abort$/;"	f
ale#fix#registry#Suggest	pack/plugins/start/w0rp-ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#Suggest(filetype) abort$/;"	f
ale#fixers#autopep8#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/autopep8.vim	/^function! ale#fixers#autopep8#Fix(buffer) abort$/;"	f
ale#fixers#clangformat#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/clangformat.vim	/^function! ale#fixers#clangformat#Fix(buffer) abort$/;"	f
ale#fixers#clangformat#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/fixers/clangformat.vim	/^function! ale#fixers#clangformat#GetExecutable(buffer) abort$/;"	f
ale#fixers#eslint#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#Fix(buffer) abort$/;"	f
ale#fixers#format#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/format.vim	/^function! ale#fixers#format#Fix(buffer) abort$/;"	f
ale#fixers#format#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/fixers/format.vim	/^function! ale#fixers#format#GetExecutable(buffer) abort$/;"	f
ale#fixers#generic#RemoveTrailingBlankLines	pack/plugins/start/w0rp-ale/autoload/ale/fixers/generic.vim	/^function! ale#fixers#generic#RemoveTrailingBlankLines(buffer, lines) abort$/;"	f
ale#fixers#generic#TrimWhitespace	pack/plugins/start/w0rp-ale/autoload/ale/fixers/generic.vim	/^function! ale#fixers#generic#TrimWhitespace(buffer, lines) abort$/;"	f
ale#fixers#generic_python#AddLinesBeforeControlStatements	pack/plugins/start/w0rp-ale/autoload/ale/fixers/generic_python.vim	/^function! ale#fixers#generic_python#AddLinesBeforeControlStatements(buffer, lines) abort$/;"	f
ale#fixers#generic_python#BreakUpLongLines	pack/plugins/start/w0rp-ale/autoload/ale/fixers/generic_python.vim	/^function! ale#fixers#generic_python#BreakUpLongLines(buffer, lines) abort$/;"	f
ale#fixers#gofmt#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/gofmt.vim	/^function! ale#fixers#gofmt#Fix(buffer) abort$/;"	f
ale#fixers#goimports#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/goimports.vim	/^function! ale#fixers#goimports#Fix(buffer) abort$/;"	f
ale#fixers#hackfmt#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/hackfmt.vim	/^function! ale#fixers#hackfmt#Fix(buffer) abort$/;"	f
ale#fixers#help#AlignTags	pack/plugins/start/w0rp-ale/autoload/ale/fixers/help.vim	/^function! ale#fixers#help#AlignTags(buffer, lines) abort$/;"	f
ale#fixers#hfmt#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/hfmt.vim	/^function! ale#fixers#hfmt#Fix(buffer) abort$/;"	f
ale#fixers#isort#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/isort.vim	/^function! ale#fixers#isort#Fix(buffer) abort$/;"	f
ale#fixers#mix_format#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/mix_format.vim	/^function! ale#fixers#mix_format#Fix(buffer) abort$/;"	f
ale#fixers#mix_format#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/fixers/mix_format.vim	/^function! ale#fixers#mix_format#GetExecutable(buffer) abort$/;"	f
ale#fixers#phpcbf#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/phpcbf.vim	/^function! ale#fixers#phpcbf#Fix(buffer) abort$/;"	f
ale#fixers#phpcbf#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/fixers/phpcbf.vim	/^function! ale#fixers#phpcbf#GetExecutable(buffer) abort$/;"	f
ale#fixers#prettier#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#Fix(buffer) abort$/;"	f
ale#fixers#prettier#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#GetExecutable(buffer) abort$/;"	f
ale#fixers#prettier_eslint#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/prettier_eslint.vim	/^function! ale#fixers#prettier_eslint#Fix(buffer) abort$/;"	f
ale#fixers#prettier_eslint#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/fixers/prettier_eslint.vim	/^function! ale#fixers#prettier_eslint#GetExecutable(buffer) abort$/;"	f
ale#fixers#prettier_eslint#SetOptionDefaults	pack/plugins/start/w0rp-ale/autoload/ale/fixers/prettier_eslint.vim	/^function! ale#fixers#prettier_eslint#SetOptionDefaults() abort$/;"	f
ale#fixers#prettier_standard#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/prettier_standard.vim	/^function! ale#fixers#prettier_standard#Fix(buffer) abort$/;"	f
ale#fixers#prettier_standard#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/fixers/prettier_standard.vim	/^function! ale#fixers#prettier_standard#GetExecutable(buffer) abort$/;"	f
ale#fixers#puppetlint#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/puppetlint.vim	/^function! ale#fixers#puppetlint#Fix(buffer) abort$/;"	f
ale#fixers#refmt#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/refmt.vim	/^function! ale#fixers#refmt#Fix(buffer) abort$/;"	f
ale#fixers#rubocop#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/rubocop.vim	/^function! ale#fixers#rubocop#Fix(buffer) abort$/;"	f
ale#fixers#rubocop#GetCommand	pack/plugins/start/w0rp-ale/autoload/ale/fixers/rubocop.vim	/^function! ale#fixers#rubocop#GetCommand(buffer) abort$/;"	f
ale#fixers#rustfmt#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/rustfmt.vim	/^function! ale#fixers#rustfmt#Fix(buffer) abort$/;"	f
ale#fixers#shfmt#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/shfmt.vim	/^function! ale#fixers#shfmt#Fix(buffer) abort$/;"	f
ale#fixers#standard#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/standard.vim	/^function! ale#fixers#standard#Fix(buffer) abort$/;"	f
ale#fixers#standard#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/fixers/standard.vim	/^function! ale#fixers#standard#GetExecutable(buffer) abort$/;"	f
ale#fixers#stylelint#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/stylelint.vim	/^function! ale#fixers#stylelint#Fix(buffer) abort$/;"	f
ale#fixers#stylelint#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/fixers/stylelint.vim	/^function! ale#fixers#stylelint#GetExecutable(buffer) abort$/;"	f
ale#fixers#swiftformat#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/swiftformat.vim	/^function! ale#fixers#swiftformat#Fix(buffer) abort$/;"	f
ale#fixers#swiftformat#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/fixers/swiftformat.vim	/^function! ale#fixers#swiftformat#GetExecutable(buffer) abort$/;"	f
ale#fixers#tslint#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/tslint.vim	/^function! ale#fixers#tslint#Fix(buffer) abort$/;"	f
ale#fixers#yapf#Fix	pack/plugins/start/w0rp-ale/autoload/ale/fixers/yapf.vim	/^function! ale#fixers#yapf#Fix(buffer) abort$/;"	f
ale#gradle#BuildClasspathCommand	pack/plugins/start/w0rp-ale/autoload/ale/gradle.vim	/^function! ale#gradle#BuildClasspathCommand(buffer) abort$/;"	f
ale#gradle#FindExecutable	pack/plugins/start/w0rp-ale/autoload/ale/gradle.vim	/^function! ale#gradle#FindExecutable(buffer) abort$/;"	f
ale#gradle#FindProjectRoot	pack/plugins/start/w0rp-ale/autoload/ale/gradle.vim	/^function! ale#gradle#FindProjectRoot(buffer) abort$/;"	f
ale#gradle#GetInitPath	pack/plugins/start/w0rp-ale/autoload/ale/gradle.vim	/^function! ale#gradle#GetInitPath() abort$/;"	f
ale#handlers#cppcheck#HandleCppCheckFormat	pack/plugins/start/w0rp-ale/autoload/ale/handlers/cppcheck.vim	/^function! ale#handlers#cppcheck#HandleCppCheckFormat(buffer, lines) abort$/;"	f
ale#handlers#cpplint#HandleCppLintFormat	pack/plugins/start/w0rp-ale/autoload/ale/handlers/cpplint.vim	/^function! ale#handlers#cpplint#HandleCppLintFormat(buffer, lines) abort$/;"	f
ale#handlers#css#HandleCSSLintFormat	pack/plugins/start/w0rp-ale/autoload/ale/handlers/css.vim	/^function! ale#handlers#css#HandleCSSLintFormat(buffer, lines) abort$/;"	f
ale#handlers#css#HandleStyleLintFormat	pack/plugins/start/w0rp-ale/autoload/ale/handlers/css.vim	/^function! ale#handlers#css#HandleStyleLintFormat(buffer, lines) abort$/;"	f
ale#handlers#eslint#FindConfig	pack/plugins/start/w0rp-ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#FindConfig(buffer) abort$/;"	f
ale#handlers#eslint#GetCommand	pack/plugins/start/w0rp-ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#GetCommand(buffer) abort$/;"	f
ale#handlers#eslint#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#GetExecutable(buffer) abort$/;"	f
ale#handlers#eslint#Handle	pack/plugins/start/w0rp-ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#Handle(buffer, lines) abort$/;"	f
ale#handlers#gcc#HandleGCCFormat	pack/plugins/start/w0rp-ale/autoload/ale/handlers/gcc.vim	/^function! ale#handlers#gcc#HandleGCCFormat(buffer, lines) abort$/;"	f
ale#handlers#haskell#HandleGHCFormat	pack/plugins/start/w0rp-ale/autoload/ale/handlers/haskell.vim	/^function! ale#handlers#haskell#HandleGHCFormat(buffer, lines) abort$/;"	f
ale#handlers#ols#GetCommand	pack/plugins/start/w0rp-ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetCommand(buffer) abort$/;"	f
ale#handlers#ols#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetExecutable(buffer) abort$/;"	f
ale#handlers#ols#GetLanguage	pack/plugins/start/w0rp-ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetLanguage(buffer) abort$/;"	f
ale#handlers#ols#GetProjectRoot	pack/plugins/start/w0rp-ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#rails_best_practices#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/handlers/rails_best_practices.vim	/^function! ale#handlers#rails_best_practices#GetExecutable(buffer) abort$/;"	f
ale#handlers#rubocop#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/handlers/rubocop.vim	/^function! ale#handlers#rubocop#GetExecutable(buffer) abort$/;"	f
ale#handlers#ruby#HandleSyntaxErrors	pack/plugins/start/w0rp-ale/autoload/ale/handlers/ruby.vim	/^function! ale#handlers#ruby#HandleSyntaxErrors(buffer, lines) abort$/;"	f
ale#handlers#rust#HandleRustErrors	pack/plugins/start/w0rp-ale/autoload/ale/handlers/rust.vim	/^function! ale#handlers#rust#HandleRustErrors(buffer, lines) abort$/;"	f
ale#handlers#sh#GetShellType	pack/plugins/start/w0rp-ale/autoload/ale/handlers/sh.vim	/^function! ale#handlers#sh#GetShellType(buffer) abort$/;"	f
ale#handlers#sml#GetCmFile	pack/plugins/start/w0rp-ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#GetCmFile(buffer) abort$/;"	f
ale#handlers#sml#GetExecutableSmlnjCm	pack/plugins/start/w0rp-ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#GetExecutableSmlnjCm(buffer) abort$/;"	f
ale#handlers#sml#GetExecutableSmlnjFile	pack/plugins/start/w0rp-ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#GetExecutableSmlnjFile(buffer) abort$/;"	f
ale#handlers#sml#Handle	pack/plugins/start/w0rp-ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#Handle(buffer, lines) abort$/;"	f
ale#handlers#unix#HandleAsError	pack/plugins/start/w0rp-ale/autoload/ale/handlers/unix.vim	/^function! ale#handlers#unix#HandleAsError(buffer, lines) abort$/;"	f
ale#handlers#unix#HandleAsWarning	pack/plugins/start/w0rp-ale/autoload/ale/handlers/unix.vim	/^function! ale#handlers#unix#HandleAsWarning(buffer, lines) abort$/;"	f
ale#handlers#writegood#GetCommand	pack/plugins/start/w0rp-ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#GetCommand(buffer) abort$/;"	f
ale#handlers#writegood#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#GetExecutable(buffer) abort$/;"	f
ale#handlers#writegood#Handle	pack/plugins/start/w0rp-ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#Handle(buffer, lines) abort$/;"	f
ale#handlers#writegood#ResetOptions	pack/plugins/start/w0rp-ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#ResetOptions() abort$/;"	f
ale#highlight#BufferHidden	pack/plugins/start/w0rp-ale/autoload/ale/highlight.vim	/^function! ale#highlight#BufferHidden(buffer) abort$/;"	f
ale#highlight#CreatePositions	pack/plugins/start/w0rp-ale/autoload/ale/highlight.vim	/^function! ale#highlight#CreatePositions(line, col, end_line, end_col) abort$/;"	f
ale#highlight#RemoveHighlights	pack/plugins/start/w0rp-ale/autoload/ale/highlight.vim	/^function! ale#highlight#RemoveHighlights() abort$/;"	f
ale#highlight#SetHighlights	pack/plugins/start/w0rp-ale/autoload/ale/highlight.vim	/^function! ale#highlight#SetHighlights(buffer, loclist) abort$/;"	f
ale#highlight#UpdateHighlights	pack/plugins/start/w0rp-ale/autoload/ale/highlight.vim	/^function! ale#highlight#UpdateHighlights() abort$/;"	f
ale#history#Add	pack/plugins/start/w0rp-ale/autoload/ale/history.vim	/^function! ale#history#Add(buffer, status, job_id, command) abort$/;"	f
ale#history#Get	pack/plugins/start/w0rp-ale/autoload/ale/history.vim	/^function! ale#history#Get(buffer) abort$/;"	f
ale#history#RememberOutput	pack/plugins/start/w0rp-ale/autoload/ale/history.vim	/^function! ale#history#RememberOutput(buffer, job_id, output) abort$/;"	f
ale#history#SetExitCode	pack/plugins/start/w0rp-ale/autoload/ale/history.vim	/^function! ale#history#SetExitCode(buffer, job_id, exit_code) abort$/;"	f
ale#job#IsRunning	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! ale#job#IsRunning(job_id) abort$/;"	f
ale#job#JoinNeovimOutput	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! ale#job#JoinNeovimOutput(job, last_line, data, mode, callback) abort$/;"	f
ale#job#ParseVim8ProcessID	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! ale#job#ParseVim8ProcessID(job_string) abort$/;"	f
ale#job#PrepareCommand	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! ale#job#PrepareCommand(command) abort$/;"	f
ale#job#SendRaw	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! ale#job#SendRaw(job_id, string) abort$/;"	f
ale#job#Start	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! ale#job#Start(command, options) abort$/;"	f
ale#job#Stop	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! ale#job#Stop(job_id) abort$/;"	f
ale#job#ValidateArguments	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! ale#job#ValidateArguments(command, options) abort$/;"	f
ale#linter#Define	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! ale#linter#Define(filetype, linter) abort$/;"	f
ale#linter#Get	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! ale#linter#Get(original_filetypes) abort$/;"	f
ale#linter#GetAddress	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! ale#linter#GetAddress(buffer, linter) abort$/;"	f
ale#linter#GetAll	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! ale#linter#GetAll(filetypes) abort$/;"	f
ale#linter#GetCommand	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! ale#linter#GetCommand(buffer, linter) abort$/;"	f
ale#linter#GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! ale#linter#GetExecutable(buffer, linter) abort$/;"	f
ale#linter#PreProcess	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! ale#linter#PreProcess(linter) abort$/;"	f
ale#linter#Reset	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! ale#linter#Reset() abort$/;"	f
ale#linter#ResolveFiletype	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! ale#linter#ResolveFiletype(original_filetype) abort$/;"	f
ale#linter#StartLSP	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! ale#linter#StartLSP(buffer, linter, callback) abort$/;"	f
ale#list#GetCombinedList	pack/plugins/start/w0rp-ale/autoload/ale/list.vim	/^function! ale#list#GetCombinedList() abort$/;"	f
ale#list#IsQuickfixOpen	pack/plugins/start/w0rp-ale/autoload/ale/list.vim	/^function! ale#list#IsQuickfixOpen() abort$/;"	f
ale#list#SetLists	pack/plugins/start/w0rp-ale/autoload/ale/list.vim	/^function! ale#list#SetLists(buffer, loclist) abort$/;"	f
ale#loclist_jumping#FindNearest	pack/plugins/start/w0rp-ale/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#FindNearest(direction, wrap) abort$/;"	f
ale#loclist_jumping#Jump	pack/plugins/start/w0rp-ale/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#Jump(direction, wrap) abort$/;"	f
ale#loclist_jumping#JumpToIndex	pack/plugins/start/w0rp-ale/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#JumpToIndex(index) abort$/;"	f
ale#lsp#ConnectToAddress	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! ale#lsp#ConnectToAddress(address, project_root, callback) abort$/;"	f
ale#lsp#CreateMessageData	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! ale#lsp#CreateMessageData(message) abort$/;"	f
ale#lsp#GetNextMessageID	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! ale#lsp#GetNextMessageID() abort$/;"	f
ale#lsp#GetProject	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! ale#lsp#GetProject(conn, project_root) abort$/;"	f
ale#lsp#HandleMessage	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! ale#lsp#HandleMessage(conn, message) abort$/;"	f
ale#lsp#HandleOtherInitializeResponses	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! ale#lsp#HandleOtherInitializeResponses(conn, response) abort$/;"	f
ale#lsp#OpenDocumentIfNeeded	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! ale#lsp#OpenDocumentIfNeeded(conn_id, buffer, project_root, language_id) abort$/;"	f
ale#lsp#ReadMessageData	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! ale#lsp#ReadMessageData(data) abort$/;"	f
ale#lsp#RegisterProject	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! ale#lsp#RegisterProject(conn, project_root) abort$/;"	f
ale#lsp#Send	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! ale#lsp#Send(conn_id, message, ...) abort$/;"	f
ale#lsp#StartProgram	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! ale#lsp#StartProgram(executable, command, project_root, callback) abort$/;"	f
ale#lsp#message#DidChange	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidChange(buffer) abort$/;"	f
ale#lsp#message#DidClose	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidClose(buffer) abort$/;"	f
ale#lsp#message#DidOpen	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidOpen(buffer, language_id) abort$/;"	f
ale#lsp#message#DidSave	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidSave(buffer) abort$/;"	f
ale#lsp#message#Exit	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Exit() abort$/;"	f
ale#lsp#message#GetNextVersionID	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#GetNextVersionID() abort$/;"	f
ale#lsp#message#Initialize	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Initialize(root_path) abort$/;"	f
ale#lsp#message#Initialized	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Initialized() abort$/;"	f
ale#lsp#message#Shutdown	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Shutdown() abort$/;"	f
ale#lsp#response#ReadDiagnostics	pack/plugins/start/w0rp-ale/autoload/ale/lsp/response.vim	/^function! ale#lsp#response#ReadDiagnostics(response) abort$/;"	f
ale#lsp#response#ReadTSServerDiagnostics	pack/plugins/start/w0rp-ale/autoload/ale/lsp/response.vim	/^function! ale#lsp#response#ReadTSServerDiagnostics(response) abort$/;"	f
ale#lsp#tsserver_message#Change	pack/plugins/start/w0rp-ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Change(buffer) abort$/;"	f
ale#lsp#tsserver_message#Close	pack/plugins/start/w0rp-ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Close(buffer) abort$/;"	f
ale#lsp#tsserver_message#CompletionEntryDetails	pack/plugins/start/w0rp-ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#CompletionEntryDetails(buffer, line, column, entry_names) abo/;"	f
ale#lsp#tsserver_message#Completions	pack/plugins/start/w0rp-ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Completions(buffer, line, column, prefix) abort$/;"	f
ale#lsp#tsserver_message#Geterr	pack/plugins/start/w0rp-ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Geterr(buffer) abort$/;"	f
ale#lsp#tsserver_message#Open	pack/plugins/start/w0rp-ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Open(buffer) abort$/;"	f
ale#node#Executable	pack/plugins/start/w0rp-ale/autoload/ale/node.vim	/^function! ale#node#Executable(buffer, executable) abort$/;"	f
ale#node#FindExecutable	pack/plugins/start/w0rp-ale/autoload/ale/node.vim	/^function! ale#node#FindExecutable(buffer, base_var_name, path_list) abort$/;"	f
ale#path#BufferCdString	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#BufferCdString(buffer) abort$/;"	f
ale#path#CdString	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#CdString(directory) abort$/;"	f
ale#path#FindNearestDirectory	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#FindNearestDirectory(buffer, directory_name) abort$/;"	f
ale#path#FindNearestFile	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#FindNearestFile(buffer, filename) abort$/;"	f
ale#path#FromURI	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#FromURI(uri) abort$/;"	f
ale#path#GetAbsPath	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#GetAbsPath(base_directory, filename) abort$/;"	f
ale#path#IsAbsolute	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#IsAbsolute(filename) abort$/;"	f
ale#path#IsBufferPath	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#IsBufferPath(buffer, complex_filename) abort$/;"	f
ale#path#IsTempName	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#IsTempName(filename) abort$/;"	f
ale#path#ResolveLocalPath	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#ResolveLocalPath(buffer, search_string, global_fallback) abort$/;"	f
ale#path#Simplify	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#Simplify(path) abort$/;"	f
ale#path#ToURI	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#ToURI(path) abort$/;"	f
ale#path#Upwards	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#Upwards(path) abort$/;"	f
ale#path#Winify	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^function! ale#path#Winify(path, ...) abort$/;"	f
ale#pattern_options#SetOptions	pack/plugins/start/w0rp-ale/autoload/ale/pattern_options.vim	/^function! ale#pattern_options#SetOptions(buffer) abort$/;"	f
ale#preview#Show	pack/plugins/start/w0rp-ale/autoload/ale/preview.vim	/^function! ale#preview#Show(lines) abort$/;"	f
ale#python#FindExecutable	pack/plugins/start/w0rp-ale/autoload/ale/python.vim	/^function! ale#python#FindExecutable(buffer, base_var_name, path_list) abort$/;"	f
ale#python#FindProjectRoot	pack/plugins/start/w0rp-ale/autoload/ale/python.vim	/^function! ale#python#FindProjectRoot(buffer) abort$/;"	f
ale#python#FindProjectRootIni	pack/plugins/start/w0rp-ale/autoload/ale/python.vim	/^function! ale#python#FindProjectRootIni(buffer) abort$/;"	f
ale#python#FindVirtualenv	pack/plugins/start/w0rp-ale/autoload/ale/python.vim	/^function! ale#python#FindVirtualenv(buffer) abort$/;"	f
ale#ruby#FindRailsRoot	pack/plugins/start/w0rp-ale/autoload/ale/ruby.vim	/^function! ale#ruby#FindRailsRoot(buffer) abort$/;"	f
ale#semver#GTE	pack/plugins/start/w0rp-ale/autoload/ale/semver.vim	/^function! ale#semver#GTE(lhs, rhs) abort$/;"	f
ale#semver#GetVersion	pack/plugins/start/w0rp-ale/autoload/ale/semver.vim	/^function! ale#semver#GetVersion(executable, version_lines) abort$/;"	f
ale#semver#HasVersion	pack/plugins/start/w0rp-ale/autoload/ale/semver.vim	/^function! ale#semver#HasVersion(executable) abort$/;"	f
ale#semver#ResetVersionCache	pack/plugins/start/w0rp-ale/autoload/ale/semver.vim	/^function! ale#semver#ResetVersionCache() abort$/;"	f
ale#sign#FindCurrentSigns	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^function! ale#sign#FindCurrentSigns(buffer) abort$/;"	f
ale#sign#GetSignCommands	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^function! ale#sign#GetSignCommands(buffer, was_sign_set, sign_map) abort$/;"	f
ale#sign#GetSignName	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^function! ale#sign#GetSignName(sublist) abort$/;"	f
ale#sign#ParseSigns	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^function! ale#sign#ParseSigns(line_list) abort$/;"	f
ale#sign#ReadSigns	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^function! ale#sign#ReadSigns(buffer) abort$/;"	f
ale#sign#SetSigns	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^function! ale#sign#SetSigns(buffer, loclist) abort$/;"	f
ale#statusline#Count	pack/plugins/start/w0rp-ale/autoload/ale/statusline.vim	/^function! ale#statusline#Count(buffer) abort$/;"	f
ale#statusline#Status	pack/plugins/start/w0rp-ale/autoload/ale/statusline.vim	/^function! ale#statusline#Status() abort$/;"	f
ale#statusline#Update	pack/plugins/start/w0rp-ale/autoload/ale/statusline.vim	/^function! ale#statusline#Update(buffer, loclist) abort$/;"	f
ale#test#RestoreDirectory	pack/plugins/start/w0rp-ale/autoload/ale/test.vim	/^function! ale#test#RestoreDirectory() abort$/;"	f
ale#test#SetDirectory	pack/plugins/start/w0rp-ale/autoload/ale/test.vim	/^function! ale#test#SetDirectory(docker_path) abort$/;"	f
ale#test#SetFilename	pack/plugins/start/w0rp-ale/autoload/ale/test.vim	/^function! ale#test#SetFilename(path) abort$/;"	f
ale#toggle#Disable	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! ale#toggle#Disable() abort$/;"	f
ale#toggle#DisableBuffer	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! ale#toggle#DisableBuffer(buffer) abort$/;"	f
ale#toggle#Enable	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! ale#toggle#Enable() abort$/;"	f
ale#toggle#EnableBuffer	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! ale#toggle#EnableBuffer(buffer) abort$/;"	f
ale#toggle#InitAuGroups	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! ale#toggle#InitAuGroups() abort$/;"	f
ale#toggle#Reset	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! ale#toggle#Reset() abort$/;"	f
ale#toggle#ResetBuffer	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! ale#toggle#ResetBuffer(buffer) abort$/;"	f
ale#toggle#Toggle	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! ale#toggle#Toggle() abort$/;"	f
ale#toggle#ToggleBuffer	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! ale#toggle#ToggleBuffer(buffer) abort$/;"	f
ale#uri#Decode	pack/plugins/start/w0rp-ale/autoload/ale/uri.vim	/^function! ale#uri#Decode(value) abort$/;"	f
ale#uri#Encode	pack/plugins/start/w0rp-ale/autoload/ale/uri.vim	/^function! ale#uri#Encode(value) abort$/;"	f
ale#util#BinarySearch	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#BinarySearch(loclist, buffer, line, column) abort$/;"	f
ale#util#ClockMilliseconds	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#ClockMilliseconds() abort$/;"	f
ale#util#EscapePCRE	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#EscapePCRE(unsafe_string) abort$/;"	f
ale#util#FeedKeys	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#FeedKeys(...) abort$/;"	f
ale#util#FunctionArgCount	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#FunctionArgCount(function) abort$/;"	f
ale#util#FuzzyJSONDecode	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#FuzzyJSONDecode(data, default) abort$/;"	f
ale#util#GetFunction	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#GetFunction(string_or_ref) abort$/;"	f
ale#util#GetLineCount	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#GetLineCount(buffer) abort$/;"	f
ale#util#GetMatches	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#GetMatches(lines, patterns) abort$/;"	f
ale#util#InSandbox	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#InSandbox() abort$/;"	f
ale#util#LocItemCompare	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#LocItemCompare(left, right) abort$/;"	f
ale#util#LocItemCompareWithText	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#LocItemCompareWithText(left, right) abort$/;"	f
ale#util#Mode	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#Mode(...) abort$/;"	f
ale#util#StartPartialTimer	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#StartPartialTimer(delay, callback, args) abort$/;"	f
ale#util#StopPartialTimer	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#StopPartialTimer(timer_id) abort$/;"	f
ale#util#Writefile	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! ale#util#Writefile(buffer, lines, filename) abort$/;"	f
ale_linters#ansible#ansible_lint#Handle	pack/plugins/start/w0rp-ale/ale_linters/ansible/ansible_lint.vim	/^function! ale_linters#ansible#ansible_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#asm#gcc#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/asm/gcc.vim	/^function! ale_linters#asm#gcc#GetCommand(buffer) abort$/;"	f
ale_linters#asm#gcc#Handle	pack/plugins/start/w0rp-ale/ale_linters/asm/gcc.vim	/^function! ale_linters#asm#gcc#Handle(buffer, lines) abort$/;"	f
ale_linters#awk#gawk#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/awk/gawk.vim	/^function! ale_linters#awk#gawk#GetCommand(buffer) abort$/;"	f
ale_linters#awk#gawk#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/awk/gawk.vim	/^function! ale_linters#awk#gawk#GetExecutable(buffer) abort$/;"	f
ale_linters#c#clang#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/c/clang.vim	/^function! ale_linters#c#clang#GetCommand(buffer) abort$/;"	f
ale_linters#c#clang#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/c/clang.vim	/^function! ale_linters#c#clang#GetExecutable(buffer) abort$/;"	f
ale_linters#c#clangtidy#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/c/clangtidy.vim	/^function! ale_linters#c#clangtidy#GetCommand(buffer) abort$/;"	f
ale_linters#c#clangtidy#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/c/clangtidy.vim	/^function! ale_linters#c#clangtidy#GetExecutable(buffer) abort$/;"	f
ale_linters#c#cppcheck#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/c/cppcheck.vim	/^function! ale_linters#c#cppcheck#GetCommand(buffer) abort$/;"	f
ale_linters#c#cppcheck#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/c/cppcheck.vim	/^function! ale_linters#c#cppcheck#GetExecutable(buffer) abort$/;"	f
ale_linters#c#gcc#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/c/gcc.vim	/^function! ale_linters#c#gcc#GetCommand(buffer) abort$/;"	f
ale_linters#c#gcc#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/c/gcc.vim	/^function! ale_linters#c#gcc#GetExecutable(buffer) abort$/;"	f
ale_linters#chef#foodcritic#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/chef/foodcritic.vim	/^function! ale_linters#chef#foodcritic#GetCommand(buffer) abort$/;"	f
ale_linters#chef#foodcritic#Handle	pack/plugins/start/w0rp-ale/ale_linters/chef/foodcritic.vim	/^function! ale_linters#chef#foodcritic#Handle(buffer, lines) abort$/;"	f
ale_linters#cmake#cmakelint#Command	pack/plugins/start/w0rp-ale/ale_linters/cmake/cmakelint.vim	/^function! ale_linters#cmake#cmakelint#Command(buffer) abort$/;"	f
ale_linters#cmake#cmakelint#Executable	pack/plugins/start/w0rp-ale/ale_linters/cmake/cmakelint.vim	/^function! ale_linters#cmake#cmakelint#Executable(buffer) abort$/;"	f
ale_linters#coffee#coffee#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/coffee/coffee.vim	/^function! ale_linters#coffee#coffee#GetCommand(buffer) abort$/;"	f
ale_linters#coffee#coffee#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/coffee/coffee.vim	/^function! ale_linters#coffee#coffee#GetExecutable(buffer) abort$/;"	f
ale_linters#coffee#coffeelint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/coffee/coffeelint.vim	/^function! ale_linters#coffee#coffeelint#GetCommand(buffer) abort$/;"	f
ale_linters#coffee#coffeelint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/coffee/coffeelint.vim	/^function! ale_linters#coffee#coffeelint#GetExecutable(buffer) abort$/;"	f
ale_linters#coffee#coffeelint#Handle	pack/plugins/start/w0rp-ale/ale_linters/coffee/coffeelint.vim	/^function! ale_linters#coffee#coffeelint#Handle(buffer, lines) abort$/;"	f
ale_linters#cpp#clang#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/cpp/clang.vim	/^function! ale_linters#cpp#clang#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#clang#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/cpp/clang.vim	/^function! ale_linters#cpp#clang#GetExecutable(buffer) abort$/;"	f
ale_linters#cpp#clangcheck#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/cpp/clangcheck.vim	/^function! ale_linters#cpp#clangcheck#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#clangcheck#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/cpp/clangcheck.vim	/^function! ale_linters#cpp#clangcheck#GetExecutable(buffer) abort$/;"	f
ale_linters#cpp#clangtidy#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/cpp/clangtidy.vim	/^function! ale_linters#cpp#clangtidy#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#clangtidy#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/cpp/clangtidy.vim	/^function! ale_linters#cpp#clangtidy#GetExecutable(buffer) abort$/;"	f
ale_linters#cpp#cppcheck#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/cpp/cppcheck.vim	/^function! ale_linters#cpp#cppcheck#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#cppcheck#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/cpp/cppcheck.vim	/^function! ale_linters#cpp#cppcheck#GetExecutable(buffer) abort$/;"	f
ale_linters#cpp#cpplint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/cpp/cpplint.vim	/^function! ale_linters#cpp#cpplint#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#cpplint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/cpp/cpplint.vim	/^function! ale_linters#cpp#cpplint#GetExecutable(buffer) abort$/;"	f
ale_linters#cpp#gcc#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/cpp/gcc.vim	/^function! ale_linters#cpp#gcc#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#gcc#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/cpp/gcc.vim	/^function! ale_linters#cpp#gcc#GetExecutable(buffer) abort$/;"	f
ale_linters#crystal#crystal#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/crystal/crystal.vim	/^function! ale_linters#crystal#crystal#GetCommand(buffer) abort$/;"	f
ale_linters#crystal#crystal#Handle	pack/plugins/start/w0rp-ale/ale_linters/crystal/crystal.vim	/^function! ale_linters#crystal#crystal#Handle(buffer, lines) abort$/;"	f
ale_linters#cs#mcs#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/cs/mcs.vim	/^function! ale_linters#cs#mcs#GetCommand(buffer) abort$/;"	f
ale_linters#cs#mcs#Handle	pack/plugins/start/w0rp-ale/ale_linters/cs/mcs.vim	/^function! ale_linters#cs#mcs#Handle(buffer, lines) abort$/;"	f
ale_linters#cs#mcsc#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/cs/mcsc.vim	/^function! ale_linters#cs#mcsc#GetCommand(buffer) abort$/;"	f
ale_linters#cs#mcsc#Handle	pack/plugins/start/w0rp-ale/ale_linters/cs/mcsc.vim	/^function! ale_linters#cs#mcsc#Handle(buffer, lines) abort$/;"	f
ale_linters#css#csslint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/css/csslint.vim	/^function! ale_linters#css#csslint#GetCommand(buffer) abort$/;"	f
ale_linters#css#stylelint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/css/stylelint.vim	/^function! ale_linters#css#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#css#stylelint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/css/stylelint.vim	/^function! ale_linters#css#stylelint#GetExecutable(buffer) abort$/;"	f
ale_linters#cuda#nvcc#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/cuda/nvcc.vim	/^function! ale_linters#cuda#nvcc#GetCommand(buffer) abort$/;"	f
ale_linters#cuda#nvcc#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/cuda/nvcc.vim	/^function! ale_linters#cuda#nvcc#GetExecutable(buffer) abort$/;"	f
ale_linters#cuda#nvcc#HandleNVCCFormat	pack/plugins/start/w0rp-ale/ale_linters/cuda/nvcc.vim	/^function! ale_linters#cuda#nvcc#HandleNVCCFormat(buffer, lines) abort$/;"	f
ale_linters#d#dmd#DMDCommand	pack/plugins/start/w0rp-ale/ale_linters/d/dmd.vim	/^function! ale_linters#d#dmd#DMDCommand(buffer, dub_output) abort$/;"	f
ale_linters#d#dmd#DUBCommand	pack/plugins/start/w0rp-ale/ale_linters/d/dmd.vim	/^function! ale_linters#d#dmd#DUBCommand(buffer) abort$/;"	f
ale_linters#d#dmd#Handle	pack/plugins/start/w0rp-ale/ale_linters/d/dmd.vim	/^function! ale_linters#d#dmd#Handle(buffer, lines) abort$/;"	f
ale_linters#dafny#dafny#Handle	pack/plugins/start/w0rp-ale/ale_linters/dafny/dafny.vim	/^function! ale_linters#dafny#dafny#Handle(buffer, lines) abort$/;"	f
ale_linters#dart#dartanalyzer#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/dart/dartanalyzer.vim	/^function! ale_linters#dart#dartanalyzer#GetCommand(buffer) abort$/;"	f
ale_linters#dart#dartanalyzer#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/dart/dartanalyzer.vim	/^function! ale_linters#dart#dartanalyzer#GetExecutable(buffer) abort$/;"	f
ale_linters#dart#dartanalyzer#Handle	pack/plugins/start/w0rp-ale/ale_linters/dart/dartanalyzer.vim	/^function! ale_linters#dart#dartanalyzer#Handle(buffer, lines) abort$/;"	f
ale_linters#dart#language_server#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/dart/language_server.vim	/^function! ale_linters#dart#language_server#GetExecutable(buffer) abort$/;"	f
ale_linters#dart#language_server#GetLanguage	pack/plugins/start/w0rp-ale/ale_linters/dart/language_server.vim	/^function! ale_linters#dart#language_server#GetLanguage(buffer) abort$/;"	f
ale_linters#dart#language_server#GetProjectRoot	pack/plugins/start/w0rp-ale/ale_linters/dart/language_server.vim	/^function! ale_linters#dart#language_server#GetProjectRoot(buffer) abort$/;"	f
ale_linters#dockerfile#hadolint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/dockerfile/hadolint.vim	/^function! ale_linters#dockerfile#hadolint#GetCommand(buffer) abort$/;"	f
ale_linters#dockerfile#hadolint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/dockerfile/hadolint.vim	/^function! ale_linters#dockerfile#hadolint#GetExecutable(buffer) abort$/;"	f
ale_linters#dockerfile#hadolint#Handle	pack/plugins/start/w0rp-ale/ale_linters/dockerfile/hadolint.vim	/^function! ale_linters#dockerfile#hadolint#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#credo#Handle	pack/plugins/start/w0rp-ale/ale_linters/elixir/credo.vim	/^function! ale_linters#elixir#credo#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#dogma#Handle	pack/plugins/start/w0rp-ale/ale_linters/elixir/dogma.vim	/^function! ale_linters#elixir#dogma#Handle(buffer, lines) abort$/;"	f
ale_linters#elm#make#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetCommand(buffer) abort$/;"	f
ale_linters#elm#make#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetExecutable(buffer) abort$/;"	f
ale_linters#elm#make#Handle	pack/plugins/start/w0rp-ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#Handle(buffer, lines) abort$/;"	f
ale_linters#erlang#erlc#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/erlang/erlc.vim	/^function! ale_linters#erlang#erlc#GetCommand(buffer) abort$/;"	f
ale_linters#erlang#erlc#Handle	pack/plugins/start/w0rp-ale/ale_linters/erlang/erlc.vim	/^function! ale_linters#erlang#erlc#Handle(buffer, lines) abort$/;"	f
ale_linters#erlang#syntaxerl#FeatureCheck	pack/plugins/start/w0rp-ale/ale_linters/erlang/syntaxerl.vim	/^function! ale_linters#erlang#syntaxerl#FeatureCheck(buffer) abort$/;"	f
ale_linters#erlang#syntaxerl#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/erlang/syntaxerl.vim	/^function! ale_linters#erlang#syntaxerl#GetCommand(buffer, output) abort$/;"	f
ale_linters#erlang#syntaxerl#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/erlang/syntaxerl.vim	/^function! ale_linters#erlang#syntaxerl#GetExecutable(buffer) abort$/;"	f
ale_linters#erlang#syntaxerl#Handle	pack/plugins/start/w0rp-ale/ale_linters/erlang/syntaxerl.vim	/^function! ale_linters#erlang#syntaxerl#Handle(buffer, lines) abort$/;"	f
ale_linters#fortran#gcc#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/fortran/gcc.vim	/^function! ale_linters#fortran#gcc#GetCommand(buffer) abort$/;"	f
ale_linters#fortran#gcc#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/fortran/gcc.vim	/^function! ale_linters#fortran#gcc#GetExecutable(buffer) abort$/;"	f
ale_linters#fortran#gcc#Handle	pack/plugins/start/w0rp-ale/ale_linters/fortran/gcc.vim	/^function! ale_linters#fortran#gcc#Handle(buffer, lines) abort$/;"	f
ale_linters#fuse#fusionlint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/fuse/fusionlint.vim	/^function! ale_linters#fuse#fusionlint#GetCommand(buffer) abort$/;"	f
ale_linters#fuse#fusionlint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/fuse/fusionlint.vim	/^function! ale_linters#fuse#fusionlint#GetExecutable(buffer) abort$/;"	f
ale_linters#fuse#fusionlint#Handle	pack/plugins/start/w0rp-ale/ale_linters/fuse/fusionlint.vim	/^function! ale_linters#fuse#fusionlint#Handle(buffer, lines) abort$/;"	f
ale_linters#glsl#glslang#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/glsl/glslang.vim	/^function! ale_linters#glsl#glslang#GetCommand(buffer) abort$/;"	f
ale_linters#glsl#glslang#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/glsl/glslang.vim	/^function! ale_linters#glsl#glslang#GetExecutable(buffer) abort$/;"	f
ale_linters#glsl#glslang#Handle	pack/plugins/start/w0rp-ale/ale_linters/glsl/glslang.vim	/^function! ale_linters#glsl#glslang#Handle(buffer, lines) abort$/;"	f
ale_linters#go#gobuild#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/go/gobuild.vim	/^function! ale_linters#go#gobuild#GetCommand(buffer, goenv_output) abort$/;"	f
ale_linters#go#gobuild#GetMatches	pack/plugins/start/w0rp-ale/ale_linters/go/gobuild.vim	/^function! ale_linters#go#gobuild#GetMatches(lines) abort$/;"	f
ale_linters#go#gobuild#GoEnv	pack/plugins/start/w0rp-ale/ale_linters/go/gobuild.vim	/^function! ale_linters#go#gobuild#GoEnv(buffer) abort$/;"	f
ale_linters#go#gobuild#Handler	pack/plugins/start/w0rp-ale/ale_linters/go/gobuild.vim	/^function! ale_linters#go#gobuild#Handler(buffer, lines) abort$/;"	f
ale_linters#go#gometalinter#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/go/gometalinter.vim	/^function! ale_linters#go#gometalinter#GetCommand(buffer) abort$/;"	f
ale_linters#go#gometalinter#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/go/gometalinter.vim	/^function! ale_linters#go#gometalinter#GetExecutable(buffer) abort$/;"	f
ale_linters#go#gometalinter#GetMatches	pack/plugins/start/w0rp-ale/ale_linters/go/gometalinter.vim	/^function! ale_linters#go#gometalinter#GetMatches(lines) abort$/;"	f
ale_linters#go#gometalinter#Handler	pack/plugins/start/w0rp-ale/ale_linters/go/gometalinter.vim	/^function! ale_linters#go#gometalinter#Handler(buffer, lines) abort$/;"	f
ale_linters#haml#hamllint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/haml/hamllint.vim	/^function! ale_linters#haml#hamllint#GetCommand(buffer) abort$/;"	f
ale_linters#haml#hamllint#Handle	pack/plugins/start/w0rp-ale/ale_linters/haml/hamllint.vim	/^function! ale_linters#haml#hamllint#Handle(buffer, lines) abort$/;"	f
ale_linters#handlebars#embertemplatelint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/handlebars/embertemplatelint.vim	/^function! ale_linters#handlebars#embertemplatelint#GetCommand(buffer) abort$/;"	f
ale_linters#handlebars#embertemplatelint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/handlebars/embertemplatelint.vim	/^function! ale_linters#handlebars#embertemplatelint#GetExecutable(buffer) abort$/;"	f
ale_linters#handlebars#embertemplatelint#Handle	pack/plugins/start/w0rp-ale/ale_linters/handlebars/embertemplatelint.vim	/^function! ale_linters#handlebars#embertemplatelint#Handle(buffer, lines) abort$/;"	f
ale_linters#haskell#hdevtools#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/haskell/hdevtools.vim	/^function! ale_linters#haskell#hdevtools#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#hdevtools#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/haskell/hdevtools.vim	/^function! ale_linters#haskell#hdevtools#GetExecutable(buffer) abort$/;"	f
ale_linters#haskell#hlint#Handle	pack/plugins/start/w0rp-ale/ale_linters/haskell/hlint.vim	/^function! ale_linters#haskell#hlint#Handle(buffer, lines) abort$/;"	f
ale_linters#haskell#stack_build#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/haskell/stack_build.vim	/^function! ale_linters#haskell#stack_build#GetCommand(buffer) abort$/;"	f
ale_linters#html#htmlhint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/html/htmlhint.vim	/^function! ale_linters#html#htmlhint#GetCommand(buffer) abort$/;"	f
ale_linters#html#htmlhint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/html/htmlhint.vim	/^function! ale_linters#html#htmlhint#GetExecutable(buffer) abort$/;"	f
ale_linters#html#tidy#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/html/tidy.vim	/^function! ale_linters#html#tidy#GetCommand(buffer) abort$/;"	f
ale_linters#html#tidy#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/html/tidy.vim	/^function! ale_linters#html#tidy#GetExecutable(buffer) abort$/;"	f
ale_linters#html#tidy#Handle	pack/plugins/start/w0rp-ale/ale_linters/html/tidy.vim	/^function! ale_linters#html#tidy#Handle(buffer, lines) abort$/;"	f
ale_linters#idris#idris#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/idris/idris.vim	/^function! ale_linters#idris#idris#GetCommand(buffer) abort$/;"	f
ale_linters#idris#idris#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/idris/idris.vim	/^function! ale_linters#idris#idris#GetExecutable(buffer) abort$/;"	f
ale_linters#idris#idris#Handle	pack/plugins/start/w0rp-ale/ale_linters/idris/idris.vim	/^function! ale_linters#idris#idris#Handle(buffer, lines) abort$/;"	f
ale_linters#java#checkstyle#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/java/checkstyle.vim	/^function! ale_linters#java#checkstyle#GetCommand(buffer) abort$/;"	f
ale_linters#java#checkstyle#Handle	pack/plugins/start/w0rp-ale/ale_linters/java/checkstyle.vim	/^function! ale_linters#java#checkstyle#Handle(buffer, lines) abort$/;"	f
ale_linters#java#javac#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/java/javac.vim	/^function! ale_linters#java#javac#GetCommand(buffer, import_paths) abort$/;"	f
ale_linters#java#javac#GetImportPaths	pack/plugins/start/w0rp-ale/ale_linters/java/javac.vim	/^function! ale_linters#java#javac#GetImportPaths(buffer) abort$/;"	f
ale_linters#java#javac#Handle	pack/plugins/start/w0rp-ale/ale_linters/java/javac.vim	/^function! ale_linters#java#javac#Handle(buffer, lines) abort$/;"	f
ale_linters#javascript#flow#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/javascript/flow.vim	/^function! ale_linters#javascript#flow#GetCommand(buffer, version_lines) abort$/;"	f
ale_linters#javascript#flow#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/javascript/flow.vim	/^function! ale_linters#javascript#flow#GetExecutable(buffer) abort$/;"	f
ale_linters#javascript#flow#Handle	pack/plugins/start/w0rp-ale/ale_linters/javascript/flow.vim	/^function! ale_linters#javascript#flow#Handle(buffer, lines) abort$/;"	f
ale_linters#javascript#flow#VersionCheck	pack/plugins/start/w0rp-ale/ale_linters/javascript/flow.vim	/^function! ale_linters#javascript#flow#VersionCheck(buffer) abort$/;"	f
ale_linters#javascript#jscs#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/javascript/jscs.vim	/^function! ale_linters#javascript#jscs#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#jscs#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/javascript/jscs.vim	/^function! ale_linters#javascript#jscs#GetExecutable(buffer) abort$/;"	f
ale_linters#javascript#jscs#Handle	pack/plugins/start/w0rp-ale/ale_linters/javascript/jscs.vim	/^function! ale_linters#javascript#jscs#Handle(buffer, lines) abort$/;"	f
ale_linters#javascript#jshint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/javascript/jshint.vim	/^function! ale_linters#javascript#jshint#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#jshint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/javascript/jshint.vim	/^function! ale_linters#javascript#jshint#GetExecutable(buffer) abort$/;"	f
ale_linters#javascript#standard#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/javascript/standard.vim	/^function! ale_linters#javascript#standard#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#standard#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/javascript/standard.vim	/^function! ale_linters#javascript#standard#GetExecutable(buffer) abort$/;"	f
ale_linters#javascript#xo#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/javascript/xo.vim	/^function! ale_linters#javascript#xo#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#xo#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/javascript/xo.vim	/^function! ale_linters#javascript#xo#GetExecutable(buffer) abort$/;"	f
ale_linters#json#jsonlint#Handle	pack/plugins/start/w0rp-ale/ale_linters/json/jsonlint.vim	/^function! ale_linters#json#jsonlint#Handle(buffer, lines) abort$/;"	f
ale_linters#kotlin#kotlinc#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^function! ale_linters#kotlin#kotlinc#GetCommand(buffer, import_paths) abort$/;"	f
ale_linters#kotlin#kotlinc#GetImportPaths	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^function! ale_linters#kotlin#kotlinc#GetImportPaths(buffer) abort$/;"	f
ale_linters#kotlin#kotlinc#Handle	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^function! ale_linters#kotlin#kotlinc#Handle(buffer, lines) abort$/;"	f
ale_linters#kotlin#ktlint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/kotlin/ktlint.vim	/^function! ale_linters#kotlin#ktlint#GetCommand(buffer) abort$/;"	f
ale_linters#kotlin#ktlint#Handle	pack/plugins/start/w0rp-ale/ale_linters/kotlin/ktlint.vim	/^function! ale_linters#kotlin#ktlint#Handle(buffer, lines) abort$/;"	f
ale_linters#less#lessc#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/less/lessc.vim	/^function! ale_linters#less#lessc#GetCommand(buffer) abort$/;"	f
ale_linters#less#lessc#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/less/lessc.vim	/^function! ale_linters#less#lessc#GetExecutable(buffer) abort$/;"	f
ale_linters#less#lessc#Handle	pack/plugins/start/w0rp-ale/ale_linters/less/lessc.vim	/^function! ale_linters#less#lessc#Handle(buffer, lines) abort$/;"	f
ale_linters#less#stylelint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/less/stylelint.vim	/^function! ale_linters#less#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#less#stylelint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/less/stylelint.vim	/^function! ale_linters#less#stylelint#GetExecutable(buffer) abort$/;"	f
ale_linters#llvm#llc#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/llvm/llc.vim	/^function! ale_linters#llvm#llc#GetCommand(buffer) abort$/;"	f
ale_linters#llvm#llc#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/llvm/llc.vim	/^function! ale_linters#llvm#llc#GetExecutable(buffer) abort$/;"	f
ale_linters#llvm#llc#HandleErrors	pack/plugins/start/w0rp-ale/ale_linters/llvm/llc.vim	/^function! ale_linters#llvm#llc#HandleErrors(buffer, lines) abort$/;"	f
ale_linters#lua#luacheck#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/lua/luacheck.vim	/^function! ale_linters#lua#luacheck#GetCommand(buffer) abort$/;"	f
ale_linters#lua#luacheck#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/lua/luacheck.vim	/^function! ale_linters#lua#luacheck#GetExecutable(buffer) abort$/;"	f
ale_linters#lua#luacheck#Handle	pack/plugins/start/w0rp-ale/ale_linters/lua/luacheck.vim	/^function! ale_linters#lua#luacheck#Handle(buffer, lines) abort$/;"	f
ale_linters#make#checkmake#Handle	pack/plugins/start/w0rp-ale/ale_linters/make/checkmake.vim	/^function! ale_linters#make#checkmake#Handle(buffer, lines) abort$/;"	f
ale_linters#markdown#mdl#Handle	pack/plugins/start/w0rp-ale/ale_linters/markdown/mdl.vim	/^function! ale_linters#markdown#mdl#Handle(buffer, lines) abort$/;"	f
ale_linters#markdown#remark_lint#Handle	pack/plugins/start/w0rp-ale/ale_linters/markdown/remark_lint.vim	/^function! ale_linters#markdown#remark_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#matlab#mlint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/matlab/mlint.vim	/^function! ale_linters#matlab#mlint#GetCommand(buffer) abort$/;"	f
ale_linters#matlab#mlint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/matlab/mlint.vim	/^function! ale_linters#matlab#mlint#GetExecutable(buffer) abort$/;"	f
ale_linters#matlab#mlint#Handle	pack/plugins/start/w0rp-ale/ale_linters/matlab/mlint.vim	/^function! ale_linters#matlab#mlint#Handle(buffer, lines) abort$/;"	f
ale_linters#nim#nimcheck#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/nim/nimcheck.vim	/^function! ale_linters#nim#nimcheck#GetCommand(buffer) abort$/;"	f
ale_linters#nim#nimcheck#Handle	pack/plugins/start/w0rp-ale/ale_linters/nim/nimcheck.vim	/^function! ale_linters#nim#nimcheck#Handle(buffer, lines) abort$/;"	f
ale_linters#nix#nix#Handle	pack/plugins/start/w0rp-ale/ale_linters/nix/nix.vim	/^function! ale_linters#nix#nix#Handle(buffer, lines) abort$/;"	f
ale_linters#objc#clang#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/objc/clang.vim	/^function! ale_linters#objc#clang#GetCommand(buffer) abort$/;"	f
ale_linters#objcpp#clang#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/objcpp/clang.vim	/^function! ale_linters#objcpp#clang#GetCommand(buffer) abort$/;"	f
ale_linters#ocaml#merlin#Handle	pack/plugins/start/w0rp-ale/ale_linters/ocaml/merlin.vim	/^function! ale_linters#ocaml#merlin#Handle(buffer, lines) abort$/;"	f
ale_linters#perl#perl#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/perl/perl.vim	/^function! ale_linters#perl#perl#GetCommand(buffer) abort$/;"	f
ale_linters#perl#perl#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/perl/perl.vim	/^function! ale_linters#perl#perl#GetExecutable(buffer) abort$/;"	f
ale_linters#perl#perl#Handle	pack/plugins/start/w0rp-ale/ale_linters/perl/perl.vim	/^function! ale_linters#perl#perl#Handle(buffer, lines) abort$/;"	f
ale_linters#perl#perlcritic#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/perl/perlcritic.vim	/^function! ale_linters#perl#perlcritic#GetCommand(buffer) abort$/;"	f
ale_linters#perl#perlcritic#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/perl/perlcritic.vim	/^function! ale_linters#perl#perlcritic#GetExecutable(buffer) abort$/;"	f
ale_linters#perl#perlcritic#GetProfile	pack/plugins/start/w0rp-ale/ale_linters/perl/perlcritic.vim	/^function! ale_linters#perl#perlcritic#GetProfile(buffer) abort$/;"	f
ale_linters#perl#perlcritic#Handle	pack/plugins/start/w0rp-ale/ale_linters/perl/perlcritic.vim	/^function! ale_linters#perl#perlcritic#Handle(buffer, lines) abort$/;"	f
ale_linters#php#hack#Handle	pack/plugins/start/w0rp-ale/ale_linters/php/hack.vim	/^function! ale_linters#php#hack#Handle(buffer, lines) abort$/;"	f
ale_linters#php#langserver#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/php/langserver.vim	/^function! ale_linters#php#langserver#GetCommand(buffer) abort$/;"	f
ale_linters#php#langserver#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/php/langserver.vim	/^function! ale_linters#php#langserver#GetExecutable(buffer) abort$/;"	f
ale_linters#php#langserver#GetLanguage	pack/plugins/start/w0rp-ale/ale_linters/php/langserver.vim	/^function! ale_linters#php#langserver#GetLanguage(buffer) abort$/;"	f
ale_linters#php#langserver#GetProjectRoot	pack/plugins/start/w0rp-ale/ale_linters/php/langserver.vim	/^function! ale_linters#php#langserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#php#phan#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/php/phan.vim	/^function! ale_linters#php#phan#GetCommand(buffer) abort$/;"	f
ale_linters#php#phan#Handle	pack/plugins/start/w0rp-ale/ale_linters/php/phan.vim	/^function! ale_linters#php#phan#Handle(buffer, lines) abort$/;"	f
ale_linters#php#php#Handle	pack/plugins/start/w0rp-ale/ale_linters/php/php.vim	/^function! ale_linters#php#php#Handle(buffer, lines) abort$/;"	f
ale_linters#php#phpcs#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/php/phpcs.vim	/^function! ale_linters#php#phpcs#GetCommand(buffer) abort$/;"	f
ale_linters#php#phpcs#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/php/phpcs.vim	/^function! ale_linters#php#phpcs#GetExecutable(buffer) abort$/;"	f
ale_linters#php#phpcs#Handle	pack/plugins/start/w0rp-ale/ale_linters/php/phpcs.vim	/^function! ale_linters#php#phpcs#Handle(buffer, lines) abort$/;"	f
ale_linters#php#phpmd#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/php/phpmd.vim	/^function! ale_linters#php#phpmd#GetCommand(buffer) abort$/;"	f
ale_linters#php#phpmd#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/php/phpmd.vim	/^function! ale_linters#php#phpmd#GetExecutable(buffer) abort$/;"	f
ale_linters#php#phpmd#Handle	pack/plugins/start/w0rp-ale/ale_linters/php/phpmd.vim	/^function! ale_linters#php#phpmd#Handle(buffer, lines) abort$/;"	f
ale_linters#php#phpstan#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/php/phpstan.vim	/^function! ale_linters#php#phpstan#GetCommand(buffer) abort$/;"	f
ale_linters#php#phpstan#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/php/phpstan.vim	/^function! ale_linters#php#phpstan#GetExecutable(buffer) abort$/;"	f
ale_linters#php#phpstan#Handle	pack/plugins/start/w0rp-ale/ale_linters/php/phpstan.vim	/^function! ale_linters#php#phpstan#Handle(buffer, lines) abort$/;"	f
ale_linters#proto#protoc_gen_lint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/proto/protoc_gen_lint.vim	/^function! ale_linters#proto#protoc_gen_lint#GetCommand(buffer) abort$/;"	f
ale_linters#pug#puglint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/pug/puglint.vim	/^function! ale_linters#pug#puglint#GetCommand(buffer) abort$/;"	f
ale_linters#pug#puglint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/pug/puglint.vim	/^function! ale_linters#pug#puglint#GetExecutable(buffer) abort$/;"	f
ale_linters#puppet#puppet#Handle	pack/plugins/start/w0rp-ale/ale_linters/puppet/puppet.vim	/^function! ale_linters#puppet#puppet#Handle(buffer, lines) abort$/;"	f
ale_linters#puppet#puppetlint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/puppet/puppetlint.vim	/^function! ale_linters#puppet#puppetlint#GetCommand(buffer) abort$/;"	f
ale_linters#puppet#puppetlint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/puppet/puppetlint.vim	/^function! ale_linters#puppet#puppetlint#GetExecutable(buffer) abort$/;"	f
ale_linters#python#flake8#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#GetCommand(buffer, version_output) abort$/;"	f
ale_linters#python#flake8#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#GetExecutable(buffer) abort$/;"	f
ale_linters#python#flake8#Handle	pack/plugins/start/w0rp-ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#Handle(buffer, lines) abort$/;"	f
ale_linters#python#flake8#VersionCheck	pack/plugins/start/w0rp-ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#VersionCheck(buffer) abort$/;"	f
ale_linters#python#mypy#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#GetCommand(buffer) abort$/;"	f
ale_linters#python#mypy#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#GetExecutable(buffer) abort$/;"	f
ale_linters#python#mypy#Handle	pack/plugins/start/w0rp-ale/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pycodestyle#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/python/pycodestyle.vim	/^function! ale_linters#python#pycodestyle#GetCommand(buffer) abort$/;"	f
ale_linters#python#pycodestyle#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/python/pycodestyle.vim	/^function! ale_linters#python#pycodestyle#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pycodestyle#Handle	pack/plugins/start/w0rp-ale/ale_linters/python/pycodestyle.vim	/^function! ale_linters#python#pycodestyle#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pylint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#GetCommand(buffer) abort$/;"	f
ale_linters#python#pylint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pylint#Handle	pack/plugins/start/w0rp-ale/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pyls#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/python/pyls.vim	/^function! ale_linters#python#pyls#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pyls#GetLanguage	pack/plugins/start/w0rp-ale/ale_linters/python/pyls.vim	/^function! ale_linters#python#pyls#GetLanguage(buffer) abort$/;"	f
ale_linters#r#lintr#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/r/lintr.vim	/^function! ale_linters#r#lintr#GetCommand(buffer) abort$/;"	f
ale_linters#reason#merlin#Handle	pack/plugins/start/w0rp-ale/ale_linters/reason/merlin.vim	/^function! ale_linters#reason#merlin#Handle(buffer, lines) abort$/;"	f
ale_linters#rst#rstcheck#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/rst/rstcheck.vim	/^function! ale_linters#rst#rstcheck#GetCommand(buffer) abort$/;"	f
ale_linters#rst#rstcheck#Handle	pack/plugins/start/w0rp-ale/ale_linters/rst/rstcheck.vim	/^function! ale_linters#rst#rstcheck#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#brakeman#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/ruby/brakeman.vim	/^function! ale_linters#ruby#brakeman#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#brakeman#Handle	pack/plugins/start/w0rp-ale/ale_linters/ruby/brakeman.vim	/^function! ale_linters#ruby#brakeman#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#rails_best_practices#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/ruby/rails_best_practices.vim	/^function! ale_linters#ruby#rails_best_practices#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#rails_best_practices#Handle	pack/plugins/start/w0rp-ale/ale_linters/ruby/rails_best_practices.vim	/^function! ale_linters#ruby#rails_best_practices#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#reek#Handle	pack/plugins/start/w0rp-ale/ale_linters/ruby/reek.vim	/^function! ale_linters#ruby#reek#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#rubocop#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/ruby/rubocop.vim	/^function! ale_linters#ruby#rubocop#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#rubocop#GetType	pack/plugins/start/w0rp-ale/ale_linters/ruby/rubocop.vim	/^function! ale_linters#ruby#rubocop#GetType(severity) abort$/;"	f
ale_linters#ruby#rubocop#Handle	pack/plugins/start/w0rp-ale/ale_linters/ruby/rubocop.vim	/^function! ale_linters#ruby#rubocop#Handle(buffer, lines) abort$/;"	f
ale_linters#rust#cargo#GetCargoExecutable	pack/plugins/start/w0rp-ale/ale_linters/rust/cargo.vim	/^function! ale_linters#rust#cargo#GetCargoExecutable(bufnr) abort$/;"	f
ale_linters#rust#cargo#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/rust/cargo.vim	/^function! ale_linters#rust#cargo#GetCommand(buffer, version_output) abort$/;"	f
ale_linters#rust#cargo#VersionCheck	pack/plugins/start/w0rp-ale/ale_linters/rust/cargo.vim	/^function! ale_linters#rust#cargo#VersionCheck(buffer) abort$/;"	f
ale_linters#rust#rls#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/rust/rls.vim	/^function! ale_linters#rust#rls#GetCommand(buffer) abort$/;"	f
ale_linters#rust#rls#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/rust/rls.vim	/^function! ale_linters#rust#rls#GetExecutable(buffer) abort$/;"	f
ale_linters#rust#rls#GetLanguage	pack/plugins/start/w0rp-ale/ale_linters/rust/rls.vim	/^function! ale_linters#rust#rls#GetLanguage(buffer) abort$/;"	f
ale_linters#rust#rls#GetProjectRoot	pack/plugins/start/w0rp-ale/ale_linters/rust/rls.vim	/^function! ale_linters#rust#rls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#rust#rustc#RustcCommand	pack/plugins/start/w0rp-ale/ale_linters/rust/rustc.vim	/^function! ale_linters#rust#rustc#RustcCommand(buffer_number) abort$/;"	f
ale_linters#sass#stylelint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/sass/stylelint.vim	/^function! ale_linters#sass#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#sass#stylelint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/sass/stylelint.vim	/^function! ale_linters#sass#stylelint#GetExecutable(buffer) abort$/;"	f
ale_linters#scala#scalac#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/scala/scalac.vim	/^function! ale_linters#scala#scalac#GetCommand(buffer) abort$/;"	f
ale_linters#scala#scalac#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/scala/scalac.vim	/^function! ale_linters#scala#scalac#GetExecutable(buffer) abort$/;"	f
ale_linters#scala#scalac#Handle	pack/plugins/start/w0rp-ale/ale_linters/scala/scalac.vim	/^function! ale_linters#scala#scalac#Handle(buffer, lines) abort$/;"	f
ale_linters#scala#scalastyle#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/scala/scalastyle.vim	/^function! ale_linters#scala#scalastyle#GetCommand(buffer) abort$/;"	f
ale_linters#scala#scalastyle#Handle	pack/plugins/start/w0rp-ale/ale_linters/scala/scalastyle.vim	/^function! ale_linters#scala#scalastyle#Handle(buffer, lines) abort$/;"	f
ale_linters#scss#scsslint#Handle	pack/plugins/start/w0rp-ale/ale_linters/scss/scsslint.vim	/^function! ale_linters#scss#scsslint#Handle(buffer, lines) abort$/;"	f
ale_linters#scss#stylelint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/scss/stylelint.vim	/^function! ale_linters#scss#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#scss#stylelint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/scss/stylelint.vim	/^function! ale_linters#scss#stylelint#GetExecutable(buffer) abort$/;"	f
ale_linters#sh#shell#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/sh/shell.vim	/^function! ale_linters#sh#shell#GetCommand(buffer) abort$/;"	f
ale_linters#sh#shell#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/sh/shell.vim	/^function! ale_linters#sh#shell#GetExecutable(buffer) abort$/;"	f
ale_linters#sh#shell#Handle	pack/plugins/start/w0rp-ale/ale_linters/sh/shell.vim	/^function! ale_linters#sh#shell#Handle(buffer, lines) abort$/;"	f
ale_linters#sh#shellcheck#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/sh/shellcheck.vim	/^function! ale_linters#sh#shellcheck#GetCommand(buffer, version_output) abort$/;"	f
ale_linters#sh#shellcheck#GetDialectArgument	pack/plugins/start/w0rp-ale/ale_linters/sh/shellcheck.vim	/^function! ale_linters#sh#shellcheck#GetDialectArgument(buffer) abort$/;"	f
ale_linters#sh#shellcheck#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/sh/shellcheck.vim	/^function! ale_linters#sh#shellcheck#GetExecutable(buffer) abort$/;"	f
ale_linters#sh#shellcheck#Handle	pack/plugins/start/w0rp-ale/ale_linters/sh/shellcheck.vim	/^function! ale_linters#sh#shellcheck#Handle(buffer, lines) abort$/;"	f
ale_linters#sh#shellcheck#VersionCheck	pack/plugins/start/w0rp-ale/ale_linters/sh/shellcheck.vim	/^function! ale_linters#sh#shellcheck#VersionCheck(buffer) abort$/;"	f
ale_linters#slim#slimlint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/slim/slimlint.vim	/^function! ale_linters#slim#slimlint#GetCommand(buffer) abort$/;"	f
ale_linters#slim#slimlint#Handle	pack/plugins/start/w0rp-ale/ale_linters/slim/slimlint.vim	/^function! ale_linters#slim#slimlint#Handle(buffer, lines) abort$/;"	f
ale_linters#sml#smlnj_cm#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/sml/smlnj_cm.vim	/^function! ale_linters#sml#smlnj_cm#GetCommand(buffer) abort$/;"	f
ale_linters#spec#rpmlint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/spec/rpmlint.vim	/^function! ale_linters#spec#rpmlint#GetCommand(buffer) abort$/;"	f
ale_linters#spec#rpmlint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/spec/rpmlint.vim	/^function! ale_linters#spec#rpmlint#GetExecutable(buffer) abort$/;"	f
ale_linters#spec#rpmlint#Handle	pack/plugins/start/w0rp-ale/ale_linters/spec/rpmlint.vim	/^function! ale_linters#spec#rpmlint#Handle(buffer, lines) abort$/;"	f
ale_linters#sql#sqlint#Handle	pack/plugins/start/w0rp-ale/ale_linters/sql/sqlint.vim	/^function! ale_linters#sql#sqlint#Handle(buffer, lines) abort$/;"	f
ale_linters#stylus#stylelint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/stylus/stylelint.vim	/^function! ale_linters#stylus#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#stylus#stylelint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/stylus/stylelint.vim	/^function! ale_linters#stylus#stylelint#GetExecutable(buffer) abort$/;"	f
ale_linters#tcl#nagelfar#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/tcl/nagelfar.vim	/^function! ale_linters#tcl#nagelfar#GetCommand(buffer) abort$/;"	f
ale_linters#tcl#nagelfar#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/tcl/nagelfar.vim	/^function! ale_linters#tcl#nagelfar#GetExecutable(buffer) abort$/;"	f
ale_linters#tcl#nagelfar#Handle	pack/plugins/start/w0rp-ale/ale_linters/tcl/nagelfar.vim	/^function! ale_linters#tcl#nagelfar#Handle(buffer, lines) abort$/;"	f
ale_linters#terraform#tflint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/terraform/tflint.vim	/^function! ale_linters#terraform#tflint#GetCommand(buffer) abort$/;"	f
ale_linters#terraform#tflint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/terraform/tflint.vim	/^function! ale_linters#terraform#tflint#GetExecutable(buffer) abort$/;"	f
ale_linters#terraform#tflint#Handle	pack/plugins/start/w0rp-ale/ale_linters/terraform/tflint.vim	/^function! ale_linters#terraform#tflint#Handle(buffer, lines) abort$/;"	f
ale_linters#tex#chktex#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/tex/chktex.vim	/^function! ale_linters#tex#chktex#GetCommand(buffer) abort$/;"	f
ale_linters#tex#chktex#Handle	pack/plugins/start/w0rp-ale/ale_linters/tex/chktex.vim	/^function! ale_linters#tex#chktex#Handle(buffer, lines) abort$/;"	f
ale_linters#tex#lacheck#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/tex/lacheck.vim	/^function! ale_linters#tex#lacheck#GetCommand(buffer) abort$/;"	f
ale_linters#tex#lacheck#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/tex/lacheck.vim	/^function! ale_linters#tex#lacheck#GetExecutable(buffer) abort$/;"	f
ale_linters#tex#lacheck#Handle	pack/plugins/start/w0rp-ale/ale_linters/tex/lacheck.vim	/^function! ale_linters#tex#lacheck#Handle(buffer, lines) abort$/;"	f
ale_linters#thrift#thrift#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/thrift/thrift.vim	/^function! ale_linters#thrift#thrift#GetCommand(buffer) abort$/;"	f
ale_linters#thrift#thrift#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/thrift/thrift.vim	/^function! ale_linters#thrift#thrift#GetExecutable(buffer) abort$/;"	f
ale_linters#thrift#thrift#Handle	pack/plugins/start/w0rp-ale/ale_linters/thrift/thrift.vim	/^function! ale_linters#thrift#thrift#Handle(buffer, lines) abort$/;"	f
ale_linters#typescript#tslint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/typescript/tslint.vim	/^function! ale_linters#typescript#tslint#GetCommand(buffer) abort$/;"	f
ale_linters#typescript#tslint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/typescript/tslint.vim	/^function! ale_linters#typescript#tslint#GetExecutable(buffer) abort$/;"	f
ale_linters#typescript#tslint#Handle	pack/plugins/start/w0rp-ale/ale_linters/typescript/tslint.vim	/^function! ale_linters#typescript#tslint#Handle(buffer, lines) abort$/;"	f
ale_linters#typescript#tsserver#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/typescript/tsserver.vim	/^function! ale_linters#typescript#tsserver#GetExecutable(buffer) abort$/;"	f
ale_linters#typescript#tsserver#GetLanguage	pack/plugins/start/w0rp-ale/ale_linters/typescript/tsserver.vim	/^function! ale_linters#typescript#tsserver#GetLanguage(buffer) abort$/;"	f
ale_linters#typescript#tsserver#GetProjectRoot	pack/plugins/start/w0rp-ale/ale_linters/typescript/tsserver.vim	/^function! ale_linters#typescript#tsserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#typescript#typecheck#Handle	pack/plugins/start/w0rp-ale/ale_linters/typescript/typecheck.vim	/^function! ale_linters#typescript#typecheck#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#iverilog#Handle	pack/plugins/start/w0rp-ale/ale_linters/verilog/iverilog.vim	/^function! ale_linters#verilog#iverilog#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#verilator#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/verilog/verilator.vim	/^function! ale_linters#verilog#verilator#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#verilator#Handle	pack/plugins/start/w0rp-ale/ale_linters/verilog/verilator.vim	/^function! ale_linters#verilog#verilator#Handle(buffer, lines) abort$/;"	f
ale_linters#vim#vint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/vim/vint.vim	/^function! ale_linters#vim#vint#GetCommand(buffer, version_output) abort$/;"	f
ale_linters#vim#vint#Handle	pack/plugins/start/w0rp-ale/ale_linters/vim/vint.vim	/^function! ale_linters#vim#vint#Handle(buffer, lines) abort$/;"	f
ale_linters#vim#vint#VersionCommand	pack/plugins/start/w0rp-ale/ale_linters/vim/vint.vim	/^function! ale_linters#vim#vint#VersionCommand(buffer) abort$/;"	f
ale_linters#xml#xmllint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/xml/xmllint.vim	/^function! ale_linters#xml#xmllint#GetCommand(buffer) abort$/;"	f
ale_linters#xml#xmllint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/xml/xmllint.vim	/^function! ale_linters#xml#xmllint#GetExecutable(buffer) abort$/;"	f
ale_linters#xml#xmllint#Handle	pack/plugins/start/w0rp-ale/ale_linters/xml/xmllint.vim	/^function! ale_linters#xml#xmllint#Handle(buffer, lines) abort$/;"	f
ale_linters#yaml#swaglint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/yaml/swaglint.vim	/^function! ale_linters#yaml#swaglint#GetCommand(buffer) abort$/;"	f
ale_linters#yaml#swaglint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/yaml/swaglint.vim	/^function! ale_linters#yaml#swaglint#GetExecutable(buffer) abort$/;"	f
ale_linters#yaml#swaglint#Handle	pack/plugins/start/w0rp-ale/ale_linters/yaml/swaglint.vim	/^function! ale_linters#yaml#swaglint#Handle(buffer, lines) abort$/;"	f
ale_linters#yaml#yamllint#GetCommand	pack/plugins/start/w0rp-ale/ale_linters/yaml/yamllint.vim	/^function! ale_linters#yaml#yamllint#GetCommand(buffer) abort$/;"	f
ale_linters#yaml#yamllint#GetExecutable	pack/plugins/start/w0rp-ale/ale_linters/yaml/yamllint.vim	/^function! ale_linters#yaml#yamllint#GetExecutable(buffer) abort$/;"	f
ale_linters#yaml#yamllint#Handle	pack/plugins/start/w0rp-ale/ale_linters/yaml/yamllint.vim	/^function! ale_linters#yaml#yamllint#Handle(buffer, lines) abort$/;"	f
all	pack/plugins/start/fatih-vim-go/Makefile	/^all: install test lint$/;"	t
author	pack/plugins/start/fatih-vim-go/addon-info.json	/^  "author": "Fatih Arslan <fatih@arslan.io>",$/;"	s
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^let b:current_syntax = "go"$/;"	v
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/godefstack.vim	/^let b:current_syntax = "godefstack"$/;"	v
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/gohtmltmpl.vim	/^let b:current_syntax = "gohtmltmpl"$/;"	v
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/gotexttmpl.vim	/^let b:current_syntax = "gotexttmpl"$/;"	v
b:current_syntax	pack/plugins/start/fatih-vim-go/syntax/vimgo.vim	/^let b:current_syntax = "vimgo"$/;"	v
b:current_syntax	pack/plugins/start/w0rp-ale/syntax/ale-fix-suggest.vim	/^let b:current_syntax = 'ale-fix-suggest'$/;"	v
b:did_ftplugin	pack/plugins/start/fatih-vim-go/ftplugin/asm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	pack/plugins/start/fatih-vim-go/indent/go.vim	/^let b:did_indent = 1$/;"	v
b:qf_isLoc	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^let b:qf_isLoc = !empty(getloclist(0))$/;"	v
b:undo_ftplugin	pack/plugins/start/fatih-vim-go/ftplugin/asm.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^let b:undo_ftplugin = "setl fo< com< ofu<"$/;"	v
cA	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> cA :<C-U>Gcommit --amend --reuse-message=HEAD<CR>$/;"	m
cO	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> cO    :<C-U>exe <SID>Edit('tabedit',0,<SID>buffer().containing_co/;"	m
cP	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> cP    :<C-U>exe <SID>Edit('pedit',0,<SID>buffer().containing_comm/;"	m
cS	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> cS    :<C-U>exe <SID>Edit('vsplit',0,<SID>buffer().containing_com/;"	m
cS	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap cS  <Plug>CSurround$/;"	m
ca	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> ca :<C-U>Gcommit --amend<CR>$/;"	m
cbs.callback	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^  function cbs.callback(chan, msg) dict$/;"	f
cbs.exit_cb	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^  function cbs.exit_cb(job, exitval) dict$/;"	f
cbs.show_errors	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^  function cbs.show_errors(listtype) dict$/;"	f
cc	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> cc    :<C-U>exe <SID>Edit('edit',0,<SID>buffer().containing_commi/;"	m
cc	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> cc :<C-U>Gcommit<CR>$/;"	m
cgc	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^    nmap cgc <Plug>ChangeCommentary$/;"	m
check_errors	pack/plugins/start/w0rp-ale/test/script/custom-checks	/^check_errors() {$/;"	f
clean	pack/plugins/start/fatih-vim-go/Makefile	/^clean:$/;"	t
clearPack	get-plugins.go	/^func clearPack() {$/;"	f
co	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> co    :<C-U>exe <SID>Edit('split',0,<SID>buffer().containing_comm/;"	m
co	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^  nmap co =o$/;"	m
color	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^type color struct {$/;"	s
color-vader-output	pack/plugins/start/w0rp-ale/run-tests	/^function color-vader-output() {$/;"	f
colors	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^var colors = map[string]color{$/;"	v
colors_name	pack/colors/start/romainl-apprentice/colors/apprentice.vim	/^let colors_name = "apprentice"$/;"	v
colors_name	pack/colors/start/romainl-disciple/colors/disciple.vim	/^let colors_name = 'disciple'$/;"	v
cr	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^  nmap cr  <Plug>Coerce$/;"	m
cs	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap cs  <Plug>Csurround$/;"	m
ctrlp#decls#accept	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#accept(mode, str) abort$/;"	f
ctrlp#decls#cmd	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#cmd(mode, ...) abort$/;"	f
ctrlp#decls#enter	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#enter() abort$/;"	f
ctrlp#decls#exit	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#exit() abort$/;"	f
ctrlp#decls#init	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#init() abort$/;"	f
current_compiler	pack/plugins/start/fatih-vim-go/compiler/go.vim	/^let current_compiler = "go"$/;"	v
cva	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> cva :<C-U>Gcommit --amend --verbose<CR>$/;"	m
cvc	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> cvc :<C-U>Gcommit --verbose<CR>$/;"	m
dd	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> dd :<C-U>execute <SID>StageDiff('Gdiff')<CR>$/;"	m
description	pack/plugins/start/fatih-vim-go/addon-info.json	/^  "description": "Full featured Go (golang) support for Vim.",$/;"	s
dh	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> dh :<C-U>execute <SID>StageDiff('Gsdiff')<CR>$/;"	m
docker	pack/plugins/start/fatih-vim-go/Makefile	/^docker:$/;"	t
dp	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> dp :<C-U>execute <SID>StageDiffEdit()<CR>$/;"	m
ds	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> ds :<C-U>execute <SID>StageDiff('Gsdiff')<CR>$/;"	m
ds	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap ds  <Plug>Dsurround$/;"	m
dv	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> dv :<C-U>execute <SID>StageDiff('Gvdiff')<CR>$/;"	m
envlist	pack/plugins/start/w0rp-ale/test/command_callback/python_paths/namespace_package_tox/tox.ini	/^envlist =$/;"	k	section:tox
eunuch	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^augroup eunuch$/;"	a
exists	get-plugins.go	/^func exists(path string) (bool, error) {$/;"	f
filter-vader-output	pack/plugins/start/w0rp-ale/run-tests	/^function filter-vader-output() {$/;"	f
friendly_name	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^  let friendly_name = FriendlyName(test)$/;"	v
fugitive	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#buffer	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#can_diffoff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#can_diffoff(buf) abort$/;"	f
fugitive#cfile	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#cfile() abort$/;"	f
fugitive#cwindow	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#cwindow() abort$/;"	f
fugitive#detect	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#foldtext	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#git_commands	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_commands() abort$/;"	f
fugitive#git_version	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_version(...) abort$/;"	f
fugitive#head	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#reload_status	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#repo	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#statusline	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive_blame	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_foldtext	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_foldtext$/;"	a
fugitive_remove	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_status	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_statusline	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_statusline$/;"	a
fugitive_temp	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_temp$/;"	a
fzf#decls#cmd	pack/plugins/start/fatih-vim-go/autoload/fzf/decls.vim	/^function! fzf#decls#cmd(...) abort$/;"	f
g:	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^            let g:[newname] = g:[key]$/;"	v
g:	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^    let g:[l:full_name] = l:value$/;"	v
g:L	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^  let g:L = a:L$/;"	v
g:UltiSnipsSnippetDirectories	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^    let g:UltiSnipsSnippetDirectories += ["gosnippets\/UltiSnips"]$/;"	v
g:UltiSnipsSnippetDirectories	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^    let g:UltiSnipsSnippetDirectories = ["gosnippets\/UltiSnips"]$/;"	v
g:abolish_last_dict	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^  let g:abolish_last_dict = dict$/;"	v
g:abolish_save_file	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^    let g:abolish_save_file = expand("~\/.vim\/after\/plugin\/abolish.vim")$/;"	v
g:abolish_save_file	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^    let g:abolish_save_file = expand("~\/vimfiles\/after\/plugin\/abolish.vim")$/;"	v
g:ale#util#nul_file	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^        let g:ale#util#nul_file = 'nul'$/;"	v
g:ale#util#nul_file	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^    let g:ale#util#nul_file = '\/dev\/null'$/;"	v
g:ale_asm_gcc_options	pack/plugins/start/w0rp-ale/ale_linters/asm/gcc.vim	/^let g:ale_asm_gcc_options = get(g:, 'ale_asm_gcc_options', '-Wall')$/;"	v
g:ale_awk_gawk_executable	pack/plugins/start/w0rp-ale/ale_linters/awk/gawk.vim	/^let g:ale_awk_gawk_executable =$/;"	v
g:ale_awk_gawk_options	pack/plugins/start/w0rp-ale/ale_linters/awk/gawk.vim	/^let g:ale_awk_gawk_options =$/;"	v
g:ale_buffer_info	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^        let g:ale_buffer_info[a:buffer] = {$/;"	v
g:ale_buffer_info	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^        let g:ale_buffer_info[a:buffer].loclist = l:loclist$/;"	v
g:ale_buffer_info	pack/plugins/start/w0rp-ale/autoload/ale/statusline.vim	/^    let g:ale_buffer_info[a:buffer].count = l:count$/;"	v
g:ale_buffer_info	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_buffer_info = {}$/;"	v
g:ale_c_build_dir_names	pack/plugins/start/w0rp-ale/autoload/ale/c.vim	/^let g:ale_c_build_dir_names = get(g:, 'ale_c_build_dir_names', [$/;"	v
g:ale_chef_foodcritic_executable	pack/plugins/start/w0rp-ale/ale_linters/chef/foodcritic.vim	/^let g:ale_chef_foodcritic_executable = get(g:, 'ale_chef_foodcritic_executable', 'foodcritic')$/;"	v
g:ale_chef_foodcritic_options	pack/plugins/start/w0rp-ale/ale_linters/chef/foodcritic.vim	/^let g:ale_chef_foodcritic_options = get(g:, 'ale_chef_foodcritic_options', '')$/;"	v
g:ale_cmake_cmakelint_executable	pack/plugins/start/w0rp-ale/ale_linters/cmake/cmakelint.vim	/^let g:ale_cmake_cmakelint_executable =$/;"	v
g:ale_cmake_cmakelint_options	pack/plugins/start/w0rp-ale/ale_linters/cmake/cmakelint.vim	/^let g:ale_cmake_cmakelint_options =$/;"	v
g:ale_completion_enabled	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^    let g:ale_completion_enabled = 0$/;"	v
g:ale_completion_enabled	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^    let g:ale_completion_enabled = 1$/;"	v
g:ale_cs_mcs_options	pack/plugins/start/w0rp-ale/ale_linters/cs/mcs.vim	/^let g:ale_cs_mcs_options = get(g:, 'ale_cs_mcs_options', '')$/;"	v
g:ale_cs_mcsc_assemblies	pack/plugins/start/w0rp-ale/ale_linters/cs/mcsc.vim	/^let g:ale_cs_mcsc_assemblies = get(g:, 'ale_cs_mcsc_assemblies',[])$/;"	v
g:ale_cs_mcsc_assembly_path	pack/plugins/start/w0rp-ale/ale_linters/cs/mcsc.vim	/^let g:ale_cs_mcsc_assembly_path = get(g:, 'ale_cs_mcsc_assembly_path',[])$/;"	v
g:ale_cs_mcsc_options	pack/plugins/start/w0rp-ale/ale_linters/cs/mcsc.vim	/^let g:ale_cs_mcsc_options = get(g:, 'ale_cs_mcsc_options', '')$/;"	v
g:ale_cs_mcsc_source	pack/plugins/start/w0rp-ale/ale_linters/cs/mcsc.vim	/^let g:ale_cs_mcsc_source = get(g:, 'ale_cs_mcsc_source','.')$/;"	v
g:ale_echo_cursor	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_echo_cursor = get(g:, 'ale_echo_cursor', 1)$/;"	v
g:ale_echo_delay	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_echo_delay = get(g:, 'ale_echo_delay', 10)$/;"	v
g:ale_echo_msg_error_str	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_echo_msg_error_str = get(g:, 'ale_echo_msg_error_str', 'Error')$/;"	v
g:ale_echo_msg_info_str	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_echo_msg_info_str = get(g:, 'ale_echo_msg_info_str', 'Info')$/;"	v
g:ale_echo_msg_warning_str	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_echo_msg_warning_str = get(g:, 'ale_echo_msg_warning_str', 'Warning')$/;"	v
g:ale_emit_conflict_warnings	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_emit_conflict_warnings = get(g:, 'ale_emit_conflict_warnings', 1)$/;"	v
g:ale_enabled	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^    let g:ale_enabled = !get(g:, 'ale_enabled')$/;"	v
g:ale_enabled	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_enabled = get(g:, 'ale_enabled', 1)$/;"	v
g:ale_erlang_erlc_options	pack/plugins/start/w0rp-ale/ale_linters/erlang/erlc.vim	/^let g:ale_erlang_erlc_options = get(g:, 'ale_erlang_erlc_options', '')$/;"	v
g:ale_filetype_blacklist	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_filetype_blacklist = [$/;"	v
g:ale_fix_buffer_data	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^    let g:ale_fix_buffer_data = {}$/;"	v
g:ale_fix_buffer_data	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^    let g:ale_fix_buffer_data[a:buffer] = {$/;"	v
g:ale_fix_buffer_data	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^    let g:ale_fix_buffer_data[a:buffer].temporary_directory_list = []$/;"	v
g:ale_fixers	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_fixers = get(g:, 'ale_fixers', {})$/;"	v
g:ale_fortran_gcc_executable	pack/plugins/start/w0rp-ale/ale_linters/fortran/gcc.vim	/^    let g:ale_fortran_gcc_executable = 'gcc'$/;"	v
g:ale_fortran_gcc_options	pack/plugins/start/w0rp-ale/ale_linters/fortran/gcc.vim	/^    let g:ale_fortran_gcc_options = '-Wall'$/;"	v
g:ale_fortran_gcc_use_free_form	pack/plugins/start/w0rp-ale/ale_linters/fortran/gcc.vim	/^    let g:ale_fortran_gcc_use_free_form = 1$/;"	v
g:ale_fuse_fusionlint_executable	pack/plugins/start/w0rp-ale/ale_linters/fuse/fusionlint.vim	/^let g:ale_fuse_fusionlint_executable =$/;"	v
g:ale_fuse_fusionlint_options	pack/plugins/start/w0rp-ale/ale_linters/fuse/fusionlint.vim	/^let g:ale_fuse_fusionlint_options =$/;"	v
g:ale_glsl_glslang_executable	pack/plugins/start/w0rp-ale/ale_linters/glsl/glslang.vim	/^let g:ale_glsl_glslang_executable =$/;"	v
g:ale_glsl_glslang_options	pack/plugins/start/w0rp-ale/ale_linters/glsl/glslang.vim	/^let g:ale_glsl_glslang_options = get(g:, 'ale_glsl_glslang_options', '')$/;"	v
g:ale_has_override	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^let g:ale_has_override = get(g:, 'ale_has_override', {})$/;"	v
g:ale_history_enabled	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_history_enabled = get(g:, 'ale_history_enabled', 1)$/;"	v
g:ale_history_log_output	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_history_log_output = get(g:, 'ale_history_log_output', 1)$/;"	v
g:ale_html_tidy_executable	pack/plugins/start/w0rp-ale/ale_linters/html/tidy.vim	/^let g:ale_html_tidy_executable = get(g:, 'ale_html_tidy_executable', 'tidy')$/;"	v
g:ale_html_tidy_options	pack/plugins/start/w0rp-ale/ale_linters/html/tidy.vim	/^let g:ale_html_tidy_options = get(g:, 'ale_html_tidy_options', s:default_options)$/;"	v
g:ale_java_checkstyle_options	pack/plugins/start/w0rp-ale/ale_linters/java/checkstyle.vim	/^    let g:ale_java_checkstyle_options = '-c \/google_checks.xml'$/;"	v
g:ale_java_javac_classpath	pack/plugins/start/w0rp-ale/ale_linters/java/javac.vim	/^let g:ale_java_javac_classpath = get(g:, 'ale_java_javac_classpath', '')$/;"	v
g:ale_java_javac_options	pack/plugins/start/w0rp-ale/ale_linters/java/javac.vim	/^let g:ale_java_javac_options = get(g:, 'ale_java_javac_options', '')$/;"	v
g:ale_keep_list_window_open	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_keep_list_window_open = get(g:, 'ale_keep_list_window_open', 0)$/;"	v
g:ale_kotlin_kotlinc_classpath	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_classpath = get(g:, 'ale_kotlin_kotlinc_classpath', '')$/;"	v
g:ale_kotlin_kotlinc_config_file	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_config_file = get(g:, 'ale_kotlin_kotlinc_config_file', '.ale_kotlinc_c/;"	v
g:ale_kotlin_kotlinc_enable_config	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_enable_config = get(g:, 'ale_kotlin_kotlinc_enable_config', 0)$/;"	v
g:ale_kotlin_kotlinc_module_filename	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_module_filename = get(g:, 'ale_kotlin_kotlinc_module_filename', 'module/;"	v
g:ale_kotlin_kotlinc_options	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_options = get(g:, 'ale_kotlin_kotlinc_options', '')$/;"	v
g:ale_kotlin_kotlinc_sourcepath	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_sourcepath = get(g:, 'ale_kotlin_kotlinc_sourcepath', '')$/;"	v
g:ale_kotlin_kotlinc_use_module_file	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_use_module_file = get(g:, 'ale_kotlin_kotlinc_use_module_file', 0)$/;"	v
g:ale_lint_delay	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_lint_delay = get(g:, 'ale_lint_delay', 200)$/;"	v
g:ale_lint_on_enter	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_lint_on_enter = get(g:, 'ale_lint_on_enter', 1)$/;"	v
g:ale_lint_on_filetype_changed	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_lint_on_filetype_changed = get(g:, 'ale_lint_on_filetype_changed', 1)$/;"	v
g:ale_lint_on_insert_leave	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_lint_on_insert_leave = get(g:, 'ale_lint_on_insert_leave', 0)$/;"	v
g:ale_lint_on_save	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_lint_on_save = get(g:, 'ale_lint_on_save', 1)$/;"	v
g:ale_lint_on_text_changed	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_lint_on_text_changed = get(g:, 'ale_lint_on_text_changed', 'always')$/;"	v
g:ale_linter_aliases	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_linter_aliases = get(g:, 'ale_linter_aliases', {})$/;"	v
g:ale_lsp_next_message_id	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^        let g:ale_lsp_next_message_id = 1$/;"	v
g:ale_lsp_next_message_id	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^    let g:ale_lsp_next_message_id += 1$/;"	v
g:ale_lsp_next_message_id	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^let g:ale_lsp_next_message_id = 1$/;"	v
g:ale_lsp_next_version_id	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^        let g:ale_lsp_next_version_id = 1$/;"	v
g:ale_lsp_next_version_id	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^    let g:ale_lsp_next_version_id += 1$/;"	v
g:ale_lsp_next_version_id	pack/plugins/start/w0rp-ale/autoload/ale/lsp/message.vim	/^let g:ale_lsp_next_version_id = 1$/;"	v
g:ale_lua_luacheck_executable	pack/plugins/start/w0rp-ale/ale_linters/lua/luacheck.vim	/^let g:ale_lua_luacheck_executable =$/;"	v
g:ale_lua_luacheck_options	pack/plugins/start/w0rp-ale/ale_linters/lua/luacheck.vim	/^let g:ale_lua_luacheck_options =$/;"	v
g:ale_matlab_mlint_executable	pack/plugins/start/w0rp-ale/ale_linters/matlab/mlint.vim	/^let g:ale_matlab_mlint_executable =$/;"	v
g:ale_max_buffer_history_size	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_max_buffer_history_size = get(g:, 'ale_max_buffer_history_size', 20)$/;"	v
g:ale_max_signs	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_max_signs = get(g:, 'ale_max_signs', -1)$/;"	v
g:ale_objc_clang_options	pack/plugins/start/w0rp-ale/ale_linters/objc/clang.vim	/^    let g:ale_objc_clang_options = '-std=c11 -Wall'$/;"	v
g:ale_objcpp_clang_options	pack/plugins/start/w0rp-ale/ale_linters/objcpp/clang.vim	/^    let g:ale_objcpp_clang_options = '-std=c++14 -Wall'$/;"	v
g:ale_open_list	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_open_list = get(g:, 'ale_open_list', 0)$/;"	v
g:ale_perl_perl_executable	pack/plugins/start/w0rp-ale/ale_linters/perl/perl.vim	/^let g:ale_perl_perl_executable =$/;"	v
g:ale_perl_perl_options	pack/plugins/start/w0rp-ale/ale_linters/perl/perl.vim	/^let g:ale_perl_perl_options =$/;"	v
g:ale_perl_perlcritic_executable	pack/plugins/start/w0rp-ale/ale_linters/perl/perlcritic.vim	/^let g:ale_perl_perlcritic_executable =$/;"	v
g:ale_perl_perlcritic_options	pack/plugins/start/w0rp-ale/ale_linters/perl/perlcritic.vim	/^let g:ale_perl_perlcritic_options =$/;"	v
g:ale_perl_perlcritic_profile	pack/plugins/start/w0rp-ale/ale_linters/perl/perlcritic.vim	/^let g:ale_perl_perlcritic_profile =$/;"	v
g:ale_perl_perlcritic_showrules	pack/plugins/start/w0rp-ale/ale_linters/perl/perlcritic.vim	/^let g:ale_perl_perlcritic_showrules =$/;"	v
g:ale_php_phan_minimum_severity	pack/plugins/start/w0rp-ale/ale_linters/php/phan.vim	/^let g:ale_php_phan_minimum_severity = get(g:, 'ale_php_phan_minimum_severity', 0)$/;"	v
g:ale_php_phpcs_standard	pack/plugins/start/w0rp-ale/ale_linters/php/phpcs.vim	/^let g:ale_php_phpcs_standard = get(g:, 'ale_php_phpcs_standard', '')$/;"	v
g:ale_php_phpmd_executable	pack/plugins/start/w0rp-ale/ale_linters/php/phpmd.vim	/^let g:ale_php_phpmd_executable = get(g:, 'ale_php_phpmd_executable', 'phpmd')$/;"	v
g:ale_php_phpmd_ruleset	pack/plugins/start/w0rp-ale/ale_linters/php/phpmd.vim	/^let g:ale_php_phpmd_ruleset = get(g:, 'ale_php_phpmd_ruleset', 'cleancode,codesize,controversial/;"	v
g:ale_php_phpstan_configuration	pack/plugins/start/w0rp-ale/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_configuration = get(g:, 'ale_php_phpstan_configuration', '')$/;"	v
g:ale_php_phpstan_executable	pack/plugins/start/w0rp-ale/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_executable = get(g:, 'ale_php_phpstan_executable', 'phpstan')$/;"	v
g:ale_php_phpstan_level	pack/plugins/start/w0rp-ale/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_level = get(g:, 'ale_php_phpstan_level', '4')$/;"	v
g:ale_puppet_puppetlint_executable	pack/plugins/start/w0rp-ale/ale_linters/puppet/puppetlint.vim	/^let g:ale_puppet_puppetlint_executable =$/;"	v
g:ale_puppet_puppetlint_executable	pack/plugins/start/w0rp-ale/autoload/ale/fixers/puppetlint.vim	/^    let g:ale_puppet_puppetlint_executable = 'puppet-lint'$/;"	v
g:ale_puppet_puppetlint_options	pack/plugins/start/w0rp-ale/ale_linters/puppet/puppetlint.vim	/^let g:ale_puppet_puppetlint_options =$/;"	v
g:ale_puppet_puppetlint_options	pack/plugins/start/w0rp-ale/autoload/ale/fixers/puppetlint.vim	/^    let g:ale_puppet_puppetlint_options = ''$/;"	v
g:ale_python_flake8_executable	pack/plugins/start/w0rp-ale/ale_linters/python/flake8.vim	/^let g:ale_python_flake8_executable =$/;"	v
g:ale_python_flake8_options	pack/plugins/start/w0rp-ale/ale_linters/python/flake8.vim	/^let g:ale_python_flake8_options =$/;"	v
g:ale_python_flake8_use_global	pack/plugins/start/w0rp-ale/ale_linters/python/flake8.vim	/^let g:ale_python_flake8_use_global = get(g:, 'ale_python_flake8_use_global', 0)$/;"	v
g:ale_python_mypy_executable	pack/plugins/start/w0rp-ale/ale_linters/python/mypy.vim	/^let g:ale_python_mypy_executable =$/;"	v
g:ale_python_mypy_options	pack/plugins/start/w0rp-ale/ale_linters/python/mypy.vim	/^let g:ale_python_mypy_options = get(g:, 'ale_python_mypy_options', '')$/;"	v
g:ale_python_mypy_use_global	pack/plugins/start/w0rp-ale/ale_linters/python/mypy.vim	/^let g:ale_python_mypy_use_global = get(g:, 'ale_python_mypy_use_global', 0)$/;"	v
g:ale_python_pylint_executable	pack/plugins/start/w0rp-ale/ale_linters/python/pylint.vim	/^let g:ale_python_pylint_executable =$/;"	v
g:ale_python_pylint_options	pack/plugins/start/w0rp-ale/ale_linters/python/pylint.vim	/^let g:ale_python_pylint_options =$/;"	v
g:ale_python_pylint_use_global	pack/plugins/start/w0rp-ale/ale_linters/python/pylint.vim	/^let g:ale_python_pylint_use_global = get(g:, 'ale_python_pylint_use_global', 0)$/;"	v
g:ale_r_lintr_options	pack/plugins/start/w0rp-ale/ale_linters/r/lintr.vim	/^let g:ale_r_lintr_options =$/;"	v
g:ale_ruby_brakeman_options	pack/plugins/start/w0rp-ale/ale_linters/ruby/brakeman.vim	/^let g:ale_ruby_brakeman_options =$/;"	v
g:ale_ruby_rails_best_practices_options	pack/plugins/start/w0rp-ale/ale_linters/ruby/rails_best_practices.vim	/^let g:ale_ruby_rails_best_practices_options =$/;"	v
g:ale_rust_ignore_error_codes	pack/plugins/start/w0rp-ale/autoload/ale/handlers/rust.vim	/^    let g:ale_rust_ignore_error_codes = []$/;"	v
g:ale_scala_scalastyle_options	pack/plugins/start/w0rp-ale/ale_linters/scala/scalastyle.vim	/^let g:ale_scala_scalastyle_options =$/;"	v
g:ale_scalastyle_config_loc	pack/plugins/start/w0rp-ale/ale_linters/scala/scalastyle.vim	/^let g:ale_scalastyle_config_loc =$/;"	v
g:ale_set_highlights	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_set_highlights = get(g:, 'ale_set_highlights', has('syntax'))$/;"	v
g:ale_set_lists_synchronously	pack/plugins/start/w0rp-ale/test/.config/nvim/init.vim	/^let g:ale_set_lists_synchronously = 1$/;"	v
g:ale_set_lists_synchronously	pack/plugins/start/w0rp-ale/test/vimrc	/^let g:ale_set_lists_synchronously = 1$/;"	v
g:ale_set_loclist	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_set_loclist = get(g:, 'ale_set_loclist', 1)$/;"	v
g:ale_set_quickfix	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_set_quickfix = get(g:, 'ale_set_quickfix', 0)$/;"	v
g:ale_set_signs	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_set_signs = get(g:, 'ale_set_signs', has('signs'))$/;"	v
g:ale_sh_shell_default_shell	pack/plugins/start/w0rp-ale/ale_linters/sh/shell.vim	/^        let g:ale_sh_shell_default_shell = 'bash'$/;"	v
g:ale_sh_shell_default_shell	pack/plugins/start/w0rp-ale/ale_linters/sh/shell.vim	/^    let g:ale_sh_shell_default_shell = fnamemodify($SHELL, ':t')$/;"	v
g:ale_sh_shell_default_shell	pack/plugins/start/w0rp-ale/ale_linters/sh/shell.vim	/^    let g:ale_sh_shell_default_shell = g:ale_linters_sh_shell_default_shell$/;"	v
g:ale_sh_shellcheck_exclusions	pack/plugins/start/w0rp-ale/ale_linters/sh/shellcheck.vim	/^let g:ale_sh_shellcheck_exclusions =$/;"	v
g:ale_sh_shellcheck_executable	pack/plugins/start/w0rp-ale/ale_linters/sh/shellcheck.vim	/^let g:ale_sh_shellcheck_executable =$/;"	v
g:ale_sh_shellcheck_options	pack/plugins/start/w0rp-ale/ale_linters/sh/shellcheck.vim	/^let g:ale_sh_shellcheck_options =$/;"	v
g:ale_sign_column_always	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_sign_column_always = get(g:, 'ale_sign_column_always', 0)$/;"	v
g:ale_sign_offset	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_sign_offset = get(g:, 'ale_sign_offset', 1000000)$/;"	v
g:ale_spec_rpmlint_executable	pack/plugins/start/w0rp-ale/ale_linters/spec/rpmlint.vim	/^let g:ale_spec_rpmlint_executable =$/;"	v
g:ale_spec_rpmlint_options	pack/plugins/start/w0rp-ale/ale_linters/spec/rpmlint.vim	/^let g:ale_spec_rpmlint_options =$/;"	v
g:ale_statusline_format	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_statusline_format = get(g:, 'ale_statusline_format',$/;"	v
g:ale_tex_chktex_executable	pack/plugins/start/w0rp-ale/ale_linters/tex/chktex.vim	/^let g:ale_tex_chktex_executable =$/;"	v
g:ale_tex_chktex_options	pack/plugins/start/w0rp-ale/ale_linters/tex/chktex.vim	/^let g:ale_tex_chktex_options =$/;"	v
g:ale_tex_lacheck_executable	pack/plugins/start/w0rp-ale/ale_linters/tex/lacheck.vim	/^let g:ale_tex_lacheck_executable =$/;"	v
g:ale_verilog_verilator_options	pack/plugins/start/w0rp-ale/ale_linters/verilog/verilator.vim	/^    let g:ale_verilog_verilator_options = ''$/;"	v
g:ale_vim_vint_show_style_issues	pack/plugins/start/w0rp-ale/ale_linters/vim/vint.vim	/^let g:ale_vim_vint_show_style_issues =$/;"	v
g:ale_virtualenv_dir_names	pack/plugins/start/w0rp-ale/autoload/ale/python.vim	/^let g:ale_virtualenv_dir_names = get(g:, 'ale_virtualenv_dir_names', [$/;"	v
g:ale_warn_about_trailing_whitespace	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:ale_warn_about_trailing_whitespace =$/;"	v
g:ale_xml_xmllint_executable	pack/plugins/start/w0rp-ale/ale_linters/xml/xmllint.vim	/^let g:ale_xml_xmllint_executable = get(g:, 'ale_xml_xmllint_executable', 'xmllint')$/;"	v
g:ale_xml_xmllint_options	pack/plugins/start/w0rp-ale/ale_linters/xml/xmllint.vim	/^let g:ale_xml_xmllint_options = get(g:, 'ale_xml_xmllint_options', '')$/;"	v
g:ale_yaml_yamllint_executable	pack/plugins/start/w0rp-ale/ale_linters/yaml/yamllint.vim	/^let g:ale_yaml_yamllint_executable =$/;"	v
g:ale_yaml_yamllint_options	pack/plugins/start/w0rp-ale/ale_linters/yaml/yamllint.vim	/^let g:ale_yaml_yamllint_options =$/;"	v
g:colors_name	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let g:colors_name = "PaperColor"$/;"	v
g:colors_name	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^let g:colors_name = "nofrils-acme"$/;"	v
g:colors_name	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^let g:colors_name = "nofrils-dark"$/;"	v
g:colors_name	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^let g:colors_name = "nofrils-light"$/;"	v
g:colors_name	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^let g:colors_name = "nofrils-sepia"$/;"	v
g:colors_name	pack/colors/start/tomasr-molokai/colors/molokai.vim	/^let g:colors_name="molokai"$/;"	v
g:ctrlp_ext_vars	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^  let g:ctrlp_ext_vars = [s:go_decls_var]$/;"	v
g:ctrlp_ext_vars	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^  let g:ctrlp_ext_vars = add(g:ctrlp_ext_vars, s:go_decls_var)$/;"	v
g:dir	pack/plugins/start/w0rp-ale/autoload/ale/test.vim	/^    let g:dir = getcwd() " no-custom-checks$/;"	v
g:fugitive_browse_handlers	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_browse_handlers = []$/;"	v
g:fugitive_git_executable	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:gitgutter_eager	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_eager = 0$/;"	v
g:gitgutter_enabled	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^  let g:gitgutter_enabled = 0$/;"	v
g:gitgutter_enabled	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^  let g:gitgutter_enabled = 1$/;"	v
g:gitgutter_highlight_lines	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^  let g:gitgutter_highlight_lines = 0$/;"	v
g:gitgutter_highlight_lines	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^  let g:gitgutter_highlight_lines = 1$/;"	v
g:gitgutter_realtime	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_realtime = 0$/;"	v
g:gitgutter_sign_column_always	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_column_always = 0$/;"	v
g:gitgutter_sign_column_always	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^  let g:gitgutter_sign_column_always=0$/;"	v
g:gitgutter_sign_column_always	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^  let g:gitgutter_sign_column_always=1$/;"	v
g:gitgutter_sign_removed_first_line	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_removed_first_line = '_^'$/;"	v
g:gitgutter_signs	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^  let g:gitgutter_signs = 0$/;"	v
g:gitgutter_signs	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^  let g:gitgutter_signs = 1$/;"	v
g:go_alternate_mode	pack/plugins/start/fatih-vim-go/autoload/go/alternate.vim	/^  let g:go_alternate_mode = "edit"$/;"	v
g:go_asmfmt_autosave	pack/plugins/start/fatih-vim-go/autoload/go/asmfmt.vim	/^    let g:go_asmfmt_autosave = 1$/;"	v
g:go_asmfmt_autosave	pack/plugins/start/fatih-vim-go/autoload/go/asmfmt.vim	/^  let g:go_asmfmt_autosave = 0$/;"	v
g:go_auto_sameids	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^    let g:go_auto_sameids = 0$/;"	v
g:go_auto_sameids	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^  let g:go_auto_sameids = 1$/;"	v
g:go_auto_type_info	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^    let g:go_auto_type_info = 0$/;"	v
g:go_auto_type_info	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^  let g:go_auto_type_info = 1$/;"	v
g:go_auto_type_info	vimrc	/^        let g:go_auto_type_info=0$/;"	v
g:go_autodetect_gopath	vimrc	/^        let g:go_autodetect_gopath=1$/;"	v
g:go_bin_path	vimrc	/^        let g:go_bin_path=$HOME.'\/go\/bin'$/;"	v
g:go_build_tags	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^      let g:go_build_tags = a:1$/;"	v
g:go_decls_mode	pack/plugins/start/fatih-vim-go/autoload/go/decls.vim	/^  let g:go_decls_mode = ''$/;"	v
g:go_def_mapping_enabled	vimrc	/^        let g:go_def_mapping_enabled=1$/;"	v
g:go_def_mode	vimrc	/^        let g:go_def_mode='guru'$/;"	v
g:go_def_reuse_buffer	vimrc	/^        let g:go_def_reuse_buffer=1$/;"	v
g:go_doc_command	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^  let g:go_doc_command = ["godoc"]$/;"	v
g:go_doc_command	vimrc	/^        let g:go_doc_command='godoc'$/;"	v
g:go_errcheck_bin	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_errcheck_bin = "errcheck"$/;"	v
g:go_fmt_autosave	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^    let g:go_fmt_autosave = 0$/;"	v
g:go_fmt_autosave	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_fmt_autosave = 1$/;"	v
g:go_fmt_autosave	vimrc	/^        let g:go_fmt_autosave=1$/;"	v
g:go_fmt_command	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_fmt_command = "gofmt"$/;"	v
g:go_fmt_command	vimrc	/^        let g:go_fmt_command='goimports'$/;"	v
g:go_fmt_experimental	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_fmt_experimental = 0$/;"	v
g:go_fmt_experimental	vimrc	/^        let g:go_fmt_experimental=1$/;"	v
g:go_fmt_fail_silently	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_fmt_fail_silently = 0$/;"	v
g:go_fmt_options	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^  let g:go_fmt_options = ''$/;"	v
g:go_golint_bin	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_golint_bin = "golint"$/;"	v
g:go_gorename_bin	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  let g:go_gorename_bin = "gorename"$/;"	v
g:go_gorename_prefill	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^    let g:go_gorename_prefill = 'expand("<cword>") =~# "^[A-Z]"' .$/;"	v
g:go_gotags_bin	pack/plugins/start/fatih-vim-go/ftplugin/go/tagbar.vim	/^  let g:go_gotags_bin = "gotags"$/;"	v
g:go_guru_scope	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^      let g:go_guru_scope = a:000$/;"	v
g:go_highlight_array_whitespace_error	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_array_whitespace_error = 0$/;"	v
g:go_highlight_array_whitespace_error	vimrc	/^        let g:go_highlight_array_whitespace_error=1$/;"	v
g:go_highlight_build_constraints	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_build_constraints = 0$/;"	v
g:go_highlight_build_constraints	vimrc	/^        let g:go_highlight_build_constraints=1$/;"	v
g:go_highlight_chan_whitespace_error	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_chan_whitespace_error = 0$/;"	v
g:go_highlight_chan_whitespace_error	vimrc	/^        let g:go_highlight_chan_whitespace_error=1$/;"	v
g:go_highlight_extra_types	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_extra_types = 0$/;"	v
g:go_highlight_extra_types	vimrc	/^        let g:go_highlight_extra_types=1$/;"	v
g:go_highlight_fields	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_fields = 0$/;"	v
g:go_highlight_fields	vimrc	/^        let g:go_highlight_fields=1$/;"	v
g:go_highlight_format_strings	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_format_strings = 1$/;"	v
g:go_highlight_format_strings	vimrc	/^        let g:go_highlight_format_strings=1$/;"	v
g:go_highlight_functions	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_functions = 0$/;"	v
g:go_highlight_functions	vimrc	/^        let g:go_highlight_functions=1$/;"	v
g:go_highlight_generate_tags	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_generate_tags = 0$/;"	v
g:go_highlight_generate_tags	vimrc	/^        let g:go_highlight_generate_tags=1$/;"	v
g:go_highlight_methods	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_methods = 0$/;"	v
g:go_highlight_methods	vimrc	/^        let g:go_highlight_methods=1$/;"	v
g:go_highlight_operators	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_operators = 0$/;"	v
g:go_highlight_operators	vimrc	/^        let g:go_highlight_operators=1$/;"	v
g:go_highlight_space_tab_error	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_space_tab_error = 0$/;"	v
g:go_highlight_space_tab_error	vimrc	/^        let g:go_highlight_space_tab_error=1$/;"	v
g:go_highlight_string_spellcheck	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_string_spellcheck = 1$/;"	v
g:go_highlight_string_spellcheck	vimrc	/^        let g:go_highlight_string_spellcheck=1$/;"	v
g:go_highlight_trailing_whitespace_error	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_trailing_whitespace_error = 0$/;"	v
g:go_highlight_trailing_whitespace_error	vimrc	/^        let g:go_highlight_trailing_whitespace_error=1$/;"	v
g:go_highlight_types	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_types = 0$/;"	v
g:go_highlight_types	vimrc	/^        let g:go_highlight_types=1$/;"	v
g:go_highlight_variable_assignments	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_variable_assignments = 0$/;"	v
g:go_highlight_variable_declarations	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^  let g:go_highlight_variable_declarations = 0$/;"	v
g:go_info_mode	vimrc	/^        let g:go_info_mode='guru'$/;"	v
g:go_jump_to_error	pack/plugins/start/fatih-vim-go/ftplugin/go/mappings.vim	/^  let g:go_jump_to_error = 1$/;"	v
g:go_jump_to_error	vimrc	/^        let g:go_jump_to_error=0$/;"	v
g:go_list_type	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^  let g:go_list_type = ""$/;"	v
g:go_list_type_commands	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^  let g:go_list_type_commands = {}$/;"	v
g:go_loaded_gosnippets	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^let g:go_loaded_gosnippets = 1$/;"	v
g:go_loaded_install	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^let g:go_loaded_install = 1$/;"	v
g:go_metalinter_autosave	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^    let g:go_metalinter_autosave = 0$/;"	v
g:go_metalinter_autosave	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_metalinter_autosave = 1$/;"	v
g:go_metalinter_autosave_enabled	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_metalinter_autosave_enabled = ['vet', 'golint']$/;"	v
g:go_metalinter_command	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_metalinter_command = ""$/;"	v
g:go_metalinter_enabled	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_metalinter_enabled = ['vet', 'golint', 'errcheck']$/;"	v
g:go_metalinter_excludes	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  let g:go_metalinter_excludes = []$/;"	v
g:go_play_open_browser	pack/plugins/start/fatih-vim-go/autoload/go/play.vim	/^  let g:go_play_open_browser = 1$/;"	v
g:go_snippet_engine	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^  let g:go_snippet_engine = "ultisnips"$/;"	v
g:go_template_autocreate	pack/plugins/start/fatih-vim-go/autoload/go/template.vim	/^    let g:go_template_autocreate = 0$/;"	v
g:go_template_autocreate	pack/plugins/start/fatih-vim-go/autoload/go/template.vim	/^  let g:go_template_autocreate = 1$/;"	v
g:go_template_autocreate	vimrc	/^        let g:go_template_autocreate=0$/;"	v
g:go_term_enabled	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^    let g:go_term_enabled = 0$/;"	v
g:go_term_enabled	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^    let g:go_term_enabled = 1$/;"	v
g:go_term_mode	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^  let g:go_term_mode = 'vsplit'$/;"	v
g:go_textobj_enabled	pack/plugins/start/fatih-vim-go/autoload/go/textobj.vim	/^  let g:go_textobj_enabled = 1$/;"	v
g:go_textobj_enabled	vimrc	/^        let g:go_textobj_enabled=1$/;"	v
g:go_textobj_include_function_doc	pack/plugins/start/fatih-vim-go/autoload/go/textobj.vim	/^  let g:go_textobj_include_function_doc = 1$/;"	v
g:go_textobj_include_variable	pack/plugins/start/fatih-vim-go/autoload/go/textobj.vim	/^  let g:go_textobj_include_variable = 1$/;"	v
g:gutentags_add_default_project_roots	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_default_project_roots = get(g:, 'gutentags_add_default_project_roots', 1)$/;"	v
g:gutentags_auto_add_cscope	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_auto_add_cscope = 1$/;"	v
g:gutentags_auto_add_gtags_cscope	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_auto_add_gtags_cscope = 1$/;"	v
g:gutentags_background_update	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_background_update = get(g:, 'gutentags_background_update', 1)$/;"	v
g:gutentags_cache_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = ''$/;"	v
g:gutentags_cache_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':p')$/;"	v
g:gutentags_cache_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':s?[\/\\\\]$??')$/;"	v
g:gutentags_cscope_executable	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_executable = 'cscope'$/;"	v
g:gutentags_ctags_auto_set_tags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_auto_set_tags = get(g:, 'gutentags_ctags_auto_set_tags', 1)$/;"	v
g:gutentags_ctags_check_tagfile	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_check_tagfile = get(g:, 'gutentags_ctags_check_tagfile', 0)$/;"	v
g:gutentags_ctags_exclude	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude = get(g:, 'gutentags_ctags_exclude', [])$/;"	v
g:gutentags_ctags_exclude_wildignore	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude_wildignore = get(g:, 'gutentags_ctags_exclude_wildignore', 1)$/;"	v
g:gutentags_ctags_executable	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_executable = get(g:, 'gutentags_ctags_executable', 'ctags')$/;"	v
g:gutentags_ctags_executable	vimrc	/^                let g:gutentags_ctags_executable='ctags-exuberant'$/;"	v
g:gutentags_ctags_extra_args	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_extra_args = get(g:, 'gutentags_ctags_extra_args', [])$/;"	v
g:gutentags_ctags_options_file	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_options_file = get(g:, 'gutentags_ctags_options_file', '.gutctags')$/;"	v
g:gutentags_ctags_post_process_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_post_process_cmd = get(g:, 'gutentags_ctags_post_process_cmd', '')$/;"	v
g:gutentags_ctags_tagfile	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_tagfile = get(g:, 'gutentags_ctags_tagfile', 'tags')$/;"	v
g:gutentags_debug	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_debug = get(g:, 'gutentags_debug', 0)$/;"	v
g:gutentags_define_advanced_commands	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_define_advanced_commands = get(g:, 'gutentags_define_advanced_commands', 0)$/;"	v
g:gutentags_enabled	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^            let g:gutentags_enabled = 0$/;"	v
g:gutentags_enabled	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_enabled = get(g:, 'gutentags_enabled', 1)$/;"	v
g:gutentags_exclude_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_project_root = get(g:, 'gutentags_exclude_project_root', ['\/usr\/local'/;"	v
g:gutentags_fake	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_fake = a:1$/;"	v
g:gutentags_fake	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^    let g:gutentags_fake = !g:gutentags_fake$/;"	v
g:gutentags_fake	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_fake = get(g:, 'gutentags_fake', 0)$/;"	v
g:gutentags_file_list_command	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_file_list_command = get(g:, 'gutentags_file_list_command', '')$/;"	v
g:gutentags_generate_on_empty_buffer	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_empty_buffer = get(g:, 'gutentags_generate_on_empty_buffer', 0)$/;"	v
g:gutentags_generate_on_missing	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_missing = get(g:, 'gutentags_generate_on_missing', 1)$/;"	v
g:gutentags_generate_on_new	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_new = get(g:, 'gutentags_generate_on_new', 1)$/;"	v
g:gutentags_generate_on_write	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_write = get(g:, 'gutentags_generate_on_write', 1)$/;"	v
g:gutentags_gtags_cscope_executable	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_cscope_executable = 'gtags-cscope'$/;"	v
g:gutentags_gtags_dbpath	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_dbpath = ''$/;"	v
g:gutentags_gtags_executable	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_executable = 'gtags'$/;"	v
g:gutentags_gtags_options_file	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_options_file = '.gutgtags'$/;"	v
g:gutentags_init_user_func	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_init_user_func = get(g:, 'gutentags_init_user_func', $/;"	v
g:gutentags_modules	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_modules = get(g:, 'gutentags_modules', ['ctags'])$/;"	v
g:gutentags_pause_after_update	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_pause_after_update = get(g:, 'gutentags_pause_after_update', 0)$/;"	v
g:gutentags_plat_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . "\\\\plat\\\\win32\\\\"$/;"	v
g:gutentags_plat_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . '\/plat\/unix\/'$/;"	v
g:gutentags_project_info	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_info = get(g:, 'gutentags_project_info', [])$/;"	v
g:gutentags_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_project_root += ['.git', '.hg', '.svn', '.bzr', '_darcs', '_FOSSIL_', '.fslc/;"	v
g:gutentags_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root = get(g:, 'gutentags_project_root', [])$/;"	v
g:gutentags_project_root_finder	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root_finder = get(g:, 'gutentags_project_root_finder', '')$/;"	v
g:gutentags_res_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . "\\\\res\\\\"$/;"	v
g:gutentags_res_dir	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . '\/res\/'$/;"	v
g:gutentags_resolve_symlinks	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_resolve_symlinks = get(g:, 'gutentags_resolve_symlinks', 0)$/;"	v
g:gutentags_scopefile	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_scopefile = 'cscope.out'$/;"	v
g:gutentags_script_ext	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.cmd'$/;"	v
g:gutentags_script_ext	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.sh'$/;"	v
g:gutentags_trace	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = a:1$/;"	v
g:gutentags_trace	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = l:trace_backup$/;"	v
g:gutentags_trace	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^    let g:gutentags_trace = !g:gutentags_trace$/;"	v
g:gutentags_trace	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_trace = get(g:, 'gutentags_trace', 0)$/;"	v
g:html_indent_inctags	vimrc	/^        let g:html_indent_inctags='html,body,head,tbody,p,li,dd,dt,h1,h2,h3,h4,h5,h6,blockquote,/;"	v
g:html_indent_script1	vimrc	/^        let g:html_indent_script1='inc'$/;"	v
g:html_indent_style1	vimrc	/^        let g:html_indent_style1='inc'$/;"	v
g:html_wrong_comments	vimrc	/^        let g:html_wrong_comments=1$/;"	v
g:loaded_abolish	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let g:loaded_abolish = 1$/;"	v
g:loaded_ale	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:loaded_ale = 1$/;"	v
g:loaded_ale_after	pack/plugins/start/w0rp-ale/after/plugin/ale.vim	/^let g:loaded_ale_after = 1$/;"	v
g:loaded_ale_dont_use_this_in_other_plugins_please	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^let g:loaded_ale_dont_use_this_in_other_plugins_please = 1$/;"	v
g:loaded_commentary	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^let g:loaded_commentary = 1$/;"	v
g:loaded_eunuch	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^let g:loaded_eunuch = 1$/;"	v
g:loaded_fugitive	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_gitgutter	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^let g:loaded_gitgutter = 1$/;"	v
g:loaded_gutentags	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^let g:loaded_gutentags = 1$/;"	v
g:loaded_mucomplete	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^let g:loaded_mucomplete = 1$/;"	v
g:loaded_qf	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^let g:loaded_qf = 1$/;"	v
g:loaded_qlist	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^let g:loaded_qlist = 1$/;"	v
g:loaded_quickhl	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^let g:loaded_quickhl = 1$/;"	v
g:loaded_repeat	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^let g:loaded_repeat = 1$/;"	v
g:loaded_rsi	pack/plugins/start/tpope-vim-rsi/plugin/rsi.vim	/^let g:loaded_rsi = 1$/;"	v
g:loaded_surround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_unimpaired	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^let g:loaded_unimpaired = 1$/;"	v
g:loaded_vinegar	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^let g:loaded_vinegar = 1$/;"	v
g:mapleader	pack/plugins/start/w0rp-ale/test/.config/nvim/init.vim	/^let g:mapleader=','$/;"	v
g:mapleader	pack/plugins/start/w0rp-ale/test/vimrc	/^let g:mapleader=','$/;"	v
g:mapleader	vimrc	/^        let g:mapleader="\\<space>"$/;"	v
g:mucomplete#can_complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  let g:mucomplete#can_complete = extend({$/;"	v
g:mucomplete#can_complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  let g:mucomplete#can_complete = mucomplete#compat#can_complete()$/;"	v
g:mucomplete#chains	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let g:mucomplete#chains = extend({$/;"	v
g:mucomplete#enable_auto_at_startup	vimrc	/^        let g:mucomplete#enable_auto_at_startup=0$/;"	v
g:mucomplete_with_key	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  let g:mucomplete_with_key = a:tab_completion$/;"	v
g:neosnippet#enable_snipmate_compatibility	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^  let g:neosnippet#enable_snipmate_compatibility = 1$/;"	v
g:neosnippet#snippets_directory	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^      let g:neosnippet#snippets_directory = g:neosnippet#snippets_directory . "," . gosnippets_d/;"	v
g:neosnippet#snippets_directory	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^      let g:neosnippet#snippets_directory = gosnippets_dir$/;"	v
g:neosnippet#snippets_directory	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^    let g:neosnippet#snippets_directory += [gosnippets_dir]$/;"	v
g:netrw_altfile	vimrc	/^        let g:netrw_altfile=1$/;"	v
g:netrw_banner	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^  let g:netrw_banner = 0$/;"	v
g:netrw_banner	vimrc	/^        let g:netrw_banner=0$/;"	v
g:netrw_cursor	vimrc	/^        let g:netrw_cursor=0$/;"	v
g:netrw_keepdir	vimrc	/^        let g:netrw_keepdir=1$/;"	v
g:netrw_list_hide	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^    let g:netrw_list_hide = g:netrw_list_hide[0 : -strlen(df)-1]$/;"	v
g:netrw_list_hide	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^let g:netrw_list_hide =$/;"	v
g:netrw_liststyle	vimrc	/^        let g:netrw_liststyle=1$/;"	v
g:netrw_sizestyle	vimrc	/^        let g:netrw_sizestyle='H'$/;"	v
g:netrw_sort_sequence	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^let g:netrw_sort_sequence = '[\\\/]$,*,\\%(' . join(map(split(&suffixes, ','), 'escape(v:val, "./;"	v
g:netrw_winsize	vimrc	/^        let g:netrw_winsize='30'$/;"	v
g:nofrils_heavycomments	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^    let g:nofrils_heavycomments = 0$/;"	v
g:nofrils_heavycomments	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^    let g:nofrils_heavycomments = 0$/;"	v
g:nofrils_heavycomments	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^    let g:nofrils_heavycomments = 0$/;"	v
g:nofrils_heavycomments	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^    let g:nofrils_heavycomments = 0$/;"	v
g:nofrils_heavycomments	vimrc	/^        let g:nofrils_heavycomments=0 " bright comments off$/;"	v
g:nofrils_heavylinenumbers	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^    let g:nofrils_heavylinenumbers = 0$/;"	v
g:nofrils_heavylinenumbers	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^    let g:nofrils_heavylinenumbers = 0$/;"	v
g:nofrils_heavylinenumbers	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^    let g:nofrils_heavylinenumbers = 0$/;"	v
g:nofrils_heavylinenumbers	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^    let g:nofrils_heavylinenumbers = 0$/;"	v
g:nofrils_heavylinenumbers	vimrc	/^        let g:nofrils_heavylinenumbers=0 " heavy line numbers off$/;"	v
g:nofrils_strbackgrounds	pack/colors/start/robertmeta-nofrils/colors/nofrils-acme.vim	/^    let g:nofrils_strbackgrounds = 0$/;"	v
g:nofrils_strbackgrounds	pack/colors/start/robertmeta-nofrils/colors/nofrils-dark.vim	/^    let g:nofrils_strbackgrounds = 0$/;"	v
g:nofrils_strbackgrounds	pack/colors/start/robertmeta-nofrils/colors/nofrils-light.vim	/^    let g:nofrils_strbackgrounds = 0$/;"	v
g:nofrils_strbackgrounds	pack/colors/start/robertmeta-nofrils/colors/nofrils-sepia.vim	/^    let g:nofrils_strbackgrounds = 0$/;"	v
g:nofrils_strbackgrounds	vimrc	/^        let g:nofrils_strbackgrounds=1 " to turn off highlighted string backgrounds$/;"	v
g:op1	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^  let g:op1 = copy(opts)$/;"	v
g:op2	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^  let g:op2 = copy(opts)$/;"	v
g:qf_quickfix_lists	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^                let g:qf_quickfix_lists = [getqflist()]$/;"	v
g:qf_quickfix_lists	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^                let g:qf_quickfix_lists = add(g:qf_quickfix_lists, getqflist())$/;"	v
g:qf_quickfix_lists	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^            let g:qf_quickfix_lists = []$/;"	v
g:qf_quickfix_titles	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^                let g:qf_quickfix_titles = [a:title]$/;"	v
g:qf_quickfix_titles	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^                let g:qf_quickfix_titles = add(g:qf_quickfix_titles, a:title)$/;"	v
g:qf_quickfix_titles	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^            let g:qf_quickfix_titles = []$/;"	v
g:quickhl_debug	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^  let g:quickhl_debug = 0$/;"	v
g:quickhl_manual_colors	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^  let g:quickhl_manual_colors = [$/;"	v
g:quickhl_manual_colors	vimrc	/^        let g:quickhl_manual_colors=['gui=bold ctermfg=16 ctermbg=153 guifg=#ffffff guibg=#0a738/;"	v
g:repeat_count	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^    let g:repeat_count = a:0 ? a:1 : v:count$/;"	v
g:repeat_reg	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^    let g:repeat_reg = [a:sequence, a:register]$/;"	v
g:repeat_reg	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^let g:repeat_reg = ['', '']$/;"	v
g:repeat_sequence	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^    let g:repeat_sequence = a:sequence$/;"	v
g:repeat_tick	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^        let g:repeat_tick = b:changedtick$/;"	v
g:repeat_tick	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^    let g:repeat_tick = -1$/;"	v
g:repeat_tick	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^    let g:repeat_tick = b:changedtick$/;"	v
g:repeat_tick	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^let g:repeat_tick = -1$/;"	v
g:skip_loading_mswin	vimrc	/^        let g:skip_loading_mswin=1 " Just in case :)$/;"	v
g:tagbar_type_go	pack/plugins/start/fatih-vim-go/ftplugin/go/tagbar.vim	/^    let g:tagbar_type_go = {$/;"	v
g:terminal_color_0	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_0  = color00[0]$/;"	v
g:terminal_color_1	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_1  = color01[0]$/;"	v
g:terminal_color_10	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_10 = color10[0]$/;"	v
g:terminal_color_11	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_11 = color11[0]$/;"	v
g:terminal_color_12	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_12 = color12[0]$/;"	v
g:terminal_color_13	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_13 = color13[0]$/;"	v
g:terminal_color_14	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_14 = color14[0]$/;"	v
g:terminal_color_15	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_15 = color15[0]$/;"	v
g:terminal_color_2	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_2  = color02[0]$/;"	v
g:terminal_color_3	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_3  = color03[0]$/;"	v
g:terminal_color_4	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_4  = color04[0]$/;"	v
g:terminal_color_5	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_5  = color05[0]$/;"	v
g:terminal_color_6	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_6  = color06[0]$/;"	v
g:terminal_color_7	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_7  = color07[0]$/;"	v
g:terminal_color_8	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_8  = color08[0]$/;"	v
g:terminal_color_9	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_9  = color09[0]$/;"	v
g:testname	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let g:testname = expand('%')$/;"	v
g:tmuxcomplete#loaded	pack/plugins/start/wellle-tmux-complete-vim/plugin/tmuxcomplete.vim	/^let g:tmuxcomplete#loaded = '0.1.1' " version number$/;"	v
g:unimpaired_html_entities	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^let g:unimpaired_html_entities = {$/;"	v
g:vim_go_root	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let g:vim_go_root = fnamemodify(getcwd(), ':p')$/;"	v
g:vim_markdown_folding_disabled	vimrc	/^        let g:vim_markdown_folding_disabled=0$/;"	v
g:vim_markdown_frontmatter	vimrc	/^        let g:vim_markdown_frontmatter=1$/;"	v
g<LeftMouse>	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> g<LeftMouse> <LeftMouse>:GoDef<cr>$/;"	m
g?	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^        nnoremap <buffer> <silent> g?   :help fugitive-:Gblame<CR>$/;"	m
g?	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> g?   :help fugitive-:Gstatus<CR>$/;"	m
gS	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  xmap gS  <Plug>VgSurround$/;"	m
gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/rplugin/python3/deoplete/sources/tmuxcomplete.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gc	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^  nmap gc  <Plug>Commentary$/;"	m
gc	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^  omap gc  <Plug>Commentary$/;"	m
gc	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^  xmap gc  <Plug>Commentary$/;"	m
gcc	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^  nmap gcc <Plug>CommentaryLine$/;"	m
gcu	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^  nmap gcu <Plug>Commentary<Plug>Commentary$/;"	m
gd	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> gd :GoDef<cr>$/;"	m
general	vimrc	/^        augroup general$/;"	a
gf	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nmap <buffer> <silent> gf          <SID>:find <Plug><cfile><CR>$/;"	m
gitgutter	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^augroup gitgutter$/;"	a
gitgutter#all	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#all() abort$/;"	f
gitgutter#async#available	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#available()$/;"	f
gitgutter#async#execute	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#execute(cmd) abort$/;"	f
gitgutter#debug#debug	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#debug()$/;"	f
gitgutter#debug#git_version	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#git_version()$/;"	f
gitgutter#debug#grep_version	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#grep_version()$/;"	f
gitgutter#debug#log	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#log(message, ...) abort$/;"	f
gitgutter#debug#option	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#option(name)$/;"	f
gitgutter#debug#output	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#output(text)$/;"	f
gitgutter#debug#separator	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#separator()$/;"	f
gitgutter#debug#vim_version	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#vim_version()$/;"	f
gitgutter#diff#adjust_hunk_summary	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#adjust_hunk_summary(diff_for_hunk, staging) abort$/;"	f
gitgutter#diff#discard_hunks	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#discard_hunks(diff, keep_header) abort$/;"	f
gitgutter#diff#generate_diff_for_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#generate_diff_for_hunk(diff, type) abort$/;"	f
gitgutter#diff#is_added	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_added(from_count, to_count) abort$/;"	f
gitgutter#diff#is_modified	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_modified(from_count, to_count) abort$/;"	f
gitgutter#diff#is_modified_and_added	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_modified_and_added(from_count, to_count) abort$/;"	f
gitgutter#diff#is_modified_and_removed	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_modified_and_removed(from_count, to_count) abort$/;"	f
gitgutter#diff#is_removed	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_removed(from_count, to_count) abort$/;"	f
gitgutter#diff#parse_diff	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_diff(diff) abort$/;"	f
gitgutter#diff#parse_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_hunk(line) abort$/;"	f
gitgutter#diff#process_added	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_added(modifications, from_count, to_count, to_line) abort$/;"	f
gitgutter#diff#process_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_hunk(hunk) abort$/;"	f
gitgutter#diff#process_hunks	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_hunks(hunks) abort$/;"	f
gitgutter#diff#process_modified	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_modified(modifications, from_count, to_count, to_line) abort$/;"	f
gitgutter#diff#process_modified_and_added	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_modified_and_added(modifications, from_count, to_count, to_line/;"	f
gitgutter#diff#process_modified_and_removed	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_modified_and_removed(modifications, from_count, to_count, to_li/;"	f
gitgutter#diff#process_removed	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_removed(modifications, from_count, to_count, to_line) abort$/;"	f
gitgutter#diff#run_diff	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#run_diff(realtime, preserve_full_diff) abort$/;"	f
gitgutter#disable	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#disable() abort$/;"	f
gitgutter#enable	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#enable() abort$/;"	f
gitgutter#handle_diff	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#handle_diff(diff) abort$/;"	f
gitgutter#highlight#define_highlights	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_highlights() abort$/;"	f
gitgutter#highlight#define_sign_column_highlight	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_column_highlight() abort$/;"	f
gitgutter#highlight#define_sign_line_highlights	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_line_highlights() abort$/;"	f
gitgutter#highlight#define_sign_text	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_text() abort$/;"	f
gitgutter#highlight#define_sign_text_highlights	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_text_highlights() abort$/;"	f
gitgutter#highlight#define_signs	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_signs() abort$/;"	f
gitgutter#highlight#get_background_colors	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#get_background_colors(group) abort$/;"	f
gitgutter#highlight#match_highlight	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#match_highlight(highlight, pattern) abort$/;"	f
gitgutter#hunk#current_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#current_hunk() abort$/;"	f
gitgutter#hunk#cursor_in_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#cursor_in_hunk(hunk) abort$/;"	f
gitgutter#hunk#hunks	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#hunks() abort$/;"	f
gitgutter#hunk#increment_lines_added	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_added(count) abort$/;"	f
gitgutter#hunk#increment_lines_modified	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_modified(count) abort$/;"	f
gitgutter#hunk#increment_lines_removed	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_removed(count) abort$/;"	f
gitgutter#hunk#line_adjustment_for_current_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#line_adjustment_for_current_hunk() abort$/;"	f
gitgutter#hunk#next_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#next_hunk(count) abort$/;"	f
gitgutter#hunk#prev_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#prev_hunk(count) abort$/;"	f
gitgutter#hunk#reset	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#reset() abort$/;"	f
gitgutter#hunk#set_hunks	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#set_hunks(hunks) abort$/;"	f
gitgutter#hunk#summary	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#summary(bufnr) abort$/;"	f
gitgutter#hunk#text_object	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#text_object(inner) abort$/;"	f
gitgutter#line_highlights_disable	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#line_highlights_disable() abort$/;"	f
gitgutter#line_highlights_enable	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#line_highlights_enable() abort$/;"	f
gitgutter#line_highlights_toggle	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#line_highlights_toggle() abort$/;"	f
gitgutter#preview_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#preview_hunk() abort$/;"	f
gitgutter#process_buffer	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#process_buffer(bufnr, realtime) abort$/;"	f
gitgutter#sign#add_dummy_sign	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#add_dummy_sign() abort$/;"	f
gitgutter#sign#clear_signs	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#clear_signs() abort$/;"	f
gitgutter#sign#find_current_signs	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#find_current_signs() abort$/;"	f
gitgutter#sign#next_sign_id	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#next_sign_id() abort$/;"	f
gitgutter#sign#obsolete_gitgutter_signs_to_remove	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#obsolete_gitgutter_signs_to_remove(new_gitgutter_signs_line_numbers) ab/;"	f
gitgutter#sign#remove_dummy_sign	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#remove_dummy_sign(force) abort$/;"	f
gitgutter#sign#remove_signs	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#remove_signs(sign_ids, all_signs) abort$/;"	f
gitgutter#sign#reset	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#reset()$/;"	f
gitgutter#sign#update_signs	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#update_signs(modified_lines) abort$/;"	f
gitgutter#sign#upsert_new_gitgutter_signs	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#upsert_new_gitgutter_signs(modified_lines) abort$/;"	f
gitgutter#signs_disable	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#signs_disable() abort$/;"	f
gitgutter#signs_enable	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#signs_enable() abort$/;"	f
gitgutter#signs_toggle	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#signs_toggle() abort$/;"	f
gitgutter#stage_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#stage_hunk() abort$/;"	f
gitgutter#toggle	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#toggle() abort$/;"	f
gitgutter#undo_hunk	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#undo_hunk() abort$/;"	f
gitgutter#utility#bufnr	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#bufnr()$/;"	f
gitgutter#utility#command_in_directory_of_file	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#command_in_directory_of_file(cmd) abort$/;"	f
gitgutter#utility#dedup	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#dedup(list)$/;"	f
gitgutter#utility#directory_of_file	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#directory_of_file() abort$/;"	f
gitgutter#utility#exists_file	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#exists_file() abort$/;"	f
gitgutter#utility#extension	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#extension() abort$/;"	f
gitgutter#utility#file	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#file()$/;"	f
gitgutter#utility#file_relative_to_repo_root	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#file_relative_to_repo_root() abort$/;"	f
gitgutter#utility#filename	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#filename() abort$/;"	f
gitgutter#utility#full_path_to_directory_of_file	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#full_path_to_directory_of_file() abort$/;"	f
gitgutter#utility#getbufvar	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#getbufvar(buffer, varname, ...)$/;"	f
gitgutter#utility#git_supports_command_line_config_override	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#git_supports_command_line_config_override() abort$/;"	f
gitgutter#utility#has_fresh_changes	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#has_fresh_changes() abort$/;"	f
gitgutter#utility#has_unsaved_changes	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#has_unsaved_changes() abort$/;"	f
gitgutter#utility#highlight_name_for_change	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#highlight_name_for_change(text) abort$/;"	f
gitgutter#utility#is_active	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#is_active() abort$/;"	f
gitgutter#utility#is_file_buffer	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#is_file_buffer() abort$/;"	f
gitgutter#utility#not_git_dir	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#not_git_dir() abort$/;"	f
gitgutter#utility#restore_shell	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#restore_shell() abort$/;"	f
gitgutter#utility#save_last_seen_change	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#save_last_seen_change() abort$/;"	f
gitgutter#utility#set_buffer	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#set_buffer(bufnr) abort$/;"	f
gitgutter#utility#setbufvar	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#setbufvar(buffer, varname, val)$/;"	f
gitgutter#utility#shell_error	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#shell_error() abort$/;"	f
gitgutter#utility#shellescape	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#shellescape(arg) abort$/;"	f
gitgutter#utility#stringify	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#stringify(list) abort$/;"	f
gitgutter#utility#strip_trailing_new_line	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#strip_trailing_new_line(line) abort$/;"	f
gitgutter#utility#system	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#system(cmd, ...) abort$/;"	f
gitgutter#utility#use_known_shell	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#use_known_shell() abort$/;"	f
gitgutter#utility#using_xolox_shell	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#using_xolox_shell() abort$/;"	f
gitgutter#utility#warn	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn(message) abort$/;"	f
gitgutter#utility#warn_once	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn_once(message, key) abort$/;"	f
gj	vimrc	/^        nnoremap gj j$/;"	m
gk	vimrc	/^        nnoremap gk k$/;"	m
go#alternate#Switch	pack/plugins/start/fatih-vim-go/autoload/go/alternate.vim	/^function! go#alternate#Switch(bang, cmd) abort$/;"	f
go#asmfmt#Format	pack/plugins/start/fatih-vim-go/autoload/go/asmfmt.vim	/^function! go#asmfmt#Format() abort$/;"	f
go#asmfmt#ToggleAsmFmtAutoSave	pack/plugins/start/fatih-vim-go/autoload/go/asmfmt.vim	/^function! go#asmfmt#ToggleAsmFmtAutoSave() abort$/;"	f
go#cmd#Build	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#Build(bang, ...) abort$/;"	f
go#cmd#BuildTags	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#BuildTags(bang, ...) abort$/;"	f
go#cmd#Generate	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#Generate(bang, ...) abort$/;"	f
go#cmd#Install	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#Install(bang, ...) abort$/;"	f
go#cmd#Run	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#Run(bang, ...) abort$/;"	f
go#cmd#RunTerm	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#RunTerm(bang, mode, files) abort$/;"	f
go#cmd#autowrite	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function! go#cmd#autowrite() abort$/;"	f
go#complete#Complete	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! go#complete#Complete(findstart, base) abort$/;"	f
go#complete#GetInfo	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! go#complete#GetInfo() abort$/;"	f
go#complete#Info	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! go#complete#Info(auto) abort$/;"	f
go#complete#ToggleAutoTypeInfo	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! go#complete#ToggleAutoTypeInfo() abort$/;"	f
go#coverage#Browser	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#Browser(bang, ...) abort$/;"	f
go#coverage#Buffer	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#Buffer(bang, ...) abort$/;"	f
go#coverage#BufferToggle	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#BufferToggle(bang, ...) abort$/;"	f
go#coverage#Clear	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#Clear() abort$/;"	f
go#coverage#genmatch	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#genmatch(cov) abort$/;"	f
go#coverage#overlay	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#overlay(file) abort$/;"	f
go#coverage#parsegocoverline	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! go#coverage#parsegocoverline(line) abort$/;"	f
go#decls#Decls	pack/plugins/start/fatih-vim-go/autoload/go/decls.vim	/^function! go#decls#Decls(mode, ...) abort$/;"	f
go#def#Jump	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#Jump(mode) abort$/;"	f
go#def#SelectStackEntry	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#SelectStackEntry() abort$/;"	f
go#def#Stack	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#Stack(...) abort$/;"	f
go#def#StackClear	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#StackClear(...) abort$/;"	f
go#def#StackPop	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#StackPop(...) abort$/;"	f
go#def#StackUI	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#StackUI() abort$/;"	f
go#def#jump_to_declaration	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! go#def#jump_to_declaration(out, mode, bin_name) abort$/;"	f
go#doc#Open	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! go#doc#Open(newmode, mode, ...) abort$/;"	f
go#doc#OpenBrowser	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! go#doc#OpenBrowser(...) abort$/;"	f
go#fillstruct#FillStruct	pack/plugins/start/fatih-vim-go/autoload/go/fillstruct.vim	/^function! go#fillstruct#FillStruct() abort$/;"	f
go#fmt#Format	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! go#fmt#Format(withGoimport) abort$/;"	f
go#fmt#ToggleFmtAutoSave	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! go#fmt#ToggleFmtAutoSave() abort$/;"	f
go#fmt#run	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! go#fmt#run(bin_name, source, target)$/;"	f
go#fmt#update_file	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! go#fmt#update_file(source, target)$/;"	f
go#guru#AutoToogleSameIds	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#AutoToogleSameIds() abort$/;"	f
go#guru#Callees	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Callees(selected) abort$/;"	f
go#guru#Callers	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Callers(selected) abort$/;"	f
go#guru#Callstack	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Callstack(selected) abort$/;"	f
go#guru#ChannelPeers	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#ChannelPeers(selected) abort$/;"	f
go#guru#ClearSameIds	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#ClearSameIds() abort$/;"	f
go#guru#Describe	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Describe(selected) abort$/;"	f
go#guru#DescribeInfo	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#DescribeInfo() abort$/;"	f
go#guru#Freevars	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Freevars(selected) abort$/;"	f
go#guru#Implements	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Implements(selected) abort$/;"	f
go#guru#Referrers	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Referrers(selected) abort$/;"	f
go#guru#SameIds	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#SameIds() abort$/;"	f
go#guru#SameIdsTimer	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#SameIdsTimer() abort$/;"	f
go#guru#Scope	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Scope(...) abort$/;"	f
go#guru#ToggleSameIds	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#ToggleSameIds() abort$/;"	f
go#guru#Whicherrs	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! go#guru#Whicherrs(selected) abort$/;"	f
go#impl#Complete	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! go#impl#Complete(arglead, cmdline, cursorpos) abort$/;"	f
go#impl#Impl	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! go#impl#Impl(...) abort$/;"	f
go#import#SwitchImport	pack/plugins/start/fatih-vim-go/autoload/go/import.vim	/^function! go#import#SwitchImport(enabled, localname, path, bang) abort$/;"	f
go#job#Spawn	pack/plugins/start/fatih-vim-go/autoload/go/job.vim	/^function go#job#Spawn(args)$/;"	f
go#jobcontrol#AddHandler	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! go#jobcontrol#AddHandler(handler) abort$/;"	f
go#jobcontrol#RemoveHandler	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! go#jobcontrol#RemoveHandler(id) abort$/;"	f
go#jobcontrol#Spawn	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! go#jobcontrol#Spawn(bang, desc, for, args) abort$/;"	f
go#keyify#Keyify	pack/plugins/start/fatih-vim-go/autoload/go/keyify.vim	/^function! go#keyify#Keyify()$/;"	f
go#lint#Errcheck	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#Errcheck(...) abort$/;"	f
go#lint#Golint	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#Golint(...) abort$/;"	f
go#lint#Gometa	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#Gometa(autosave, ...) abort$/;"	f
go#lint#ToggleMetaLinterAutoSave	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#ToggleMetaLinterAutoSave() abort$/;"	f
go#lint#Vet	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function! go#lint#Vet(bang, ...) abort$/;"	f
go#list#Clean	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Clean(listtype) abort$/;"	f
go#list#Get	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Get(listtype) abort$/;"	f
go#list#JumpToFirst	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#JumpToFirst(listtype) abort$/;"	f
go#list#Parse	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Parse(listtype, items) abort$/;"	f
go#list#ParseFormat	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#ParseFormat(listtype, errformat, items, title) abort$/;"	f
go#list#Populate	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Populate(listtype, items, title) abort$/;"	f
go#list#Type	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Type(for) abort$/;"	f
go#list#Window	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! go#list#Window(listtype, ...) abort$/;"	f
go#package#Complete	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#Complete(ArgLead, CmdLine, CursorPos) abort$/;"	f
go#package#CompleteMembers	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#CompleteMembers(package, member) abort$/;"	f
go#package#FromPath	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#FromPath(arg) abort$/;"	f
go#package#ImportPath	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#ImportPath() abort$/;"	f
go#package#Paths	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^function! go#package#Paths() abort$/;"	f
go#path#BinPath	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#BinPath() abort$/;"	f
go#path#CheckBinPath	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#CheckBinPath(binpath) abort$/;"	f
go#path#CygwinPath	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#CygwinPath(path)$/;"	f
go#path#Default	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#Default() abort$/;"	f
go#path#Detect	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#Detect() abort$/;"	f
go#path#GoPath	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#GoPath(...) abort$/;"	f
go#path#HasPath	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^function! go#path#HasPath(path) abort$/;"	f
go#play#Share	pack/plugins/start/fatih-vim-go/autoload/go/play.vim	/^function! go#play#Share(count, line1, line2) abort$/;"	f
go#rename#Complete	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^function! go#rename#Complete(lead, cmdline, cursor)$/;"	f
go#rename#Rename	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^function! go#rename#Rename(bang, ...) abort$/;"	f
go#statusline#Clear	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^function! go#statusline#Clear(timer_id) abort$/;"	f
go#statusline#Show	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^function! go#statusline#Show() abort$/;"	f
go#statusline#Update	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^function! go#statusline#Update(status_dir, status) abort$/;"	f
go#tags#Add	pack/plugins/start/fatih-vim-go/autoload/go/tags.vim	/^function! go#tags#Add(start, end, count, ...) abort$/;"	f
go#tags#Remove	pack/plugins/start/fatih-vim-go/autoload/go/tags.vim	/^function! go#tags#Remove(start, end, count, ...) abort$/;"	f
go#tags#run	pack/plugins/start/fatih-vim-go/autoload/go/tags.vim	/^function! go#tags#run(start, end, offset, mode, fname, test_mode, ...) abort$/;"	f
go#template#ToggleAutoCreate	pack/plugins/start/fatih-vim-go/autoload/go/template.vim	/^function! go#template#ToggleAutoCreate() abort$/;"	f
go#template#create	pack/plugins/start/fatih-vim-go/autoload/go/template.vim	/^function! go#template#create() abort$/;"	f
go#term#new	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! go#term#new(bang, cmd) abort$/;"	f
go#term#newmode	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! go#term#newmode(bang, cmd, mode) abort$/;"	f
go#test#Func	pack/plugins/start/fatih-vim-go/autoload/go/test.vim	/^function! go#test#Func(bang, ...) abort$/;"	f
go#test#Test	pack/plugins/start/fatih-vim-go/autoload/go/test.vim	/^function! go#test#Test(bang, compile, ...) abort$/;"	f
go#textobj#Function	pack/plugins/start/fatih-vim-go/autoload/go/textobj.vim	/^function! go#textobj#Function(mode) abort$/;"	f
go#textobj#FunctionJump	pack/plugins/start/fatih-vim-go/autoload/go/textobj.vim	/^function! go#textobj#FunctionJump(mode, direction) abort$/;"	f
go#tool#Deps	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Deps() abort$/;"	f
go#tool#ExecuteInDir	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#ExecuteInDir(cmd) abort$/;"	f
go#tool#Exists	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Exists(importpath) abort$/;"	f
go#tool#Files	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Files(...) abort$/;"	f
go#tool#FilterValids	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#FilterValids(items) abort$/;"	f
go#tool#Imports	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Imports() abort$/;"	f
go#tool#Info	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#Info(auto) abort$/;"	f
go#tool#OpenBrowser	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#OpenBrowser(url) abort$/;"	f
go#tool#PackageName	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#PackageName() abort$/;"	f
go#tool#ParseErrors	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#ParseErrors(lines) abort$/;"	f
go#tool#ValidFiles	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! go#tool#ValidFiles(...)$/;"	f
go#ui#CloseWindow	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^function! go#ui#CloseWindow() abort$/;"	f
go#ui#GetReturnWindow	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^function! go#ui#GetReturnWindow() abort$/;"	f
go#ui#OpenDefinition	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^function! go#ui#OpenDefinition(filter) abort$/;"	f
go#ui#OpenWindow	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^function! go#ui#OpenWindow(title, content, filetype) abort$/;"	f
go#util#EchoError	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoError(msg)$/;"	f
go#util#EchoInfo	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoInfo(msg)$/;"	f
go#util#EchoProgress	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoProgress(msg)$/;"	f
go#util#EchoSuccess	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoSuccess(msg)$/;"	f
go#util#EchoWarning	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#EchoWarning(msg)$/;"	f
go#util#Exec	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Exec(cmd, ...) abort$/;"	f
go#util#GetLines	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#GetLines()$/;"	f
go#util#IsMac	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#IsMac() abort$/;"	f
go#util#IsUsingCygwinShell	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#IsUsingCygwinShell()$/;"	f
go#util#IsWin	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#IsWin() abort$/;"	f
go#util#Join	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Join(...) abort$/;"	f
go#util#LineEnding	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#LineEnding() abort$/;"	f
go#util#Offset	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Offset(line, col) abort$/;"	f
go#util#OffsetCursor	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#OffsetCursor() abort$/;"	f
go#util#PathListSep	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#PathListSep() abort$/;"	f
go#util#PathSep	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#PathSep() abort$/;"	f
go#util#ShellError	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#ShellError() abort$/;"	f
go#util#Shellescape	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^fu! go#util#Shellescape(arg)$/;"	f
go#util#Shelljoin	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Shelljoin(arglist, ...) abort$/;"	f
go#util#Shelllist	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Shelllist(arglist, ...) abort$/;"	f
go#util#StripPathSep	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#StripPathSep(path) abort$/;"	f
go#util#StripTrailingSlash	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#StripTrailingSlash(paths) abort$/;"	f
go#util#System	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#System(str, ...) abort$/;"	f
go#util#Windo	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#Windo(command) abort$/;"	f
go#util#archive	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#archive()$/;"	f
go#util#camelcase	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#camelcase(word) abort$/;"	f
go#util#env	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#env(key) abort$/;"	f
go#util#goarch	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#goarch() abort$/;"	f
go#util#goos	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#goos() abort$/;"	f
go#util#gopath	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#gopath() abort$/;"	f
go#util#goroot	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#goroot() abort$/;"	f
go#util#has_job	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#has_job() abort$/;"	f
go#util#osarch	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#osarch() abort$/;"	f
go#util#pascalcase	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#pascalcase(word) abort$/;"	f
go#util#snakecase	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#snakecase(word) abort$/;"	f
go#util#snippetcase	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#snippetcase(word) abort$/;"	f
go#util#tempdir	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! go#util#tempdir(prefix) abort$/;"	f
gotest#assert_buffer	pack/plugins/start/fatih-vim-go/autoload/gotest.vim	/^fun! gotest#assert_buffer(skipHeader, want) abort$/;"	f
gotest#assert_fixture	pack/plugins/start/fatih-vim-go/autoload/gotest.vim	/^fun! gotest#assert_fixture(path) abort$/;"	f
gotest#load_fixture	pack/plugins/start/fatih-vim-go/autoload/gotest.vim	/^fun! gotest#load_fixture(path) abort$/;"	f
gotest#write_file	pack/plugins/start/fatih-vim-go/autoload/gotest.vim	/^fun! gotest#write_file(path, contents) abort$/;"	f
gq	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^        nnoremap <buffer> <silent> gq   :exe substitute(bufwinnr(b:fugitive_blamed_bufnr).' winc/;"	m
gutentags#add_progress	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#add_progress(module, file) abort$/;"	f
gutentags#chdir	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#chdir(path)$/;"	f
gutentags#cscope#command_terminated	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#command_terminated(job_id, data, event) abort$/;"	f
gutentags#cscope#generate	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#generate(proj_dir, tags_file, write_mode) abort$/;"	f
gutentags#cscope#init	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#init(project_root) abort$/;"	f
gutentags#ctags#generate	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#generate(proj_dir, tags_file, write_mode) abort$/;"	f
gutentags#ctags#init	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#init(project_root) abort$/;"	f
gutentags#delete_lock_files	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#delete_lock_files() abort$/;"	f
gutentags#fake	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#fake(...)$/;"	f
gutentags#get_cachefile	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_cachefile(root_dir, filename) abort$/;"	f
gutentags#get_execute_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_execute_cmd() abort$/;"	f
gutentags#get_execute_cmd_suffix	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_execute_cmd_suffix() abort$/;"	f
gutentags#get_plat_file	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_plat_file(filename) abort$/;"	f
gutentags#get_project_file_list_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_file_list_cmd(path) abort$/;"	f
gutentags#get_project_info	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_info(path) abort$/;"	f
gutentags#get_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_root(path) abort$/;"	f
gutentags#get_res_file	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_res_file(filename) abort$/;"	f
gutentags#gtags_cscope#generate	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#generate(proj_dir, db_file, write_mode) abort$/;"	f
gutentags#gtags_cscope#init	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#init(project_root) abort$/;"	f
gutentags#gtags_cscope#on_job_exit	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#gtags_cscope#on_job_out	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#on_job_out(job, data) abort$/;"	f
gutentags#inprogress	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#inprogress()$/;"	f
gutentags#is_path_rooted	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#is_path_rooted(path) abort$/;"	f
gutentags#normalizepath	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#normalizepath(path)$/;"	f
gutentags#rescan	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#rescan(...)$/;"	f
gutentags#setup_gutentags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#setup_gutentags() abort$/;"	f
gutentags#shellslash	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#shellslash(path)$/;"	f
gutentags#statusline	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline(...) abort$/;"	f
gutentags#stripslash	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#stripslash(path)$/;"	f
gutentags#throw	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#throw(message)$/;"	f
gutentags#throwerr	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#throwerr(message)$/;"	f
gutentags#toggletrace	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#toggletrace(...)$/;"	f
gutentags#trace	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#trace(message, ...)$/;"	f
gutentags#validate_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! gutentags#validate_cmd(cmd) abort$/;"	f
gutentags_detect	pack/plugins/start/ludovicchabant-vim-gutentags/plugin/gutentags.vim	/^augroup gutentags_detect$/;"	a
i	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^      let i += 1$/;"	v
i	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^    let i = 0$/;"	v
i	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^        nnoremap <buffer> <silent> i    :<C-U>exe <SID>BlameCommit("exe 'norm q'<Bar>edit")<CR>$/;"	m
i	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^        nnoremap <buffer> <silent> i :<C-U>let b:fugitive_display_format -= v:count1<Bar>exe <SI/;"	m
i	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> i :<C-U>let b:fugitive_display_format -= 1<Bar>exe <SID>BufReadIn/;"	m
ic	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    omap ic <Plug>GitGutterTextObjectInnerPending$/;"	m
ic	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^    xmap ic <Plug>GitGutterTextObjectInnerVisual$/;"	m
if	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> if :<c-u>call go#textobj#Function('i')<cr>$/;"	m
if	pack/plugins/start/fatih-vim-go/ftplugin/go.vim	/^  xnoremap <buffer> <silent> if :<c-u>call go#textobj#Function('i')<cr>$/;"	m
install	pack/plugins/start/fatih-vim-go/Makefile	/^install:$/;"	t
j	vimrc	/^        nnoremap j gj$/;"	m
k	vimrc	/^        nnoremap k gk$/;"	m
lint	pack/plugins/start/fatih-vim-go/Makefile	/^lint:$/;"	t
main	get-plugins.go	/^func main() {$/;"	f
main	get-plugins.go	/^package main$/;"	p
main	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^func main() {$/;"	f
main	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/def/jump.go	/^func main() {$/;"	f
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/def/jump.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/hello.go	/^  func main() {$/;"	f
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/hello.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/hello_golden.go	/^func main() {$/;"	f
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/hello_golden.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/imports/goimports.go	/^func main() {$/;"	f
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/imports/goimports.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/imports/goimports_golden.go	/^func main() {$/;"	f
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/imports/goimports_golden.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports.go	/^func main() {$/;"	f
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports_golden.go	/^func main() {$/;"	f
main	pack/plugins/start/fatih-vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports_golden.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/templates/hello_world.go	/^func main() {$/;"	f
main	pack/plugins/start/fatih-vim-go/templates/hello_world.go	/^package main$/;"	p
main	pack/plugins/start/fatih-vim-go/templates/hello_world_test.go	/^package main$/;"	p
main_syntax	pack/plugins/start/fatih-vim-go/syntax/gohtmltmpl.vim	/^  let main_syntax = 'html'$/;"	v
mucomplete#act_on_textchanged	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#act_on_textchanged() " Assumes pumvisible() is false$/;"	f
mucomplete#compat#can_complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#can_complete()$/;"	f
mucomplete#compat#default	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#default(t)$/;"	f
mucomplete#compat#dict	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#dict(t)$/;"	f
mucomplete#compat#omni	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#omni(t)$/;"	f
mucomplete#compat#path	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#path(t)$/;"	f
mucomplete#compat#spel	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#spel(t)$/;"	f
mucomplete#compat#tags	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#tags(t)$/;"	f
mucomplete#compat#thes	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#thes(t)$/;"	f
mucomplete#compat#ulti	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#ulti(t)$/;"	f
mucomplete#compat#user	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#user(t)$/;"	f
mucomplete#compat#yes_you_can	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^fun! mucomplete#compat#yes_you_can(t)$/;"	f
mucomplete#cycle	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#cycle(dir)$/;"	f
mucomplete#cycle_or_select	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#cycle_or_select(dir)$/;"	f
mucomplete#disable_auto	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#disable_auto()$/;"	f
mucomplete#enable_auto	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#enable_auto()$/;"	f
mucomplete#init	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#init(dir, tab_completion) " Initialize\/reset internal state$/;"	f
mucomplete#insert_char_pre	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#insert_char_pre()$/;"	f
mucomplete#path#complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/path.vim	/^fun! mucomplete#path#complete() abort$/;"	f
mucomplete#popup_exit	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#popup_exit(ctrl)$/;"	f
mucomplete#spel#complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/spel.vim	/^fun! mucomplete#spel#complete() abort$/;"	f
mucomplete#tab_complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#tab_complete(dir)$/;"	f
mucomplete#toggle_auto	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! mucomplete#toggle_auto()$/;"	f
mucomplete#ultisnips#complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/ultisnips.vim	/^fun! mucomplete#ultisnips#complete() abort$/;"	f
mustNotError	get-plugins.go	/^func mustNotError(err error) {$/;"	f
name	pack/plugins/start/fatih-vim-go/addon-info.json	/^  "name": "vim-go",$/;"	s
neocomplcache#sources#tmuxcomplete#define	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplcache/sources/tmuxcomplete.vim	/^function! neocomplcache#sources#tmuxcomplete#define()$/;"	f
neocomplete#sources#tmuxcomplete#define	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplete/sources/tmuxcomplete.vim	/^function! neocomplete#sources#tmuxcomplete#define()$/;"	f
nofrilsTheme	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^type nofrilsTheme struct {$/;"	s
o	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^    nnoremap <silent> <buffer> o <CR><C-w>p$/;"	m
o	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^        nnoremap <buffer> <silent> o    :<C-U>exe <SID>BlameCommit((&splitbelow ? "botright" : "/;"	m
o	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> o     :<C-U>exe <SID>GF("split")<CR>$/;"	m
p	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^    nnoremap <silent> <buffer> p :call qf#preview#PreviewFileUnderCursor()<CR>$/;"	m
p	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> p :<C-U>execute <SID>StagePatch(line('.'),line('.')+v:count1-1)<C/;"	m
p	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    xnoremap <buffer> <silent> p :<C-U>execute <SID>StagePatch(line("'<"),line("'>"))<CR>$/;"	m
print_help	pack/plugins/start/w0rp-ale/test/script/custom-checks	/^function print_help() {$/;"	f
pytest	pack/plugins/start/w0rp-ale/test/command_callback/python_paths/namespace_package_pytest/pytest.ini	/^[pytest]$/;"	s
q	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^  noremap <buffer> <silent> q     :<C-U>call go#ui#CloseWindow()<CR>$/;"	m
q	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^        nnoremap <buffer> <silent> q    :exe substitute(bufwinnr(b:fugitive_blamed_bufnr).' winc/;"	m
q	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> q    :<C-U>bdelete<CR>$/;"	m
q	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> q :<C-U>if bufnr('$') == 1<Bar>quit<Bar>else<Bar>bdelete<Bar>endi/;"	m
q	pack/plugins/start/w0rp-ale/ftplugin/ale-fix-suggest.vim	/^noremap <buffer> q :q!<CR>$/;"	m
q	pack/plugins/start/w0rp-ale/ftplugin/ale-preview.vim	/^noremap <buffer> q :q!<CR>$/;"	m
qf	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^augroup qf$/;"	a
qf#GetEntryPath	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#GetEntryPath(line) abort$/;"	f
qf#GetList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#GetList()$/;"	f
qf#IsLocWindow	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#IsLocWindow(nmbr)$/;"	f
qf#IsLocWindowOpen	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#IsLocWindowOpen(nmbr) abort$/;"	f
qf#IsQfWindow	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#IsQfWindow(nmbr)$/;"	f
qf#IsQfWindowOpen	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#IsQfWindowOpen() abort$/;"	f
qf#OpenLoclist	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#OpenLoclist()$/;"	f
qf#OpenQuickfix	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#OpenQuickfix()$/;"	f
qf#PreviewFileUnderCursor	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function qf#PreviewFileUnderCursor()$/;"	f
qf#SetList	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^function! qf#SetList(newlist, ...)$/;"	f
qf#do#DoList	pack/plugins/start/romainl-vim-qf/autoload/qf/do.vim	/^function! qf#do#DoList(line, cmd)$/;"	f
qf#filegroup#NextFile	pack/plugins/start/romainl-vim-qf/autoload/qf/filegroup.vim	/^function! qf#filegroup#NextFile() abort$/;"	f
qf#filegroup#PreviousFile	pack/plugins/start/romainl-vim-qf/autoload/qf/filegroup.vim	/^function! qf#filegroup#PreviousFile() abort$/;"	f
qf#filter#FilterList	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! qf#filter#FilterList(pat, reject)$/;"	f
qf#filter#RestoreList	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! qf#filter#RestoreList()$/;"	f
qf#filter#ReuseTitle	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! qf#filter#ReuseTitle()$/;"	f
qf#namedlist#CompleteList	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^function! qf#namedlist#CompleteList(ArgLead, CmdLine, CursorPos)$/;"	f
qf#namedlist#ListLists	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^function! qf#namedlist#ListLists()$/;"	f
qf#namedlist#LoadList	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^function! qf#namedlist#LoadList(add, ...)$/;"	f
qf#namedlist#RemoveList	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^function! qf#namedlist#RemoveList(bang, ...)$/;"	f
qf#namedlist#SaveList	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^function! qf#namedlist#SaveList(add, name) abort$/;"	f
qf#preview#PreviewFileUnderCursor	pack/plugins/start/romainl-vim-qf/autoload/qf/preview.vim	/^function! qf#preview#PreviewFileUnderCursor()$/;"	f
qf#statusline#SetStatusline	pack/plugins/start/romainl-vim-qf/autoload/qf/statusline.vim	/^function! qf#statusline#SetStatusline()$/;"	f
qf#toggle#ToggleLocWindow	pack/plugins/start/romainl-vim-qf/autoload/qf/toggle.vim	/^function! qf#toggle#ToggleLocWindow(stay) abort$/;"	f
qf#toggle#ToggleQfWindow	pack/plugins/start/romainl-vim-qf/autoload/qf/toggle.vim	/^function! qf#toggle#ToggleQfWindow(stay) abort$/;"	f
qf#wrap#WrapCommand	pack/plugins/start/romainl-vim-qf/autoload/qf/wrap.vim	/^function! qf#wrap#WrapCommand(direction, prefix)$/;"	f
quickhl#cword#disable	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! quickhl#cword#disable() "{{{$/;"	f
quickhl#cword#enable	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! quickhl#cword#enable() "{{{$/;"	f
quickhl#cword#init_highlight	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! quickhl#cword#init_highlight() "{{{$/;"	f
quickhl#cword#refresh	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! quickhl#cword#refresh() "{{{$/;"	f
quickhl#cword#toggle	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! quickhl#cword#toggle() "{{{$/;"	f
quickhl#escape	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl.vim	/^function! quickhl#escape(pattern) "{{{$/;"	f
quickhl#get_selected_text	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl.vim	/^function! quickhl#get_selected_text() "{{{$/;"	f
quickhl#manual#add	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#add(pattern, escaped) "{{{$/;"	f
quickhl#manual#add_or_del	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#add_or_del(pattern, escaped) "{{{$/;"	f
quickhl#manual#clear_this	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#clear_this(mode) " {{{$/;"	f
quickhl#manual#colors	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#colors() "{{{$/;"	f
quickhl#manual#del	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#del(pattern, escaped) "{{{$/;"	f
quickhl#manual#disable	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#disable() "{{{$/;"	f
quickhl#manual#dump	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#dump() "{{{$/;"	f
quickhl#manual#enable	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#enable() "{{{$/;"	f
quickhl#manual#init_highlight	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#init_highlight() "{{{$/;"	f
quickhl#manual#list	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#list() "{{{$/;"	f
quickhl#manual#lock	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#lock() "{{{$/;"	f
quickhl#manual#lock_toggle	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#lock_toggle() "{{{$/;"	f
quickhl#manual#lock_window	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#lock_window() "{{{$/;"	f
quickhl#manual#lock_window_toggle	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#lock_window_toggle() "{{{$/;"	f
quickhl#manual#refresh	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#refresh() "{{{$/;"	f
quickhl#manual#reset	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#reset() "{{{$/;"	f
quickhl#manual#status	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#status() "{{{$/;"	f
quickhl#manual#this	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#this(mode) "{{{$/;"	f
quickhl#manual#this_motion	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#this_motion(motion_wise) " {{{$/;"	f
quickhl#manual#this_whole_word	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#this_whole_word(mode) "{{{$/;"	f
quickhl#manual#unlock	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#unlock() "{{{$/;"	f
quickhl#manual#unlock_window	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! quickhl#manual#unlock_window() "{{{$/;"	f
quickhl#our_match	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl.vim	/^function! quickhl#our_match(pattern) "{{{$/;"	f
quickhl#tag#disable	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! quickhl#tag#disable() "{{{$/;"	f
quickhl#tag#enable	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! quickhl#tag#enable() "{{{$/;"	f
quickhl#tag#init_highlight	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! quickhl#tag#init_highlight() "{{{$/;"	f
quickhl#tag#refresh	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! quickhl#tag#refresh() "{{{$/;"	f
quickhl#tag#toggle	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! quickhl#tag#toggle() "{{{$/;"	f
quickhl#warn	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl.vim	/^function! quickhl#warn(error) "{{{$/;"	f
quickhl#windo	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl.vim	/^function! quickhl#windo(func, obj) "{{{$/;"	f
r	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> r :<C-U>edit<CR>$/;"	m
repeat#invalidate	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^function! repeat#invalidate()$/;"	f
repeat#run	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^function! repeat#run(count)$/;"	f
repeat#set	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^function! repeat#set(sequence,...)$/;"	f
repeat#setreg	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^function! repeat#setreg(sequence,register)$/;"	f
repeat#wrap	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^function! repeat#wrap(command,count)$/;"	f
repeatPlugin	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^augroup repeatPlugin$/;"	a
repeat_custom_motion	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^    augroup repeat_custom_motion$/;"	a
repository	pack/plugins/start/fatih-vim-go/addon-info.json	/^  "repository" : {"type": "git", "url": "https:\/\/github.com\/fatih\/vim-go.git"}$/;"	o
reverse	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^func reverse(vcr vimColorRow) vimColorRow {$/;"	f
robertmeta's vimrc	README.md	/^# robertmeta's vimrc$/;"	h
s	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^    nnoremap <silent> <buffer> s <C-w><CR>$/;"	m
s:ALELintImpl	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! s:ALELintImpl(buffer) abort$/;"	f
s:ALEQueueImpl	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^function! s:ALEQueueImpl(delay, linting_flag, buffer) abort$/;"	f
s:AddHintsForTypeScriptParsingErrors	pack/plugins/start/w0rp-ale/autoload/ale/handlers/eslint.vim	/^function! s:AddHintsForTypeScriptParsingErrors(output) abort$/;"	f
s:AddList	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! s:AddList()$/;"	f
s:AddProblemsFromOtherBuffers	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:AddProblemsFromOtherBuffers(buffer, linters) abort$/;"	f
s:AddTitle	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! s:AddTitle(title)$/;"	f
s:ApplyPartialTimer	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! s:ApplyPartialTimer(timer_id) abort$/;"	f
s:Blame	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
s:BlameCommit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BlameCommit(cmd) abort$/;"	f
s:BlameJump	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
s:BlameSyntax	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
s:BlankDown	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:BlankDown(count) abort$/;"	f
s:BlankUp	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:BlankUp(count) abort$/;"	f
s:Browse	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
s:BufReadIndex	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndex() abort$/;"	f
s:BufReadIndexFile	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndexFile() abort$/;"	f
s:BufReadObject	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadObject() abort$/;"	f
s:BufWinId	pack/plugins/start/w0rp-ale/autoload/ale/list.vim	/^function! s:BufWinId(buffer) abort$/;"	f
s:BufWriteIndexFile	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:BufWriteIndexFile() abort$/;"	f
s:BuildClassPathOption	pack/plugins/start/w0rp-ale/ale_linters/java/javac.vim	/^function! s:BuildClassPathOption(buffer, import_paths) abort$/;"	f
s:BuildClassPathOption	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^function! s:BuildClassPathOption(buffer, import_paths) abort$/;"	f
s:BuildSignMap	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^function! s:BuildSignMap(buffer, current_sign_list, grouped_items) abort$/;"	f
s:BuildText	pack/plugins/start/w0rp-ale/ale_linters/ruby/reek.vim	/^function! s:BuildText(buffer, error) abort$/;"	f
s:CheckBinaries	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:CheckBinaries()$/;"	f
s:CheckForBadConfig	pack/plugins/start/w0rp-ale/autoload/ale/handlers/eslint.vim	/^function! s:CheckForBadConfig(buffer, lines) abort$/;"	f
s:CheckWithLSP	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:CheckWithLSP(buffer, linter) abort$/;"	f
s:CleanupEveryBuffer	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! s:CleanupEveryBuffer() abort$/;"	f
s:CloseWindowIfNeeded	pack/plugins/start/w0rp-ale/autoload/ale/list.vim	/^function! s:CloseWindowIfNeeded(buffer) abort$/;"	f
s:CmpPatterns	pack/plugins/start/w0rp-ale/autoload/ale/pattern_options.vim	/^function! s:CmpPatterns(left_item, right_item) abort$/;"	f
s:Commit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Commit(args, ...) abort$/;"	f
s:CommitComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
s:Complete	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:Complete(A,L,P)$/;"	f
s:CompletionStillValid	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! s:CompletionStillValid(request_id) abort$/;"	f
s:Context	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:Context(reverse)$/;"	f
s:ContextMotion	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:ContextMotion(reverse)$/;"	f
s:CreateCountDict	pack/plugins/start/w0rp-ale/autoload/ale/statusline.vim	/^function! s:CreateCountDict() abort$/;"	f
s:CreateTSServerMessageData	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! s:CreateTSServerMessageData(message) abort$/;"	f
s:CreateTemporaryFileForJob	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:CreateTemporaryFileForJob(buffer, temporary_file) abort$/;"	f
s:CreateTemporaryFileForJob	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! s:CreateTemporaryFileForJob(buffer, temporary_file, input) abort$/;"	f
s:Diff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Diff(vert,keepfocus,...) abort$/;"	f
s:DirComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
s:DisablePostamble	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! s:DisablePostamble() abort$/;"	f
s:Dispatch	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Dispatch(bang, args)$/;"	f
s:Echo	pack/plugins/start/w0rp-ale/autoload/ale/debugging.vim	/^function! s:Echo(message) abort$/;"	f
s:EchoCommand	pack/plugins/start/w0rp-ale/autoload/ale/debugging.vim	/^function! s:EchoCommand(item) abort$/;"	f
s:EchoCommandHistory	pack/plugins/start/w0rp-ale/autoload/ale/debugging.vim	/^function! s:EchoCommandHistory() abort$/;"	f
s:EchoExecutable	pack/plugins/start/w0rp-ale/autoload/ale/debugging.vim	/^function! s:EchoExecutable(item) abort$/;"	f
s:EchoGlobalVariables	pack/plugins/start/w0rp-ale/autoload/ale/debugging.vim	/^function! s:EchoGlobalVariables() abort$/;"	f
s:EchoImpl	pack/plugins/start/w0rp-ale/autoload/ale/cursor.vim	/^function! s:EchoImpl() abort$/;"	f
s:EchoLinterAliases	pack/plugins/start/w0rp-ale/autoload/ale/debugging.vim	/^function! s:EchoLinterAliases(all_linters) abort$/;"	f
s:EchoLinterVariables	pack/plugins/start/w0rp-ale/autoload/ale/debugging.vim	/^function! s:EchoLinterVariables(variable_list) abort$/;"	f
s:EchoWithShortMess	pack/plugins/start/w0rp-ale/autoload/ale/cursor.vim	/^function! s:EchoWithShortMess(setting, message) abort$/;"	f
s:Edit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Edit(cmd,bang,...) abort$/;"	f
s:EditComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
s:EditRunComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
s:EnablePreamble	pack/plugins/start/w0rp-ale/autoload/ale/toggle.vim	/^function! s:EnablePreamble() abort$/;"	f
s:Error	pack/plugins/start/fatih-vim-go/autoload/go/import.vim	/^function! s:Error(s) abort$/;"	f
s:ExecMove	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:ExecMove(cmd) abort$/;"	f
s:ExecuteInTree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
s:ExtraErrorMsg	pack/plugins/start/w0rp-ale/ale_linters/javascript/flow.vim	/^function! s:ExtraErrorMsg(current, new) abort$/;"	f
s:FileByOffset	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:FileByOffset(num)$/;"	f
s:FileRead	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:FileRead() abort$/;"	f
s:FindConfig	pack/plugins/start/w0rp-ale/ale_linters/pug/puglint.vim	/^function! s:FindConfig(buffer) abort$/;"	f
s:FindConfig	pack/plugins/start/w0rp-ale/autoload/ale/fixers/prettier.vim	/^function! s:FindConfig(buffer) abort$/;"	f
s:FindConnection	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! s:FindConnection(key, value) abort$/;"	f
s:FindDUBConfig	pack/plugins/start/w0rp-ale/ale_linters/d/dmd.vim	/^function! s:FindDUBConfig(buffer) abort$/;"	f
s:FindHistoryItem	pack/plugins/start/w0rp-ale/autoload/ale/history.vim	/^function! s:FindHistoryItem(buffer, job_id) abort$/;"	f
s:FindItemAtCursor	pack/plugins/start/w0rp-ale/autoload/ale/cursor.vim	/^function! s:FindItemAtCursor() abort$/;"	f
s:FindProjectWithInitRequestID	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! s:FindProjectWithInitRequestID(conn, init_request_id) abort$/;"	f
s:FindSpan	pack/plugins/start/w0rp-ale/autoload/ale/handlers/rust.vim	/^function! s:FindSpan(buffer, span) abort$/;"	f
s:FinishCommit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:FinishCommit() abort$/;"	f
s:FixList	pack/plugins/start/w0rp-ale/autoload/ale/list.vim	/^function! s:FixList(list) abort$/;"	f
s:GF	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
s:GFInit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:GFInit(...) abort$/;"	f
s:GatherOutput	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:GatherOutput(job_id, line) abort$/;"	f
s:GatherOutput	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! s:GatherOutput(job_id, line) abort$/;"	f
s:GetAliasedFiletype	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! s:GetAliasedFiletype(original_filetype) abort$/;"	f
s:GetBuildDirectory	pack/plugins/start/w0rp-ale/ale_linters/c/clangtidy.vim	/^function! s:GetBuildDirectory(buffer) abort$/;"	f
s:GetBuildDirectory	pack/plugins/start/w0rp-ale/ale_linters/cpp/clangtidy.vim	/^function! s:GetBuildDirectory(buffer) abort$/;"	f
s:GetCachedExtensionMap	pack/plugins/start/w0rp-ale/autoload/ale/filetypes.vim	/^function! s:GetCachedExtensionMap() abort$/;"	f
s:GetCallbacks	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! s:GetCallbacks() abort$/;"	f
s:GetConflictingPluginWarning	pack/plugins/start/w0rp-ale/after/plugin/ale.vim	/^function! s:GetConflictingPluginWarning(plugin_name) abort$/;"	f
s:GetCounts	pack/plugins/start/w0rp-ale/autoload/ale/statusline.vim	/^function! s:GetCounts(buffer) abort$/;"	f
s:GetDetails	pack/plugins/start/w0rp-ale/ale_linters/javascript/flow.vim	/^function! s:GetDetails(error) abort$/;"	f
s:GetDir	pack/plugins/start/w0rp-ale/ale_linters/python/mypy.vim	/^function! s:GetDir(buffer) abort$/;"	f
s:GetEscapedExecutable	pack/plugins/start/w0rp-ale/ale_linters/erlang/syntaxerl.vim	/^function! s:GetEscapedExecutable(buffer) abort$/;"	f
s:GetExecutable	pack/plugins/start/w0rp-ale/autoload/ale/handlers/sml.vim	/^function! s:GetExecutable(buffer, source) abort$/;"	f
s:GetJSONLines	pack/plugins/start/w0rp-ale/ale_linters/javascript/flow.vim	/^function! s:GetJSONLines(lines) abort$/;"	f
s:GetLSPCompletions	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! s:GetLSPCompletions(linter) abort$/;"	f
s:GetLinterNames	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! s:GetLinterNames(original_filetype) abort$/;"	f
s:GetLinterVariables	pack/plugins/start/w0rp-ale/autoload/ale/debugging.vim	/^function! s:GetLinterVariables(filetype, linter_names) abort$/;"	f
s:GetRegex	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! s:GetRegex(map, filetype) abort$/;"	f
s:Git	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Git(bang, args) abort$/;"	f
s:GitComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:GitComplete(A, L, P) abort$/;"	f
s:GoInstallBinaries	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:GoInstallBinaries(updateBinaries, ...)$/;"	f
s:GoNeosnippet	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^function! s:GoNeosnippet()$/;"	f
s:GoUltiSnips	pack/plugins/start/fatih-vim-go/ftplugin/go/snippets.vim	/^function! s:GoUltiSnips()$/;"	f
s:GodocView	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! s:GodocView(newposition, position, content) abort$/;"	f
s:Grep	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:Grep(bang,args,prg) abort$/;"	f
s:Grep	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Grep(cmd,bang,arg) abort$/;"	f
s:GroupLoclistItems	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^function! s:GroupLoclistItems(buffer, loclist) abort$/;"	f
s:HandleChannelMessage	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! s:HandleChannelMessage(channel, message) abort$/;"	f
s:HandleCommandMessage	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! s:HandleCommandMessage(job_id, message) abort$/;"	f
s:HandleExit	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:HandleExit(job_id, exit_code) abort$/;"	f
s:HandleExit	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! s:HandleExit(job_id, exit_code) abort$/;"	f
s:HandleInitializeResponse	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! s:HandleInitializeResponse(conn, response) abort$/;"	f
s:HandleLSPDiagnostics	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:HandleLSPDiagnostics(conn_id, response) abort$/;"	f
s:HandleLSPErrorMessage	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:HandleLSPErrorMessage(error_message) abort$/;"	f
s:HandleLoclist	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:HandleLoclist(linter_name, buffer, loclist) abort$/;"	f
s:HandleSyntaxError	pack/plugins/start/w0rp-ale/autoload/ale/handlers/ruby.vim	/^function! s:HandleSyntaxError(buffer, lines) abort$/;"	f
s:HandleTSServerDiagnostics	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:HandleTSServerDiagnostics(response, error_type) abort$/;"	f
s:HandleUnixFormat	pack/plugins/start/w0rp-ale/autoload/ale/handlers/unix.vim	/^function! s:HandleUnixFormat(buffer, lines, type) abort$/;"	f
s:InvokeChain	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:InvokeChain(buffer, linter, chain_index, input) abort$/;"	f
s:IsBoolean	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! s:IsBoolean(value) abort$/;"	f
s:IsCallback	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^function! s:IsCallback(value) abort$/;"	f
s:IsHeaderFile	pack/plugins/start/w0rp-ale/autoload/ale/handlers/gcc.vim	/^function! s:IsHeaderFile(filename) abort$/;"	f
s:JumpFileChunk	pack/plugins/start/romainl-vim-qf/autoload/qf/filegroup.vim	/^function! s:JumpFileChunk(down) abort$/;"	f
s:JumpInit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:JumpInit(...) abort$/;"	f
s:JumpToFirstItemOfFileChunk	pack/plugins/start/romainl-vim-qf/autoload/qf/filegroup.vim	/^function! s:JumpToFirstItemOfFileChunk() abort$/;"	f
s:KillHandler	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! s:KillHandler(timer) abort$/;"	f
s:LintOnEnter	pack/plugins/start/w0rp-ale/autoload/ale/events.vim	/^function! s:LintOnEnter(buffer) abort$/;"	f
s:LoadArgCount	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^function! s:LoadArgCount(function) abort$/;"	f
s:Log	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Log(cmd, line1, line2, ...) abort$/;"	f
s:MAX_COL_SIZE	pack/plugins/start/w0rp-ale/autoload/ale/highlight.vim	/^let s:MAX_COL_SIZE = 1073741824 " pow(2, 30)$/;"	v
s:MAX_POS_VALUES	pack/plugins/start/w0rp-ale/autoload/ale/highlight.vim	/^let s:MAX_POS_VALUES = 8$/;"	v
s:MapNextFamily	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:MapNextFamily(map,cmd) abort$/;"	f
s:MarkProjectAsInitialized	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! s:MarkProjectAsInitialized(conn, project) abort$/;"	f
s:Merge	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Merge(cmd, bang, args) abort$/;"	f
s:Move	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Move(force,destination) abort$/;"	f
s:Move	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:Move(cmd, count, map) abort$/;"	f
s:MoveComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:MoveComplete(A,L,P) abort$/;"	f
s:MoveSelectionDown	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:MoveSelectionDown(count) abort$/;"	f
s:MoveSelectionUp	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:MoveSelectionUp(count) abort$/;"	f
s:N	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:N = 0              " Length of the current completion chain$/;"	v
s:NeoVimCallback	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! s:NeoVimCallback(job, data, event) abort$/;"	f
s:NewConnection	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! s:NewConnection() abort$/;"	f
s:Qlist	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^function! s:Qlist(command, selection, start_at_cursor, force, ...)$/;"	f
s:RehighlightBlame	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:RehighlightBlame() abort$/;"	f
s:RemapItemTypes	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:RemapItemTypes(type_map, loclist) abort$/;"	f
s:RemoteComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:RemoteComplete(A, L, P) abort$/;"	f
s:Remove	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Remove(after, force) abort$/;"	f
s:RemoveProblemsForDisabledLinters	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:RemoveProblemsForDisabledLinters(buffer, linters) abort$/;"	f
s:RemoveUnicodeQuotes	pack/plugins/start/w0rp-ale/autoload/ale/handlers/gcc.vim	/^function! s:RemoveUnicodeQuotes(text) abort$/;"	f
s:Rename_complete	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:Rename_complete(A, L, P) abort$/;"	f
s:ReplaceCmd	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
s:ReplaceCompleteopt	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! s:ReplaceCompleteopt() abort$/;"	f
s:ResetLists	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! s:ResetLists()$/;"	f
s:RevisionComplete	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:RevisionComplete(A, L, P) abort$/;"	f
s:RunFixer	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! s:RunFixer(options) abort$/;"	f
s:RunJob	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:RunJob(options) abort$/;"	f
s:RunJob	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^function! s:RunJob(options) abort$/;"	f
s:RunLinter	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:RunLinter(buffer, linter) abort$/;"	f
s:SEVERITY_ERROR	pack/plugins/start/w0rp-ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_ERROR = 1$/;"	v
s:SEVERITY_HINT	pack/plugins/start/w0rp-ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_HINT = 4$/;"	v
s:SEVERITY_INFORMATION	pack/plugins/start/w0rp-ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_INFORMATION = 3$/;"	v
s:SEVERITY_WARNING	pack/plugins/start/w0rp-ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_WARNING = 2$/;"	v
s:SandboxCheck	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^        function! s:SandboxCheck() abort$/;"	f
s:SendMessageData	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^function! s:SendMessageData(conn, data) abort$/;"	f
s:SetList	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! s:SetList(pat, reject, strategy)$/;"	f
s:SetListsImpl	pack/plugins/start/w0rp-ale/autoload/ale/list.vim	/^function! s:SetListsImpl(timer_id, buffer, loclist) abort$/;"	f
s:SetSignColumnWithoutErrorsHighlight	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^    function! s:SetSignColumnWithoutErrorsHighlight() abort$/;"	f
s:SetTagbar	pack/plugins/start/fatih-vim-go/ftplugin/go/tagbar.vim	/^function! s:SetTagbar()$/;"	f
s:SetTitle	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^function! s:SetTitle(pat, reject)$/;"	f
s:Setup	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! s:Setup(enabled) abort$/;"	f
s:ShouldOpen	pack/plugins/start/w0rp-ale/autoload/ale/list.vim	/^function! s:ShouldOpen(buffer) abort$/;"	f
s:ShouldSuggestForType	pack/plugins/start/w0rp-ale/autoload/ale/fix/registry.vim	/^function! s:ShouldSuggestForType(suggested_filetypes, type_list) abort$/;"	f
s:SilentSudoCmd	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SilentSudoCmd(editor) abort$/;"	f
s:StageDiff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
s:StageDiffEdit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
s:StageNext	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageNext(count) abort$/;"	f
s:StagePatch	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
s:StagePrevious	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StagePrevious(count) abort$/;"	f
s:StageReloadSeek	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageReloadSeek(target,lnum1,lnum2) abort$/;"	f
s:StageToggle	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
s:StageUndo	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:StageUndo() abort$/;"	f
s:Status	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Status() abort$/;"	f
s:StatusForListFormat	pack/plugins/start/w0rp-ale/autoload/ale/statusline.vim	/^function! s:StatusForListFormat() abort$/;"	f
s:StopCurrentJobs	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^function! s:StopCurrentJobs(buffer, include_lint_file_jobs) abort$/;"	f
s:StopCursorTimer	pack/plugins/start/w0rp-ale/autoload/ale/cursor.vim	/^function! s:StopCursorTimer() abort$/;"	f
s:SubComplete	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:SubComplete(A,L,P)$/;"	f
s:SudoEditInit	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SudoEditInit() abort$/;"	f
s:SudoError	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SudoError() abort$/;"	f
s:SudoReadCmd	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SudoReadCmd() abort$/;"	f
s:SudoSetup	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SudoSetup(file) abort$/;"	f
s:SudoWriteCmd	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:SudoWriteCmd() abort$/;"	f
s:TemporaryFilename	pack/plugins/start/w0rp-ale/autoload/ale/command.vim	/^function! s:TemporaryFilename(buffer) abort$/;"	f
s:TimerHandler	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^function! s:TimerHandler(...) abort$/;"	f
s:Transform	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:Transform(algorithm,type)$/;"	f
s:TransformOpfunc	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:TransformOpfunc(type)$/;"	f
s:TransformSetup	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:TransformSetup(algorithm)$/;"	f
s:UpdateLineNumbers	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^function! s:UpdateLineNumbers(buffer, current_sign_list, loclist) abort$/;"	f
s:UsingModule	pack/plugins/start/w0rp-ale/ale_linters/python/flake8.vim	/^function! s:UsingModule(buffer) abort$/;"	f
s:VimCloseCallback	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! s:VimCloseCallback(channel) abort$/;"	f
s:VimErrorCallback	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! s:VimErrorCallback(channel, data) abort$/;"	f
s:VimExitCallback	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! s:VimExitCallback(job, exit_code) abort$/;"	f
s:VimOutputCallback	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^function! s:VimOutputCallback(channel, data) abort$/;"	f
s:Wall	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:Wall() abort$/;"	f
s:Wq	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
s:Write	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
s:_handleOldOptions	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:_handleOldOptions() abort$/;"	f
s:abbreviate_from_dict	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:abbreviate_from_dict(cmd,dict)$/;"	f
s:absolutes	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^function! s:absolutes(first, ...) abort$/;"	f
s:abstract_prototype	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:acquire_theme_data	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:acquire_theme_data()$/;"	f
s:act_on_pumvisible	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:act_on_pumvisible()$/;"	f
s:add_db	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! s:add_db(db_file) abort$/;"	f
s:add_methods	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
s:added_db_files	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^let s:added_db_files = {}$/;"	v
s:added_dbs	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^let s:added_dbs = []$/;"	v
s:apply_syntax_highlightings	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:apply_syntax_highlightings()$/;"	f
s:asmfmt_autosave	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:asmfmt_autosave()$/;"	f
s:async_guru	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:async_guru(args) abort$/;"	f
s:auto_sameids	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:auto_sameids()$/;"	f
s:auto_type_info	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:auto_type_info()$/;"	f
s:available	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^let s:available = has('nvim') || ($/;"	v
s:badgood	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:badgood(args)$/;"	f
s:beep	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:beep()$/;"	f
s:begin_failed_skip_pattern	pack/plugins/start/w0rp-ale/ale_linters/perl/perl.vim	/^let s:begin_failed_skip_pattern = '\\v' . join([$/;"	v
s:bin_dir	pack/plugins/start/w0rp-ale/autoload/ale/python.vim	/^let s:bin_dir = has('unix') ? 'bin' : 'Scripts'$/;"	v
s:buf_nr	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^let s:buf_nr = -1$/;"	v
s:buf_nr	pack/plugins/start/fatih-vim-go/autoload/go/ui.vim	/^let s:buf_nr = -1$/;"	v
s:buffer	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
s:buffer_commit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
s:buffer_compare_age	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
s:buffer_containing_commit	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
s:buffer_exec	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:buffer_exec(buffer, fn)$/;"	f
s:buffer_expand	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
s:buffer_getline	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
s:buffer_getvar	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
s:buffer_name	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
s:buffer_path	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
s:buffer_prototype	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_repo	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
s:buffer_rev	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
s:buffer_setvar	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
s:buffer_sha1	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
s:buffer_spec	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  function! s:buffer_spec() dict abort$/;"	f
s:buffer_type	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
s:buffer_up	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_up(...) dict abort$/;"	f
s:bufnr	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^let s:bufnr       = bufnr('')$/;"	v
s:build_command	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:build_command(cmd)$/;"	f
s:build_command	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! s:build_command(base, capture_args, splitmode)$/;"	f
s:c	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:c()$/;"	f
s:c_flag	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:c_flag = gitgutter#utility#git_supports_command_line_config_override()$/;"	v
s:cache_project_root	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! s:cache_project_root(path) abort$/;"	f
s:cached_map	pack/plugins/start/w0rp-ale/autoload/ale/filetypes.vim	/^let s:cached_map = {}$/;"	v
s:callback	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^  function! s:callback(chan, msg) closure$/;"	f
s:callback	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  function! s:callback(chan, msg) closure$/;"	f
s:callback	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  function! s:callback(chan, msg) closure$/;"	f
s:callback	pack/plugins/start/fatih-vim-go/autoload/go/test.vim	/^  function! s:callback(chan, msg) closure$/;"	f
s:callback_handlers_on_exit	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:callback_handlers_on_exit(job, exit_status, data) abort$/;"	f
s:camelcase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:camelcase(word)$/;"	f
s:can_complete	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:can_complete(i) " Is the i-th completion method applicable?$/;"	f
s:can_diffoff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
s:cancel_auto	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:cancel_auto = 0    " Used to detect whether the user leaves the pop-up menu with ctrl-y, c/;"	v
s:cd	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:cd = exists('*haslocaldir') && haslocaldir() ? 'lcd ' : 'cd '$/;"	v
s:cfile	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:cfile() abort$/;"	f
s:changesurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:changesurround(...) " {{{1$/;"	f
s:channel_log	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:channel_log = s:plugin_dir.'channel.log'$/;"	v
s:chomp	pack/plugins/start/fatih-vim-go/autoload/go/keyify.vim	/^function! s:chomp(string)$/;"	f
s:classpath_sep	pack/plugins/start/w0rp-ale/ale_linters/java/javac.vim	/^let s:classpath_sep = has('unix') ? ':' : ';'$/;"	v
s:classpath_sep	pack/plugins/start/w0rp-ale/ale_linters/kotlin/kotlinc.vim	/^let s:classpath_sep = has('unix') ? ':' : ';'$/;"	v
s:close_cb	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^  function! s:close_cb(ch) closure$/;"	f
s:closematch	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
s:cmd_job	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^function s:cmd_job(args) abort$/;"	f
s:cmp	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/ultisnips.vim	/^let s:cmp = 'stridx(v:val, l:pat)' . (get(g:, 'mucomplete#ultisnips#match_at_start', 1) ? '==0' /;"	v
s:code	pack/plugins/start/fatih-vim-go/autoload/fzf/decls.vim	/^function! s:code(group, attr) abort$/;"	f
s:coerce	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:coerce(transformation)$/;"	f
s:col_end_patterns	pack/plugins/start/w0rp-ale/autoload/ale/handlers/eslint.vim	/^let s:col_end_patterns = [$/;"	v
s:color	pack/plugins/start/fatih-vim-go/autoload/fzf/decls.vim	/^function! s:color(str, group) abort$/;"	f
s:colorful_term	vimrc	/^        let s:colorful_term=(&term=~?'xterm') || (&term=~?'screen')$/;"	v
s:colour	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  fun! s:colour(r, g, b)$/;"	f
s:command	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:command(definition) abort$/;"	f
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands = {}$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.abbrev     = s:commands.abstract.clone()$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.abbrev.options = {"buffer":0,"cmdline":0,"delete":0}$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.abstract = s:object.clone()$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.delete   = s:commands.abbrev.clone()$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.delete.options.delete = 1$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.search = s:commands.abstract.clone()$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.search.options = {"word": 0, "variable": 0, "flags": ""}$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.substitute = s:commands.abstract.clone()$/;"	v
s:commands	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:commands.substitute.options = {"word": 0, "variable": 0, "flags": "g"}$/;"	v
s:commands	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:commands = []$/;"	v
s:commands.abbrev.process	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:commands.abbrev.process(bang,line1,line2,count,args)$/;"	f
s:commands.abstract.dispatch	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:commands.abstract.dispatch(bang,line1,line2,count,args)$/;"	f
s:commands.abstract.go	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:commands.abstract.go(bang,line1,line2,count,args)$/;"	f
s:commands.search.process	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:commands.search.process(bang,line1,line2,count,args)$/;"	f
s:commands.substitute.process	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:commands.substitute.process(bang,line1,line2,count,args)$/;"	f
s:common_efm	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:common_efm = ''$/;"	v
s:compl_mappings	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:compl_mappings = extend({$/;"	v
s:compl_methods	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:compl_methods = [] " Current completion chain$/;"	v
s:compl_text	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:compl_text = ''    " Text to be completed$/;"	v
s:complete	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^fun! s:complete(lead, cmdline, cursor)$/;"	f
s:configured_tree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:configured_tree(git_dir) abort$/;"	f
s:connections	pack/plugins/start/w0rp-ale/autoload/ale/lsp.vim	/^let s:connections = []$/;"	v
s:convert_colors	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:convert_colors()$/;"	f
s:countdown	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:countdown = 0      " Keeps track of how many other completion attempts to try$/;"	v
s:coverage_browser_callback	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! s:coverage_browser_callback(coverfile, job, exit_status, data)$/;"	f
s:coverage_browser_handler	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! s:coverage_browser_handler(job, exit_status, data) abort$/;"	f
s:coverage_browser_handler_jobs	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^let s:coverage_browser_handler_jobs = {}$/;"	v
s:coverage_callback	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! s:coverage_callback(coverfile, job, exit_status, data)$/;"	f
s:coverage_handler	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function! s:coverage_handler(job, exit_status, data) abort$/;"	f
s:coverage_handler_jobs	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^let s:coverage_handler_jobs = {}$/;"	v
s:coverage_job	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^function s:coverage_job(args)$/;"	f
s:cpath	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:cpath(path) abort$/;"	f
s:create_cmd	pack/plugins/start/fatih-vim-go/autoload/go/tags.vim	/^func s:create_cmd(args) abort$/;"	f
s:create_color_variables	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^    fun! s:create_color_variables(color_name, rich_color, term_color)$/;"	f
s:create_dictionary	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:create_dictionary(lhs,rhs,opts)$/;"	f
s:ctrlx_out	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:ctrlx_out = "\\<plug>(MUcompleteOut)"$/;"	v
s:curhour	vimrc	/^                        let s:curhour=system('date -u +%H')$/;"	v
s:current_dir	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^let s:current_dir = expand('%:p:h')$/;"	v
s:current_file	pack/plugins/start/fatih-vim-go/autoload/go/template.vim	/^let s:current_file = expand("<sfile>")$/;"	v
s:current_fileencodings	pack/plugins/start/fatih-vim-go/ftdetect/gofiletype.vim	/^let s:current_fileencodings = ''$/;"	v
s:current_fileformats	pack/plugins/start/fatih-vim-go/ftdetect/gofiletype.vim	/^let s:current_fileformats = ''$/;"	v
s:cursor_options	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:cursor_options() abort$/;"	f
s:cursor_timer	pack/plugins/start/w0rp-ale/autoload/ale/cursor.vim	/^let s:cursor_timer = -1$/;"	v
s:cword	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^let s:cword = {$/;"	v
s:cword.clear	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! s:cword.clear() "{{{$/;"	f
s:cword.init	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! s:cword.init() "{{{$/;"	f
s:cword.init_highlight	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! s:cword.init_highlight() "{{{$/;"	f
s:cword.refresh	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! s:cword.refresh() "{{{$/;"	f
s:cword.set	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/cword.vim	/^function! s:cword.set() "{{{$/;"	f
s:dashcase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:dashcase(word)$/;"	f
s:decho	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:decho(msg) "{{{1$/;"	f
s:def_job	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function s:def_job(args) abort$/;"	f
s:default	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^function! s:default() abort$/;"	f
s:default_ale_linter_aliases	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^let s:default_ale_linter_aliases = {$/;"	v
s:default_ale_linters	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^let s:default_ale_linters = {$/;"	v
s:default_dir	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:default_dir = { 'c-p' : -1, 'keyp': -1 }$/;"	v
s:default_list_type_commands	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^let s:default_list_type_commands = {$/;"	v
s:default_options	pack/plugins/start/w0rp-ale/ale_linters/html/tidy.vim	/^let s:default_options = get(g:, 'ale_html_tidy_args', '-q -e -language en')$/;"	v
s:default_options	pack/plugins/start/w0rp-ale/ale_linters/python/flake8.vim	/^let s:default_options = get(g:, 'ale_python_flake8_args', '')$/;"	v
s:default_registry	pack/plugins/start/w0rp-ale/autoload/ale/fix/registry.vim	/^let s:default_registry = {$/;"	v
s:default_settings	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^let s:default_settings = {$/;"	v
s:define_commands	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:define_commands() abort$/;"	f
s:did_check_exe	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let s:did_check_exe = 0$/;"	v
s:diff_modifier	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diff_modifier(count) abort$/;"	f
s:diff_restore	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diff_restore() abort$/;"	f
s:diff_window_count	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
s:diffoff	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff() abort$/;"	f
s:diffoff_all	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
s:diffthis	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:diffthis() abort$/;"	f
s:dir	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:dir = 1            " Direction to search for the next completion method (1=fwd, -1=bwd)$/;"	v
s:dir_for_worktree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:dir_for_worktree = {}$/;"	v
s:dispatcher	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:dispatcher(bang,line1,line2,count,args)$/;"	f
s:done	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^  let s:done += 1$/;"	v
s:done	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:done = 0$/;"	v
s:done	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^  let s:done += 1$/;"	v
s:done	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:done = 0$/;"	v
s:dosurround	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
s:dotcase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:dotcase(word)$/;"	f
s:dotfiles	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^let s:dotfiles = '\\(^\\|\\s\\s\\)\\zs\\.\\S\\+'$/;"	v
s:dummy_sign_id	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:dummy_sign_id = s:first_sign_id - 1$/;"	v
s:echo	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! s:echo(msg, hi)$/;"	f
s:echo_go_info	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:echo_go_info()$/;"	f
s:egrep_pattern	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:egrep_pattern(dict,boundaries)$/;"	f
s:elapsed_time	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^  let s:elapsed_time = substitute(reltimestr(reltime(s:started)), '^\\s*\\(.\\{-}\\)\\s*$', '\\1/;"	v
s:enable_neovim	pack/plugins/start/w0rp-ale/ale_linters/vim/vint.vim	/^let s:enable_neovim = has('nvim') ? ' --enable-neovim ' : ''$/;"	v
s:enable_syntax	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^function! s:enable_syntax() abort$/;"	f
s:end_col_pattern_map	pack/plugins/start/w0rp-ale/ale_linters/python/flake8.vim	/^let s:end_col_pattern_map = {$/;"	v
s:entries	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:entries(path)$/;"	f
s:env_cache	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^let s:env_cache = {}$/;"	v
s:error_delay_ms	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^let s:error_delay_ms = 1000 * 60 * 2$/;"	v
s:error_file	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^let s:error_file = tempname()$/;"	v
s:error_info_cb	pack/plugins/start/fatih-vim-go/autoload/go/cmd.vim	/^  function! s:error_info_cb(job, exit_status, data) closure abort$/;"	f
s:error_info_cb	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^  function! s:error_info_cb(job, exit_status, data) closure$/;"	f
s:error_info_cb	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^  function! s:error_info_cb(job, exit_status, data) closure$/;"	f
s:error_priority	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^let s:error_priority = 1$/;"	v
s:errored	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^      let s:errored = 0$/;"	v
s:errored	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:errored = 0$/;"	v
s:errors	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^      let s:errors += 1$/;"	v
s:errors	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^  let s:errors += 1$/;"	v
s:errors	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:errors = 0$/;"	v
s:escape	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^let s:escape = 'substitute(escape(v:val, ".$~"), "*", ".*", "g")'$/;"	v
s:escaped	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^function! s:escaped(first, last) abort$/;"	f
s:exe	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:exe(cmd) "{{{1$/;"	f
s:executable	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:executable(binary) abort$/;"	f
s:executable_cache_map	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^    let s:executable_cache_map = {}$/;"	v
s:executables	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:executables = {}$/;"	v
s:exit_cb	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^  function! s:exit_cb(job, exitval) closure$/;"	f
s:exit_cb	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^  function! s:exit_cb(job, exitval) closure$/;"	f
s:exit_cb	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^  function! s:exit_cb(job, exitval) closure$/;"	f
s:exit_cb	pack/plugins/start/fatih-vim-go/autoload/go/test.vim	/^  function! s:exit_cb(job, exitval) closure$/;"	f
s:exit_code	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^let s:exit_code = 0$/;"	v
s:expand_braces	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:expand_braces(dict)$/;"	f
s:extractafter	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:extractafter(str)$/;"	f
s:extractbefore	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:extractbefore(str)$/;"	f
s:extractopts	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:extractopts(list,opts)$/;"	f
s:fail	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^      let s:fail += 1$/;"	v
s:fail	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:fail = 0$/;"	v
s:fail	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^    let s:fail += 1$/;"	v
s:fail	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:fail = 0$/;"	v
s:file	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^let s:file = ''$/;"	v
s:find_command	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:find_command(cmd,flags,word)$/;"	f
s:first_sign_id	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:first_sign_id = 3000$/;"	v
s:fix_auto_select	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:fix_auto_select() " Select the correct entry taking into account g:mucomplete#popup_direc/;"	f
s:fixindent	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
s:fmt_autosave	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:fmt_autosave()$/;"	f
s:fmt_cmd	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! s:fmt_cmd(bin_name, source, target)$/;"	f
s:fnameescape	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:fnameescape(string) abort$/;"	f
s:fnameescape	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
s:fnameescape	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:fnameescape(file) abort$/;"	f
s:fnameescape	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^function! s:fnameescape(file) abort$/;"	f
s:fold_block	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^    let s:fold_block = 0$/;"	v
s:fold_block	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^let s:fold_block = 1$/;"	v
s:fold_comment	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^    let s:fold_comment = 1$/;"	v
s:fold_comment	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^let s:fold_comment = 0$/;"	v
s:fold_import	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^    let s:fold_import = 0$/;"	v
s:fold_import	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^let s:fold_import = 1$/;"	v
s:fold_package_comment	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^    let s:fold_package_comment = 0$/;"	v
s:fold_package_comment	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^let s:fold_package_comment = 1$/;"	v
s:fold_varconst	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^    let s:fold_varconst = 0$/;"	v
s:fold_varconst	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^let s:fold_varconst = 1$/;"	v
s:format	pack/plugins/start/w0rp-ale/ale_linters/vim/vint.vim	/^let s:format = '-f "{file_path}:{line_number}:{column_number}: {severity}: {description} (see {r/;"	v
s:format_for_log	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:format_for_log(data) abort$/;"	f
s:function	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:function(name)$/;"	f
s:function	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:function(name) abort$/;"	f
s:generate_language_option_variables	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:generate_language_option_variables()$/;"	f
s:generate_theme_option_variables	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:generate_theme_option_variables()$/;"	f
s:getReceiver	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! s:getReceiver()$/;"	f
s:get_browser_command	pack/plugins/start/fatih-vim-go/autoload/go/tool.vim	/^function! s:get_browser_command() abort$/;"	f
s:get_ctags_executable	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:get_ctags_executable(proj_dir) abort$/;"	f
s:get_unix_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! s:get_unix_cmd(for_job, proj_options, db_path) abort$/;"	f
s:get_visual_content	pack/plugins/start/fatih-vim-go/autoload/go/play.vim	/^function! s:get_visual_content() abort$/;"	f
s:get_visual_selection	pack/plugins/start/fatih-vim-go/autoload/go/play.vim	/^function! s:get_visual_selection() abort$/;"	f
s:get_win32_cmd	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! s:get_win32_cmd(for_job, proj_options, db_path) abort$/;"	f
s:getchar	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:getchar()$/;"	f
s:getcmdwintype_exists	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^let s:getcmdwintype_exists = exists('*getcmdwintype')$/;"	v
s:getword	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/spel.vim	/^  fun! s:getword()$/;"	f
s:git_command	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:git_command() abort$/;"	f
s:git_diff	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff()$/;"	f
s:git_diff_staged	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff_staged()$/;"	f
s:git_versions	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:github_url	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:github_url(opts, ...) abort$/;"	f
s:glob	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/path.vim	/^  fun! s:glob(expr, nosuf, list, alllinks)$/;"	f
s:global_variable_list	pack/plugins/start/w0rp-ale/autoload/ale/debugging.vim	/^let s:global_variable_list = [$/;"	v
s:go	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^function! s:go(type,...) abort$/;"	f
s:go_decls_var	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^let s:go_decls_var = {$/;"	v
s:go_packages	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! s:go_packages(dirs) abort$/;"	f
s:go_stack	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^let s:go_stack = []$/;"	v
s:go_stack_level	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^let s:go_stack_level = 0$/;"	v
s:goarch	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goarch = '*'$/;"	v
s:goarch	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goarch = g:golang_goarch$/;"	v
s:goarch	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^let s:goarch = $GOARCH$/;"	v
s:gocodeAutocomplete	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeAutocomplete() abort$/;"	f
s:gocodeCommand	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeCommand(cmd, preargs, args) abort$/;"	f
s:gocodeCurrentBuffer	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeCurrentBuffer() abort$/;"	f
s:gocodeCurrentBufferOpt	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeCurrentBufferOpt(filename) abort$/;"	f
s:gocodeEnableOptions	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:gocodeEnableOptions() abort$/;"	f
s:godocNotFound	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! s:godocNotFound(content) abort$/;"	f
s:godocWord	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! s:godocWord(args) abort$/;"	f
s:gofiletype_post	pack/plugins/start/fatih-vim-go/ftdetect/gofiletype.vim	/^function! s:gofiletype_post()$/;"	f
s:gofiletype_pre	pack/plugins/start/fatih-vim-go/ftdetect/gofiletype.vim	/^function! s:gofiletype_pre(type)$/;"	f
s:gogetdoc	pack/plugins/start/fatih-vim-go/autoload/go/doc.vim	/^function! s:gogetdoc(json) abort$/;"	f
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goos = '*'$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goos = 'darwin'$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goos = 'windows'$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^    let s:goos = g:golang_goos$/;"	v
s:goos	pack/plugins/start/fatih-vim-go/autoload/go/package.vim	/^let s:goos = $GOOS$/;"	v
s:gopath	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:gopath = $GOPATH$/;"	v
s:got_fmt_error	pack/plugins/start/fatih-vim-go/autoload/go/asmfmt.vim	/^let s:got_fmt_error = 0$/;"	v
s:grep_available	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^  let s:grep_available = 1$/;"	v
s:grep_available	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^  let s:grep_available = executable('grep')$/;"	v
s:grep_command	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^      let s:grep_command .= ' --color=never'$/;"	v
s:grep_command	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^    let s:grep_command = 'grep'$/;"	v
s:grep_command	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^  let s:grep_command = g:gitgutter_grep_command$/;"	v
s:grep_command	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:grep_command(args,bang,flags,word)$/;"	f
s:grey_colour	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  fun! s:grey_colour(n)$/;"	f
s:grey_level	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  fun! s:grey_level(n)$/;"	f
s:grey_number	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  fun! s:grey_number(x)$/;"	f
s:gsub	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
s:guru_cmd	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:guru_cmd(args) range abort$/;"	f
s:handlers	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^let s:handlers = {}$/;"	v
s:has_features	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^    let s:has_features = has('timers') && exists('*job_start') && exists('*ch_close_in')$/;"	v
s:has_features	pack/plugins/start/w0rp-ale/plugin/ale.vim	/^    let s:has_features = has('timers')$/;"	v
s:hash_colors	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:hi	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^function! s:hi()$/;"	f
s:hidden_all	vimrc	/^        let s:hidden_all = 0$/;"	v
s:hunk_re	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:hunk_re = '^@@ -\\(\\d\\+\\),\\?\\(\\d*\\) +\\(\\d\\+\\),\\?\\(\\d*\\) @@'$/;"	v
s:i	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:i = 0              " Index of the current completion method in the completion chain$/;"	v
s:id	pack/plugins/start/fatih-vim-go/autoload/ctrlp/decls.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:identify_color_mode	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:identify_color_mode()$/;"	f
s:indent	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:indent = ''$/;"	v
s:indent	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:indent = max(map(copy(s:tests), {_, val -> len(FriendlyName(val))}))$/;"	v
s:info	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^  function! s:info(exit_val, output)$/;"	f
s:info_priority	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^let s:info_priority = 3$/;"	v
s:init	pack/plugins/start/wellle-tmux-complete-vim/plugin/tmuxcomplete.vim	/^function! s:init()$/;"	f
s:init_path	pack/plugins/start/w0rp-ale/autoload/ale/gradle.vim	/^let s:init_path = has('win32')$/;"	v
s:initial_go_path	pack/plugins/start/fatih-vim-go/autoload/go/path.vim	/^let s:initial_go_path = ""$/;"	v
s:inputreplacement	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:inputreplacement()$/;"	f
s:inputtarget	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:inputtarget()$/;"	f
s:insert	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
s:insert_entry	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:insert_entry() " Select and insert a pop-up entry, overriding noselect and noinsert$/;"	f
s:insertcharpre	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:insertcharpre = 0  " Was a non-whitespace character inserted?$/;"	v
s:instaweb_url	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:instaweb_url(opts) abort$/;"	f
s:interface_list	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! s:interface_list(pkg) abort$/;"	f
s:is_cmdwin	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:is_cmdwin() "{{{1$/;"	f
s:job_db_files	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^let s:job_db_files = []$/;"	v
s:job_info_map	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^    let s:job_info_map = {}$/;"	v
s:job_info_map	pack/plugins/start/w0rp-ale/autoload/ale/fix.vim	/^    let s:job_info_map = {}$/;"	v
s:job_kill_timers	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^    let s:job_kill_timers = {}$/;"	v
s:job_map	pack/plugins/start/w0rp-ale/autoload/ale/job.vim	/^    let s:job_map = {}$/;"	v
s:jobs	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^let s:jobs = {}$/;"	v
s:jobs	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^let s:jobs = {}$/;"	v
s:jump_to_declaration_cb	pack/plugins/start/fatih-vim-go/autoload/go/def.vim	/^function! s:jump_to_declaration_cb(mode, bin_name, job, exit_status, data) abort$/;"	f
s:known_files	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^let s:known_files = []$/;"	v
s:known_projects	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^let s:known_projects = {}$/;"	v
s:last_pattern_options	pack/plugins/start/w0rp-ale/autoload/ale/pattern_options.vim	/^let s:last_pattern_options = {}$/;"	v
s:last_pos	pack/plugins/start/w0rp-ale/autoload/ale/cursor.vim	/^let s:last_pos = [0, 0, 0]$/;"	v
s:last_saved_list	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^let s:last_saved_list = ''$/;"	v
s:last_status	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^let s:last_status = ""$/;"	v
s:linechars	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
s:lines	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:lines = deepcopy(s:words)$/;"	v
s:lines	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:lines.description = 'lines in the current tmux session'$/;"	v
s:lines	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:lines.name = 'tmuxcomplete\/lines'$/;"	v
s:lines.gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^function! s:lines.gather_candidates(args, context)$/;"	f
s:lint_job	pack/plugins/start/fatih-vim-go/autoload/go/lint.vim	/^function s:lint_job(args)$/;"	f
s:lint_timer	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^let s:lint_timer = -1$/;"	v
s:linters	pack/plugins/start/w0rp-ale/autoload/ale/linter.vim	/^let s:linters = {}$/;"	v
s:listtype	pack/plugins/start/fatih-vim-go/autoload/go/list.vim	/^function! s:listtype(listtype) abort$/;"	f
s:load_256_to_GUI_converter	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:load_256_to_GUI_converter()$/;"	f
s:load_GUI_to_256_converter	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:load_GUI_to_256_converter()$/;"	f
s:log_file	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:log_file    = s:plugin_dir.'gitgutter.log'$/;"	v
s:logs	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:logs = []$/;"	v
s:logs	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:logs = s:logs + filter(split(s:mess, "\\n"), 'v:val !~ "^Messages maintainer"')$/;"	v
s:lsp_linter_map	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^    let s:lsp_linter_map = {}$/;"	v
s:manual	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^let s:manual = {$/;"	v
s:manual._inject_keywords	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual._inject_keywords(keywords) "{{{$/;"	f
s:manual.add	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.add(pattern, escaped) "{{{$/;"	f
s:manual.clear	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.clear() "{{{$/;"	f
s:manual.del	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.del(pattern, escaped) "{{{$/;"	f
s:manual.del_by_index	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.del_by_index(idx) "{{{$/;"	f
s:manual.dump	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.dump() "{{{$/;"	f
s:manual.index_of	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.index_of(pattern) "{{{$/;"	f
s:manual.init	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.init() "{{{$/;"	f
s:manual.init_highlight	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.init_highlight() "{{{$/;"	f
s:manual.inject_keywords	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.inject_keywords() "{{{$/;"	f
s:manual.is_locked	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.is_locked() "{{{$/;"	f
s:manual.list	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.list() "{{{$/;"	f
s:manual.next_index	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.next_index() "{{{$/;"	f
s:manual.read_colors	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.read_colors(list) "{{{$/;"	f
s:manual.refresh	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.refresh() "{{{$/;"	f
s:manual.reset	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.reset() "{{{$/;"	f
s:manual.set	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.set() "{{{$/;"	f
s:manual.show_colors	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/manual.vim	/^function! s:manual.show_colors() "{{{$/;"	f
s:manual_update_tags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! s:manual_update_tags(bang) abort$/;"	f
s:map	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:map(mode, lhs, rhs, ...) abort$/;"	f
s:maybe_in_progress	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^    let s:maybe_in_progress[module] = {}$/;"	v
s:maybe_in_progress	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^let s:maybe_in_progress = {}$/;"	v
s:messages	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:messages = []$/;"	v
s:metachar	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl.vim	/^let s:metachar = '\\\/~ .*^[''$'$/;"	v
s:metalinter_autosave	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:metalinter_autosave()$/;"	f
s:mixedcase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:mixedcase(word)$/;"	f
s:molokai_original	pack/colors/start/tomasr-molokai/colors/molokai.vim	/^    let s:molokai_original = 0$/;"	v
s:molokai_original	pack/colors/start/tomasr-molokai/colors/molokai.vim	/^    let s:molokai_original = g:molokai_original$/;"	v
s:named_lists	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^let s:named_lists = {}$/;"	v
s:netrw_up	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^let s:netrw_up = ''$/;"	v
s:new_log_session	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:new_log_session = 1$/;"	v
s:next_method	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:next_method()$/;"	f
s:next_sign_id	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:next_sign_id  = s:first_sign_id$/;"	v
s:nomodeline	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' :/;"	v
s:normalize_options	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:normalize_options(flags)$/;"	f
s:object	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^let s:object = {}$/;"	v
s:object.clone	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:object.clone(...)$/;"	f
s:old_cpo	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^let s:old_cpo = &cpo$/;"	v
s:omni_start_map	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:omni_start_map = {$/;"	v
s:on_exit	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:on_exit(job_id, exit_status, event) dict abort$/;"	f
s:on_exit	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! s:on_exit(job_id, exit_status, event) dict abort$/;"	f
s:on_exit_nvim	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_exit_nvim(_job_id, _data, _event) dict abort$/;"	f
s:on_exit_vim	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_exit_vim(_channel) dict abort$/;"	f
s:on_stderr	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:on_stderr(job_id, data, event) dict abort$/;"	f
s:on_stderr	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! s:on_stderr(job_id, data, event) dict abort$/;"	f
s:on_stderr_nvim	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stderr_nvim(_job_id, _data, _event) dict abort$/;"	f
s:on_stderr_vim	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stderr_vim(_channel, _data) dict abort$/;"	f
s:on_stdout	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:on_stdout(job_id, data, event) dict abort$/;"	f
s:on_stdout	pack/plugins/start/fatih-vim-go/autoload/go/term.vim	/^function! s:on_stdout(job_id, data, event) dict abort$/;"	f
s:on_stdout_nvim	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stdout_nvim(_job_id, data, _event) dict abort$/;"	f
s:on_stdout_vim	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stdout_vim(_channel, data) dict abort$/;"	f
s:opendir	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^function! s:opendir(cmd) abort$/;"	f
s:opfunc	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:opfunc(type,...) " {{{1$/;"	f
s:opfunc2	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:opfunc2(arg)$/;"	f
s:option_map	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:option_map(letter, option, mode) abort$/;"	f
s:optionsEnabled	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^let s:optionsEnabled = 0$/;"	v
s:packages	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^let s:packages = {$/;"	v
s:parse_errors	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! s:parse_errors(filename, content) abort$/;"	f
s:parse_errors	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^function s:parse_errors(exit_val, bang, out)$/;"	f
s:parse_errors	pack/plugins/start/fatih-vim-go/autoload/go/test.vim	/^function! s:parse_errors(lines) abort$/;"	f
s:parse_guru_output	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:parse_guru_output(exit_val, output, title) abort$/;"	f
s:parse_substitute	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:parse_substitute(bang,line1,line2,count,args)$/;"	f
s:parse_subvert	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:parse_subvert(bang,line1,line2,count,args)$/;"	f
s:partial_timers	pack/plugins/start/w0rp-ale/autoload/ale/util.vim	/^    let s:partial_timers = {}$/;"	v
s:pathsep	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:pathsep = exists('+shellslash') && !&shellslash ? '\\\\' : '\/'$/;"	v
s:pathsep	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^let s:pathsep = exists('+shellslash') && !&shellslash ? '\\\\' : '\/'$/;"	v
s:pattern	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:pattern(dict,boundaries)$/;"	f
s:plugin_dir	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:plugin_dir  = expand('<sfile>:p:h:h:h').'\/'$/;"	v
s:pragma_error	pack/plugins/start/w0rp-ale/autoload/ale/handlers/gcc.vim	/^let s:pragma_error = '#pragma once in main file'$/;"	v
s:process	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:process(string)$/;"	f
s:process_options_file	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:process_options_file(proj_dir, path) abort$/;"	f
s:putline	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:putline(how, map) abort$/;"	f
s:queued_buffer_number	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^let s:queued_buffer_number = -1$/;"	v
s:recall	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:recall() abort$/;"	f
s:redirects	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:redirects = {}$/;"	v
s:redraw	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:redraw()$/;"	f
s:register_default_theme	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:register_default_theme()$/;"	f
s:reindent	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:reindent() " {{{1$/;"	f
s:relatives	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^function! s:relatives(first, ...) abort$/;"	f
s:rename_job	pack/plugins/start/fatih-vim-go/autoload/go/rename.vim	/^function s:rename_job(args)$/;"	f
s:repo	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo(...) abort$/;"	f
s:repo_aliases	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_aliases() dict abort$/;"	f
s:repo_bare	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
s:repo_config	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_config(conf) dict abort$/;"	f
s:repo_dir	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
s:repo_dirglob	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
s:repo_git_chomp	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
s:repo_git_chomp_in_tree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
s:repo_git_command	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
s:repo_head	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
s:repo_head_ref	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
s:repo_keywordprg	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
s:repo_prototype	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repo_rev_parse	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
s:repo_superglob	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
s:repo_translate	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
s:repo_tree	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
s:repo_user	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
s:repos	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:repos = {}$/;"	v
s:reset_summary	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:reset_summary() abort$/;"	f
s:rgb_colour	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  fun! s:rgb_colour(x, y, z)$/;"	f
s:rgb_level	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  fun! s:rgb_level(n)$/;"	f
s:rgb_number	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  fun! s:rgb_number(x)$/;"	f
s:root_dirs	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^function! s:root_dirs() abort$/;"	f
s:run_guru	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:run_guru(args) abort$/;"	f
s:runner_exe	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^let s:runner_exe = gutentags#get_plat_file('update_scopedb')$/;"	v
s:runner_exe	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let s:runner_exe = gutentags#get_plat_file('update_tags')$/;"	v
s:running_windows	vimrc	/^        let s:running_windows=has('win16') || has('win32') || has('win64')$/;"	v
s:same_ids_highlight	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:same_ids_highlight(exit_val, output) abort$/;"	f
s:save_cpo	pack/plugins/start/fatih-vim-go/autoload/unite/sources/decls.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	pack/plugins/start/fatih-vim-go/compiler/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/compat.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/path.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/spel.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/lifepillar-vim-mucomplete/plugin/mucomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/do.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/filegroup.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/filter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/namedlist.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/preview.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/statusline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/toggle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/autoload/qf/wrap.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qf/plugin/qf.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/romainl-vim-qlist/plugin/qlist.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplcache/sources/tmuxcomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplete/sources/tmuxcomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:script	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^let s:script = expand('<sfile>:h:h') . "\/sh\/tmuxcomplete"$/;"	v
s:script_path	pack/plugins/start/w0rp-ale/autoload/ale/gradle.vim	/^let s:script_path = fnamemodify(resolve(expand('<sfile>:p')), ':h')$/;"	v
s:seek	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^function! s:seek(file) abort$/;"	f
s:select_dir	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^let s:select_dir = extend({ 'c-p' : -1, 'keyp': -1 }, get(g:, 'mucomplete#popup_direction', {}))$/;"	v
s:send	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:send(self,func,...)$/;"	f
s:sep	pack/plugins/start/w0rp-ale/autoload/ale/handlers/eslint.vim	/^let s:sep = has('win32') ? '\\' : '\/'$/;"	v
s:sep	pack/plugins/start/w0rp-ale/autoload/ale/python.vim	/^let s:sep = has('win32') ? '\\' : '\/'$/;"	v
s:separator	pack/plugins/start/tpope-vim-eunuch/plugin/eunuch.vim	/^function! s:separator()$/;"	f
s:set	pack/plugins/start/airblade-vim-gitgutter/plugin/gitgutter.vim	/^function! s:set(var, default) abort$/;"	f
s:set_color_variables	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:set_color_variables()$/;"	f
s:set_default	pack/plugins/start/t9md-vim-quickhl/plugin/quickhl.vim	/^function! s:set_default(dict) "{{{$/;"	f
s:set_format_attributes	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:set_format_attributes()$/;"	f
s:set_overriding_colors	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:set_overriding_colors()$/;"	f
s:setup_paste	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:setup_paste() abort$/;"	f
s:setup_vinegar	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^function! s:setup_vinegar() abort$/;"	f
s:shellesc	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
s:shellslash	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:shellslash(path) abort$/;"	f
s:should_complete_map	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:should_complete_map = {$/;"	v
s:should_lint_file_for_buffer	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^let s:should_lint_file_for_buffer = {}$/;"	v
s:show_errors	pack/plugins/start/fatih-vim-go/autoload/go/fmt.vim	/^function! s:show_errors(errors) abort$/;"	f
s:show_errors	pack/plugins/start/fatih-vim-go/autoload/go/test.vim	/^function! s:show_errors(args, exit_val, messages) abort$/;"	f
s:signs	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^function s:signs(filename)$/;"	f
s:sink	pack/plugins/start/fatih-vim-go/autoload/fzf/decls.vim	/^function! s:sink(str) abort$/;"	f
s:slash	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^function! s:slash() abort$/;"	f
s:snakecase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:snakecase(word)$/;"	f
s:sock_type	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^let s:sock_type = (has('win32') || has('win64')) ? 'tcp' : 'unix'$/;"	v
s:sort	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:sort(a,b)$/;"	f
s:sorted_items	pack/plugins/start/w0rp-ale/autoload/ale/pattern_options.vim	/^let s:sorted_items = []$/;"	v
s:source	pack/plugins/start/fatih-vim-go/autoload/fzf/decls.vim	/^function! s:source(mode,...) abort$/;"	f
s:source	pack/plugins/start/fatih-vim-go/autoload/unite/sources/decls.vim	/^let s:source = {$/;"	v
s:source	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplcache/sources/tmuxcomplete.vim	/^let s:source = {$/;"	v
s:source	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplete/sources/tmuxcomplete.vim	/^let s:source = {$/;"	v
s:source.gather_candidates	pack/plugins/start/fatih-vim-go/autoload/unite/sources/decls.vim	/^function! s:source.gather_candidates(args, context) abort$/;"	f
s:source.gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplcache/sources/tmuxcomplete.vim	/^function! s:source.gather_candidates(context)$/;"	f
s:source.gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/autoload/neocomplete/sources/tmuxcomplete.vim	/^function! s:source.gather_candidates(context)$/;"	f
s:source.hooks.on_syntax	pack/plugins/start/fatih-vim-go/autoload/unite/sources/decls.vim	/^function! s:source.hooks.on_syntax(args, context) abort$/;"	f
s:spacecase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:spacecase(word)$/;"	f
s:spawn	pack/plugins/start/fatih-vim-go/autoload/go/jobcontrol.vim	/^function! s:spawn(bang, desc, for, args) abort$/;"	f
s:stage_info	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:stage_info(lnum) abort$/;"	f
s:started	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^  let s:started = reltime()$/;"	v
s:statusbump	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:statusbump() abort$/;"	f
s:statuses	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^let s:statuses = {}$/;"	v
s:string_decode	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:string_decode(str)$/;"	f
s:string_encode	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:string_encode(str)$/;"	f
s:strip_white_space	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^function! s:strip_white_space(l,r,line) abort$/;"	f
s:style_error_priority	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^let s:style_error_priority = 4$/;"	v
s:style_warning_priority	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^let s:style_warning_priority = 5$/;"	v
s:sub	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
s:subesc	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:subesc(pattern)$/;"	f
s:substitute_command	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:substitute_command(cmd,bad,good,flags)$/;"	f
s:subvert_dispatcher	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:subvert_dispatcher(bang,line1,line2,count,args)$/;"	f
s:supports_star	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:supports_star = v:version > 703 || (v:version == 703 && has("patch596"))$/;"	v
s:surroundings	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^function! s:surroundings() abort$/;"	f
s:sw	pack/plugins/start/fatih-vim-go/indent/go.vim	/^  func s:sw()$/;"	f
s:sync_guru	pack/plugins/start/fatih-vim-go/autoload/go/guru.vim	/^function! s:sync_guru(args) abort$/;"	f
s:system	pack/plugins/start/fatih-vim-go/autoload/go/util.vim	/^function! s:system(cmd, ...) abort$/;"	f
s:tag	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^let s:tag = {$/;"	v
s:tag.clear	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! s:tag.clear() "{{{$/;"	f
s:tag.init	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! s:tag.init() "{{{$/;"	f
s:tag.init_highlight	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! s:tag.init_highlight() "{{{$/;"	f
s:tag.refresh	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! s:tag.refresh() "{{{$/;"	f
s:tag.set	pack/plugins/start/t9md-vim-quickhl/autoload/quickhl/tag.vim	/^function! s:tag.set() "{{{$/;"	f
s:temp_buffer	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:temp_buffer = tempname()$/;"	v
s:temp_dir	pack/plugins/start/w0rp-ale/autoload/ale/engine.vim	/^let s:temp_dir = fnamemodify(tempname(), ':h')$/;"	v
s:temp_dir	pack/plugins/start/w0rp-ale/autoload/ale/handlers/haskell.vim	/^let s:temp_dir = fnamemodify(tempname(), ':h')$/;"	v
s:temp_dir	pack/plugins/start/w0rp-ale/autoload/ale/path.vim	/^let s:temp_dir = fnamemodify(tempname(), ':h')$/;"	v
s:temp_files	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:temp_index	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:temp_index = tempname()$/;"	v
s:temp_regex_prefix	pack/plugins/start/w0rp-ale/autoload/ale/handlers/haskell.vim	/^let s:temp_regex_prefix =$/;"	v
s:template_autocreate	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^function! s:template_autocreate()$/;"	f
s:test_job	pack/plugins/start/fatih-vim-go/autoload/go/test.vim	/^function s:test_job(args) abort$/;"	f
s:test_repo	pack/plugins/start/airblade-vim-gitgutter/test/test_gitgutter.vim	/^let s:test_repo   = s:current_dir.'\/test-repo'$/;"	v
s:testfile	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:testfile = expand('%:t')$/;"	v
s:tests	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^  let s:tests = filter(s:tests, 'v:val =~ argv(1)')$/;"	v
s:tests	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let s:tests = split(substitute(@q, 'function \\(\\k*()\\)', '\\1', 'g'))$/;"	v
s:tests	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:tests = split(substitute(@q, 'function \\(\\k*()\\)', '\\1', 'g'))$/;"	v
s:textobject	pack/plugins/start/tpope-vim-commentary/plugin/commentary.vim	/^function! s:textobject(inner) abort$/;"	f
s:theme_has_hint	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^fun! s:theme_has_hint(hint)$/;"	f
s:themes	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:themes = {}$/;"	v
s:throw	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:throw(msg)$/;"	f
s:throw	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:throw(string) abort$/;"	f
s:timer_args	pack/plugins/start/w0rp-ale/autoload/ale/list.vim	/^    let s:timer_args = {}$/;"	v
s:timer_id	pack/plugins/start/fatih-vim-go/autoload/go/statusline.vim	/^let s:timer_id = 0$/;"	v
s:timer_id	pack/plugins/start/w0rp-ale/autoload/ale/completion.vim	/^let s:timer_id = -1$/;"	v
s:timestamp_map	pack/plugins/start/w0rp-ale/autoload/ale.vim	/^let s:timestamp_map = {}$/;"	v
s:titlecase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:titlecase(word)$/;"	f
s:toBool	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:toBool(val) abort$/;"	f
s:to_256	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^  fun! s:to_256(rgb)$/;"	f
s:toggle	pack/plugins/start/fatih-vim-go/autoload/go/coverage.vim	/^let s:toggle = 0$/;"	v
s:toggle	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:toggle(op) abort$/;"	f
s:total_elapsed_time	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:total_elapsed_time = substitute(reltimestr(reltime(s:total_started)), '^\\s*\\(.\\{-}\\)\\/;"	v
s:total_started	pack/plugins/start/fatih-vim-go/scripts/runtest.vim	/^let s:total_started = reltime()$/;"	v
s:trim_bracket	pack/plugins/start/fatih-vim-go/autoload/go/complete.vim	/^function! s:trim_bracket(val) abort$/;"	f
s:try_completion	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:try_completion() " Assumes s:i in [0, s:N - 1]$/;"	f
s:uniq	pack/plugins/start/fatih-vim-go/autoload/go/impl.vim	/^  function! s:uniq(list)$/;"	f
s:unix_redir	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/cscope.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unix_redir	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags/ctags.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unknown_coercion	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:unknown_coercion(letter,word)$/;"	f
s:update_queue	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^    let s:update_queue[module] = []$/;"	v
s:update_queue	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^let s:update_queue = {}$/;"	v
s:update_tags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! s:update_tags(bufno, module, write_mode, queue_mode) abort$/;"	f
s:uppercase	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:uppercase(word)$/;"	f
s:url_decode	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:url_decode(str)$/;"	f
s:url_encode	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:url_encode(str)$/;"	f
s:using_xolox_shell	pack/plugins/start/airblade-vim-gitgutter/autoload/gitgutter/utility.vim	/^let s:using_xolox_shell = -1$/;"	v
s:verify_completion	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^fun! s:verify_completion()$/;"	f
s:version	pack/colors/start/nlknguyen-papercolor-theme/colors/PaperColor.vim	/^let s:version = '0.9.x'$/;"	v
s:version_cache	pack/plugins/start/w0rp-ale/autoload/ale/semver.vim	/^let s:version_cache = {}$/;"	v
s:warn	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:warn(str) abort$/;"	f
s:warning_priority	pack/plugins/start/w0rp-ale/autoload/ale/sign.vim	/^let s:warning_priority = 2$/;"	v
s:winshell	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^function! s:winshell() abort$/;"	f
s:word_regex_list	pack/plugins/start/w0rp-ale/ale_linters/vim/vint.vim	/^let s:word_regex_list = [$/;"	v
s:words	pack/plugins/start/tpope-vim-abolish/plugin/abolish.vim	/^function! s:words()$/;"	f
s:words	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:words = {$/;"	v
s:words.gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^function! s:words.gather_candidates(args, context)$/;"	f
s:worktree_for_dir	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^let s:worktree_for_dir = {}$/;"	v
s:wrap	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:wrap(string,char,type,removed,special)$/;"	f
s:wrapreg	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^function! s:wrapreg(reg,char,removed,special)$/;"	f
s:write_out	pack/plugins/start/fatih-vim-go/autoload/go/tags.vim	/^func s:write_out(out) abort$/;"	f
s:write_triggered_update_tags	pack/plugins/start/ludovicchabant-vim-gutentags/autoload/gutentags.vim	/^function! s:write_triggered_update_tags(bufno) abort$/;"	f
s:xml_decode	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:xml_decode(str)$/;"	f
s:xml_encode	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:xml_encode(str)$/;"	f
s:xml_entity_decode	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^function! s:xml_entity_decode(str)$/;"	f
s:yes_you_can	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  let s:yes_you_can = function('mucomplete#compat#yes_you_can')$/;"	v
s:yes_you_can	pack/plugins/start/lifepillar-vim-mucomplete/autoload/mucomplete.vim	/^  let s:yes_you_can = { _ -> 1 } " Try always$/;"	v
summary	pack/plugins/start/airblade-vim-gitgutter/test/runner.vim	/^let summary = [$/;"	v
t	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^    nnoremap <silent> <buffer> t <C-w><CR><C-w>T$/;"	m
test	pack/plugins/start/fatih-vim-go/Makefile	/^test:$/;"	t
tests	pack/plugins/start/w0rp-ale/run-tests.bat	/^if not "%1"=="" set tests=%1$/;"	v
tests	pack/plugins/start/w0rp-ale/run-tests.bat	/^set tests=test\/*.vader test\/*\/*.vader test\/*\/*\/*.vader test\/*\/*\/*\/*.vader$/;"	v
tmux-complete.vim	pack/plugins/start/wellle-tmux-complete-vim/README.md	/^# tmux-complete.vim$/;"	h
tmuxcomplete#complete	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#complete(findstart, base)$/;"	f
tmuxcomplete#completions	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#completions(base, capture_args, splitmode)$/;"	f
tmuxcomplete#findstartWORD	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#findstartWORD(line, max)$/;"	f
tmuxcomplete#findstartword	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#findstartword(line, max)$/;"	f
tmuxcomplete#gather_candidates	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#gather_candidates()$/;"	f
tmuxcomplete#getcommand	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#getcommand(base, splitmode)$/;"	f
tmuxcomplete#grepargs	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#grepargs(base)$/;"	f
tmuxcomplete#init	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#init()$/;"	f
tmuxcomplete#list	pack/plugins/start/wellle-tmux-complete-vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#list(splitmode, scrollback)$/;"	f
tox	pack/plugins/start/w0rp-ale/test/command_callback/python_paths/namespace_package_tox/tox.ini	/^[tox]$/;"	s
type	pack/plugins/start/fatih-vim-go/addon-info.json	/^  "repository" : {"type": "git", "url": "https:\/\/github.com\/fatih\/vim-go.git"}$/;"	s	object:repository
u	pack/plugins/start/tpope-vim-repeat/autoload/repeat.vim	/^    nmap u <Plug>(RepeatUndo)$/;"	m
unimpaired_paste	pack/plugins/start/tpope-vim-unimpaired/plugin/unimpaired.vim	/^  augroup unimpaired_paste$/;"	a
unite#sources#decls#define	pack/plugins/start/fatih-vim-go/autoload/unite/sources/decls.vim	/^function! unite#sources#decls#define()$/;"	f
unite#sources#tmuxcomplete#define	pack/plugins/start/wellle-tmux-complete-vim/autoload/unite/sources/tmuxcomplete.vim	/^function! unite#sources#tmuxcomplete#define()$/;"	f
unplanned	pack/plugins/start/fatih-vim-go/CHANGELOG.md	/^## unplanned$/;"	i
updatePlugin	get-plugins.go	/^func updatePlugin(wg *sync.WaitGroup, org, plugin string) {$/;"	f
url	pack/plugins/start/fatih-vim-go/addon-info.json	/^  "repository" : {"type": "git", "url": "https:\/\/github.com\/fatih\/vim-go.git"}$/;"	s	object:repository
use_raw_list	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%FILE_LIST_CMD_IS_ABSOLUTE%"]==["1"] set use_raw_list=1$/;"	v
use_raw_list	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%PROJECT_ROOT%"]==["."] set use_raw_list=1$/;"	v
use_raw_list	pack/plugins/start/ludovicchabant-vim-gutentags/plat/win32/update_tags.cmd	/^        set use_raw_list=0$/;"	v
v	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^        nnoremap <silent> <expr> <buffer> v &splitright ? "\\<C-w>\\<CR>\\<C-w>L" : "\\<C-w>\\<C/;"	m
v	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^        nnoremap <silent> <expr> <buffer> v &splitright ? "\\<C-w>\\<CR>\\<C-w>L\\<C-w>p\\<C-w>J/;"	m
vim	pack/plugins/start/fatih-vim-go/plugin/go.vim	/^augroup vim-go$/;"	a
vim	pack/plugins/start/fatih-vim-go/syntax/go.vim	/^augroup vim-go-hi$/;"	a
vim-go [![Build Status](http://img.shields.io/travis/fatih/vim-go.svg?style=flat-square)](https://travis-ci.org/fatih/vim-go)	pack/plugins/start/fatih-vim-go/README.md	/^# vim-go [![Build Status](http:\/\/img.shields.io\/travis\/fatih\/vim-go.svg?style=flat-square)]/;"	h
vim-qf	pack/plugins/start/romainl-vim-qf/README.md	/^# vim-qf$/;"	h
vim-qlist	pack/plugins/start/romainl-vim-qlist/README.md	/^# vim-qlist$/;"	h
vimColorRow	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^type vimColorRow struct {$/;"	s
vinegar	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^augroup vinegar$/;"	a
withName	pack/colors/start/robertmeta-nofrils/generate_colors.go	/^func withName(name string, vcr vimColorRow) vimColorRow {$/;"	f
y.	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^    nnoremap <silent><buffer> y. :<C-U>call setreg(v:register, join(<SID>absolutes(line('.'), li/;"	m
y<C-G>	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^      nnoremap <buffer> <silent> y<C-G> :call setreg(v:register, <SID>recall())<CR>$/;"	m
yS	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap yS  <Plug>YSurround$/;"	m
ySS	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap ySS <Plug>YSsurround$/;"	m
ySs	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap ySs <Plug>YSsurround$/;"	m
ys	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap ys  <Plug>Ysurround$/;"	m
yss	pack/plugins/start/tpope-vim-surround/plugin/surround.vim	/^  nmap yss <Plug>Yssurround$/;"	m
{	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^nnoremap <silent> <buffer> { :call qf#filegroup#PreviousFile()<CR>$/;"	m
}	pack/plugins/start/romainl-vim-qf/after/ftplugin/qf.vim	/^nnoremap <silent> <buffer> } :call qf#filegroup#NextFile()<CR>$/;"	m
~	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^        nnoremap <buffer> <silent> ~    :<C-U>exe <SID>BlameJump('~'.v:count1)<CR>$/;"	m
~	pack/plugins/start/tpope-vim-fugitive/plugin/fugitive.vim	/^    nnoremap <buffer> <silent> ~     :<C-U>exe <SID>Edit('edit',0,<SID>buffer().commit().'~'.v:c/;"	m
~	pack/plugins/start/tpope-vim-vinegar/plugin/vinegar.vim	/^  nnoremap <buffer> ~ :edit ~\/<CR>$/;"	m
“True Color” terminal emulators	pack/colors/start/romainl-apprentice/README.md	/^### “True Color” terminal emulators$/;"	k
